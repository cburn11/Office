

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* at Sun May 15 10:12:40 2011
 */
/* Compiler settings for MSO.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __mso_h__
#define __mso_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAccessible_FWD_DEFINED__
#define __IAccessible_FWD_DEFINED__
typedef interface IAccessible IAccessible;
#endif 	/* __IAccessible_FWD_DEFINED__ */


#ifndef ___IMsoDispObj_FWD_DEFINED__
#define ___IMsoDispObj_FWD_DEFINED__
typedef interface _IMsoDispObj _IMsoDispObj;
#endif 	/* ___IMsoDispObj_FWD_DEFINED__ */


#ifndef ___IMsoOleAccDispObj_FWD_DEFINED__
#define ___IMsoOleAccDispObj_FWD_DEFINED__
typedef interface _IMsoOleAccDispObj _IMsoOleAccDispObj;
#endif 	/* ___IMsoOleAccDispObj_FWD_DEFINED__ */


#ifndef ___CommandBars_FWD_DEFINED__
#define ___CommandBars_FWD_DEFINED__
typedef interface _CommandBars _CommandBars;
#endif 	/* ___CommandBars_FWD_DEFINED__ */


#ifndef __CommandBar_FWD_DEFINED__
#define __CommandBar_FWD_DEFINED__
typedef interface CommandBar CommandBar;
#endif 	/* __CommandBar_FWD_DEFINED__ */


#ifndef __CommandBarControls_FWD_DEFINED__
#define __CommandBarControls_FWD_DEFINED__
typedef interface CommandBarControls CommandBarControls;
#endif 	/* __CommandBarControls_FWD_DEFINED__ */


#ifndef __CommandBarControl_FWD_DEFINED__
#define __CommandBarControl_FWD_DEFINED__
typedef interface CommandBarControl CommandBarControl;
#endif 	/* __CommandBarControl_FWD_DEFINED__ */


#ifndef ___CommandBarButton_FWD_DEFINED__
#define ___CommandBarButton_FWD_DEFINED__
typedef interface _CommandBarButton _CommandBarButton;
#endif 	/* ___CommandBarButton_FWD_DEFINED__ */


#ifndef __CommandBarPopup_FWD_DEFINED__
#define __CommandBarPopup_FWD_DEFINED__
typedef interface CommandBarPopup CommandBarPopup;
#endif 	/* __CommandBarPopup_FWD_DEFINED__ */


#ifndef ___CommandBarComboBox_FWD_DEFINED__
#define ___CommandBarComboBox_FWD_DEFINED__
typedef interface _CommandBarComboBox _CommandBarComboBox;
#endif 	/* ___CommandBarComboBox_FWD_DEFINED__ */


#ifndef ___CommandBarActiveX_FWD_DEFINED__
#define ___CommandBarActiveX_FWD_DEFINED__
typedef interface _CommandBarActiveX _CommandBarActiveX;
#endif 	/* ___CommandBarActiveX_FWD_DEFINED__ */


#ifndef __Adjustments_FWD_DEFINED__
#define __Adjustments_FWD_DEFINED__
typedef interface Adjustments Adjustments;
#endif 	/* __Adjustments_FWD_DEFINED__ */


#ifndef __CalloutFormat_FWD_DEFINED__
#define __CalloutFormat_FWD_DEFINED__
typedef interface CalloutFormat CalloutFormat;
#endif 	/* __CalloutFormat_FWD_DEFINED__ */


#ifndef __ColorFormat_FWD_DEFINED__
#define __ColorFormat_FWD_DEFINED__
typedef interface ColorFormat ColorFormat;
#endif 	/* __ColorFormat_FWD_DEFINED__ */


#ifndef __ConnectorFormat_FWD_DEFINED__
#define __ConnectorFormat_FWD_DEFINED__
typedef interface ConnectorFormat ConnectorFormat;
#endif 	/* __ConnectorFormat_FWD_DEFINED__ */


#ifndef __FillFormat_FWD_DEFINED__
#define __FillFormat_FWD_DEFINED__
typedef interface FillFormat FillFormat;
#endif 	/* __FillFormat_FWD_DEFINED__ */


#ifndef __FreeformBuilder_FWD_DEFINED__
#define __FreeformBuilder_FWD_DEFINED__
typedef interface FreeformBuilder FreeformBuilder;
#endif 	/* __FreeformBuilder_FWD_DEFINED__ */


#ifndef __GroupShapes_FWD_DEFINED__
#define __GroupShapes_FWD_DEFINED__
typedef interface GroupShapes GroupShapes;
#endif 	/* __GroupShapes_FWD_DEFINED__ */


#ifndef __LineFormat_FWD_DEFINED__
#define __LineFormat_FWD_DEFINED__
typedef interface LineFormat LineFormat;
#endif 	/* __LineFormat_FWD_DEFINED__ */


#ifndef __ShapeNode_FWD_DEFINED__
#define __ShapeNode_FWD_DEFINED__
typedef interface ShapeNode ShapeNode;
#endif 	/* __ShapeNode_FWD_DEFINED__ */


#ifndef __ShapeNodes_FWD_DEFINED__
#define __ShapeNodes_FWD_DEFINED__
typedef interface ShapeNodes ShapeNodes;
#endif 	/* __ShapeNodes_FWD_DEFINED__ */


#ifndef __PictureFormat_FWD_DEFINED__
#define __PictureFormat_FWD_DEFINED__
typedef interface PictureFormat PictureFormat;
#endif 	/* __PictureFormat_FWD_DEFINED__ */


#ifndef __ShadowFormat_FWD_DEFINED__
#define __ShadowFormat_FWD_DEFINED__
typedef interface ShadowFormat ShadowFormat;
#endif 	/* __ShadowFormat_FWD_DEFINED__ */


#ifndef __Script_FWD_DEFINED__
#define __Script_FWD_DEFINED__
typedef interface Script Script;
#endif 	/* __Script_FWD_DEFINED__ */


#ifndef __Scripts_FWD_DEFINED__
#define __Scripts_FWD_DEFINED__
typedef interface Scripts Scripts;
#endif 	/* __Scripts_FWD_DEFINED__ */


#ifndef __Shape_FWD_DEFINED__
#define __Shape_FWD_DEFINED__
typedef interface Shape Shape;
#endif 	/* __Shape_FWD_DEFINED__ */


#ifndef __ShapeRange_FWD_DEFINED__
#define __ShapeRange_FWD_DEFINED__
typedef interface ShapeRange ShapeRange;
#endif 	/* __ShapeRange_FWD_DEFINED__ */


#ifndef __Shapes_FWD_DEFINED__
#define __Shapes_FWD_DEFINED__
typedef interface Shapes Shapes;
#endif 	/* __Shapes_FWD_DEFINED__ */


#ifndef __TextEffectFormat_FWD_DEFINED__
#define __TextEffectFormat_FWD_DEFINED__
typedef interface TextEffectFormat TextEffectFormat;
#endif 	/* __TextEffectFormat_FWD_DEFINED__ */


#ifndef __TextFrame_FWD_DEFINED__
#define __TextFrame_FWD_DEFINED__
typedef interface TextFrame TextFrame;
#endif 	/* __TextFrame_FWD_DEFINED__ */


#ifndef __ThreeDFormat_FWD_DEFINED__
#define __ThreeDFormat_FWD_DEFINED__
typedef interface ThreeDFormat ThreeDFormat;
#endif 	/* __ThreeDFormat_FWD_DEFINED__ */


#ifndef __IMsoDispCagNotifySink_FWD_DEFINED__
#define __IMsoDispCagNotifySink_FWD_DEFINED__
typedef interface IMsoDispCagNotifySink IMsoDispCagNotifySink;
#endif 	/* __IMsoDispCagNotifySink_FWD_DEFINED__ */


#ifndef __Balloon_FWD_DEFINED__
#define __Balloon_FWD_DEFINED__
typedef interface Balloon Balloon;
#endif 	/* __Balloon_FWD_DEFINED__ */


#ifndef __BalloonCheckboxes_FWD_DEFINED__
#define __BalloonCheckboxes_FWD_DEFINED__
typedef interface BalloonCheckboxes BalloonCheckboxes;
#endif 	/* __BalloonCheckboxes_FWD_DEFINED__ */


#ifndef __BalloonCheckbox_FWD_DEFINED__
#define __BalloonCheckbox_FWD_DEFINED__
typedef interface BalloonCheckbox BalloonCheckbox;
#endif 	/* __BalloonCheckbox_FWD_DEFINED__ */


#ifndef __BalloonLabels_FWD_DEFINED__
#define __BalloonLabels_FWD_DEFINED__
typedef interface BalloonLabels BalloonLabels;
#endif 	/* __BalloonLabels_FWD_DEFINED__ */


#ifndef __BalloonLabel_FWD_DEFINED__
#define __BalloonLabel_FWD_DEFINED__
typedef interface BalloonLabel BalloonLabel;
#endif 	/* __BalloonLabel_FWD_DEFINED__ */


#ifndef __AnswerWizardFiles_FWD_DEFINED__
#define __AnswerWizardFiles_FWD_DEFINED__
typedef interface AnswerWizardFiles AnswerWizardFiles;
#endif 	/* __AnswerWizardFiles_FWD_DEFINED__ */


#ifndef __AnswerWizard_FWD_DEFINED__
#define __AnswerWizard_FWD_DEFINED__
typedef interface AnswerWizard AnswerWizard;
#endif 	/* __AnswerWizard_FWD_DEFINED__ */


#ifndef __Assistant_FWD_DEFINED__
#define __Assistant_FWD_DEFINED__
typedef interface Assistant Assistant;
#endif 	/* __Assistant_FWD_DEFINED__ */


#ifndef __DocumentProperty_FWD_DEFINED__
#define __DocumentProperty_FWD_DEFINED__
typedef interface DocumentProperty DocumentProperty;
#endif 	/* __DocumentProperty_FWD_DEFINED__ */

#undef DocumentProperties
#ifndef __DocumentProperties_FWD_DEFINED__
#define __DocumentProperties_FWD_DEFINED__
typedef interface DocumentProperties DocumentProperties;
#endif 	/* __DocumentProperties_FWD_DEFINED__ */


#ifndef __IFoundFiles_FWD_DEFINED__
#define __IFoundFiles_FWD_DEFINED__
typedef interface IFoundFiles IFoundFiles;
#endif 	/* __IFoundFiles_FWD_DEFINED__ */


#ifndef __IFind_FWD_DEFINED__
#define __IFind_FWD_DEFINED__
typedef interface IFind IFind;
#endif 	/* __IFind_FWD_DEFINED__ */


#ifndef __FoundFiles_FWD_DEFINED__
#define __FoundFiles_FWD_DEFINED__
typedef interface FoundFiles FoundFiles;
#endif 	/* __FoundFiles_FWD_DEFINED__ */


#ifndef __PropertyTest_FWD_DEFINED__
#define __PropertyTest_FWD_DEFINED__
typedef interface PropertyTest PropertyTest;
#endif 	/* __PropertyTest_FWD_DEFINED__ */


#ifndef __PropertyTests_FWD_DEFINED__
#define __PropertyTests_FWD_DEFINED__
typedef interface PropertyTests PropertyTests;
#endif 	/* __PropertyTests_FWD_DEFINED__ */


#ifndef __FileSearch_FWD_DEFINED__
#define __FileSearch_FWD_DEFINED__
typedef interface FileSearch FileSearch;
#endif 	/* __FileSearch_FWD_DEFINED__ */


#ifndef __COMAddIn_FWD_DEFINED__
#define __COMAddIn_FWD_DEFINED__
typedef interface COMAddIn COMAddIn;
#endif 	/* __COMAddIn_FWD_DEFINED__ */


#ifndef __COMAddIns_FWD_DEFINED__
#define __COMAddIns_FWD_DEFINED__
typedef interface COMAddIns COMAddIns;
#endif 	/* __COMAddIns_FWD_DEFINED__ */


#ifndef __LanguageSettings_FWD_DEFINED__
#define __LanguageSettings_FWD_DEFINED__
typedef interface LanguageSettings LanguageSettings;
#endif 	/* __LanguageSettings_FWD_DEFINED__ */


#ifndef __ICommandBarsEvents_FWD_DEFINED__
#define __ICommandBarsEvents_FWD_DEFINED__
typedef interface ICommandBarsEvents ICommandBarsEvents;
#endif 	/* __ICommandBarsEvents_FWD_DEFINED__ */


#ifndef ___CommandBarsEvents_FWD_DEFINED__
#define ___CommandBarsEvents_FWD_DEFINED__
typedef interface _CommandBarsEvents _CommandBarsEvents;
#endif 	/* ___CommandBarsEvents_FWD_DEFINED__ */


#ifndef __ICommandBarComboBoxEvents_FWD_DEFINED__
#define __ICommandBarComboBoxEvents_FWD_DEFINED__
typedef interface ICommandBarComboBoxEvents ICommandBarComboBoxEvents;
#endif 	/* __ICommandBarComboBoxEvents_FWD_DEFINED__ */


#ifndef ___CommandBarComboBoxEvents_FWD_DEFINED__
#define ___CommandBarComboBoxEvents_FWD_DEFINED__
typedef interface _CommandBarComboBoxEvents _CommandBarComboBoxEvents;
#endif 	/* ___CommandBarComboBoxEvents_FWD_DEFINED__ */


#ifndef __ICommandBarButtonEvents_FWD_DEFINED__
#define __ICommandBarButtonEvents_FWD_DEFINED__
typedef interface ICommandBarButtonEvents ICommandBarButtonEvents;
#endif 	/* __ICommandBarButtonEvents_FWD_DEFINED__ */


#ifndef ___CommandBarButtonEvents_FWD_DEFINED__
#define ___CommandBarButtonEvents_FWD_DEFINED__
typedef interface _CommandBarButtonEvents _CommandBarButtonEvents;
#endif 	/* ___CommandBarButtonEvents_FWD_DEFINED__ */


#ifndef __WebPageFont_FWD_DEFINED__
#define __WebPageFont_FWD_DEFINED__
typedef interface WebPageFont WebPageFont;
#endif 	/* __WebPageFont_FWD_DEFINED__ */


#ifndef __WebPageFonts_FWD_DEFINED__
#define __WebPageFonts_FWD_DEFINED__
typedef interface WebPageFonts WebPageFonts;
#endif 	/* __WebPageFonts_FWD_DEFINED__ */


#ifndef __HTMLProjectItem_FWD_DEFINED__
#define __HTMLProjectItem_FWD_DEFINED__
typedef interface HTMLProjectItem HTMLProjectItem;
#endif 	/* __HTMLProjectItem_FWD_DEFINED__ */


#ifndef __HTMLProjectItems_FWD_DEFINED__
#define __HTMLProjectItems_FWD_DEFINED__
typedef interface HTMLProjectItems HTMLProjectItems;
#endif 	/* __HTMLProjectItems_FWD_DEFINED__ */


#ifndef __HTMLProject_FWD_DEFINED__
#define __HTMLProject_FWD_DEFINED__
typedef interface HTMLProject HTMLProject;
#endif 	/* __HTMLProject_FWD_DEFINED__ */


#ifndef __MsoDebugOptions_FWD_DEFINED__
#define __MsoDebugOptions_FWD_DEFINED__
typedef interface MsoDebugOptions MsoDebugOptions;
#endif 	/* __MsoDebugOptions_FWD_DEFINED__ */


#ifndef __FileDialogSelectedItems_FWD_DEFINED__
#define __FileDialogSelectedItems_FWD_DEFINED__
typedef interface FileDialogSelectedItems FileDialogSelectedItems;
#endif 	/* __FileDialogSelectedItems_FWD_DEFINED__ */


#ifndef __FileDialogFilter_FWD_DEFINED__
#define __FileDialogFilter_FWD_DEFINED__
typedef interface FileDialogFilter FileDialogFilter;
#endif 	/* __FileDialogFilter_FWD_DEFINED__ */


#ifndef __FileDialogFilters_FWD_DEFINED__
#define __FileDialogFilters_FWD_DEFINED__
typedef interface FileDialogFilters FileDialogFilters;
#endif 	/* __FileDialogFilters_FWD_DEFINED__ */


#ifndef __FileDialog_FWD_DEFINED__
#define __FileDialog_FWD_DEFINED__
typedef interface FileDialog FileDialog;
#endif 	/* __FileDialog_FWD_DEFINED__ */


#ifndef __SignatureSet_FWD_DEFINED__
#define __SignatureSet_FWD_DEFINED__
typedef interface SignatureSet SignatureSet;
#endif 	/* __SignatureSet_FWD_DEFINED__ */


#ifndef __Signature_FWD_DEFINED__
#define __Signature_FWD_DEFINED__
typedef interface Signature Signature;
#endif 	/* __Signature_FWD_DEFINED__ */


#ifndef __IMsoEnvelopeVB_FWD_DEFINED__
#define __IMsoEnvelopeVB_FWD_DEFINED__
typedef interface IMsoEnvelopeVB IMsoEnvelopeVB;
#endif 	/* __IMsoEnvelopeVB_FWD_DEFINED__ */


#ifndef __IMsoEnvelopeVBEvents_FWD_DEFINED__
#define __IMsoEnvelopeVBEvents_FWD_DEFINED__
typedef interface IMsoEnvelopeVBEvents IMsoEnvelopeVBEvents;
#endif 	/* __IMsoEnvelopeVBEvents_FWD_DEFINED__ */


#ifndef __FileTypes_FWD_DEFINED__
#define __FileTypes_FWD_DEFINED__
typedef interface FileTypes FileTypes;
#endif 	/* __FileTypes_FWD_DEFINED__ */


#ifndef __SearchFolders_FWD_DEFINED__
#define __SearchFolders_FWD_DEFINED__
typedef interface SearchFolders SearchFolders;
#endif 	/* __SearchFolders_FWD_DEFINED__ */


#ifndef __ScopeFolders_FWD_DEFINED__
#define __ScopeFolders_FWD_DEFINED__
typedef interface ScopeFolders ScopeFolders;
#endif 	/* __ScopeFolders_FWD_DEFINED__ */


#ifndef __ScopeFolder_FWD_DEFINED__
#define __ScopeFolder_FWD_DEFINED__
typedef interface ScopeFolder ScopeFolder;
#endif 	/* __ScopeFolder_FWD_DEFINED__ */


#ifndef __SearchScope_FWD_DEFINED__
#define __SearchScope_FWD_DEFINED__
typedef interface SearchScope SearchScope;
#endif 	/* __SearchScope_FWD_DEFINED__ */


#ifndef __SearchScopes_FWD_DEFINED__
#define __SearchScopes_FWD_DEFINED__
typedef interface SearchScopes SearchScopes;
#endif 	/* __SearchScopes_FWD_DEFINED__ */


#ifndef __IMsoDiagram_FWD_DEFINED__
#define __IMsoDiagram_FWD_DEFINED__
typedef interface IMsoDiagram IMsoDiagram;
#endif 	/* __IMsoDiagram_FWD_DEFINED__ */


#ifndef __DiagramNodes_FWD_DEFINED__
#define __DiagramNodes_FWD_DEFINED__
typedef interface DiagramNodes DiagramNodes;
#endif 	/* __DiagramNodes_FWD_DEFINED__ */


#ifndef __DiagramNodeChildren_FWD_DEFINED__
#define __DiagramNodeChildren_FWD_DEFINED__
typedef interface DiagramNodeChildren DiagramNodeChildren;
#endif 	/* __DiagramNodeChildren_FWD_DEFINED__ */


#ifndef __DiagramNode_FWD_DEFINED__
#define __DiagramNode_FWD_DEFINED__
typedef interface DiagramNode DiagramNode;
#endif 	/* __DiagramNode_FWD_DEFINED__ */


#ifndef __CanvasShapes_FWD_DEFINED__
#define __CanvasShapes_FWD_DEFINED__
typedef interface CanvasShapes CanvasShapes;
#endif 	/* __CanvasShapes_FWD_DEFINED__ */


#ifndef __OfficeDataSourceObject_FWD_DEFINED__
#define __OfficeDataSourceObject_FWD_DEFINED__
typedef interface OfficeDataSourceObject OfficeDataSourceObject;
#endif 	/* __OfficeDataSourceObject_FWD_DEFINED__ */


#ifndef __ODSOColumn_FWD_DEFINED__
#define __ODSOColumn_FWD_DEFINED__
typedef interface ODSOColumn ODSOColumn;
#endif 	/* __ODSOColumn_FWD_DEFINED__ */


#ifndef __ODSOColumns_FWD_DEFINED__
#define __ODSOColumns_FWD_DEFINED__
typedef interface ODSOColumns ODSOColumns;
#endif 	/* __ODSOColumns_FWD_DEFINED__ */


#ifndef __ODSOFilter_FWD_DEFINED__
#define __ODSOFilter_FWD_DEFINED__
typedef interface ODSOFilter ODSOFilter;
#endif 	/* __ODSOFilter_FWD_DEFINED__ */


#ifndef __ODSOFilters_FWD_DEFINED__
#define __ODSOFilters_FWD_DEFINED__
typedef interface ODSOFilters ODSOFilters;
#endif 	/* __ODSOFilters_FWD_DEFINED__ */


#ifndef __NewFile_FWD_DEFINED__
#define __NewFile_FWD_DEFINED__
typedef interface NewFile NewFile;
#endif 	/* __NewFile_FWD_DEFINED__ */


#ifndef __WebComponent_FWD_DEFINED__
#define __WebComponent_FWD_DEFINED__
typedef interface WebComponent WebComponent;
#endif 	/* __WebComponent_FWD_DEFINED__ */


#ifndef __WebComponentWindowExternal_FWD_DEFINED__
#define __WebComponentWindowExternal_FWD_DEFINED__
typedef interface WebComponentWindowExternal WebComponentWindowExternal;
#endif 	/* __WebComponentWindowExternal_FWD_DEFINED__ */


#ifndef __WebComponentFormat_FWD_DEFINED__
#define __WebComponentFormat_FWD_DEFINED__
typedef interface WebComponentFormat WebComponentFormat;
#endif 	/* __WebComponentFormat_FWD_DEFINED__ */


#ifndef __ILicWizExternal_FWD_DEFINED__
#define __ILicWizExternal_FWD_DEFINED__
typedef interface ILicWizExternal ILicWizExternal;
#endif 	/* __ILicWizExternal_FWD_DEFINED__ */


#ifndef __ILicValidator_FWD_DEFINED__
#define __ILicValidator_FWD_DEFINED__
typedef interface ILicValidator ILicValidator;
#endif 	/* __ILicValidator_FWD_DEFINED__ */


#ifndef __ILicAgent_FWD_DEFINED__
#define __ILicAgent_FWD_DEFINED__
typedef interface ILicAgent ILicAgent;
#endif 	/* __ILicAgent_FWD_DEFINED__ */


#ifndef __IMsoEServicesDialog_FWD_DEFINED__
#define __IMsoEServicesDialog_FWD_DEFINED__
typedef interface IMsoEServicesDialog IMsoEServicesDialog;
#endif 	/* __IMsoEServicesDialog_FWD_DEFINED__ */


#ifndef __WebComponentProperties_FWD_DEFINED__
#define __WebComponentProperties_FWD_DEFINED__
typedef interface WebComponentProperties WebComponentProperties;
#endif 	/* __WebComponentProperties_FWD_DEFINED__ */


#ifndef __SmartDocument_FWD_DEFINED__
#define __SmartDocument_FWD_DEFINED__
typedef interface SmartDocument SmartDocument;
#endif 	/* __SmartDocument_FWD_DEFINED__ */


#ifndef __SharedWorkspaceMember_FWD_DEFINED__
#define __SharedWorkspaceMember_FWD_DEFINED__
typedef interface SharedWorkspaceMember SharedWorkspaceMember;
#endif 	/* __SharedWorkspaceMember_FWD_DEFINED__ */


#ifndef __SharedWorkspaceMembers_FWD_DEFINED__
#define __SharedWorkspaceMembers_FWD_DEFINED__
typedef interface SharedWorkspaceMembers SharedWorkspaceMembers;
#endif 	/* __SharedWorkspaceMembers_FWD_DEFINED__ */


#ifndef __SharedWorkspaceTask_FWD_DEFINED__
#define __SharedWorkspaceTask_FWD_DEFINED__
typedef interface SharedWorkspaceTask SharedWorkspaceTask;
#endif 	/* __SharedWorkspaceTask_FWD_DEFINED__ */


#ifndef __SharedWorkspaceTasks_FWD_DEFINED__
#define __SharedWorkspaceTasks_FWD_DEFINED__
typedef interface SharedWorkspaceTasks SharedWorkspaceTasks;
#endif 	/* __SharedWorkspaceTasks_FWD_DEFINED__ */


#ifndef __SharedWorkspaceFile_FWD_DEFINED__
#define __SharedWorkspaceFile_FWD_DEFINED__
typedef interface SharedWorkspaceFile SharedWorkspaceFile;
#endif 	/* __SharedWorkspaceFile_FWD_DEFINED__ */


#ifndef __SharedWorkspaceFiles_FWD_DEFINED__
#define __SharedWorkspaceFiles_FWD_DEFINED__
typedef interface SharedWorkspaceFiles SharedWorkspaceFiles;
#endif 	/* __SharedWorkspaceFiles_FWD_DEFINED__ */


#ifndef __SharedWorkspaceFolder_FWD_DEFINED__
#define __SharedWorkspaceFolder_FWD_DEFINED__
typedef interface SharedWorkspaceFolder SharedWorkspaceFolder;
#endif 	/* __SharedWorkspaceFolder_FWD_DEFINED__ */


#ifndef __SharedWorkspaceFolders_FWD_DEFINED__
#define __SharedWorkspaceFolders_FWD_DEFINED__
typedef interface SharedWorkspaceFolders SharedWorkspaceFolders;
#endif 	/* __SharedWorkspaceFolders_FWD_DEFINED__ */


#ifndef __SharedWorkspaceLink_FWD_DEFINED__
#define __SharedWorkspaceLink_FWD_DEFINED__
typedef interface SharedWorkspaceLink SharedWorkspaceLink;
#endif 	/* __SharedWorkspaceLink_FWD_DEFINED__ */


#ifndef __SharedWorkspaceLinks_FWD_DEFINED__
#define __SharedWorkspaceLinks_FWD_DEFINED__
typedef interface SharedWorkspaceLinks SharedWorkspaceLinks;
#endif 	/* __SharedWorkspaceLinks_FWD_DEFINED__ */


#ifndef __SharedWorkspace_FWD_DEFINED__
#define __SharedWorkspace_FWD_DEFINED__
typedef interface SharedWorkspace SharedWorkspace;
#endif 	/* __SharedWorkspace_FWD_DEFINED__ */


#ifndef __Sync_FWD_DEFINED__
#define __Sync_FWD_DEFINED__
typedef interface Sync Sync;
#endif 	/* __Sync_FWD_DEFINED__ */


#ifndef __DocumentLibraryVersion_FWD_DEFINED__
#define __DocumentLibraryVersion_FWD_DEFINED__
typedef interface DocumentLibraryVersion DocumentLibraryVersion;
#endif 	/* __DocumentLibraryVersion_FWD_DEFINED__ */


#ifndef __DocumentLibraryVersions_FWD_DEFINED__
#define __DocumentLibraryVersions_FWD_DEFINED__
typedef interface DocumentLibraryVersions DocumentLibraryVersions;
#endif 	/* __DocumentLibraryVersions_FWD_DEFINED__ */


#ifndef __UserPermission_FWD_DEFINED__
#define __UserPermission_FWD_DEFINED__
typedef interface UserPermission UserPermission;
#endif 	/* __UserPermission_FWD_DEFINED__ */


#ifndef __Permission_FWD_DEFINED__
#define __Permission_FWD_DEFINED__
typedef interface Permission Permission;
#endif 	/* __Permission_FWD_DEFINED__ */


#ifndef __CommandBars_FWD_DEFINED__
#define __CommandBars_FWD_DEFINED__

#ifdef __cplusplus
typedef class CommandBars CommandBars;
#else
typedef struct CommandBars CommandBars;
#endif /* __cplusplus */

#endif 	/* __CommandBars_FWD_DEFINED__ */


#ifndef __CommandBarComboBox_FWD_DEFINED__
#define __CommandBarComboBox_FWD_DEFINED__

#ifdef __cplusplus
typedef class CommandBarComboBox CommandBarComboBox;
#else
typedef struct CommandBarComboBox CommandBarComboBox;
#endif /* __cplusplus */

#endif 	/* __CommandBarComboBox_FWD_DEFINED__ */


#ifndef __CommandBarButton_FWD_DEFINED__
#define __CommandBarButton_FWD_DEFINED__

#ifdef __cplusplus
typedef class CommandBarButton CommandBarButton;
#else
typedef struct CommandBarButton CommandBarButton;
#endif /* __cplusplus */

#endif 	/* __CommandBarButton_FWD_DEFINED__ */


#ifndef __MsoEnvelope_FWD_DEFINED__
#define __MsoEnvelope_FWD_DEFINED__

#ifdef __cplusplus
typedef class MsoEnvelope MsoEnvelope;
#else
typedef struct MsoEnvelope MsoEnvelope;
#endif /* __cplusplus */

#endif 	/* __MsoEnvelope_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __Office_LIBRARY_DEFINED__
#define __Office_LIBRARY_DEFINED__

/* library Office */
/* [custom][helpcontext][helpfile][helpstring][version][uuid] */ 


















































































































typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0001
    {	msoLineDashStyleMixed	= 0xfffffffe,
	msoLineSolid	= 1,
	msoLineSquareDot	= 2,
	msoLineRoundDot	= 3,
	msoLineDash	= 4,
	msoLineDashDot	= 5,
	msoLineDashDotDot	= 6,
	msoLineLongDash	= 7,
	msoLineLongDashDot	= 8
    } 	MsoLineDashStyle;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0002
    {	msoLineStyleMixed	= 0xfffffffe,
	msoLineSingle	= 1,
	msoLineThinThin	= 2,
	msoLineThinThick	= 3,
	msoLineThickThin	= 4,
	msoLineThickBetweenThin	= 5
    } 	MsoLineStyle;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0003
    {	msoArrowheadStyleMixed	= 0xfffffffe,
	msoArrowheadNone	= 1,
	msoArrowheadTriangle	= 2,
	msoArrowheadOpen	= 3,
	msoArrowheadStealth	= 4,
	msoArrowheadDiamond	= 5,
	msoArrowheadOval	= 6
    } 	MsoArrowheadStyle;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0004
    {	msoArrowheadWidthMixed	= 0xfffffffe,
	msoArrowheadNarrow	= 1,
	msoArrowheadWidthMedium	= 2,
	msoArrowheadWide	= 3
    } 	MsoArrowheadWidth;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0005
    {	msoArrowheadLengthMixed	= 0xfffffffe,
	msoArrowheadShort	= 1,
	msoArrowheadLengthMedium	= 2,
	msoArrowheadLong	= 3
    } 	MsoArrowheadLength;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0006
    {	msoFillMixed	= 0xfffffffe,
	msoFillSolid	= 1,
	msoFillPatterned	= 2,
	msoFillGradient	= 3,
	msoFillTextured	= 4,
	msoFillBackground	= 5,
	msoFillPicture	= 6
    } 	MsoFillType;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0007
    {	msoGradientMixed	= 0xfffffffe,
	msoGradientHorizontal	= 1,
	msoGradientVertical	= 2,
	msoGradientDiagonalUp	= 3,
	msoGradientDiagonalDown	= 4,
	msoGradientFromCorner	= 5,
	msoGradientFromTitle	= 6,
	msoGradientFromCenter	= 7
    } 	MsoGradientStyle;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0008
    {	msoGradientColorMixed	= 0xfffffffe,
	msoGradientOneColor	= 1,
	msoGradientTwoColors	= 2,
	msoGradientPresetColors	= 3
    } 	MsoGradientColorType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0009
    {	msoTextureTypeMixed	= 0xfffffffe,
	msoTexturePreset	= 1,
	msoTextureUserDefined	= 2
    } 	MsoTextureType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0010
    {	msoPresetTextureMixed	= 0xfffffffe,
	msoTexturePapyrus	= 1,
	msoTextureCanvas	= 2,
	msoTextureDenim	= 3,
	msoTextureWovenMat	= 4,
	msoTextureWaterDroplets	= 5,
	msoTexturePaperBag	= 6,
	msoTextureFishFossil	= 7,
	msoTextureSand	= 8,
	msoTextureGreenMarble	= 9,
	msoTextureWhiteMarble	= 10,
	msoTextureBrownMarble	= 11,
	msoTextureGranite	= 12,
	msoTextureNewsprint	= 13,
	msoTextureRecycledPaper	= 14,
	msoTextureParchment	= 15,
	msoTextureStationery	= 16,
	msoTextureBlueTissuePaper	= 17,
	msoTexturePinkTissuePaper	= 18,
	msoTexturePurpleMesh	= 19,
	msoTextureBouquet	= 20,
	msoTextureCork	= 21,
	msoTextureWalnut	= 22,
	msoTextureOak	= 23,
	msoTextureMediumWood	= 24
    } 	MsoPresetTexture;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0011
    {	msoPatternMixed	= 0xfffffffe,
	msoPattern5Percent	= 1,
	msoPattern10Percent	= 2,
	msoPattern20Percent	= 3,
	msoPattern25Percent	= 4,
	msoPattern30Percent	= 5,
	msoPattern40Percent	= 6,
	msoPattern50Percent	= 7,
	msoPattern60Percent	= 8,
	msoPattern70Percent	= 9,
	msoPattern75Percent	= 10,
	msoPattern80Percent	= 11,
	msoPattern90Percent	= 12,
	msoPatternDarkHorizontal	= 13,
	msoPatternDarkVertical	= 14,
	msoPatternDarkDownwardDiagonal	= 15,
	msoPatternDarkUpwardDiagonal	= 16,
	msoPatternSmallCheckerBoard	= 17,
	msoPatternTrellis	= 18,
	msoPatternLightHorizontal	= 19,
	msoPatternLightVertical	= 20,
	msoPatternLightDownwardDiagonal	= 21,
	msoPatternLightUpwardDiagonal	= 22,
	msoPatternSmallGrid	= 23,
	msoPatternDottedDiamond	= 24,
	msoPatternWideDownwardDiagonal	= 25,
	msoPatternWideUpwardDiagonal	= 26,
	msoPatternDashedUpwardDiagonal	= 27,
	msoPatternDashedDownwardDiagonal	= 28,
	msoPatternNarrowVertical	= 29,
	msoPatternNarrowHorizontal	= 30,
	msoPatternDashedVertical	= 31,
	msoPatternDashedHorizontal	= 32,
	msoPatternLargeConfetti	= 33,
	msoPatternLargeGrid	= 34,
	msoPatternHorizontalBrick	= 35,
	msoPatternLargeCheckerBoard	= 36,
	msoPatternSmallConfetti	= 37,
	msoPatternZigZag	= 38,
	msoPatternSolidDiamond	= 39,
	msoPatternDiagonalBrick	= 40,
	msoPatternOutlinedDiamond	= 41,
	msoPatternPlaid	= 42,
	msoPatternSphere	= 43,
	msoPatternWeave	= 44,
	msoPatternDottedGrid	= 45,
	msoPatternDivot	= 46,
	msoPatternShingle	= 47,
	msoPatternWave	= 48
    } 	MsoPatternType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0012
    {	msoPresetGradientMixed	= 0xfffffffe,
	msoGradientEarlySunset	= 1,
	msoGradientLateSunset	= 2,
	msoGradientNightfall	= 3,
	msoGradientDaybreak	= 4,
	msoGradientHorizon	= 5,
	msoGradientDesert	= 6,
	msoGradientOcean	= 7,
	msoGradientCalmWater	= 8,
	msoGradientFire	= 9,
	msoGradientFog	= 10,
	msoGradientMoss	= 11,
	msoGradientPeacock	= 12,
	msoGradientWheat	= 13,
	msoGradientParchment	= 14,
	msoGradientMahogany	= 15,
	msoGradientRainbow	= 16,
	msoGradientRainbowII	= 17,
	msoGradientGold	= 18,
	msoGradientGoldII	= 19,
	msoGradientBrass	= 20,
	msoGradientChrome	= 21,
	msoGradientChromeII	= 22,
	msoGradientSilver	= 23,
	msoGradientSapphire	= 24
    } 	MsoPresetGradientType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0013
    {	msoShadowMixed	= 0xfffffffe,
	msoShadow1	= 1,
	msoShadow2	= 2,
	msoShadow3	= 3,
	msoShadow4	= 4,
	msoShadow5	= 5,
	msoShadow6	= 6,
	msoShadow7	= 7,
	msoShadow8	= 8,
	msoShadow9	= 9,
	msoShadow10	= 10,
	msoShadow11	= 11,
	msoShadow12	= 12,
	msoShadow13	= 13,
	msoShadow14	= 14,
	msoShadow15	= 15,
	msoShadow16	= 16,
	msoShadow17	= 17,
	msoShadow18	= 18,
	msoShadow19	= 19,
	msoShadow20	= 20
    } 	MsoShadowType;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0014
    {	msoTextEffectMixed	= 0xfffffffe,
	msoTextEffect1	= 0,
	msoTextEffect2	= 1,
	msoTextEffect3	= 2,
	msoTextEffect4	= 3,
	msoTextEffect5	= 4,
	msoTextEffect6	= 5,
	msoTextEffect7	= 6,
	msoTextEffect8	= 7,
	msoTextEffect9	= 8,
	msoTextEffect10	= 9,
	msoTextEffect11	= 10,
	msoTextEffect12	= 11,
	msoTextEffect13	= 12,
	msoTextEffect14	= 13,
	msoTextEffect15	= 14,
	msoTextEffect16	= 15,
	msoTextEffect17	= 16,
	msoTextEffect18	= 17,
	msoTextEffect19	= 18,
	msoTextEffect20	= 19,
	msoTextEffect21	= 20,
	msoTextEffect22	= 21,
	msoTextEffect23	= 22,
	msoTextEffect24	= 23,
	msoTextEffect25	= 24,
	msoTextEffect26	= 25,
	msoTextEffect27	= 26,
	msoTextEffect28	= 27,
	msoTextEffect29	= 28,
	msoTextEffect30	= 29
    } 	MsoPresetTextEffect;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0015
    {	msoTextEffectShapeMixed	= 0xfffffffe,
	msoTextEffectShapePlainText	= 1,
	msoTextEffectShapeStop	= 2,
	msoTextEffectShapeTriangleUp	= 3,
	msoTextEffectShapeTriangleDown	= 4,
	msoTextEffectShapeChevronUp	= 5,
	msoTextEffectShapeChevronDown	= 6,
	msoTextEffectShapeRingInside	= 7,
	msoTextEffectShapeRingOutside	= 8,
	msoTextEffectShapeArchUpCurve	= 9,
	msoTextEffectShapeArchDownCurve	= 10,
	msoTextEffectShapeCircleCurve	= 11,
	msoTextEffectShapeButtonCurve	= 12,
	msoTextEffectShapeArchUpPour	= 13,
	msoTextEffectShapeArchDownPour	= 14,
	msoTextEffectShapeCirclePour	= 15,
	msoTextEffectShapeButtonPour	= 16,
	msoTextEffectShapeCurveUp	= 17,
	msoTextEffectShapeCurveDown	= 18,
	msoTextEffectShapeCanUp	= 19,
	msoTextEffectShapeCanDown	= 20,
	msoTextEffectShapeWave1	= 21,
	msoTextEffectShapeWave2	= 22,
	msoTextEffectShapeDoubleWave1	= 23,
	msoTextEffectShapeDoubleWave2	= 24,
	msoTextEffectShapeInflate	= 25,
	msoTextEffectShapeDeflate	= 26,
	msoTextEffectShapeInflateBottom	= 27,
	msoTextEffectShapeDeflateBottom	= 28,
	msoTextEffectShapeInflateTop	= 29,
	msoTextEffectShapeDeflateTop	= 30,
	msoTextEffectShapeDeflateInflate	= 31,
	msoTextEffectShapeDeflateInflateDeflate	= 32,
	msoTextEffectShapeFadeRight	= 33,
	msoTextEffectShapeFadeLeft	= 34,
	msoTextEffectShapeFadeUp	= 35,
	msoTextEffectShapeFadeDown	= 36,
	msoTextEffectShapeSlantUp	= 37,
	msoTextEffectShapeSlantDown	= 38,
	msoTextEffectShapeCascadeUp	= 39,
	msoTextEffectShapeCascadeDown	= 40
    } 	MsoPresetTextEffectShape;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0016
    {	msoTextEffectAlignmentMixed	= 0xfffffffe,
	msoTextEffectAlignmentLeft	= 1,
	msoTextEffectAlignmentCentered	= 2,
	msoTextEffectAlignmentRight	= 3,
	msoTextEffectAlignmentLetterJustify	= 4,
	msoTextEffectAlignmentWordJustify	= 5,
	msoTextEffectAlignmentStretchJustify	= 6
    } 	MsoTextEffectAlignment;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0017
    {	msoPresetLightingDirectionMixed	= 0xfffffffe,
	msoLightingTopLeft	= 1,
	msoLightingTop	= 2,
	msoLightingTopRight	= 3,
	msoLightingLeft	= 4,
	msoLightingNone	= 5,
	msoLightingRight	= 6,
	msoLightingBottomLeft	= 7,
	msoLightingBottom	= 8,
	msoLightingBottomRight	= 9
    } 	MsoPresetLightingDirection;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0018
    {	msoPresetLightingSoftnessMixed	= 0xfffffffe,
	msoLightingDim	= 1,
	msoLightingNormal	= 2,
	msoLightingBright	= 3
    } 	MsoPresetLightingSoftness;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0019
    {	msoPresetMaterialMixed	= 0xfffffffe,
	msoMaterialMatte	= 1,
	msoMaterialPlastic	= 2,
	msoMaterialMetal	= 3,
	msoMaterialWireFrame	= 4
    } 	MsoPresetMaterial;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0020
    {	msoPresetExtrusionDirectionMixed	= 0xfffffffe,
	msoExtrusionBottomRight	= 1,
	msoExtrusionBottom	= 2,
	msoExtrusionBottomLeft	= 3,
	msoExtrusionRight	= 4,
	msoExtrusionNone	= 5,
	msoExtrusionLeft	= 6,
	msoExtrusionTopRight	= 7,
	msoExtrusionTop	= 8,
	msoExtrusionTopLeft	= 9
    } 	MsoPresetExtrusionDirection;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0021
    {	msoPresetThreeDFormatMixed	= 0xfffffffe,
	msoThreeD1	= 1,
	msoThreeD2	= 2,
	msoThreeD3	= 3,
	msoThreeD4	= 4,
	msoThreeD5	= 5,
	msoThreeD6	= 6,
	msoThreeD7	= 7,
	msoThreeD8	= 8,
	msoThreeD9	= 9,
	msoThreeD10	= 10,
	msoThreeD11	= 11,
	msoThreeD12	= 12,
	msoThreeD13	= 13,
	msoThreeD14	= 14,
	msoThreeD15	= 15,
	msoThreeD16	= 16,
	msoThreeD17	= 17,
	msoThreeD18	= 18,
	msoThreeD19	= 19,
	msoThreeD20	= 20
    } 	MsoPresetThreeDFormat;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0022
    {	msoExtrusionColorTypeMixed	= 0xfffffffe,
	msoExtrusionColorAutomatic	= 1,
	msoExtrusionColorCustom	= 2
    } 	MsoExtrusionColorType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0023
    {	msoAlignLefts	= 0,
	msoAlignCenters	= 1,
	msoAlignRights	= 2,
	msoAlignTops	= 3,
	msoAlignMiddles	= 4,
	msoAlignBottoms	= 5
    } 	MsoAlignCmd;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0024
    {	msoDistributeHorizontally	= 0,
	msoDistributeVertically	= 1
    } 	MsoDistributeCmd;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0025
    {	msoConnectorTypeMixed	= 0xfffffffe,
	msoConnectorStraight	= 1,
	msoConnectorElbow	= 2,
	msoConnectorCurve	= 3
    } 	MsoConnectorType;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0026
    {	msoHorizontalAnchorMixed	= 0xfffffffe,
	msoAnchorNone	= 1,
	msoAnchorCenter	= 2
    } 	MsoHorizontalAnchor;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0027
    {	msoVerticalAnchorMixed	= 0xfffffffe,
	msoAnchorTop	= 1,
	msoAnchorTopBaseline	= 2,
	msoAnchorMiddle	= 3,
	msoAnchorBottom	= 4,
	msoAnchorBottomBaseLine	= 5
    } 	MsoVerticalAnchor;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0028
    {	msoOrientationMixed	= 0xfffffffe,
	msoOrientationHorizontal	= 1,
	msoOrientationVertical	= 2
    } 	MsoOrientation;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0029
    {	msoBringToFront	= 0,
	msoSendToBack	= 1,
	msoBringForward	= 2,
	msoSendBackward	= 3,
	msoBringInFrontOfText	= 4,
	msoSendBehindText	= 5
    } 	MsoZOrderCmd;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0030
    {	msoSegmentLine	= 0,
	msoSegmentCurve	= 1
    } 	MsoSegmentType;

typedef /* [public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0031
    {	msoEditingAuto	= 0,
	msoEditingCorner	= 1,
	msoEditingSmooth	= 2,
	msoEditingSymmetric	= 3
    } 	MsoEditingType;

typedef /* [public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0032
    {	msoShapeMixed	= 0xfffffffe,
	msoShapeRectangle	= 1,
	msoShapeParallelogram	= 2,
	msoShapeTrapezoid	= 3,
	msoShapeDiamond	= 4,
	msoShapeRoundedRectangle	= 5,
	msoShapeOctagon	= 6,
	msoShapeIsoscelesTriangle	= 7,
	msoShapeRightTriangle	= 8,
	msoShapeOval	= 9,
	msoShapeHexagon	= 10,
	msoShapeCross	= 11,
	msoShapeRegularPentagon	= 12,
	msoShapeCan	= 13,
	msoShapeCube	= 14,
	msoShapeBevel	= 15,
	msoShapeFoldedCorner	= 16,
	msoShapeSmileyFace	= 17,
	msoShapeDonut	= 18,
	msoShapeNoSymbol	= 19,
	msoShapeBlockArc	= 20,
	msoShapeHeart	= 21,
	msoShapeLightningBolt	= 22,
	msoShapeSun	= 23,
	msoShapeMoon	= 24,
	msoShapeArc	= 25,
	msoShapeDoubleBracket	= 26,
	msoShapeDoubleBrace	= 27,
	msoShapePlaque	= 28,
	msoShapeLeftBracket	= 29,
	msoShapeRightBracket	= 30,
	msoShapeLeftBrace	= 31,
	msoShapeRightBrace	= 32,
	msoShapeRightArrow	= 33,
	msoShapeLeftArrow	= 34,
	msoShapeUpArrow	= 35,
	msoShapeDownArrow	= 36,
	msoShapeLeftRightArrow	= 37,
	msoShapeUpDownArrow	= 38,
	msoShapeQuadArrow	= 39,
	msoShapeLeftRightUpArrow	= 40,
	msoShapeBentArrow	= 41,
	msoShapeUTurnArrow	= 42,
	msoShapeLeftUpArrow	= 43,
	msoShapeBentUpArrow	= 44,
	msoShapeCurvedRightArrow	= 45,
	msoShapeCurvedLeftArrow	= 46,
	msoShapeCurvedUpArrow	= 47,
	msoShapeCurvedDownArrow	= 48,
	msoShapeStripedRightArrow	= 49,
	msoShapeNotchedRightArrow	= 50,
	msoShapePentagon	= 51,
	msoShapeChevron	= 52,
	msoShapeRightArrowCallout	= 53,
	msoShapeLeftArrowCallout	= 54,
	msoShapeUpArrowCallout	= 55,
	msoShapeDownArrowCallout	= 56,
	msoShapeLeftRightArrowCallout	= 57,
	msoShapeUpDownArrowCallout	= 58,
	msoShapeQuadArrowCallout	= 59,
	msoShapeCircularArrow	= 60,
	msoShapeFlowchartProcess	= 61,
	msoShapeFlowchartAlternateProcess	= 62,
	msoShapeFlowchartDecision	= 63,
	msoShapeFlowchartData	= 64,
	msoShapeFlowchartPredefinedProcess	= 65,
	msoShapeFlowchartInternalStorage	= 66,
	msoShapeFlowchartDocument	= 67,
	msoShapeFlowchartMultidocument	= 68,
	msoShapeFlowchartTerminator	= 69,
	msoShapeFlowchartPreparation	= 70,
	msoShapeFlowchartManualInput	= 71,
	msoShapeFlowchartManualOperation	= 72,
	msoShapeFlowchartConnector	= 73,
	msoShapeFlowchartOffpageConnector	= 74,
	msoShapeFlowchartCard	= 75,
	msoShapeFlowchartPunchedTape	= 76,
	msoShapeFlowchartSummingJunction	= 77,
	msoShapeFlowchartOr	= 78,
	msoShapeFlowchartCollate	= 79,
	msoShapeFlowchartSort	= 80,
	msoShapeFlowchartExtract	= 81,
	msoShapeFlowchartMerge	= 82,
	msoShapeFlowchartStoredData	= 83,
	msoShapeFlowchartDelay	= 84,
	msoShapeFlowchartSequentialAccessStorage	= 85,
	msoShapeFlowchartMagneticDisk	= 86,
	msoShapeFlowchartDirectAccessStorage	= 87,
	msoShapeFlowchartDisplay	= 88,
	msoShapeExplosion1	= 89,
	msoShapeExplosion2	= 90,
	msoShape4pointStar	= 91,
	msoShape5pointStar	= 92,
	msoShape8pointStar	= 93,
	msoShape16pointStar	= 94,
	msoShape24pointStar	= 95,
	msoShape32pointStar	= 96,
	msoShapeUpRibbon	= 97,
	msoShapeDownRibbon	= 98,
	msoShapeCurvedUpRibbon	= 99,
	msoShapeCurvedDownRibbon	= 100,
	msoShapeVerticalScroll	= 101,
	msoShapeHorizontalScroll	= 102,
	msoShapeWave	= 103,
	msoShapeDoubleWave	= 104,
	msoShapeRectangularCallout	= 105,
	msoShapeRoundedRectangularCallout	= 106,
	msoShapeOvalCallout	= 107,
	msoShapeCloudCallout	= 108,
	msoShapeLineCallout1	= 109,
	msoShapeLineCallout2	= 110,
	msoShapeLineCallout3	= 111,
	msoShapeLineCallout4	= 112,
	msoShapeLineCallout1AccentBar	= 113,
	msoShapeLineCallout2AccentBar	= 114,
	msoShapeLineCallout3AccentBar	= 115,
	msoShapeLineCallout4AccentBar	= 116,
	msoShapeLineCallout1NoBorder	= 117,
	msoShapeLineCallout2NoBorder	= 118,
	msoShapeLineCallout3NoBorder	= 119,
	msoShapeLineCallout4NoBorder	= 120,
	msoShapeLineCallout1BorderandAccentBar	= 121,
	msoShapeLineCallout2BorderandAccentBar	= 122,
	msoShapeLineCallout3BorderandAccentBar	= 123,
	msoShapeLineCallout4BorderandAccentBar	= 124,
	msoShapeActionButtonCustom	= 125,
	msoShapeActionButtonHome	= 126,
	msoShapeActionButtonHelp	= 127,
	msoShapeActionButtonInformation	= 128,
	msoShapeActionButtonBackorPrevious	= 129,
	msoShapeActionButtonForwardorNext	= 130,
	msoShapeActionButtonBeginning	= 131,
	msoShapeActionButtonEnd	= 132,
	msoShapeActionButtonReturn	= 133,
	msoShapeActionButtonDocument	= 134,
	msoShapeActionButtonSound	= 135,
	msoShapeActionButtonMovie	= 136,
	msoShapeBalloon	= 137,
	msoShapeNotPrimitive	= 138
    } 	MsoAutoShapeType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0033
    {	msoShapeTypeMixed	= 0xfffffffe,
	msoAutoShape	= 1,
	msoCallout	= 2,
	msoChart	= 3,
	msoComment	= 4,
	msoFreeform	= 5,
	msoGroup	= 6,
	msoEmbeddedOLEObject	= 7,
	msoFormControl	= 8,
	msoLine	= 9,
	msoLinkedOLEObject	= 10,
	msoLinkedPicture	= 11,
	msoOLEControlObject	= 12,
	msoPicture	= 13,
	msoPlaceholder	= 14,
	msoTextEffect	= 15,
	msoMedia	= 16,
	msoTextBox	= 17,
	msoScriptAnchor	= 18,
	msoTable	= 19,
	msoCanvas	= 20,
	msoDiagram	= 21,
	msoInk	= 22,
	msoInkComment	= 23
    } 	MsoShapeType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0034
    {	msoFlipHorizontal	= 0,
	msoFlipVertical	= 1
    } 	MsoFlipCmd;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0035
    {	msoTrue	= 0xffffffff,
	msoFalse	= 0,
	msoCTrue	= 1,
	msoTriStateToggle	= 0xfffffffd,
	msoTriStateMixed	= 0xfffffffe
    } 	MsoTriState;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0036
    {	msoColorTypeMixed	= 0xfffffffe,
	msoColorTypeRGB	= 1,
	msoColorTypeScheme	= 2,
	msoColorTypeCMYK	= 3,
	msoColorTypeCMS	= 4,
	msoColorTypeInk	= 5
    } 	MsoColorType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0037
    {	msoPictureMixed	= 0xfffffffe,
	msoPictureAutomatic	= 1,
	msoPictureGrayscale	= 2,
	msoPictureBlackAndWhite	= 3,
	msoPictureWatermark	= 4
    } 	MsoPictureColorType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0038
    {	msoCalloutAngleMixed	= 0xfffffffe,
	msoCalloutAngleAutomatic	= 1,
	msoCalloutAngle30	= 2,
	msoCalloutAngle45	= 3,
	msoCalloutAngle60	= 4,
	msoCalloutAngle90	= 5
    } 	MsoCalloutAngleType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0039
    {	msoCalloutDropMixed	= 0xfffffffe,
	msoCalloutDropCustom	= 1,
	msoCalloutDropTop	= 2,
	msoCalloutDropCenter	= 3,
	msoCalloutDropBottom	= 4
    } 	MsoCalloutDropType;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0040
    {	msoCalloutMixed	= 0xfffffffe,
	msoCalloutOne	= 1,
	msoCalloutTwo	= 2,
	msoCalloutThree	= 3,
	msoCalloutFour	= 4
    } 	MsoCalloutType;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0041
    {	msoBlackWhiteMixed	= 0xfffffffe,
	msoBlackWhiteAutomatic	= 1,
	msoBlackWhiteGrayScale	= 2,
	msoBlackWhiteLightGrayScale	= 3,
	msoBlackWhiteInverseGrayScale	= 4,
	msoBlackWhiteGrayOutline	= 5,
	msoBlackWhiteBlackTextAndLine	= 6,
	msoBlackWhiteHighContrast	= 7,
	msoBlackWhiteBlack	= 8,
	msoBlackWhiteWhite	= 9,
	msoBlackWhiteDontShow	= 10
    } 	MsoBlackWhiteMode;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0042
    {	msoIntegerMixed	= 32768,
	msoSingleMixed	= 0x80000000
    } 	MsoMixedType;

typedef /* [public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0043
    {	msoTextOrientationMixed	= 0xfffffffe,
	msoTextOrientationHorizontal	= 1,
	msoTextOrientationUpward	= 2,
	msoTextOrientationDownward	= 3,
	msoTextOrientationVerticalFarEast	= 4,
	msoTextOrientationVertical	= 5,
	msoTextOrientationHorizontalRotatedFarEast	= 6
    } 	MsoTextOrientation;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0044
    {	msoScaleFromTopLeft	= 0,
	msoScaleFromMiddle	= 1,
	msoScaleFromBottomRight	= 2
    } 	MsoScaleFrom;

typedef /* [public] */ long MsoRGBType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0045
    {	msoBarLeft	= 0,
	msoBarTop	= 1,
	msoBarRight	= 2,
	msoBarBottom	= 3,
	msoBarFloating	= 4,
	msoBarPopup	= 5,
	msoBarMenuBar	= 6
    } 	MsoBarPosition;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0046
    {	msoBarNoProtection	= 0,
	msoBarNoCustomize	= 1,
	msoBarNoResize	= 2,
	msoBarNoMove	= 4,
	msoBarNoChangeVisible	= 8,
	msoBarNoChangeDock	= 16,
	msoBarNoVerticalDock	= 32,
	msoBarNoHorizontalDock	= 64
    } 	MsoBarProtection;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0047
    {	msoBarTypeNormal	= 0,
	msoBarTypeMenuBar	= 1,
	msoBarTypePopup	= 2
    } 	MsoBarType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0048
    {	msoControlCustom	= 0,
	msoControlButton	= 1,
	msoControlEdit	= 2,
	msoControlDropdown	= 3,
	msoControlComboBox	= 4,
	msoControlButtonDropdown	= 5,
	msoControlSplitDropdown	= 6,
	msoControlOCXDropdown	= 7,
	msoControlGenericDropdown	= 8,
	msoControlGraphicDropdown	= 9,
	msoControlPopup	= 10,
	msoControlGraphicPopup	= 11,
	msoControlButtonPopup	= 12,
	msoControlSplitButtonPopup	= 13,
	msoControlSplitButtonMRUPopup	= 14,
	msoControlLabel	= 15,
	msoControlExpandingGrid	= 16,
	msoControlSplitExpandingGrid	= 17,
	msoControlGrid	= 18,
	msoControlGauge	= 19,
	msoControlGraphicCombo	= 20,
	msoControlPane	= 21,
	msoControlActiveX	= 22,
	msoControlSpinner	= 23,
	msoControlLabelEx	= 24,
	msoControlWorkPane	= 25,
	msoControlAutoCompleteCombo	= 26
    } 	MsoControlType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0049
    {	msoButtonUp	= 0,
	msoButtonDown	= 0xffffffff,
	msoButtonMixed	= 2
    } 	MsoButtonState;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0050
    {	msoControlOLEUsageNeither	= 0,
	msoControlOLEUsageServer	= 1,
	msoControlOLEUsageClient	= 2,
	msoControlOLEUsageBoth	= 3
    } 	MsoControlOLEUsage;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0051
    {	msoButtonWrapText	= 4,
	msoButtonTextBelow	= 8
    } 	MsoButtonStyleHidden;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0052
    {	msoButtonAutomatic	= 0,
	msoButtonIcon	= 1,
	msoButtonCaption	= 2,
	msoButtonIconAndCaption	= 3,
	msoButtonIconAndWrapCaption	= 7,
	msoButtonIconAndCaptionBelow	= 11,
	msoButtonWrapCaption	= 14,
	msoButtonIconAndWrapCaptionBelow	= 15
    } 	MsoButtonStyle;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0053
    {	msoComboNormal	= 0,
	msoComboLabel	= 1
    } 	MsoComboStyle;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0054
    {	msoOLEMenuGroupNone	= 0xffffffff,
	msoOLEMenuGroupFile	= 0,
	msoOLEMenuGroupEdit	= 1,
	msoOLEMenuGroupContainer	= 2,
	msoOLEMenuGroupObject	= 3,
	msoOLEMenuGroupWindow	= 4,
	msoOLEMenuGroupHelp	= 5
    } 	MsoOLEMenuGroup;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0055
    {	msoMenuAnimationNone	= 0,
	msoMenuAnimationRandom	= 1,
	msoMenuAnimationUnfold	= 2,
	msoMenuAnimationSlide	= 3
    } 	MsoMenuAnimation;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0056
    {	msoBarRowFirst	= 0,
	msoBarRowLast	= 0xffffffff
    } 	MsoBarRow;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0057
    {	msoCommandBarButtonHyperlinkNone	= 0,
	msoCommandBarButtonHyperlinkOpen	= 1,
	msoCommandBarButtonHyperlinkInsertPicture	= 2
    } 	MsoCommandBarButtonHyperlinkType;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0058
    {	msoHyperlinkRange	= 0,
	msoHyperlinkShape	= 1,
	msoHyperlinkInlineShape	= 2
    } 	MsoHyperlinkType;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0059
    {	msoMethodGet	= 0,
	msoMethodPost	= 1
    } 	MsoExtraInfoMethod;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0060
    {	msoAnimationIdle	= 1,
	msoAnimationGreeting	= 2,
	msoAnimationGoodbye	= 3,
	msoAnimationBeginSpeaking	= 4,
	msoAnimationRestPose	= 5,
	msoAnimationCharacterSuccessMajor	= 6,
	msoAnimationGetAttentionMajor	= 11,
	msoAnimationGetAttentionMinor	= 12,
	msoAnimationSearching	= 13,
	msoAnimationPrinting	= 18,
	msoAnimationGestureRight	= 19,
	msoAnimationWritingNotingSomething	= 22,
	msoAnimationWorkingAtSomething	= 23,
	msoAnimationThinking	= 24,
	msoAnimationSendingMail	= 25,
	msoAnimationListensToComputer	= 26,
	msoAnimationDisappear	= 31,
	msoAnimationAppear	= 32,
	msoAnimationGetArtsy	= 100,
	msoAnimationGetTechy	= 101,
	msoAnimationGetWizardy	= 102,
	msoAnimationCheckingSomething	= 103,
	msoAnimationLookDown	= 104,
	msoAnimationLookDownLeft	= 105,
	msoAnimationLookDownRight	= 106,
	msoAnimationLookLeft	= 107,
	msoAnimationLookRight	= 108,
	msoAnimationLookUp	= 109,
	msoAnimationLookUpLeft	= 110,
	msoAnimationLookUpRight	= 111,
	msoAnimationSaving	= 112,
	msoAnimationGestureDown	= 113,
	msoAnimationGestureLeft	= 114,
	msoAnimationGestureUp	= 115,
	msoAnimationEmptyTrash	= 116
    } 	MsoAnimationType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0061
    {	msoButtonSetNone	= 0,
	msoButtonSetOK	= 1,
	msoButtonSetCancel	= 2,
	msoButtonSetOkCancel	= 3,
	msoButtonSetYesNo	= 4,
	msoButtonSetYesNoCancel	= 5,
	msoButtonSetBackClose	= 6,
	msoButtonSetNextClose	= 7,
	msoButtonSetBackNextClose	= 8,
	msoButtonSetRetryCancel	= 9,
	msoButtonSetAbortRetryIgnore	= 10,
	msoButtonSetSearchClose	= 11,
	msoButtonSetBackNextSnooze	= 12,
	msoButtonSetTipsOptionsClose	= 13,
	msoButtonSetYesAllNoCancel	= 14
    } 	MsoButtonSetType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0062
    {	msoIconNone	= 0,
	msoIconAlert	= 2,
	msoIconTip	= 3,
	msoIconAlertInfo	= 4,
	msoIconAlertWarning	= 5,
	msoIconAlertQuery	= 6,
	msoIconAlertCritical	= 7
    } 	MsoIconType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0063
    {	msoBalloonTypeButtons	= 0,
	msoBalloonTypeBullets	= 1,
	msoBalloonTypeNumbers	= 2
    } 	MsoBalloonType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0064
    {	msoModeModal	= 0,
	msoModeAutoDown	= 1,
	msoModeModeless	= 2
    } 	MsoModeType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0065
    {	msoBalloonErrorNone	= 0,
	msoBalloonErrorOther	= 1,
	msoBalloonErrorTooBig	= 2,
	msoBalloonErrorOutOfMemory	= 3,
	msoBalloonErrorBadPictureRef	= 4,
	msoBalloonErrorBadReference	= 5,
	msoBalloonErrorButtonlessModal	= 6,
	msoBalloonErrorButtonModeless	= 7,
	msoBalloonErrorBadCharacter	= 8,
	msoBalloonErrorCOMFailure	= 9,
	msoBalloonErrorCharNotTopmostForModal	= 10,
	msoBalloonErrorTooManyControls	= 11
    } 	MsoBalloonErrorType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0066
    {	msoWizardActInactive	= 0,
	msoWizardActActive	= 1,
	msoWizardActSuspend	= 2,
	msoWizardActResume	= 3
    } 	MsoWizardActType;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0067
    {	msoWizardMsgLocalStateOn	= 1,
	msoWizardMsgLocalStateOff	= 2,
	msoWizardMsgShowHelp	= 3,
	msoWizardMsgSuspending	= 4,
	msoWizardMsgResuming	= 5
    } 	MsoWizardMsgType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0068
    {	msoBalloonButtonYesToAll	= 0xfffffff1,
	msoBalloonButtonOptions	= 0xfffffff2,
	msoBalloonButtonTips	= 0xfffffff3,
	msoBalloonButtonClose	= 0xfffffff4,
	msoBalloonButtonSnooze	= 0xfffffff5,
	msoBalloonButtonSearch	= 0xfffffff6,
	msoBalloonButtonIgnore	= 0xfffffff7,
	msoBalloonButtonAbort	= 0xfffffff8,
	msoBalloonButtonRetry	= 0xfffffff9,
	msoBalloonButtonNext	= 0xfffffffa,
	msoBalloonButtonBack	= 0xfffffffb,
	msoBalloonButtonNo	= 0xfffffffc,
	msoBalloonButtonYes	= 0xfffffffd,
	msoBalloonButtonCancel	= 0xfffffffe,
	msoBalloonButtonOK	= 0xffffffff,
	msoBalloonButtonNull	= 0
    } 	MsoBalloonButtonType;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0069
    {	offPropertyTypeNumber	= 1,
	offPropertyTypeBoolean	= 2,
	offPropertyTypeDate	= 3,
	offPropertyTypeString	= 4,
	offPropertyTypeFloat	= 5
    } 	DocProperties;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0070
    {	msoPropertyTypeNumber	= 1,
	msoPropertyTypeBoolean	= 2,
	msoPropertyTypeDate	= 3,
	msoPropertyTypeString	= 4,
	msoPropertyTypeFloat	= 5
    } 	MsoDocProperties;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0071
    {	msoLanguageIDInstall	= 1,
	msoLanguageIDUI	= 2,
	msoLanguageIDHelp	= 3,
	msoLanguageIDExeMode	= 4,
	msoLanguageIDUIPrevious	= 5
    } 	MsoAppLanguageID;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0072
    {	MsoFarEastLineBreakLanguageJapanese	= 1041,
	MsoFarEastLineBreakLanguageKorean	= 1042,
	MsoFarEastLineBreakLanguageSimplifiedChinese	= 2052,
	MsoFarEastLineBreakLanguageTraditionalChinese	= 1028
    } 	MsoFarEastLineBreakLanguageID;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0073
    {	msoFeatureInstallNone	= 0,
	msoFeatureInstallOnDemand	= 1,
	msoFeatureInstallOnDemandWithUI	= 2
    } 	MsoFeatureInstall;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0074
    {	msoDiagramMixed	= 0xfffffffe,
	msoDiagramOrgChart	= 1,
	msoDiagramCycle	= 2,
	msoDiagramRadial	= 3,
	msoDiagramPyramid	= 4,
	msoDiagramVenn	= 5,
	msoDiagramTarget	= 6
    } 	MsoDiagramType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0075
    {	msoAlertButtonOK	= 0,
	msoAlertButtonOKCancel	= 1,
	msoAlertButtonAbortRetryIgnore	= 2,
	msoAlertButtonYesNoCancel	= 3,
	msoAlertButtonYesNo	= 4,
	msoAlertButtonRetryCancel	= 5,
	msoAlertButtonYesAllNoCancel	= 6
    } 	MsoAlertButtonType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0076
    {	msoAlertIconNoIcon	= 0,
	msoAlertIconCritical	= 1,
	msoAlertIconQuery	= 2,
	msoAlertIconWarning	= 3,
	msoAlertIconInfo	= 4
    } 	MsoAlertIconType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0077
    {	msoAlertDefaultFirst	= 0,
	msoAlertDefaultSecond	= 1,
	msoAlertDefaultThird	= 2,
	msoAlertDefaultFourth	= 3,
	msoAlertDefaultFifth	= 4
    } 	MsoAlertDefaultType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0000_0000_0078
    {	msoAlertCancelDefault	= 0xffffffff,
	msoAlertCancelFirst	= 0,
	msoAlertCancelSecond	= 1,
	msoAlertCancelThird	= 2,
	msoAlertCancelFourth	= 3,
	msoAlertCancelFifth	= 4
    } 	MsoAlertCancelType;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0022_0001
    {	msoScriptLanguageJava	= 1,
	msoScriptLanguageVisualBasic	= 2,
	msoScriptLanguageASP	= 3,
	msoScriptLanguageOther	= 4
    } 	MsoScriptLanguage;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0022_0002
    {	msoScriptLocationInHead	= 1,
	msoScriptLocationInBody	= 2
    } 	MsoScriptLocation;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0041_0001
    {	msoOptionsNew	= 1,
	msoOptionsAdd	= 2,
	msoOptionsWithin	= 3
    } 	MsoFileFindOptions;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0041_0002
    {	msoViewFileInfo	= 1,
	msoViewPreview	= 2,
	msoViewSummaryInfo	= 3
    } 	MsoFileFindView;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0041_0003
    {	msoFileFindSortbyAuthor	= 1,
	msoFileFindSortbyDateCreated	= 2,
	msoFileFindSortbyLastSavedBy	= 3,
	msoFileFindSortbyDateSaved	= 4,
	msoFileFindSortbyFileName	= 5,
	msoFileFindSortbySize	= 6,
	msoFileFindSortbyTitle	= 7
    } 	MsoFileFindSortBy;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0041_0004
    {	msoListbyName	= 1,
	msoListbyTitle	= 2
    } 	MsoFileFindListBy;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0043_0001
    {	msoLastModifiedYesterday	= 1,
	msoLastModifiedToday	= 2,
	msoLastModifiedLastWeek	= 3,
	msoLastModifiedThisWeek	= 4,
	msoLastModifiedLastMonth	= 5,
	msoLastModifiedThisMonth	= 6,
	msoLastModifiedAnyTime	= 7
    } 	MsoLastModified;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0043_0002
    {	msoSortByFileName	= 1,
	msoSortBySize	= 2,
	msoSortByFileType	= 3,
	msoSortByLastModified	= 4,
	msoSortByNone	= 5
    } 	MsoSortBy;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0043_0003
    {	msoSortOrderAscending	= 1,
	msoSortOrderDescending	= 2
    } 	MsoSortOrder;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0043_0004
    {	msoConnectorAnd	= 1,
	msoConnectorOr	= 2
    } 	MsoConnector;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0043_0005
    {	msoConditionFileTypeAllFiles	= 1,
	msoConditionFileTypeOfficeFiles	= 2,
	msoConditionFileTypeWordDocuments	= 3,
	msoConditionFileTypeExcelWorkbooks	= 4,
	msoConditionFileTypePowerPointPresentations	= 5,
	msoConditionFileTypeBinders	= 6,
	msoConditionFileTypeDatabases	= 7,
	msoConditionFileTypeTemplates	= 8,
	msoConditionIncludes	= 9,
	msoConditionIncludesPhrase	= 10,
	msoConditionBeginsWith	= 11,
	msoConditionEndsWith	= 12,
	msoConditionIncludesNearEachOther	= 13,
	msoConditionIsExactly	= 14,
	msoConditionIsNot	= 15,
	msoConditionYesterday	= 16,
	msoConditionToday	= 17,
	msoConditionTomorrow	= 18,
	msoConditionLastWeek	= 19,
	msoConditionThisWeek	= 20,
	msoConditionNextWeek	= 21,
	msoConditionLastMonth	= 22,
	msoConditionThisMonth	= 23,
	msoConditionNextMonth	= 24,
	msoConditionAnytime	= 25,
	msoConditionAnytimeBetween	= 26,
	msoConditionOn	= 27,
	msoConditionOnOrAfter	= 28,
	msoConditionOnOrBefore	= 29,
	msoConditionInTheNext	= 30,
	msoConditionInTheLast	= 31,
	msoConditionEquals	= 32,
	msoConditionDoesNotEqual	= 33,
	msoConditionAnyNumberBetween	= 34,
	msoConditionAtMost	= 35,
	msoConditionAtLeast	= 36,
	msoConditionMoreThan	= 37,
	msoConditionLessThan	= 38,
	msoConditionIsYes	= 39,
	msoConditionIsNo	= 40,
	msoConditionIncludesFormsOf	= 41,
	msoConditionFreeText	= 42,
	msoConditionFileTypeOutlookItems	= 43,
	msoConditionFileTypeMailItem	= 44,
	msoConditionFileTypeCalendarItem	= 45,
	msoConditionFileTypeContactItem	= 46,
	msoConditionFileTypeNoteItem	= 47,
	msoConditionFileTypeJournalItem	= 48,
	msoConditionFileTypeTaskItem	= 49,
	msoConditionFileTypePhotoDrawFiles	= 50,
	msoConditionFileTypeDataConnectionFiles	= 51,
	msoConditionFileTypePublisherFiles	= 52,
	msoConditionFileTypeProjectFiles	= 53,
	msoConditionFileTypeDocumentImagingFiles	= 54,
	msoConditionFileTypeVisioFiles	= 55,
	msoConditionFileTypeDesignerFiles	= 56,
	msoConditionFileTypeWebPages	= 57,
	msoConditionEqualsLow	= 58,
	msoConditionEqualsNormal	= 59,
	msoConditionEqualsHigh	= 60,
	msoConditionNotEqualToLow	= 61,
	msoConditionNotEqualToNormal	= 62,
	msoConditionNotEqualToHigh	= 63,
	msoConditionEqualsNotStarted	= 64,
	msoConditionEqualsInProgress	= 65,
	msoConditionEqualsCompleted	= 66,
	msoConditionEqualsWaitingForSomeoneElse	= 67,
	msoConditionEqualsDeferred	= 68,
	msoConditionNotEqualToNotStarted	= 69,
	msoConditionNotEqualToInProgress	= 70,
	msoConditionNotEqualToCompleted	= 71,
	msoConditionNotEqualToWaitingForSomeoneElse	= 72,
	msoConditionNotEqualToDeferred	= 73
    } 	MsoCondition;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0043_0006
    {	msoFileTypeAllFiles	= 1,
	msoFileTypeOfficeFiles	= 2,
	msoFileTypeWordDocuments	= 3,
	msoFileTypeExcelWorkbooks	= 4,
	msoFileTypePowerPointPresentations	= 5,
	msoFileTypeBinders	= 6,
	msoFileTypeDatabases	= 7,
	msoFileTypeTemplates	= 8,
	msoFileTypeOutlookItems	= 9,
	msoFileTypeMailItem	= 10,
	msoFileTypeCalendarItem	= 11,
	msoFileTypeContactItem	= 12,
	msoFileTypeNoteItem	= 13,
	msoFileTypeJournalItem	= 14,
	msoFileTypeTaskItem	= 15,
	msoFileTypePhotoDrawFiles	= 16,
	msoFileTypeDataConnectionFiles	= 17,
	msoFileTypePublisherFiles	= 18,
	msoFileTypeProjectFiles	= 19,
	msoFileTypeDocumentImagingFiles	= 20,
	msoFileTypeVisioFiles	= 21,
	msoFileTypeDesignerFiles	= 22,
	msoFileTypeWebPages	= 23
    } 	MsoFileType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0049_0001
    {	msoLanguageIDMixed	= 0xfffffffe,
	msoLanguageIDNone	= 0,
	msoLanguageIDNoProofing	= 1024,
	msoLanguageIDAfrikaans	= 1078,
	msoLanguageIDAlbanian	= 1052,
	msoLanguageIDAmharic	= 1118,
	msoLanguageIDArabicAlgeria	= 5121,
	msoLanguageIDArabicBahrain	= 15361,
	msoLanguageIDArabicEgypt	= 3073,
	msoLanguageIDArabicIraq	= 2049,
	msoLanguageIDArabicJordan	= 11265,
	msoLanguageIDArabicKuwait	= 13313,
	msoLanguageIDArabicLebanon	= 12289,
	msoLanguageIDArabicLibya	= 4097,
	msoLanguageIDArabicMorocco	= 6145,
	msoLanguageIDArabicOman	= 8193,
	msoLanguageIDArabicQatar	= 16385,
	msoLanguageIDArabic	= 1025,
	msoLanguageIDArabicSyria	= 10241,
	msoLanguageIDArabicTunisia	= 7169,
	msoLanguageIDArabicUAE	= 14337,
	msoLanguageIDArabicYemen	= 9217,
	msoLanguageIDArmenian	= 1067,
	msoLanguageIDAssamese	= 1101,
	msoLanguageIDAzeriCyrillic	= 2092,
	msoLanguageIDAzeriLatin	= 1068,
	msoLanguageIDBasque	= 1069,
	msoLanguageIDByelorussian	= 1059,
	msoLanguageIDBengali	= 1093,
	msoLanguageIDBosnian	= 4122,
	msoLanguageIDBosnianBosniaHerzegovinaCyrillic	= 8218,
	msoLanguageIDBosnianBosniaHerzegovinaLatin	= 5146,
	msoLanguageIDBulgarian	= 1026,
	msoLanguageIDBurmese	= 1109,
	msoLanguageIDCatalan	= 1027,
	msoLanguageIDChineseHongKongSAR	= 3076,
	msoLanguageIDChineseMacaoSAR	= 5124,
	msoLanguageIDSimplifiedChinese	= 2052,
	msoLanguageIDChineseSingapore	= 4100,
	msoLanguageIDTraditionalChinese	= 1028,
	msoLanguageIDCherokee	= 1116,
	msoLanguageIDCroatian	= 1050,
	msoLanguageIDCzech	= 1029,
	msoLanguageIDDanish	= 1030,
	msoLanguageIDDivehi	= 1125,
	msoLanguageIDBelgianDutch	= 2067,
	msoLanguageIDDutch	= 1043,
	msoLanguageIDDzongkhaBhutan	= 2129,
	msoLanguageIDEdo	= 1126,
	msoLanguageIDEnglishAUS	= 3081,
	msoLanguageIDEnglishBelize	= 10249,
	msoLanguageIDEnglishCanadian	= 4105,
	msoLanguageIDEnglishCaribbean	= 9225,
	msoLanguageIDEnglishIndonesia	= 14345,
	msoLanguageIDEnglishIreland	= 6153,
	msoLanguageIDEnglishJamaica	= 8201,
	msoLanguageIDEnglishNewZealand	= 5129,
	msoLanguageIDEnglishPhilippines	= 13321,
	msoLanguageIDEnglishSouthAfrica	= 7177,
	msoLanguageIDEnglishTrinidadTobago	= 11273,
	msoLanguageIDEnglishUK	= 2057,
	msoLanguageIDEnglishUS	= 1033,
	msoLanguageIDEnglishZimbabwe	= 12297,
	msoLanguageIDEstonian	= 1061,
	msoLanguageIDFaeroese	= 1080,
	msoLanguageIDFarsi	= 1065,
	msoLanguageIDFilipino	= 1124,
	msoLanguageIDFinnish	= 1035,
	msoLanguageIDBelgianFrench	= 2060,
	msoLanguageIDFrenchCameroon	= 11276,
	msoLanguageIDFrenchCanadian	= 3084,
	msoLanguageIDFrenchCotedIvoire	= 12300,
	msoLanguageIDFrench	= 1036,
	msoLanguageIDFrenchHaiti	= 15372,
	msoLanguageIDFrenchLuxembourg	= 5132,
	msoLanguageIDFrenchMali	= 13324,
	msoLanguageIDFrenchMonaco	= 6156,
	msoLanguageIDFrenchMorocco	= 14348,
	msoLanguageIDFrenchReunion	= 8204,
	msoLanguageIDFrenchSenegal	= 10252,
	msoLanguageIDSwissFrench	= 4108,
	msoLanguageIDFrenchWestIndies	= 7180,
	msoLanguageIDFrenchZaire	= 9228,
	msoLanguageIDFrisianNetherlands	= 1122,
	msoLanguageIDFulfulde	= 1127,
	msoLanguageIDGaelicIreland	= 2108,
	msoLanguageIDGaelicScotland	= 1084,
	msoLanguageIDGalician	= 1110,
	msoLanguageIDGeorgian	= 1079,
	msoLanguageIDGermanAustria	= 3079,
	msoLanguageIDGerman	= 1031,
	msoLanguageIDGermanLiechtenstein	= 5127,
	msoLanguageIDGermanLuxembourg	= 4103,
	msoLanguageIDSwissGerman	= 2055,
	msoLanguageIDGreek	= 1032,
	msoLanguageIDGuarani	= 1140,
	msoLanguageIDGujarati	= 1095,
	msoLanguageIDHausa	= 1128,
	msoLanguageIDHawaiian	= 1141,
	msoLanguageIDHebrew	= 1037,
	msoLanguageIDHindi	= 1081,
	msoLanguageIDHungarian	= 1038,
	msoLanguageIDIbibio	= 1129,
	msoLanguageIDIcelandic	= 1039,
	msoLanguageIDIgbo	= 1136,
	msoLanguageIDIndonesian	= 1057,
	msoLanguageIDInuktitut	= 1117,
	msoLanguageIDItalian	= 1040,
	msoLanguageIDSwissItalian	= 2064,
	msoLanguageIDJapanese	= 1041,
	msoLanguageIDKannada	= 1099,
	msoLanguageIDKanuri	= 1137,
	msoLanguageIDKashmiri	= 1120,
	msoLanguageIDKashmiriDevanagari	= 2144,
	msoLanguageIDKazakh	= 1087,
	msoLanguageIDKhmer	= 1107,
	msoLanguageIDKirghiz	= 1088,
	msoLanguageIDKonkani	= 1111,
	msoLanguageIDKorean	= 1042,
	msoLanguageIDKyrgyz	= 1088,
	msoLanguageIDLatin	= 1142,
	msoLanguageIDLao	= 1108,
	msoLanguageIDLatvian	= 1062,
	msoLanguageIDLithuanian	= 1063,
	msoLanguageIDMacedonian	= 1071,
	msoLanguageIDMalaysian	= 1086,
	msoLanguageIDMalayBruneiDarussalam	= 2110,
	msoLanguageIDMalayalam	= 1100,
	msoLanguageIDMaltese	= 1082,
	msoLanguageIDManipuri	= 1112,
	msoLanguageIDMaori	= 1153,
	msoLanguageIDMarathi	= 1102,
	msoLanguageIDMongolian	= 1104,
	msoLanguageIDNepali	= 1121,
	msoLanguageIDNorwegianBokmol	= 1044,
	msoLanguageIDNorwegianNynorsk	= 2068,
	msoLanguageIDOriya	= 1096,
	msoLanguageIDOromo	= 1138,
	msoLanguageIDPashto	= 1123,
	msoLanguageIDPolish	= 1045,
	msoLanguageIDBrazilianPortuguese	= 1046,
	msoLanguageIDPortuguese	= 2070,
	msoLanguageIDPunjabi	= 1094,
	msoLanguageIDQuechuaBolivia	= 1131,
	msoLanguageIDQuechuaEcuador	= 2155,
	msoLanguageIDQuechuaPeru	= 3179,
	msoLanguageIDRhaetoRomanic	= 1047,
	msoLanguageIDRomanianMoldova	= 2072,
	msoLanguageIDRomanian	= 1048,
	msoLanguageIDRussianMoldova	= 2073,
	msoLanguageIDRussian	= 1049,
	msoLanguageIDSamiLappish	= 1083,
	msoLanguageIDSanskrit	= 1103,
	msoLanguageIDSepedi	= 1132,
	msoLanguageIDSerbianBosniaHerzegovinaCyrillic	= 7194,
	msoLanguageIDSerbianBosniaHerzegovinaLatin	= 6170,
	msoLanguageIDSerbianCyrillic	= 3098,
	msoLanguageIDSerbianLatin	= 2074,
	msoLanguageIDSesotho	= 1072,
	msoLanguageIDSindhi	= 1113,
	msoLanguageIDSindhiPakistan	= 2137,
	msoLanguageIDSinhalese	= 1115,
	msoLanguageIDSlovak	= 1051,
	msoLanguageIDSlovenian	= 1060,
	msoLanguageIDSomali	= 1143,
	msoLanguageIDSorbian	= 1070,
	msoLanguageIDSpanishArgentina	= 11274,
	msoLanguageIDSpanishBolivia	= 16394,
	msoLanguageIDSpanishChile	= 13322,
	msoLanguageIDSpanishColombia	= 9226,
	msoLanguageIDSpanishCostaRica	= 5130,
	msoLanguageIDSpanishDominicanRepublic	= 7178,
	msoLanguageIDSpanishEcuador	= 12298,
	msoLanguageIDSpanishElSalvador	= 17418,
	msoLanguageIDSpanishGuatemala	= 4106,
	msoLanguageIDSpanishHonduras	= 18442,
	msoLanguageIDMexicanSpanish	= 2058,
	msoLanguageIDSpanishNicaragua	= 19466,
	msoLanguageIDSpanishPanama	= 6154,
	msoLanguageIDSpanishParaguay	= 15370,
	msoLanguageIDSpanishPeru	= 10250,
	msoLanguageIDSpanishPuertoRico	= 20490,
	msoLanguageIDSpanishModernSort	= 3082,
	msoLanguageIDSpanish	= 1034,
	msoLanguageIDSpanishUruguay	= 14346,
	msoLanguageIDSpanishVenezuela	= 8202,
	msoLanguageIDSutu	= 1072,
	msoLanguageIDSwahili	= 1089,
	msoLanguageIDSwedishFinland	= 2077,
	msoLanguageIDSwedish	= 1053,
	msoLanguageIDSyriac	= 1114,
	msoLanguageIDTajik	= 1064,
	msoLanguageIDTamil	= 1097,
	msoLanguageIDTamazight	= 1119,
	msoLanguageIDTamazightLatin	= 2143,
	msoLanguageIDTatar	= 1092,
	msoLanguageIDTelugu	= 1098,
	msoLanguageIDThai	= 1054,
	msoLanguageIDTibetan	= 1105,
	msoLanguageIDTigrignaEthiopic	= 1139,
	msoLanguageIDTigrignaEritrea	= 2163,
	msoLanguageIDTsonga	= 1073,
	msoLanguageIDTswana	= 1074,
	msoLanguageIDTurkish	= 1055,
	msoLanguageIDTurkmen	= 1090,
	msoLanguageIDUkrainian	= 1058,
	msoLanguageIDUrdu	= 1056,
	msoLanguageIDUzbekCyrillic	= 2115,
	msoLanguageIDUzbekLatin	= 1091,
	msoLanguageIDVenda	= 1075,
	msoLanguageIDVietnamese	= 1066,
	msoLanguageIDWelsh	= 1106,
	msoLanguageIDXhosa	= 1076,
	msoLanguageIDYi	= 1144,
	msoLanguageIDYiddish	= 1085,
	msoLanguageIDYoruba	= 1130,
	msoLanguageIDZulu	= 1077
    } 	MsoLanguageID;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0056_0001
    {	msoScreenSize544x376	= 0,
	msoScreenSize640x480	= 1,
	msoScreenSize720x512	= 2,
	msoScreenSize800x600	= 3,
	msoScreenSize1024x768	= 4,
	msoScreenSize1152x882	= 5,
	msoScreenSize1152x900	= 6,
	msoScreenSize1280x1024	= 7,
	msoScreenSize1600x1200	= 8,
	msoScreenSize1800x1440	= 9,
	msoScreenSize1920x1200	= 10
    } 	MsoScreenSize;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0056_0002
    {	msoCharacterSetArabic	= 1,
	msoCharacterSetCyrillic	= 2,
	msoCharacterSetEnglishWesternEuropeanOtherLatinScript	= 3,
	msoCharacterSetGreek	= 4,
	msoCharacterSetHebrew	= 5,
	msoCharacterSetJapanese	= 6,
	msoCharacterSetKorean	= 7,
	msoCharacterSetMultilingualUnicode	= 8,
	msoCharacterSetSimplifiedChinese	= 9,
	msoCharacterSetThai	= 10,
	msoCharacterSetTraditionalChinese	= 11,
	msoCharacterSetVietnamese	= 12
    } 	MsoCharacterSet;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0056_0003
    {	msoEncodingThai	= 874,
	msoEncodingJapaneseShiftJIS	= 932,
	msoEncodingSimplifiedChineseGBK	= 936,
	msoEncodingKorean	= 949,
	msoEncodingTraditionalChineseBig5	= 950,
	msoEncodingUnicodeLittleEndian	= 1200,
	msoEncodingUnicodeBigEndian	= 1201,
	msoEncodingCentralEuropean	= 1250,
	msoEncodingCyrillic	= 1251,
	msoEncodingWestern	= 1252,
	msoEncodingGreek	= 1253,
	msoEncodingTurkish	= 1254,
	msoEncodingHebrew	= 1255,
	msoEncodingArabic	= 1256,
	msoEncodingBaltic	= 1257,
	msoEncodingVietnamese	= 1258,
	msoEncodingAutoDetect	= 50001,
	msoEncodingJapaneseAutoDetect	= 50932,
	msoEncodingSimplifiedChineseAutoDetect	= 50936,
	msoEncodingKoreanAutoDetect	= 50949,
	msoEncodingTraditionalChineseAutoDetect	= 50950,
	msoEncodingCyrillicAutoDetect	= 51251,
	msoEncodingGreekAutoDetect	= 51253,
	msoEncodingArabicAutoDetect	= 51256,
	msoEncodingISO88591Latin1	= 28591,
	msoEncodingISO88592CentralEurope	= 28592,
	msoEncodingISO88593Latin3	= 28593,
	msoEncodingISO88594Baltic	= 28594,
	msoEncodingISO88595Cyrillic	= 28595,
	msoEncodingISO88596Arabic	= 28596,
	msoEncodingISO88597Greek	= 28597,
	msoEncodingISO88598Hebrew	= 28598,
	msoEncodingISO88599Turkish	= 28599,
	msoEncodingISO885915Latin9	= 28605,
	msoEncodingISO88598HebrewLogical	= 38598,
	msoEncodingISO2022JPNoHalfwidthKatakana	= 50220,
	msoEncodingISO2022JPJISX02021984	= 50221,
	msoEncodingISO2022JPJISX02011989	= 50222,
	msoEncodingISO2022KR	= 50225,
	msoEncodingISO2022CNTraditionalChinese	= 50227,
	msoEncodingISO2022CNSimplifiedChinese	= 50229,
	msoEncodingMacRoman	= 10000,
	msoEncodingMacJapanese	= 10001,
	msoEncodingMacTraditionalChineseBig5	= 10002,
	msoEncodingMacKorean	= 10003,
	msoEncodingMacArabic	= 10004,
	msoEncodingMacHebrew	= 10005,
	msoEncodingMacGreek1	= 10006,
	msoEncodingMacCyrillic	= 10007,
	msoEncodingMacSimplifiedChineseGB2312	= 10008,
	msoEncodingMacRomania	= 10010,
	msoEncodingMacUkraine	= 10017,
	msoEncodingMacLatin2	= 10029,
	msoEncodingMacIcelandic	= 10079,
	msoEncodingMacTurkish	= 10081,
	msoEncodingMacCroatia	= 10082,
	msoEncodingEBCDICUSCanada	= 37,
	msoEncodingEBCDICInternational	= 500,
	msoEncodingEBCDICMultilingualROECELatin2	= 870,
	msoEncodingEBCDICGreekModern	= 875,
	msoEncodingEBCDICTurkishLatin5	= 1026,
	msoEncodingEBCDICGermany	= 20273,
	msoEncodingEBCDICDenmarkNorway	= 20277,
	msoEncodingEBCDICFinlandSweden	= 20278,
	msoEncodingEBCDICItaly	= 20280,
	msoEncodingEBCDICLatinAmericaSpain	= 20284,
	msoEncodingEBCDICUnitedKingdom	= 20285,
	msoEncodingEBCDICJapaneseKatakanaExtended	= 20290,
	msoEncodingEBCDICFrance	= 20297,
	msoEncodingEBCDICArabic	= 20420,
	msoEncodingEBCDICGreek	= 20423,
	msoEncodingEBCDICHebrew	= 20424,
	msoEncodingEBCDICKoreanExtended	= 20833,
	msoEncodingEBCDICThai	= 20838,
	msoEncodingEBCDICIcelandic	= 20871,
	msoEncodingEBCDICTurkish	= 20905,
	msoEncodingEBCDICRussian	= 20880,
	msoEncodingEBCDICSerbianBulgarian	= 21025,
	msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese	= 50930,
	msoEncodingEBCDICUSCanadaAndJapanese	= 50931,
	msoEncodingEBCDICKoreanExtendedAndKorean	= 50933,
	msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese	= 50935,
	msoEncodingEBCDICUSCanadaAndTraditionalChinese	= 50937,
	msoEncodingEBCDICJapaneseLatinExtendedAndJapanese	= 50939,
	msoEncodingOEMUnitedStates	= 437,
	msoEncodingOEMGreek437G	= 737,
	msoEncodingOEMBaltic	= 775,
	msoEncodingOEMMultilingualLatinI	= 850,
	msoEncodingOEMMultilingualLatinII	= 852,
	msoEncodingOEMCyrillic	= 855,
	msoEncodingOEMTurkish	= 857,
	msoEncodingOEMPortuguese	= 860,
	msoEncodingOEMIcelandic	= 861,
	msoEncodingOEMHebrew	= 862,
	msoEncodingOEMCanadianFrench	= 863,
	msoEncodingOEMArabic	= 864,
	msoEncodingOEMNordic	= 865,
	msoEncodingOEMCyrillicII	= 866,
	msoEncodingOEMModernGreek	= 869,
	msoEncodingEUCJapanese	= 51932,
	msoEncodingEUCChineseSimplifiedChinese	= 51936,
	msoEncodingEUCKorean	= 51949,
	msoEncodingEUCTaiwaneseTraditionalChinese	= 51950,
	msoEncodingISCIIDevanagari	= 57002,
	msoEncodingISCIIBengali	= 57003,
	msoEncodingISCIITamil	= 57004,
	msoEncodingISCIITelugu	= 57005,
	msoEncodingISCIIAssamese	= 57006,
	msoEncodingISCIIOriya	= 57007,
	msoEncodingISCIIKannada	= 57008,
	msoEncodingISCIIMalayalam	= 57009,
	msoEncodingISCIIGujarati	= 57010,
	msoEncodingISCIIPunjabi	= 57011,
	msoEncodingArabicASMO	= 708,
	msoEncodingArabicTransparentASMO	= 720,
	msoEncodingKoreanJohab	= 1361,
	msoEncodingTaiwanCNS	= 20000,
	msoEncodingTaiwanTCA	= 20001,
	msoEncodingTaiwanEten	= 20002,
	msoEncodingTaiwanIBM5550	= 20003,
	msoEncodingTaiwanTeleText	= 20004,
	msoEncodingTaiwanWang	= 20005,
	msoEncodingIA5IRV	= 20105,
	msoEncodingIA5German	= 20106,
	msoEncodingIA5Swedish	= 20107,
	msoEncodingIA5Norwegian	= 20108,
	msoEncodingUSASCII	= 20127,
	msoEncodingT61	= 20261,
	msoEncodingISO6937NonSpacingAccent	= 20269,
	msoEncodingKOI8R	= 20866,
	msoEncodingExtAlphaLowercase	= 21027,
	msoEncodingKOI8U	= 21866,
	msoEncodingEuropa3	= 29001,
	msoEncodingHZGBSimplifiedChinese	= 52936,
	msoEncodingSimplifiedChineseGB18030	= 54936,
	msoEncodingUTF7	= 65000,
	msoEncodingUTF8	= 65001
    } 	MsoEncoding;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0058_0001
    {	msoHTMLProjectOpenSourceView	= 1,
	msoHTMLProjectOpenTextView	= 2
    } 	MsoHTMLProjectOpen;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0058_0002
    {	msoHTMLProjectStateDocumentLocked	= 1,
	msoHTMLProjectStateProjectLocked	= 2,
	msoHTMLProjectStateDocumentProjectUnlocked	= 3
    } 	MsoHTMLProjectState;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0062_0001
    {	msoFileDialogOpen	= 1,
	msoFileDialogSaveAs	= 2,
	msoFileDialogFilePicker	= 3,
	msoFileDialogFolderPicker	= 4
    } 	MsoFileDialogType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0062_0002
    {	msoFileDialogViewList	= 1,
	msoFileDialogViewDetails	= 2,
	msoFileDialogViewProperties	= 3,
	msoFileDialogViewPreview	= 4,
	msoFileDialogViewThumbnail	= 5,
	msoFileDialogViewLargeIcons	= 6,
	msoFileDialogViewSmallIcons	= 7,
	msoFileDialogViewWebView	= 8,
	msoFileDialogViewTiles	= 9
    } 	MsoFileDialogView;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0066_0001
    {	msoAutomationSecurityLow	= 1,
	msoAutomationSecurityByUI	= 2,
	msoAutomationSecurityForceDisable	= 3
    } 	MsoAutomationSecurity;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0068_0001
    {	mfPlainText	= 1,
	mfHTML	= 2,
	mfRTF	= 3
    } 	MailFormat;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0070_0001
    {	msoSearchInMyComputer	= 0,
	msoSearchInOutlook	= 1,
	msoSearchInMyNetworkPlaces	= 2,
	msoSearchInCustom	= 3
    } 	MsoSearchIn;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0070_0002
    {	msoTargetBrowserV3	= 0,
	msoTargetBrowserV4	= 1,
	msoTargetBrowserIE4	= 2,
	msoTargetBrowserIE5	= 3,
	msoTargetBrowserIE6	= 4
    } 	MsoTargetBrowser;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0076_0001
    {	msoOrgChartOrientationMixed	= 0xfffffffe,
	msoOrgChartOrientationVertical	= 1
    } 	MsoOrgChartOrientation;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0076_0002
    {	msoOrgChartLayoutMixed	= 0xfffffffe,
	msoOrgChartLayoutStandard	= 1,
	msoOrgChartLayoutBothHanging	= 2,
	msoOrgChartLayoutLeftHanging	= 3,
	msoOrgChartLayoutRightHanging	= 4
    } 	MsoOrgChartLayoutType;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0076_0003
    {	msoBeforeNode	= 1,
	msoAfterNode	= 2,
	msoBeforeFirstSibling	= 3,
	msoAfterLastSibling	= 4
    } 	MsoRelativeNodePosition;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0076_0004
    {	msoDiagramNode	= 1,
	msoDiagramAssistant	= 2
    } 	MsoDiagramNodeType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0081_0001
    {	msoMoveRowFirst	= 0xfffffffc,
	msoMoveRowPrev	= 0xfffffffd,
	msoMoveRowNext	= 0xfffffffe,
	msoMoveRowNbr	= 0xffffffff
    } 	MsoMoveRow;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0084_0001
    {	msoFilterComparisonEqual	= 0,
	msoFilterComparisonNotEqual	= 1,
	msoFilterComparisonLessThan	= 2,
	msoFilterComparisonGreaterThan	= 3,
	msoFilterComparisonLessThanEqual	= 4,
	msoFilterComparisonGreaterThanEqual	= 5,
	msoFilterComparisonIsBlank	= 6,
	msoFilterComparisonIsNotBlank	= 7,
	msoFilterComparisonContains	= 8,
	msoFilterComparisonNotContains	= 9
    } 	MsoFilterComparison;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0084_0002
    {	msoFilterConjunctionAnd	= 0,
	msoFilterConjunctionOr	= 1
    } 	MsoFilterConjunction;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0086_0001
    {	msoOpenDocument	= 0,
	msoNew	= 1,
	msoNewfromExistingFile	= 2,
	msoNewfromTemplate	= 3,
	msoBottomSection	= 4
    } 	MsoFileNewSection;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0086_0002
    {	msoEditFile	= 0,
	msoCreateNewFile	= 1,
	msoOpenFile	= 2
    } 	MsoFileNewAction;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0090_0001
    {	msoLanguageIDChineseHongKong	= 3076,
	msoLanguageIDChineseMacao	= 5124,
	msoLanguageIDEnglishTrinidad	= 11273
    } 	MsoLanguageIDHidden;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0098_0001
    {	msoSharedWorkspaceTaskStatusNotStarted	= 1,
	msoSharedWorkspaceTaskStatusInProgress	= 2,
	msoSharedWorkspaceTaskStatusCompleted	= 3,
	msoSharedWorkspaceTaskStatusDeferred	= 4,
	msoSharedWorkspaceTaskStatusWaiting	= 5
    } 	MsoSharedWorkspaceTaskStatus;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0098_0002
    {	msoSharedWorkspaceTaskPriorityHigh	= 1,
	msoSharedWorkspaceTaskPriorityNormal	= 2,
	msoSharedWorkspaceTaskPriorityLow	= 3
    } 	MsoSharedWorkspaceTaskPriority;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0107_0001
    {	msoSyncVersionLastViewed	= 0,
	msoSyncVersionServer	= 1
    } 	MsoSyncVersionType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0107_0002
    {	msoSyncConflictClientWins	= 0,
	msoSyncConflictServerWins	= 1,
	msoSyncConflictMerge	= 2
    } 	MsoSyncConflictResolutionType;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0107_0003
    {	msoSyncCompareAndMerge	= 0,
	msoSyncCompareSideBySide	= 1
    } 	MsoSyncCompareType;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0107_0004
    {	msoSyncAvailableNone	= 0,
	msoSyncAvailableOffline	= 1,
	msoSyncAvailableAnywhere	= 2
    } 	MsoSyncAvailableType;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0107_0005
    {	msoSyncEventDownloadInitiated	= 0,
	msoSyncEventDownloadSucceeded	= 1,
	msoSyncEventDownloadFailed	= 2,
	msoSyncEventUploadInitiated	= 3,
	msoSyncEventUploadSucceeded	= 4,
	msoSyncEventUploadFailed	= 5,
	msoSyncEventDownloadNoChange	= 6,
	msoSyncEventOffline	= 7
    } 	MsoSyncEventType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0107_0006
    {	msoSyncErrorNone	= 0,
	msoSyncErrorUnauthorizedUser	= 1,
	msoSyncErrorCouldNotConnect	= 2,
	msoSyncErrorOutOfSpace	= 3,
	msoSyncErrorFileNotFound	= 4,
	msoSyncErrorFileTooLarge	= 5,
	msoSyncErrorFileInUse	= 6,
	msoSyncErrorVirusUpload	= 7,
	msoSyncErrorVirusDownload	= 8,
	msoSyncErrorUnknownUpload	= 9,
	msoSyncErrorUnknownDownload	= 10,
	msoSyncErrorCouldNotOpen	= 11,
	msoSyncErrorCouldNotUpdate	= 12,
	msoSyncErrorCouldNotCompare	= 13,
	msoSyncErrorCouldNotResolve	= 14,
	msoSyncErrorNoNetwork	= 15,
	msoSyncErrorUnknown	= 16
    } 	MsoSyncErrorType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0107_0007
    {	msoSyncStatusNoSharedWorkspace	= 0,
	msoSyncStatusLatest	= 1,
	msoSyncStatusNewerAvailable	= 2,
	msoSyncStatusLocalChanges	= 3,
	msoSyncStatusConflict	= 4,
	msoSyncStatusSuspended	= 5,
	msoSyncStatusError	= 6
    } 	MsoSyncStatusType;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_MSO_0001_0110_0001
    {	msoPermissionView	= 1,
	msoPermissionRead	= 1,
	msoPermissionEdit	= 2,
	msoPermissionSave	= 4,
	msoPermissionExtract	= 8,
	msoPermissionChange	= 15,
	msoPermissionPrint	= 16,
	msoPermissionObjModel	= 32,
	msoPermissionFullControl	= 64
    } 	MsoPermission;


EXTERN_C const IID LIBID_Office;

#ifndef __IAccessible_INTERFACE_DEFINED__
#define __IAccessible_INTERFACE_DEFINED__

/* interface IAccessible */
/* [object][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID_IAccessible;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("618736E0-3C3D-11CF-810C-00AA00389B71")
    IAccessible : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accParent( 
            /* [retval][out] */ IDispatch **ppdispParent) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accChildCount( 
            /* [retval][out] */ long *pcountChildren) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accChild( 
            /* [in] */ VARIANT varChild,
            /* [retval][out] */ IDispatch **ppdispChild) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accName( 
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszName) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accValue( 
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszValue) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accDescription( 
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDescription) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accRole( 
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarRole) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accState( 
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarState) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accHelp( 
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszHelp) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accHelpTopic( 
            /* [out] */ BSTR *pszHelpFile,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ long *pidTopic) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accKeyboardShortcut( 
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszKeyboardShortcut) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accFocus( 
            /* [retval][out] */ VARIANT *pvarChild) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accSelection( 
            /* [retval][out] */ VARIANT *pvarChildren) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_accDefaultAction( 
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDefaultAction) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE accSelect( 
            /* [in] */ long flagsSelect,
            /* [optional][in] */ VARIANT varChild) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE accLocation( 
            /* [out] */ long *pxLeft,
            /* [out] */ long *pyTop,
            /* [out] */ long *pcxWidth,
            /* [out] */ long *pcyHeight,
            /* [optional][in] */ VARIANT varChild) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE accNavigate( 
            /* [in] */ long navDir,
            /* [optional][in] */ VARIANT varStart,
            /* [retval][out] */ VARIANT *pvarEndUpAt) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE accHitTest( 
            /* [in] */ long xLeft,
            /* [in] */ long yTop,
            /* [retval][out] */ VARIANT *pvarChild) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE accDoDefaultAction( 
            /* [optional][in] */ VARIANT varChild) = 0;
        
        virtual /* [hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_accName( 
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszName) = 0;
        
        virtual /* [hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_accValue( 
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAccessibleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAccessible * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAccessible * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAccessible * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAccessible * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAccessible * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAccessible * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAccessible * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accParent )( 
            IAccessible * This,
            /* [retval][out] */ IDispatch **ppdispParent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChildCount )( 
            IAccessible * This,
            /* [retval][out] */ long *pcountChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChild )( 
            IAccessible * This,
            /* [in] */ VARIANT varChild,
            /* [retval][out] */ IDispatch **ppdispChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accName )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszName);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accValue )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszValue);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDescription )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDescription);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accRole )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarRole);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accState )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarState);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelp )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszHelp);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelpTopic )( 
            IAccessible * This,
            /* [out] */ BSTR *pszHelpFile,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ long *pidTopic);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accKeyboardShortcut )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszKeyboardShortcut);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accFocus )( 
            IAccessible * This,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accSelection )( 
            IAccessible * This,
            /* [retval][out] */ VARIANT *pvarChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDefaultAction )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDefaultAction);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accSelect )( 
            IAccessible * This,
            /* [in] */ long flagsSelect,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accLocation )( 
            IAccessible * This,
            /* [out] */ long *pxLeft,
            /* [out] */ long *pyTop,
            /* [out] */ long *pcxWidth,
            /* [out] */ long *pcyHeight,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accNavigate )( 
            IAccessible * This,
            /* [in] */ long navDir,
            /* [optional][in] */ VARIANT varStart,
            /* [retval][out] */ VARIANT *pvarEndUpAt);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accHitTest )( 
            IAccessible * This,
            /* [in] */ long xLeft,
            /* [in] */ long yTop,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accDoDefaultAction )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accName )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszName);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accValue )( 
            IAccessible * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszValue);
        
        END_INTERFACE
    } IAccessibleVtbl;

    interface IAccessible
    {
        CONST_VTBL struct IAccessibleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAccessible_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAccessible_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAccessible_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAccessible_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAccessible_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAccessible_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAccessible_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAccessible_get_accParent(This,ppdispParent)	\
    ( (This)->lpVtbl -> get_accParent(This,ppdispParent) ) 

#define IAccessible_get_accChildCount(This,pcountChildren)	\
    ( (This)->lpVtbl -> get_accChildCount(This,pcountChildren) ) 

#define IAccessible_get_accChild(This,varChild,ppdispChild)	\
    ( (This)->lpVtbl -> get_accChild(This,varChild,ppdispChild) ) 

#define IAccessible_get_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> get_accName(This,varChild,pszName) ) 

#define IAccessible_get_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> get_accValue(This,varChild,pszValue) ) 

#define IAccessible_get_accDescription(This,varChild,pszDescription)	\
    ( (This)->lpVtbl -> get_accDescription(This,varChild,pszDescription) ) 

#define IAccessible_get_accRole(This,varChild,pvarRole)	\
    ( (This)->lpVtbl -> get_accRole(This,varChild,pvarRole) ) 

#define IAccessible_get_accState(This,varChild,pvarState)	\
    ( (This)->lpVtbl -> get_accState(This,varChild,pvarState) ) 

#define IAccessible_get_accHelp(This,varChild,pszHelp)	\
    ( (This)->lpVtbl -> get_accHelp(This,varChild,pszHelp) ) 

#define IAccessible_get_accHelpTopic(This,pszHelpFile,varChild,pidTopic)	\
    ( (This)->lpVtbl -> get_accHelpTopic(This,pszHelpFile,varChild,pidTopic) ) 

#define IAccessible_get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut)	\
    ( (This)->lpVtbl -> get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut) ) 

#define IAccessible_get_accFocus(This,pvarChild)	\
    ( (This)->lpVtbl -> get_accFocus(This,pvarChild) ) 

#define IAccessible_get_accSelection(This,pvarChildren)	\
    ( (This)->lpVtbl -> get_accSelection(This,pvarChildren) ) 

#define IAccessible_get_accDefaultAction(This,varChild,pszDefaultAction)	\
    ( (This)->lpVtbl -> get_accDefaultAction(This,varChild,pszDefaultAction) ) 

#define IAccessible_accSelect(This,flagsSelect,varChild)	\
    ( (This)->lpVtbl -> accSelect(This,flagsSelect,varChild) ) 

#define IAccessible_accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild)	\
    ( (This)->lpVtbl -> accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild) ) 

#define IAccessible_accNavigate(This,navDir,varStart,pvarEndUpAt)	\
    ( (This)->lpVtbl -> accNavigate(This,navDir,varStart,pvarEndUpAt) ) 

#define IAccessible_accHitTest(This,xLeft,yTop,pvarChild)	\
    ( (This)->lpVtbl -> accHitTest(This,xLeft,yTop,pvarChild) ) 

#define IAccessible_accDoDefaultAction(This,varChild)	\
    ( (This)->lpVtbl -> accDoDefaultAction(This,varChild) ) 

#define IAccessible_put_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> put_accName(This,varChild,pszName) ) 

#define IAccessible_put_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> put_accValue(This,varChild,pszValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAccessible_INTERFACE_DEFINED__ */


#ifndef ___IMsoDispObj_INTERFACE_DEFINED__
#define ___IMsoDispObj_INTERFACE_DEFINED__

/* interface _IMsoDispObj */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IMsoDispObj;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0300-0000-0000-C000-000000000046")
    _IMsoDispObj : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Creator( 
            /* [retval][out] */ long *plCreator) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _IMsoDispObjVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IMsoDispObj * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IMsoDispObj * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IMsoDispObj * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IMsoDispObj * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IMsoDispObj * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IMsoDispObj * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IMsoDispObj * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _IMsoDispObj * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _IMsoDispObj * This,
            /* [retval][out] */ long *plCreator);
        
        END_INTERFACE
    } _IMsoDispObjVtbl;

    interface _IMsoDispObj
    {
        CONST_VTBL struct _IMsoDispObjVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IMsoDispObj_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IMsoDispObj_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IMsoDispObj_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IMsoDispObj_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IMsoDispObj_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IMsoDispObj_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IMsoDispObj_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _IMsoDispObj_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define _IMsoDispObj_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IMsoDispObj_INTERFACE_DEFINED__ */


#ifndef ___IMsoOleAccDispObj_INTERFACE_DEFINED__
#define ___IMsoOleAccDispObj_INTERFACE_DEFINED__

/* interface _IMsoOleAccDispObj */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IMsoOleAccDispObj;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0301-0000-0000-C000-000000000046")
    _IMsoOleAccDispObj : public IAccessible
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Creator( 
            /* [retval][out] */ long *plCreator) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _IMsoOleAccDispObjVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IMsoOleAccDispObj * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IMsoOleAccDispObj * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IMsoOleAccDispObj * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IMsoOleAccDispObj * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IMsoOleAccDispObj * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IMsoOleAccDispObj * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IMsoOleAccDispObj * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accParent )( 
            _IMsoOleAccDispObj * This,
            /* [retval][out] */ IDispatch **ppdispParent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChildCount )( 
            _IMsoOleAccDispObj * This,
            /* [retval][out] */ long *pcountChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChild )( 
            _IMsoOleAccDispObj * This,
            /* [in] */ VARIANT varChild,
            /* [retval][out] */ IDispatch **ppdispChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accName )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszName);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accValue )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszValue);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDescription )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDescription);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accRole )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarRole);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accState )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarState);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelp )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszHelp);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelpTopic )( 
            _IMsoOleAccDispObj * This,
            /* [out] */ BSTR *pszHelpFile,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ long *pidTopic);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accKeyboardShortcut )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszKeyboardShortcut);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accFocus )( 
            _IMsoOleAccDispObj * This,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accSelection )( 
            _IMsoOleAccDispObj * This,
            /* [retval][out] */ VARIANT *pvarChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDefaultAction )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDefaultAction);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accSelect )( 
            _IMsoOleAccDispObj * This,
            /* [in] */ long flagsSelect,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accLocation )( 
            _IMsoOleAccDispObj * This,
            /* [out] */ long *pxLeft,
            /* [out] */ long *pyTop,
            /* [out] */ long *pcxWidth,
            /* [out] */ long *pcyHeight,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accNavigate )( 
            _IMsoOleAccDispObj * This,
            /* [in] */ long navDir,
            /* [optional][in] */ VARIANT varStart,
            /* [retval][out] */ VARIANT *pvarEndUpAt);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accHitTest )( 
            _IMsoOleAccDispObj * This,
            /* [in] */ long xLeft,
            /* [in] */ long yTop,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accDoDefaultAction )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accName )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszName);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accValue )( 
            _IMsoOleAccDispObj * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _IMsoOleAccDispObj * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _IMsoOleAccDispObj * This,
            /* [retval][out] */ long *plCreator);
        
        END_INTERFACE
    } _IMsoOleAccDispObjVtbl;

    interface _IMsoOleAccDispObj
    {
        CONST_VTBL struct _IMsoOleAccDispObjVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IMsoOleAccDispObj_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IMsoOleAccDispObj_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IMsoOleAccDispObj_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IMsoOleAccDispObj_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IMsoOleAccDispObj_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IMsoOleAccDispObj_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IMsoOleAccDispObj_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _IMsoOleAccDispObj_get_accParent(This,ppdispParent)	\
    ( (This)->lpVtbl -> get_accParent(This,ppdispParent) ) 

#define _IMsoOleAccDispObj_get_accChildCount(This,pcountChildren)	\
    ( (This)->lpVtbl -> get_accChildCount(This,pcountChildren) ) 

#define _IMsoOleAccDispObj_get_accChild(This,varChild,ppdispChild)	\
    ( (This)->lpVtbl -> get_accChild(This,varChild,ppdispChild) ) 

#define _IMsoOleAccDispObj_get_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> get_accName(This,varChild,pszName) ) 

#define _IMsoOleAccDispObj_get_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> get_accValue(This,varChild,pszValue) ) 

#define _IMsoOleAccDispObj_get_accDescription(This,varChild,pszDescription)	\
    ( (This)->lpVtbl -> get_accDescription(This,varChild,pszDescription) ) 

#define _IMsoOleAccDispObj_get_accRole(This,varChild,pvarRole)	\
    ( (This)->lpVtbl -> get_accRole(This,varChild,pvarRole) ) 

#define _IMsoOleAccDispObj_get_accState(This,varChild,pvarState)	\
    ( (This)->lpVtbl -> get_accState(This,varChild,pvarState) ) 

#define _IMsoOleAccDispObj_get_accHelp(This,varChild,pszHelp)	\
    ( (This)->lpVtbl -> get_accHelp(This,varChild,pszHelp) ) 

#define _IMsoOleAccDispObj_get_accHelpTopic(This,pszHelpFile,varChild,pidTopic)	\
    ( (This)->lpVtbl -> get_accHelpTopic(This,pszHelpFile,varChild,pidTopic) ) 

#define _IMsoOleAccDispObj_get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut)	\
    ( (This)->lpVtbl -> get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut) ) 

#define _IMsoOleAccDispObj_get_accFocus(This,pvarChild)	\
    ( (This)->lpVtbl -> get_accFocus(This,pvarChild) ) 

#define _IMsoOleAccDispObj_get_accSelection(This,pvarChildren)	\
    ( (This)->lpVtbl -> get_accSelection(This,pvarChildren) ) 

#define _IMsoOleAccDispObj_get_accDefaultAction(This,varChild,pszDefaultAction)	\
    ( (This)->lpVtbl -> get_accDefaultAction(This,varChild,pszDefaultAction) ) 

#define _IMsoOleAccDispObj_accSelect(This,flagsSelect,varChild)	\
    ( (This)->lpVtbl -> accSelect(This,flagsSelect,varChild) ) 

#define _IMsoOleAccDispObj_accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild)	\
    ( (This)->lpVtbl -> accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild) ) 

#define _IMsoOleAccDispObj_accNavigate(This,navDir,varStart,pvarEndUpAt)	\
    ( (This)->lpVtbl -> accNavigate(This,navDir,varStart,pvarEndUpAt) ) 

#define _IMsoOleAccDispObj_accHitTest(This,xLeft,yTop,pvarChild)	\
    ( (This)->lpVtbl -> accHitTest(This,xLeft,yTop,pvarChild) ) 

#define _IMsoOleAccDispObj_accDoDefaultAction(This,varChild)	\
    ( (This)->lpVtbl -> accDoDefaultAction(This,varChild) ) 

#define _IMsoOleAccDispObj_put_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> put_accName(This,varChild,pszName) ) 

#define _IMsoOleAccDispObj_put_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> put_accValue(This,varChild,pszValue) ) 


#define _IMsoOleAccDispObj_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define _IMsoOleAccDispObj_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IMsoOleAccDispObj_INTERFACE_DEFINED__ */


#ifndef ___CommandBars_INTERFACE_DEFINED__
#define ___CommandBars_INTERFACE_DEFINED__

/* interface _CommandBars */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__CommandBars;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0302-0000-0000-C000-000000000046")
    _CommandBars : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActionControl( 
            /* [retval][out] */ CommandBarControl **ppcbc) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveMenuBar( 
            /* [retval][out] */ CommandBar **ppcb) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Position,
            /* [optional][in] */ VARIANT MenuBar,
            /* [optional][in] */ VARIANT Temporary,
            /* [retval][out] */ CommandBar **ppcb) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pcToolbars) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayTooltips( 
            /* [retval][out] */ VARIANT_BOOL *pvarfDisplayTooltips) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayTooltips( 
            /* [in] */ VARIANT_BOOL pvarfDisplayTooltips) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayKeysInTooltips( 
            /* [retval][out] */ VARIANT_BOOL *pvarfDisplayKeys) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayKeysInTooltips( 
            /* [in] */ VARIANT_BOOL pvarfDisplayKeys) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindControl( 
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Id,
            /* [optional][in] */ VARIANT Tag,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ CommandBarControl **ppcbc) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ CommandBar **ppcb) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LargeButtons( 
            /* [retval][out] */ VARIANT_BOOL *pvarfLargeButtons) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LargeButtons( 
            /* [in] */ VARIANT_BOOL pvarfLargeButtons) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MenuAnimationStyle( 
            /* [retval][out] */ MsoMenuAnimation *pma) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MenuAnimationStyle( 
            /* [in] */ MsoMenuAnimation pma) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReleaseFocus( void) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_IdsString( 
            /* [in] */ int ids,
            /* [out] */ BSTR *pbstrName,
            /* [retval][out] */ int *pcch) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_TmcGetName( 
            /* [in] */ int tmc,
            /* [out] */ BSTR *pbstrName,
            /* [retval][out] */ int *pcch) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AdaptiveMenus( 
            /* [retval][out] */ VARIANT_BOOL *pvarfAdaptiveMenus) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AdaptiveMenus( 
            /* [in] */ VARIANT_BOOL pvarfAdaptiveMenus) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindControls( 
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Id,
            /* [optional][in] */ VARIANT Tag,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ CommandBarControls **ppcbcs) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE AddEx( 
            /* [optional][in] */ VARIANT TbidOrName,
            /* [optional][in] */ VARIANT Position,
            /* [optional][in] */ VARIANT MenuBar,
            /* [optional][in] */ VARIANT Temporary,
            /* [optional][in] */ VARIANT TbtrProtection,
            /* [retval][out] */ CommandBar **ppcb) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayFonts( 
            /* [retval][out] */ VARIANT_BOOL *pvarfDisplayFonts) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayFonts( 
            /* [in] */ VARIANT_BOOL pvarfDisplayFonts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisableCustomize( 
            /* [retval][out] */ VARIANT_BOOL *pvarfDisableCustomize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisableCustomize( 
            /* [in] */ VARIANT_BOOL pvarfDisableCustomize) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisableAskAQuestionDropdown( 
            /* [retval][out] */ VARIANT_BOOL *pvarfDisableAskAQuestionDropdown) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisableAskAQuestionDropdown( 
            /* [in] */ VARIANT_BOOL pvarfDisableAskAQuestionDropdown) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _CommandBarsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CommandBars * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CommandBars * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CommandBars * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CommandBars * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CommandBars * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CommandBars * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CommandBars * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _CommandBars * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _CommandBars * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActionControl )( 
            _CommandBars * This,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveMenuBar )( 
            _CommandBars * This,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _CommandBars * This,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Position,
            /* [optional][in] */ VARIANT MenuBar,
            /* [optional][in] */ VARIANT Temporary,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _CommandBars * This,
            /* [retval][out] */ int *pcToolbars);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayTooltips )( 
            _CommandBars * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDisplayTooltips);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayTooltips )( 
            _CommandBars * This,
            /* [in] */ VARIANT_BOOL pvarfDisplayTooltips);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayKeysInTooltips )( 
            _CommandBars * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDisplayKeys);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayKeysInTooltips )( 
            _CommandBars * This,
            /* [in] */ VARIANT_BOOL pvarfDisplayKeys);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindControl )( 
            _CommandBars * This,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Id,
            /* [optional][in] */ VARIANT Tag,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            _CommandBars * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LargeButtons )( 
            _CommandBars * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfLargeButtons);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LargeButtons )( 
            _CommandBars * This,
            /* [in] */ VARIANT_BOOL pvarfLargeButtons);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MenuAnimationStyle )( 
            _CommandBars * This,
            /* [retval][out] */ MsoMenuAnimation *pma);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MenuAnimationStyle )( 
            _CommandBars * This,
            /* [in] */ MsoMenuAnimation pma);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            _CommandBars * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _CommandBars * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReleaseFocus )( 
            _CommandBars * This);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IdsString )( 
            _CommandBars * This,
            /* [in] */ int ids,
            /* [out] */ BSTR *pbstrName,
            /* [retval][out] */ int *pcch);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TmcGetName )( 
            _CommandBars * This,
            /* [in] */ int tmc,
            /* [out] */ BSTR *pbstrName,
            /* [retval][out] */ int *pcch);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AdaptiveMenus )( 
            _CommandBars * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfAdaptiveMenus);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AdaptiveMenus )( 
            _CommandBars * This,
            /* [in] */ VARIANT_BOOL pvarfAdaptiveMenus);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindControls )( 
            _CommandBars * This,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Id,
            /* [optional][in] */ VARIANT Tag,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ CommandBarControls **ppcbcs);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *AddEx )( 
            _CommandBars * This,
            /* [optional][in] */ VARIANT TbidOrName,
            /* [optional][in] */ VARIANT Position,
            /* [optional][in] */ VARIANT MenuBar,
            /* [optional][in] */ VARIANT Temporary,
            /* [optional][in] */ VARIANT TbtrProtection,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayFonts )( 
            _CommandBars * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDisplayFonts);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayFonts )( 
            _CommandBars * This,
            /* [in] */ VARIANT_BOOL pvarfDisplayFonts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisableCustomize )( 
            _CommandBars * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDisableCustomize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisableCustomize )( 
            _CommandBars * This,
            /* [in] */ VARIANT_BOOL pvarfDisableCustomize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisableAskAQuestionDropdown )( 
            _CommandBars * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDisableAskAQuestionDropdown);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisableAskAQuestionDropdown )( 
            _CommandBars * This,
            /* [in] */ VARIANT_BOOL pvarfDisableAskAQuestionDropdown);
        
        END_INTERFACE
    } _CommandBarsVtbl;

    interface _CommandBars
    {
        CONST_VTBL struct _CommandBarsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CommandBars_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CommandBars_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CommandBars_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CommandBars_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CommandBars_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CommandBars_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CommandBars_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CommandBars_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define _CommandBars_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define _CommandBars_get_ActionControl(This,ppcbc)	\
    ( (This)->lpVtbl -> get_ActionControl(This,ppcbc) ) 

#define _CommandBars_get_ActiveMenuBar(This,ppcb)	\
    ( (This)->lpVtbl -> get_ActiveMenuBar(This,ppcb) ) 

#define _CommandBars_Add(This,Name,Position,MenuBar,Temporary,ppcb)	\
    ( (This)->lpVtbl -> Add(This,Name,Position,MenuBar,Temporary,ppcb) ) 

#define _CommandBars_get_Count(This,pcToolbars)	\
    ( (This)->lpVtbl -> get_Count(This,pcToolbars) ) 

#define _CommandBars_get_DisplayTooltips(This,pvarfDisplayTooltips)	\
    ( (This)->lpVtbl -> get_DisplayTooltips(This,pvarfDisplayTooltips) ) 

#define _CommandBars_put_DisplayTooltips(This,pvarfDisplayTooltips)	\
    ( (This)->lpVtbl -> put_DisplayTooltips(This,pvarfDisplayTooltips) ) 

#define _CommandBars_get_DisplayKeysInTooltips(This,pvarfDisplayKeys)	\
    ( (This)->lpVtbl -> get_DisplayKeysInTooltips(This,pvarfDisplayKeys) ) 

#define _CommandBars_put_DisplayKeysInTooltips(This,pvarfDisplayKeys)	\
    ( (This)->lpVtbl -> put_DisplayKeysInTooltips(This,pvarfDisplayKeys) ) 

#define _CommandBars_FindControl(This,Type,Id,Tag,Visible,ppcbc)	\
    ( (This)->lpVtbl -> FindControl(This,Type,Id,Tag,Visible,ppcbc) ) 

#define _CommandBars_get_Item(This,Index,ppcb)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppcb) ) 

#define _CommandBars_get_LargeButtons(This,pvarfLargeButtons)	\
    ( (This)->lpVtbl -> get_LargeButtons(This,pvarfLargeButtons) ) 

#define _CommandBars_put_LargeButtons(This,pvarfLargeButtons)	\
    ( (This)->lpVtbl -> put_LargeButtons(This,pvarfLargeButtons) ) 

#define _CommandBars_get_MenuAnimationStyle(This,pma)	\
    ( (This)->lpVtbl -> get_MenuAnimationStyle(This,pma) ) 

#define _CommandBars_put_MenuAnimationStyle(This,pma)	\
    ( (This)->lpVtbl -> put_MenuAnimationStyle(This,pma) ) 

#define _CommandBars_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define _CommandBars_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define _CommandBars_ReleaseFocus(This)	\
    ( (This)->lpVtbl -> ReleaseFocus(This) ) 

#define _CommandBars_get_IdsString(This,ids,pbstrName,pcch)	\
    ( (This)->lpVtbl -> get_IdsString(This,ids,pbstrName,pcch) ) 

#define _CommandBars_get_TmcGetName(This,tmc,pbstrName,pcch)	\
    ( (This)->lpVtbl -> get_TmcGetName(This,tmc,pbstrName,pcch) ) 

#define _CommandBars_get_AdaptiveMenus(This,pvarfAdaptiveMenus)	\
    ( (This)->lpVtbl -> get_AdaptiveMenus(This,pvarfAdaptiveMenus) ) 

#define _CommandBars_put_AdaptiveMenus(This,pvarfAdaptiveMenus)	\
    ( (This)->lpVtbl -> put_AdaptiveMenus(This,pvarfAdaptiveMenus) ) 

#define _CommandBars_FindControls(This,Type,Id,Tag,Visible,ppcbcs)	\
    ( (This)->lpVtbl -> FindControls(This,Type,Id,Tag,Visible,ppcbcs) ) 

#define _CommandBars_AddEx(This,TbidOrName,Position,MenuBar,Temporary,TbtrProtection,ppcb)	\
    ( (This)->lpVtbl -> AddEx(This,TbidOrName,Position,MenuBar,Temporary,TbtrProtection,ppcb) ) 

#define _CommandBars_get_DisplayFonts(This,pvarfDisplayFonts)	\
    ( (This)->lpVtbl -> get_DisplayFonts(This,pvarfDisplayFonts) ) 

#define _CommandBars_put_DisplayFonts(This,pvarfDisplayFonts)	\
    ( (This)->lpVtbl -> put_DisplayFonts(This,pvarfDisplayFonts) ) 

#define _CommandBars_get_DisableCustomize(This,pvarfDisableCustomize)	\
    ( (This)->lpVtbl -> get_DisableCustomize(This,pvarfDisableCustomize) ) 

#define _CommandBars_put_DisableCustomize(This,pvarfDisableCustomize)	\
    ( (This)->lpVtbl -> put_DisableCustomize(This,pvarfDisableCustomize) ) 

#define _CommandBars_get_DisableAskAQuestionDropdown(This,pvarfDisableAskAQuestionDropdown)	\
    ( (This)->lpVtbl -> get_DisableAskAQuestionDropdown(This,pvarfDisableAskAQuestionDropdown) ) 

#define _CommandBars_put_DisableAskAQuestionDropdown(This,pvarfDisableAskAQuestionDropdown)	\
    ( (This)->lpVtbl -> put_DisableAskAQuestionDropdown(This,pvarfDisableAskAQuestionDropdown) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CommandBars_INTERFACE_DEFINED__ */


#ifndef __CommandBar_INTERFACE_DEFINED__
#define __CommandBar_INTERFACE_DEFINED__

/* interface CommandBar */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_CommandBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0304-0000-0000-C000-000000000046")
    CommandBar : public _IMsoOleAccDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BuiltIn( 
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Context( 
            /* [retval][out] */ BSTR *pbstrContext) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Context( 
            /* [in] */ BSTR pbstrContext) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Controls( 
            /* [retval][out] */ CommandBarControls **ppcbcs) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *pvarfEnabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL pvarfEnabled) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindControl( 
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Id,
            /* [optional][in] */ VARIANT Tag,
            /* [optional][in] */ VARIANT Visible,
            /* [optional][in] */ VARIANT Recursive,
            /* [retval][out] */ CommandBarControl **ppcbc) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ int *pdy) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ int pdy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ int *pi) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_InstanceId( 
            /* [retval][out] */ long *pid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ int *pxpLeft) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ int pxpLeft) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NameLocal( 
            /* [retval][out] */ BSTR *pbstrNameLocal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NameLocal( 
            /* [in] */ BSTR pbstrNameLocal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ MsoBarPosition *ppos) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ MsoBarPosition ppos) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RowIndex( 
            /* [retval][out] */ int *piRow) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RowIndex( 
            /* [in] */ int piRow) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Protection( 
            /* [retval][out] */ MsoBarProtection *pprot) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Protection( 
            /* [in] */ MsoBarProtection pprot) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowPopup( 
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ int *pypTop) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ int pypTop) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoBarType *ptype) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL pvarfVisible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ int *pdx) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ int pdx) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AdaptiveMenu( 
            /* [retval][out] */ VARIANT_BOOL *pvarfAdaptiveMenu) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AdaptiveMenu( 
            /* [in] */ VARIANT_BOOL pvarfAdaptiveMenu) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Id( 
            /* [retval][out] */ int *pid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CommandBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CommandBar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CommandBar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CommandBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CommandBar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CommandBar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CommandBar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CommandBar * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accParent )( 
            CommandBar * This,
            /* [retval][out] */ IDispatch **ppdispParent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChildCount )( 
            CommandBar * This,
            /* [retval][out] */ long *pcountChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChild )( 
            CommandBar * This,
            /* [in] */ VARIANT varChild,
            /* [retval][out] */ IDispatch **ppdispChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accName )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszName);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accValue )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszValue);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDescription )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDescription);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accRole )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarRole);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accState )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarState);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelp )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszHelp);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelpTopic )( 
            CommandBar * This,
            /* [out] */ BSTR *pszHelpFile,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ long *pidTopic);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accKeyboardShortcut )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszKeyboardShortcut);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accFocus )( 
            CommandBar * This,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accSelection )( 
            CommandBar * This,
            /* [retval][out] */ VARIANT *pvarChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDefaultAction )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDefaultAction);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accSelect )( 
            CommandBar * This,
            /* [in] */ long flagsSelect,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accLocation )( 
            CommandBar * This,
            /* [out] */ long *pxLeft,
            /* [out] */ long *pyTop,
            /* [out] */ long *pcxWidth,
            /* [out] */ long *pcyHeight,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accNavigate )( 
            CommandBar * This,
            /* [in] */ long navDir,
            /* [optional][in] */ VARIANT varStart,
            /* [retval][out] */ VARIANT *pvarEndUpAt);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accHitTest )( 
            CommandBar * This,
            /* [in] */ long xLeft,
            /* [in] */ long yTop,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accDoDefaultAction )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accName )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszName);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accValue )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            CommandBar * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            CommandBar * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuiltIn )( 
            CommandBar * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Context )( 
            CommandBar * This,
            /* [retval][out] */ BSTR *pbstrContext);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Context )( 
            CommandBar * This,
            /* [in] */ BSTR pbstrContext);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Controls )( 
            CommandBar * This,
            /* [retval][out] */ CommandBarControls **ppcbcs);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            CommandBar * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            CommandBar * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfEnabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            CommandBar * This,
            /* [in] */ VARIANT_BOOL pvarfEnabled);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindControl )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Id,
            /* [optional][in] */ VARIANT Tag,
            /* [optional][in] */ VARIANT Visible,
            /* [optional][in] */ VARIANT Recursive,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            CommandBar * This,
            /* [retval][out] */ int *pdy);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            CommandBar * This,
            /* [in] */ int pdy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            CommandBar * This,
            /* [retval][out] */ int *pi);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstanceId )( 
            CommandBar * This,
            /* [retval][out] */ long *pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            CommandBar * This,
            /* [retval][out] */ int *pxpLeft);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            CommandBar * This,
            /* [in] */ int pxpLeft);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            CommandBar * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            CommandBar * This,
            /* [in] */ BSTR pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NameLocal )( 
            CommandBar * This,
            /* [retval][out] */ BSTR *pbstrNameLocal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NameLocal )( 
            CommandBar * This,
            /* [in] */ BSTR pbstrNameLocal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CommandBar * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            CommandBar * This,
            /* [retval][out] */ MsoBarPosition *ppos);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            CommandBar * This,
            /* [in] */ MsoBarPosition ppos);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RowIndex )( 
            CommandBar * This,
            /* [retval][out] */ int *piRow);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RowIndex )( 
            CommandBar * This,
            /* [in] */ int piRow);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Protection )( 
            CommandBar * This,
            /* [retval][out] */ MsoBarProtection *pprot);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Protection )( 
            CommandBar * This,
            /* [in] */ MsoBarProtection pprot);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            CommandBar * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowPopup )( 
            CommandBar * This,
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            CommandBar * This,
            /* [retval][out] */ int *pypTop);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            CommandBar * This,
            /* [in] */ int pypTop);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CommandBar * This,
            /* [retval][out] */ MsoBarType *ptype);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            CommandBar * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            CommandBar * This,
            /* [in] */ VARIANT_BOOL pvarfVisible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            CommandBar * This,
            /* [retval][out] */ int *pdx);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            CommandBar * This,
            /* [in] */ int pdx);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AdaptiveMenu )( 
            CommandBar * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfAdaptiveMenu);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AdaptiveMenu )( 
            CommandBar * This,
            /* [in] */ VARIANT_BOOL pvarfAdaptiveMenu);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            CommandBar * This,
            /* [retval][out] */ int *pid);
        
        END_INTERFACE
    } CommandBarVtbl;

    interface CommandBar
    {
        CONST_VTBL struct CommandBarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CommandBar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CommandBar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CommandBar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CommandBar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CommandBar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CommandBar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CommandBar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CommandBar_get_accParent(This,ppdispParent)	\
    ( (This)->lpVtbl -> get_accParent(This,ppdispParent) ) 

#define CommandBar_get_accChildCount(This,pcountChildren)	\
    ( (This)->lpVtbl -> get_accChildCount(This,pcountChildren) ) 

#define CommandBar_get_accChild(This,varChild,ppdispChild)	\
    ( (This)->lpVtbl -> get_accChild(This,varChild,ppdispChild) ) 

#define CommandBar_get_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> get_accName(This,varChild,pszName) ) 

#define CommandBar_get_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> get_accValue(This,varChild,pszValue) ) 

#define CommandBar_get_accDescription(This,varChild,pszDescription)	\
    ( (This)->lpVtbl -> get_accDescription(This,varChild,pszDescription) ) 

#define CommandBar_get_accRole(This,varChild,pvarRole)	\
    ( (This)->lpVtbl -> get_accRole(This,varChild,pvarRole) ) 

#define CommandBar_get_accState(This,varChild,pvarState)	\
    ( (This)->lpVtbl -> get_accState(This,varChild,pvarState) ) 

#define CommandBar_get_accHelp(This,varChild,pszHelp)	\
    ( (This)->lpVtbl -> get_accHelp(This,varChild,pszHelp) ) 

#define CommandBar_get_accHelpTopic(This,pszHelpFile,varChild,pidTopic)	\
    ( (This)->lpVtbl -> get_accHelpTopic(This,pszHelpFile,varChild,pidTopic) ) 

#define CommandBar_get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut)	\
    ( (This)->lpVtbl -> get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut) ) 

#define CommandBar_get_accFocus(This,pvarChild)	\
    ( (This)->lpVtbl -> get_accFocus(This,pvarChild) ) 

#define CommandBar_get_accSelection(This,pvarChildren)	\
    ( (This)->lpVtbl -> get_accSelection(This,pvarChildren) ) 

#define CommandBar_get_accDefaultAction(This,varChild,pszDefaultAction)	\
    ( (This)->lpVtbl -> get_accDefaultAction(This,varChild,pszDefaultAction) ) 

#define CommandBar_accSelect(This,flagsSelect,varChild)	\
    ( (This)->lpVtbl -> accSelect(This,flagsSelect,varChild) ) 

#define CommandBar_accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild)	\
    ( (This)->lpVtbl -> accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild) ) 

#define CommandBar_accNavigate(This,navDir,varStart,pvarEndUpAt)	\
    ( (This)->lpVtbl -> accNavigate(This,navDir,varStart,pvarEndUpAt) ) 

#define CommandBar_accHitTest(This,xLeft,yTop,pvarChild)	\
    ( (This)->lpVtbl -> accHitTest(This,xLeft,yTop,pvarChild) ) 

#define CommandBar_accDoDefaultAction(This,varChild)	\
    ( (This)->lpVtbl -> accDoDefaultAction(This,varChild) ) 

#define CommandBar_put_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> put_accName(This,varChild,pszName) ) 

#define CommandBar_put_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> put_accValue(This,varChild,pszValue) ) 


#define CommandBar_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define CommandBar_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define CommandBar_get_BuiltIn(This,pvarfBuiltIn)	\
    ( (This)->lpVtbl -> get_BuiltIn(This,pvarfBuiltIn) ) 

#define CommandBar_get_Context(This,pbstrContext)	\
    ( (This)->lpVtbl -> get_Context(This,pbstrContext) ) 

#define CommandBar_put_Context(This,pbstrContext)	\
    ( (This)->lpVtbl -> put_Context(This,pbstrContext) ) 

#define CommandBar_get_Controls(This,ppcbcs)	\
    ( (This)->lpVtbl -> get_Controls(This,ppcbcs) ) 

#define CommandBar_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define CommandBar_get_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,pvarfEnabled) ) 

#define CommandBar_put_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,pvarfEnabled) ) 

#define CommandBar_FindControl(This,Type,Id,Tag,Visible,Recursive,ppcbc)	\
    ( (This)->lpVtbl -> FindControl(This,Type,Id,Tag,Visible,Recursive,ppcbc) ) 

#define CommandBar_get_Height(This,pdy)	\
    ( (This)->lpVtbl -> get_Height(This,pdy) ) 

#define CommandBar_put_Height(This,pdy)	\
    ( (This)->lpVtbl -> put_Height(This,pdy) ) 

#define CommandBar_get_Index(This,pi)	\
    ( (This)->lpVtbl -> get_Index(This,pi) ) 

#define CommandBar_get_InstanceId(This,pid)	\
    ( (This)->lpVtbl -> get_InstanceId(This,pid) ) 

#define CommandBar_get_Left(This,pxpLeft)	\
    ( (This)->lpVtbl -> get_Left(This,pxpLeft) ) 

#define CommandBar_put_Left(This,pxpLeft)	\
    ( (This)->lpVtbl -> put_Left(This,pxpLeft) ) 

#define CommandBar_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define CommandBar_put_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> put_Name(This,pbstrName) ) 

#define CommandBar_get_NameLocal(This,pbstrNameLocal)	\
    ( (This)->lpVtbl -> get_NameLocal(This,pbstrNameLocal) ) 

#define CommandBar_put_NameLocal(This,pbstrNameLocal)	\
    ( (This)->lpVtbl -> put_NameLocal(This,pbstrNameLocal) ) 

#define CommandBar_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define CommandBar_get_Position(This,ppos)	\
    ( (This)->lpVtbl -> get_Position(This,ppos) ) 

#define CommandBar_put_Position(This,ppos)	\
    ( (This)->lpVtbl -> put_Position(This,ppos) ) 

#define CommandBar_get_RowIndex(This,piRow)	\
    ( (This)->lpVtbl -> get_RowIndex(This,piRow) ) 

#define CommandBar_put_RowIndex(This,piRow)	\
    ( (This)->lpVtbl -> put_RowIndex(This,piRow) ) 

#define CommandBar_get_Protection(This,pprot)	\
    ( (This)->lpVtbl -> get_Protection(This,pprot) ) 

#define CommandBar_put_Protection(This,pprot)	\
    ( (This)->lpVtbl -> put_Protection(This,pprot) ) 

#define CommandBar_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define CommandBar_ShowPopup(This,x,y)	\
    ( (This)->lpVtbl -> ShowPopup(This,x,y) ) 

#define CommandBar_get_Top(This,pypTop)	\
    ( (This)->lpVtbl -> get_Top(This,pypTop) ) 

#define CommandBar_put_Top(This,pypTop)	\
    ( (This)->lpVtbl -> put_Top(This,pypTop) ) 

#define CommandBar_get_Type(This,ptype)	\
    ( (This)->lpVtbl -> get_Type(This,ptype) ) 

#define CommandBar_get_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pvarfVisible) ) 

#define CommandBar_put_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> put_Visible(This,pvarfVisible) ) 

#define CommandBar_get_Width(This,pdx)	\
    ( (This)->lpVtbl -> get_Width(This,pdx) ) 

#define CommandBar_put_Width(This,pdx)	\
    ( (This)->lpVtbl -> put_Width(This,pdx) ) 

#define CommandBar_get_AdaptiveMenu(This,pvarfAdaptiveMenu)	\
    ( (This)->lpVtbl -> get_AdaptiveMenu(This,pvarfAdaptiveMenu) ) 

#define CommandBar_put_AdaptiveMenu(This,pvarfAdaptiveMenu)	\
    ( (This)->lpVtbl -> put_AdaptiveMenu(This,pvarfAdaptiveMenu) ) 

#define CommandBar_get_Id(This,pid)	\
    ( (This)->lpVtbl -> get_Id(This,pid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CommandBar_INTERFACE_DEFINED__ */


#ifndef __CommandBarControls_INTERFACE_DEFINED__
#define __CommandBarControls_INTERFACE_DEFINED__

/* interface CommandBarControls */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_CommandBarControls;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0306-0000-0000-C000-000000000046")
    CommandBarControls : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Id,
            /* [optional][in] */ VARIANT Parameter,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Temporary,
            /* [retval][out] */ CommandBarControl **ppcbc) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pcToolbarControls) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ CommandBarControl **ppcbc) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ CommandBar **ppcb) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CommandBarControlsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CommandBarControls * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CommandBarControls * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CommandBarControls * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CommandBarControls * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CommandBarControls * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CommandBarControls * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CommandBarControls * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            CommandBarControls * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            CommandBarControls * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            CommandBarControls * This,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Id,
            /* [optional][in] */ VARIANT Parameter,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Temporary,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            CommandBarControls * This,
            /* [retval][out] */ int *pcToolbarControls);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            CommandBarControls * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            CommandBarControls * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CommandBarControls * This,
            /* [retval][out] */ CommandBar **ppcb);
        
        END_INTERFACE
    } CommandBarControlsVtbl;

    interface CommandBarControls
    {
        CONST_VTBL struct CommandBarControlsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CommandBarControls_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CommandBarControls_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CommandBarControls_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CommandBarControls_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CommandBarControls_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CommandBarControls_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CommandBarControls_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CommandBarControls_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define CommandBarControls_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define CommandBarControls_Add(This,Type,Id,Parameter,Before,Temporary,ppcbc)	\
    ( (This)->lpVtbl -> Add(This,Type,Id,Parameter,Before,Temporary,ppcbc) ) 

#define CommandBarControls_get_Count(This,pcToolbarControls)	\
    ( (This)->lpVtbl -> get_Count(This,pcToolbarControls) ) 

#define CommandBarControls_get_Item(This,Index,ppcbc)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppcbc) ) 

#define CommandBarControls_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define CommandBarControls_get_Parent(This,ppcb)	\
    ( (This)->lpVtbl -> get_Parent(This,ppcb) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CommandBarControls_INTERFACE_DEFINED__ */


#ifndef __CommandBarControl_INTERFACE_DEFINED__
#define __CommandBarControl_INTERFACE_DEFINED__

/* interface CommandBarControl */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_CommandBarControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0308-0000-0000-C000-000000000046")
    CommandBarControl : public _IMsoOleAccDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BeginGroup( 
            /* [retval][out] */ VARIANT_BOOL *pvarfBeginGroup) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BeginGroup( 
            /* [in] */ VARIANT_BOOL pvarfBeginGroup) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BuiltIn( 
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *pbstrCaption) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR pbstrCaption) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Control( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [optional][in] */ VARIANT Temporary) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DescriptionText( 
            /* [retval][out] */ BSTR *pbstrText) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DescriptionText( 
            /* [in] */ BSTR pbstrText) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *pvarfEnabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL pvarfEnabled) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Execute( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ int *pdy) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ int pdy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextId( 
            /* [retval][out] */ int *pid) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextId( 
            /* [in] */ int pid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpFile( 
            /* [retval][out] */ BSTR *pbstrFilename) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpFile( 
            /* [in] */ BSTR pbstrFilename) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Id( 
            /* [retval][out] */ int *pid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ int *pi) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_InstanceId( 
            /* [retval][out] */ long *pid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ int *px) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OLEUsage( 
            /* [retval][out] */ MsoControlOLEUsage *pcou) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OLEUsage( 
            /* [in] */ MsoControlOLEUsage pcou) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnAction( 
            /* [retval][out] */ BSTR *pbstrOnAction) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnAction( 
            /* [in] */ BSTR pbstrOnAction) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ CommandBar **ppcb) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parameter( 
            /* [retval][out] */ BSTR *pbstrParam) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Parameter( 
            /* [in] */ BSTR pbstrParam) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Priority( 
            /* [retval][out] */ int *pnPri) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Priority( 
            /* [in] */ int pnPri) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetFocus( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Tag( 
            /* [retval][out] */ BSTR *pbstrTag) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Tag( 
            /* [in] */ BSTR pbstrTag) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TooltipText( 
            /* [retval][out] */ BSTR *pbstrTooltip) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TooltipText( 
            /* [in] */ BSTR pbstrTooltip) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ int *py) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoControlType *ptype) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL pvarfVisible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ int *pdx) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ int pdx) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsPriorityDropped( 
            /* [retval][out] */ VARIANT_BOOL *pvarfDropped) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE Reserved1( void) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE Reserved2( void) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE Reserved3( void) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE Reserved4( void) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE Reserved5( void) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE Reserved6( void) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE Reserved7( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CommandBarControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CommandBarControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CommandBarControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CommandBarControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CommandBarControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CommandBarControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CommandBarControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CommandBarControl * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accParent )( 
            CommandBarControl * This,
            /* [retval][out] */ IDispatch **ppdispParent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChildCount )( 
            CommandBarControl * This,
            /* [retval][out] */ long *pcountChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChild )( 
            CommandBarControl * This,
            /* [in] */ VARIANT varChild,
            /* [retval][out] */ IDispatch **ppdispChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accName )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszName);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accValue )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszValue);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDescription )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDescription);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accRole )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarRole);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accState )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarState);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelp )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszHelp);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelpTopic )( 
            CommandBarControl * This,
            /* [out] */ BSTR *pszHelpFile,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ long *pidTopic);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accKeyboardShortcut )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszKeyboardShortcut);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accFocus )( 
            CommandBarControl * This,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accSelection )( 
            CommandBarControl * This,
            /* [retval][out] */ VARIANT *pvarChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDefaultAction )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDefaultAction);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accSelect )( 
            CommandBarControl * This,
            /* [in] */ long flagsSelect,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accLocation )( 
            CommandBarControl * This,
            /* [out] */ long *pxLeft,
            /* [out] */ long *pyTop,
            /* [out] */ long *pcxWidth,
            /* [out] */ long *pcyHeight,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accNavigate )( 
            CommandBarControl * This,
            /* [in] */ long navDir,
            /* [optional][in] */ VARIANT varStart,
            /* [retval][out] */ VARIANT *pvarEndUpAt);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accHitTest )( 
            CommandBarControl * This,
            /* [in] */ long xLeft,
            /* [in] */ long yTop,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accDoDefaultAction )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accName )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszName);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accValue )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            CommandBarControl * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            CommandBarControl * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginGroup )( 
            CommandBarControl * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBeginGroup);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BeginGroup )( 
            CommandBarControl * This,
            /* [in] */ VARIANT_BOOL pvarfBeginGroup);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuiltIn )( 
            CommandBarControl * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            CommandBarControl * This,
            /* [retval][out] */ BSTR *pbstrCaption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            CommandBarControl * This,
            /* [in] */ BSTR pbstrCaption);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Control )( 
            CommandBarControl * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT Temporary);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DescriptionText )( 
            CommandBarControl * This,
            /* [retval][out] */ BSTR *pbstrText);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DescriptionText )( 
            CommandBarControl * This,
            /* [in] */ BSTR pbstrText);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            CommandBarControl * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfEnabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            CommandBarControl * This,
            /* [in] */ VARIANT_BOOL pvarfEnabled);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            CommandBarControl * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            CommandBarControl * This,
            /* [retval][out] */ int *pdy);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            CommandBarControl * This,
            /* [in] */ int pdy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpContextId )( 
            CommandBarControl * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpContextId )( 
            CommandBarControl * This,
            /* [in] */ int pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpFile )( 
            CommandBarControl * This,
            /* [retval][out] */ BSTR *pbstrFilename);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpFile )( 
            CommandBarControl * This,
            /* [in] */ BSTR pbstrFilename);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            CommandBarControl * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            CommandBarControl * This,
            /* [retval][out] */ int *pi);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstanceId )( 
            CommandBarControl * This,
            /* [retval][out] */ long *pid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            CommandBarControl * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            CommandBarControl * This,
            /* [retval][out] */ int *px);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OLEUsage )( 
            CommandBarControl * This,
            /* [retval][out] */ MsoControlOLEUsage *pcou);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OLEUsage )( 
            CommandBarControl * This,
            /* [in] */ MsoControlOLEUsage pcou);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnAction )( 
            CommandBarControl * This,
            /* [retval][out] */ BSTR *pbstrOnAction);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnAction )( 
            CommandBarControl * This,
            /* [in] */ BSTR pbstrOnAction);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CommandBarControl * This,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parameter )( 
            CommandBarControl * This,
            /* [retval][out] */ BSTR *pbstrParam);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Parameter )( 
            CommandBarControl * This,
            /* [in] */ BSTR pbstrParam);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            CommandBarControl * This,
            /* [retval][out] */ int *pnPri);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Priority )( 
            CommandBarControl * This,
            /* [in] */ int pnPri);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            CommandBarControl * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            CommandBarControl * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            CommandBarControl * This,
            /* [retval][out] */ BSTR *pbstrTag);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Tag )( 
            CommandBarControl * This,
            /* [in] */ BSTR pbstrTag);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TooltipText )( 
            CommandBarControl * This,
            /* [retval][out] */ BSTR *pbstrTooltip);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TooltipText )( 
            CommandBarControl * This,
            /* [in] */ BSTR pbstrTooltip);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            CommandBarControl * This,
            /* [retval][out] */ int *py);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CommandBarControl * This,
            /* [retval][out] */ MsoControlType *ptype);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            CommandBarControl * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            CommandBarControl * This,
            /* [in] */ VARIANT_BOOL pvarfVisible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            CommandBarControl * This,
            /* [retval][out] */ int *pdx);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            CommandBarControl * This,
            /* [in] */ int pdx);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsPriorityDropped )( 
            CommandBarControl * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDropped);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved1 )( 
            CommandBarControl * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved2 )( 
            CommandBarControl * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved3 )( 
            CommandBarControl * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved4 )( 
            CommandBarControl * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved5 )( 
            CommandBarControl * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved6 )( 
            CommandBarControl * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved7 )( 
            CommandBarControl * This);
        
        END_INTERFACE
    } CommandBarControlVtbl;

    interface CommandBarControl
    {
        CONST_VTBL struct CommandBarControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CommandBarControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CommandBarControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CommandBarControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CommandBarControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CommandBarControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CommandBarControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CommandBarControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CommandBarControl_get_accParent(This,ppdispParent)	\
    ( (This)->lpVtbl -> get_accParent(This,ppdispParent) ) 

#define CommandBarControl_get_accChildCount(This,pcountChildren)	\
    ( (This)->lpVtbl -> get_accChildCount(This,pcountChildren) ) 

#define CommandBarControl_get_accChild(This,varChild,ppdispChild)	\
    ( (This)->lpVtbl -> get_accChild(This,varChild,ppdispChild) ) 

#define CommandBarControl_get_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> get_accName(This,varChild,pszName) ) 

#define CommandBarControl_get_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> get_accValue(This,varChild,pszValue) ) 

#define CommandBarControl_get_accDescription(This,varChild,pszDescription)	\
    ( (This)->lpVtbl -> get_accDescription(This,varChild,pszDescription) ) 

#define CommandBarControl_get_accRole(This,varChild,pvarRole)	\
    ( (This)->lpVtbl -> get_accRole(This,varChild,pvarRole) ) 

#define CommandBarControl_get_accState(This,varChild,pvarState)	\
    ( (This)->lpVtbl -> get_accState(This,varChild,pvarState) ) 

#define CommandBarControl_get_accHelp(This,varChild,pszHelp)	\
    ( (This)->lpVtbl -> get_accHelp(This,varChild,pszHelp) ) 

#define CommandBarControl_get_accHelpTopic(This,pszHelpFile,varChild,pidTopic)	\
    ( (This)->lpVtbl -> get_accHelpTopic(This,pszHelpFile,varChild,pidTopic) ) 

#define CommandBarControl_get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut)	\
    ( (This)->lpVtbl -> get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut) ) 

#define CommandBarControl_get_accFocus(This,pvarChild)	\
    ( (This)->lpVtbl -> get_accFocus(This,pvarChild) ) 

#define CommandBarControl_get_accSelection(This,pvarChildren)	\
    ( (This)->lpVtbl -> get_accSelection(This,pvarChildren) ) 

#define CommandBarControl_get_accDefaultAction(This,varChild,pszDefaultAction)	\
    ( (This)->lpVtbl -> get_accDefaultAction(This,varChild,pszDefaultAction) ) 

#define CommandBarControl_accSelect(This,flagsSelect,varChild)	\
    ( (This)->lpVtbl -> accSelect(This,flagsSelect,varChild) ) 

#define CommandBarControl_accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild)	\
    ( (This)->lpVtbl -> accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild) ) 

#define CommandBarControl_accNavigate(This,navDir,varStart,pvarEndUpAt)	\
    ( (This)->lpVtbl -> accNavigate(This,navDir,varStart,pvarEndUpAt) ) 

#define CommandBarControl_accHitTest(This,xLeft,yTop,pvarChild)	\
    ( (This)->lpVtbl -> accHitTest(This,xLeft,yTop,pvarChild) ) 

#define CommandBarControl_accDoDefaultAction(This,varChild)	\
    ( (This)->lpVtbl -> accDoDefaultAction(This,varChild) ) 

#define CommandBarControl_put_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> put_accName(This,varChild,pszName) ) 

#define CommandBarControl_put_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> put_accValue(This,varChild,pszValue) ) 


#define CommandBarControl_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define CommandBarControl_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define CommandBarControl_get_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> get_BeginGroup(This,pvarfBeginGroup) ) 

#define CommandBarControl_put_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> put_BeginGroup(This,pvarfBeginGroup) ) 

#define CommandBarControl_get_BuiltIn(This,pvarfBuiltIn)	\
    ( (This)->lpVtbl -> get_BuiltIn(This,pvarfBuiltIn) ) 

#define CommandBarControl_get_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> get_Caption(This,pbstrCaption) ) 

#define CommandBarControl_put_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> put_Caption(This,pbstrCaption) ) 

#define CommandBarControl_get_Control(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Control(This,ppidisp) ) 

#define CommandBarControl_Copy(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Copy(This,Bar,Before,ppcbc) ) 

#define CommandBarControl_Delete(This,Temporary)	\
    ( (This)->lpVtbl -> Delete(This,Temporary) ) 

#define CommandBarControl_get_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> get_DescriptionText(This,pbstrText) ) 

#define CommandBarControl_put_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> put_DescriptionText(This,pbstrText) ) 

#define CommandBarControl_get_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,pvarfEnabled) ) 

#define CommandBarControl_put_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,pvarfEnabled) ) 

#define CommandBarControl_Execute(This)	\
    ( (This)->lpVtbl -> Execute(This) ) 

#define CommandBarControl_get_Height(This,pdy)	\
    ( (This)->lpVtbl -> get_Height(This,pdy) ) 

#define CommandBarControl_put_Height(This,pdy)	\
    ( (This)->lpVtbl -> put_Height(This,pdy) ) 

#define CommandBarControl_get_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> get_HelpContextId(This,pid) ) 

#define CommandBarControl_put_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> put_HelpContextId(This,pid) ) 

#define CommandBarControl_get_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> get_HelpFile(This,pbstrFilename) ) 

#define CommandBarControl_put_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> put_HelpFile(This,pbstrFilename) ) 

#define CommandBarControl_get_Id(This,pid)	\
    ( (This)->lpVtbl -> get_Id(This,pid) ) 

#define CommandBarControl_get_Index(This,pi)	\
    ( (This)->lpVtbl -> get_Index(This,pi) ) 

#define CommandBarControl_get_InstanceId(This,pid)	\
    ( (This)->lpVtbl -> get_InstanceId(This,pid) ) 

#define CommandBarControl_Move(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Move(This,Bar,Before,ppcbc) ) 

#define CommandBarControl_get_Left(This,px)	\
    ( (This)->lpVtbl -> get_Left(This,px) ) 

#define CommandBarControl_get_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> get_OLEUsage(This,pcou) ) 

#define CommandBarControl_put_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> put_OLEUsage(This,pcou) ) 

#define CommandBarControl_get_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> get_OnAction(This,pbstrOnAction) ) 

#define CommandBarControl_put_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> put_OnAction(This,pbstrOnAction) ) 

#define CommandBarControl_get_Parent(This,ppcb)	\
    ( (This)->lpVtbl -> get_Parent(This,ppcb) ) 

#define CommandBarControl_get_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> get_Parameter(This,pbstrParam) ) 

#define CommandBarControl_put_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> put_Parameter(This,pbstrParam) ) 

#define CommandBarControl_get_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> get_Priority(This,pnPri) ) 

#define CommandBarControl_put_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> put_Priority(This,pnPri) ) 

#define CommandBarControl_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define CommandBarControl_SetFocus(This)	\
    ( (This)->lpVtbl -> SetFocus(This) ) 

#define CommandBarControl_get_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> get_Tag(This,pbstrTag) ) 

#define CommandBarControl_put_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> put_Tag(This,pbstrTag) ) 

#define CommandBarControl_get_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> get_TooltipText(This,pbstrTooltip) ) 

#define CommandBarControl_put_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> put_TooltipText(This,pbstrTooltip) ) 

#define CommandBarControl_get_Top(This,py)	\
    ( (This)->lpVtbl -> get_Top(This,py) ) 

#define CommandBarControl_get_Type(This,ptype)	\
    ( (This)->lpVtbl -> get_Type(This,ptype) ) 

#define CommandBarControl_get_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pvarfVisible) ) 

#define CommandBarControl_put_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> put_Visible(This,pvarfVisible) ) 

#define CommandBarControl_get_Width(This,pdx)	\
    ( (This)->lpVtbl -> get_Width(This,pdx) ) 

#define CommandBarControl_put_Width(This,pdx)	\
    ( (This)->lpVtbl -> put_Width(This,pdx) ) 

#define CommandBarControl_get_IsPriorityDropped(This,pvarfDropped)	\
    ( (This)->lpVtbl -> get_IsPriorityDropped(This,pvarfDropped) ) 

#define CommandBarControl_Reserved1(This)	\
    ( (This)->lpVtbl -> Reserved1(This) ) 

#define CommandBarControl_Reserved2(This)	\
    ( (This)->lpVtbl -> Reserved2(This) ) 

#define CommandBarControl_Reserved3(This)	\
    ( (This)->lpVtbl -> Reserved3(This) ) 

#define CommandBarControl_Reserved4(This)	\
    ( (This)->lpVtbl -> Reserved4(This) ) 

#define CommandBarControl_Reserved5(This)	\
    ( (This)->lpVtbl -> Reserved5(This) ) 

#define CommandBarControl_Reserved6(This)	\
    ( (This)->lpVtbl -> Reserved6(This) ) 

#define CommandBarControl_Reserved7(This)	\
    ( (This)->lpVtbl -> Reserved7(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CommandBarControl_INTERFACE_DEFINED__ */


#ifndef ___CommandBarButton_INTERFACE_DEFINED__
#define ___CommandBarButton_INTERFACE_DEFINED__

/* interface _CommandBarButton */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID__CommandBarButton;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C030E-0000-0000-C000-000000000046")
    _CommandBarButton : public CommandBarControl
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BuiltInFace( 
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BuiltInFace( 
            /* [in] */ VARIANT_BOOL pvarfBuiltIn) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CopyFace( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FaceId( 
            /* [retval][out] */ int *pid) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FaceId( 
            /* [in] */ int pid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PasteFace( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShortcutText( 
            /* [retval][out] */ BSTR *pbstrText) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShortcutText( 
            /* [in] */ BSTR pbstrText) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_State( 
            /* [retval][out] */ MsoButtonState *pstate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_State( 
            /* [in] */ MsoButtonState pstate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Style( 
            /* [retval][out] */ MsoButtonStyle *pstyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Style( 
            /* [in] */ MsoButtonStyle pstyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HyperlinkType( 
            /* [retval][out] */ MsoCommandBarButtonHyperlinkType *phlType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HyperlinkType( 
            /* [in] */ MsoCommandBarButtonHyperlinkType phlType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Picture( 
            /* [retval][out] */ /* external definition not present */ /*IPictureDisp*/ IUnknown **ppdispPicture) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Picture( 
            /* [in] */ /* external definition not present */ /*IPictureDisp*/ IUnknown *ppdispPicture) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mask( 
            /* [retval][out] */ /* external definition not present */ /*IPictureDisp*/ IUnknown **ppipictdispMask) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mask( 
            /* [in] */ /* external definition not present */ /*IPictureDisp*/ IUnknown *ppipictdispMask) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _CommandBarButtonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CommandBarButton * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CommandBarButton * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CommandBarButton * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CommandBarButton * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CommandBarButton * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CommandBarButton * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CommandBarButton * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accParent )( 
            _CommandBarButton * This,
            /* [retval][out] */ IDispatch **ppdispParent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChildCount )( 
            _CommandBarButton * This,
            /* [retval][out] */ long *pcountChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChild )( 
            _CommandBarButton * This,
            /* [in] */ VARIANT varChild,
            /* [retval][out] */ IDispatch **ppdispChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accName )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszName);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accValue )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszValue);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDescription )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDescription);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accRole )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarRole);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accState )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarState);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelp )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszHelp);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelpTopic )( 
            _CommandBarButton * This,
            /* [out] */ BSTR *pszHelpFile,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ long *pidTopic);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accKeyboardShortcut )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszKeyboardShortcut);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accFocus )( 
            _CommandBarButton * This,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accSelection )( 
            _CommandBarButton * This,
            /* [retval][out] */ VARIANT *pvarChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDefaultAction )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDefaultAction);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accSelect )( 
            _CommandBarButton * This,
            /* [in] */ long flagsSelect,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accLocation )( 
            _CommandBarButton * This,
            /* [out] */ long *pxLeft,
            /* [out] */ long *pyTop,
            /* [out] */ long *pcxWidth,
            /* [out] */ long *pcyHeight,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accNavigate )( 
            _CommandBarButton * This,
            /* [in] */ long navDir,
            /* [optional][in] */ VARIANT varStart,
            /* [retval][out] */ VARIANT *pvarEndUpAt);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accHitTest )( 
            _CommandBarButton * This,
            /* [in] */ long xLeft,
            /* [in] */ long yTop,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accDoDefaultAction )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accName )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszName);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accValue )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _CommandBarButton * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _CommandBarButton * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginGroup )( 
            _CommandBarButton * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBeginGroup);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BeginGroup )( 
            _CommandBarButton * This,
            /* [in] */ VARIANT_BOOL pvarfBeginGroup);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuiltIn )( 
            _CommandBarButton * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _CommandBarButton * This,
            /* [retval][out] */ BSTR *pbstrCaption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _CommandBarButton * This,
            /* [in] */ BSTR pbstrCaption);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Control )( 
            _CommandBarButton * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT Temporary);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DescriptionText )( 
            _CommandBarButton * This,
            /* [retval][out] */ BSTR *pbstrText);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DescriptionText )( 
            _CommandBarButton * This,
            /* [in] */ BSTR pbstrText);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _CommandBarButton * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfEnabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _CommandBarButton * This,
            /* [in] */ VARIANT_BOOL pvarfEnabled);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            _CommandBarButton * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            _CommandBarButton * This,
            /* [retval][out] */ int *pdy);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            _CommandBarButton * This,
            /* [in] */ int pdy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpContextId )( 
            _CommandBarButton * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpContextId )( 
            _CommandBarButton * This,
            /* [in] */ int pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpFile )( 
            _CommandBarButton * This,
            /* [retval][out] */ BSTR *pbstrFilename);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpFile )( 
            _CommandBarButton * This,
            /* [in] */ BSTR pbstrFilename);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            _CommandBarButton * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            _CommandBarButton * This,
            /* [retval][out] */ int *pi);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstanceId )( 
            _CommandBarButton * This,
            /* [retval][out] */ long *pid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _CommandBarButton * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            _CommandBarButton * This,
            /* [retval][out] */ int *px);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OLEUsage )( 
            _CommandBarButton * This,
            /* [retval][out] */ MsoControlOLEUsage *pcou);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OLEUsage )( 
            _CommandBarButton * This,
            /* [in] */ MsoControlOLEUsage pcou);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnAction )( 
            _CommandBarButton * This,
            /* [retval][out] */ BSTR *pbstrOnAction);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnAction )( 
            _CommandBarButton * This,
            /* [in] */ BSTR pbstrOnAction);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _CommandBarButton * This,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parameter )( 
            _CommandBarButton * This,
            /* [retval][out] */ BSTR *pbstrParam);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Parameter )( 
            _CommandBarButton * This,
            /* [in] */ BSTR pbstrParam);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            _CommandBarButton * This,
            /* [retval][out] */ int *pnPri);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Priority )( 
            _CommandBarButton * This,
            /* [in] */ int pnPri);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _CommandBarButton * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            _CommandBarButton * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            _CommandBarButton * This,
            /* [retval][out] */ BSTR *pbstrTag);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Tag )( 
            _CommandBarButton * This,
            /* [in] */ BSTR pbstrTag);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TooltipText )( 
            _CommandBarButton * This,
            /* [retval][out] */ BSTR *pbstrTooltip);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TooltipText )( 
            _CommandBarButton * This,
            /* [in] */ BSTR pbstrTooltip);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            _CommandBarButton * This,
            /* [retval][out] */ int *py);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _CommandBarButton * This,
            /* [retval][out] */ MsoControlType *ptype);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _CommandBarButton * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _CommandBarButton * This,
            /* [in] */ VARIANT_BOOL pvarfVisible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            _CommandBarButton * This,
            /* [retval][out] */ int *pdx);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            _CommandBarButton * This,
            /* [in] */ int pdx);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsPriorityDropped )( 
            _CommandBarButton * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDropped);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved1 )( 
            _CommandBarButton * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved2 )( 
            _CommandBarButton * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved3 )( 
            _CommandBarButton * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved4 )( 
            _CommandBarButton * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved5 )( 
            _CommandBarButton * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved6 )( 
            _CommandBarButton * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved7 )( 
            _CommandBarButton * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuiltInFace )( 
            _CommandBarButton * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BuiltInFace )( 
            _CommandBarButton * This,
            /* [in] */ VARIANT_BOOL pvarfBuiltIn);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyFace )( 
            _CommandBarButton * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FaceId )( 
            _CommandBarButton * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FaceId )( 
            _CommandBarButton * This,
            /* [in] */ int pid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PasteFace )( 
            _CommandBarButton * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShortcutText )( 
            _CommandBarButton * This,
            /* [retval][out] */ BSTR *pbstrText);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShortcutText )( 
            _CommandBarButton * This,
            /* [in] */ BSTR pbstrText);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            _CommandBarButton * This,
            /* [retval][out] */ MsoButtonState *pstate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_State )( 
            _CommandBarButton * This,
            /* [in] */ MsoButtonState pstate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Style )( 
            _CommandBarButton * This,
            /* [retval][out] */ MsoButtonStyle *pstyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Style )( 
            _CommandBarButton * This,
            /* [in] */ MsoButtonStyle pstyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HyperlinkType )( 
            _CommandBarButton * This,
            /* [retval][out] */ MsoCommandBarButtonHyperlinkType *phlType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HyperlinkType )( 
            _CommandBarButton * This,
            /* [in] */ MsoCommandBarButtonHyperlinkType phlType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Picture )( 
            _CommandBarButton * This,
            /* [retval][out] */ /* external definition not present */ /*IPictureDisp*/ IUnknown **ppdispPicture);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Picture )( 
            _CommandBarButton * This,
            /* [in] */ /* external definition not present */ /*IPictureDisp*/ IUnknown *ppdispPicture);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mask )( 
            _CommandBarButton * This,
            /* [retval][out] */ /* external definition not present */ /*IPictureDisp*/ IUnknown **ppipictdispMask);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mask )( 
            _CommandBarButton * This,
            /* [in] */ /* external definition not present */ /*IPictureDisp*/ IUnknown *ppipictdispMask);
        
        END_INTERFACE
    } _CommandBarButtonVtbl;

    interface _CommandBarButton
    {
        CONST_VTBL struct _CommandBarButtonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CommandBarButton_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CommandBarButton_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CommandBarButton_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CommandBarButton_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CommandBarButton_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CommandBarButton_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CommandBarButton_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CommandBarButton_get_accParent(This,ppdispParent)	\
    ( (This)->lpVtbl -> get_accParent(This,ppdispParent) ) 

#define _CommandBarButton_get_accChildCount(This,pcountChildren)	\
    ( (This)->lpVtbl -> get_accChildCount(This,pcountChildren) ) 

#define _CommandBarButton_get_accChild(This,varChild,ppdispChild)	\
    ( (This)->lpVtbl -> get_accChild(This,varChild,ppdispChild) ) 

#define _CommandBarButton_get_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> get_accName(This,varChild,pszName) ) 

#define _CommandBarButton_get_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> get_accValue(This,varChild,pszValue) ) 

#define _CommandBarButton_get_accDescription(This,varChild,pszDescription)	\
    ( (This)->lpVtbl -> get_accDescription(This,varChild,pszDescription) ) 

#define _CommandBarButton_get_accRole(This,varChild,pvarRole)	\
    ( (This)->lpVtbl -> get_accRole(This,varChild,pvarRole) ) 

#define _CommandBarButton_get_accState(This,varChild,pvarState)	\
    ( (This)->lpVtbl -> get_accState(This,varChild,pvarState) ) 

#define _CommandBarButton_get_accHelp(This,varChild,pszHelp)	\
    ( (This)->lpVtbl -> get_accHelp(This,varChild,pszHelp) ) 

#define _CommandBarButton_get_accHelpTopic(This,pszHelpFile,varChild,pidTopic)	\
    ( (This)->lpVtbl -> get_accHelpTopic(This,pszHelpFile,varChild,pidTopic) ) 

#define _CommandBarButton_get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut)	\
    ( (This)->lpVtbl -> get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut) ) 

#define _CommandBarButton_get_accFocus(This,pvarChild)	\
    ( (This)->lpVtbl -> get_accFocus(This,pvarChild) ) 

#define _CommandBarButton_get_accSelection(This,pvarChildren)	\
    ( (This)->lpVtbl -> get_accSelection(This,pvarChildren) ) 

#define _CommandBarButton_get_accDefaultAction(This,varChild,pszDefaultAction)	\
    ( (This)->lpVtbl -> get_accDefaultAction(This,varChild,pszDefaultAction) ) 

#define _CommandBarButton_accSelect(This,flagsSelect,varChild)	\
    ( (This)->lpVtbl -> accSelect(This,flagsSelect,varChild) ) 

#define _CommandBarButton_accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild)	\
    ( (This)->lpVtbl -> accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild) ) 

#define _CommandBarButton_accNavigate(This,navDir,varStart,pvarEndUpAt)	\
    ( (This)->lpVtbl -> accNavigate(This,navDir,varStart,pvarEndUpAt) ) 

#define _CommandBarButton_accHitTest(This,xLeft,yTop,pvarChild)	\
    ( (This)->lpVtbl -> accHitTest(This,xLeft,yTop,pvarChild) ) 

#define _CommandBarButton_accDoDefaultAction(This,varChild)	\
    ( (This)->lpVtbl -> accDoDefaultAction(This,varChild) ) 

#define _CommandBarButton_put_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> put_accName(This,varChild,pszName) ) 

#define _CommandBarButton_put_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> put_accValue(This,varChild,pszValue) ) 


#define _CommandBarButton_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define _CommandBarButton_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define _CommandBarButton_get_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> get_BeginGroup(This,pvarfBeginGroup) ) 

#define _CommandBarButton_put_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> put_BeginGroup(This,pvarfBeginGroup) ) 

#define _CommandBarButton_get_BuiltIn(This,pvarfBuiltIn)	\
    ( (This)->lpVtbl -> get_BuiltIn(This,pvarfBuiltIn) ) 

#define _CommandBarButton_get_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> get_Caption(This,pbstrCaption) ) 

#define _CommandBarButton_put_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> put_Caption(This,pbstrCaption) ) 

#define _CommandBarButton_get_Control(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Control(This,ppidisp) ) 

#define _CommandBarButton_Copy(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Copy(This,Bar,Before,ppcbc) ) 

#define _CommandBarButton_Delete(This,Temporary)	\
    ( (This)->lpVtbl -> Delete(This,Temporary) ) 

#define _CommandBarButton_get_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> get_DescriptionText(This,pbstrText) ) 

#define _CommandBarButton_put_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> put_DescriptionText(This,pbstrText) ) 

#define _CommandBarButton_get_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,pvarfEnabled) ) 

#define _CommandBarButton_put_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,pvarfEnabled) ) 

#define _CommandBarButton_Execute(This)	\
    ( (This)->lpVtbl -> Execute(This) ) 

#define _CommandBarButton_get_Height(This,pdy)	\
    ( (This)->lpVtbl -> get_Height(This,pdy) ) 

#define _CommandBarButton_put_Height(This,pdy)	\
    ( (This)->lpVtbl -> put_Height(This,pdy) ) 

#define _CommandBarButton_get_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> get_HelpContextId(This,pid) ) 

#define _CommandBarButton_put_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> put_HelpContextId(This,pid) ) 

#define _CommandBarButton_get_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> get_HelpFile(This,pbstrFilename) ) 

#define _CommandBarButton_put_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> put_HelpFile(This,pbstrFilename) ) 

#define _CommandBarButton_get_Id(This,pid)	\
    ( (This)->lpVtbl -> get_Id(This,pid) ) 

#define _CommandBarButton_get_Index(This,pi)	\
    ( (This)->lpVtbl -> get_Index(This,pi) ) 

#define _CommandBarButton_get_InstanceId(This,pid)	\
    ( (This)->lpVtbl -> get_InstanceId(This,pid) ) 

#define _CommandBarButton_Move(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Move(This,Bar,Before,ppcbc) ) 

#define _CommandBarButton_get_Left(This,px)	\
    ( (This)->lpVtbl -> get_Left(This,px) ) 

#define _CommandBarButton_get_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> get_OLEUsage(This,pcou) ) 

#define _CommandBarButton_put_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> put_OLEUsage(This,pcou) ) 

#define _CommandBarButton_get_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> get_OnAction(This,pbstrOnAction) ) 

#define _CommandBarButton_put_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> put_OnAction(This,pbstrOnAction) ) 

#define _CommandBarButton_get_Parent(This,ppcb)	\
    ( (This)->lpVtbl -> get_Parent(This,ppcb) ) 

#define _CommandBarButton_get_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> get_Parameter(This,pbstrParam) ) 

#define _CommandBarButton_put_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> put_Parameter(This,pbstrParam) ) 

#define _CommandBarButton_get_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> get_Priority(This,pnPri) ) 

#define _CommandBarButton_put_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> put_Priority(This,pnPri) ) 

#define _CommandBarButton_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _CommandBarButton_SetFocus(This)	\
    ( (This)->lpVtbl -> SetFocus(This) ) 

#define _CommandBarButton_get_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> get_Tag(This,pbstrTag) ) 

#define _CommandBarButton_put_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> put_Tag(This,pbstrTag) ) 

#define _CommandBarButton_get_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> get_TooltipText(This,pbstrTooltip) ) 

#define _CommandBarButton_put_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> put_TooltipText(This,pbstrTooltip) ) 

#define _CommandBarButton_get_Top(This,py)	\
    ( (This)->lpVtbl -> get_Top(This,py) ) 

#define _CommandBarButton_get_Type(This,ptype)	\
    ( (This)->lpVtbl -> get_Type(This,ptype) ) 

#define _CommandBarButton_get_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pvarfVisible) ) 

#define _CommandBarButton_put_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> put_Visible(This,pvarfVisible) ) 

#define _CommandBarButton_get_Width(This,pdx)	\
    ( (This)->lpVtbl -> get_Width(This,pdx) ) 

#define _CommandBarButton_put_Width(This,pdx)	\
    ( (This)->lpVtbl -> put_Width(This,pdx) ) 

#define _CommandBarButton_get_IsPriorityDropped(This,pvarfDropped)	\
    ( (This)->lpVtbl -> get_IsPriorityDropped(This,pvarfDropped) ) 

#define _CommandBarButton_Reserved1(This)	\
    ( (This)->lpVtbl -> Reserved1(This) ) 

#define _CommandBarButton_Reserved2(This)	\
    ( (This)->lpVtbl -> Reserved2(This) ) 

#define _CommandBarButton_Reserved3(This)	\
    ( (This)->lpVtbl -> Reserved3(This) ) 

#define _CommandBarButton_Reserved4(This)	\
    ( (This)->lpVtbl -> Reserved4(This) ) 

#define _CommandBarButton_Reserved5(This)	\
    ( (This)->lpVtbl -> Reserved5(This) ) 

#define _CommandBarButton_Reserved6(This)	\
    ( (This)->lpVtbl -> Reserved6(This) ) 

#define _CommandBarButton_Reserved7(This)	\
    ( (This)->lpVtbl -> Reserved7(This) ) 


#define _CommandBarButton_get_BuiltInFace(This,pvarfBuiltIn)	\
    ( (This)->lpVtbl -> get_BuiltInFace(This,pvarfBuiltIn) ) 

#define _CommandBarButton_put_BuiltInFace(This,pvarfBuiltIn)	\
    ( (This)->lpVtbl -> put_BuiltInFace(This,pvarfBuiltIn) ) 

#define _CommandBarButton_CopyFace(This)	\
    ( (This)->lpVtbl -> CopyFace(This) ) 

#define _CommandBarButton_get_FaceId(This,pid)	\
    ( (This)->lpVtbl -> get_FaceId(This,pid) ) 

#define _CommandBarButton_put_FaceId(This,pid)	\
    ( (This)->lpVtbl -> put_FaceId(This,pid) ) 

#define _CommandBarButton_PasteFace(This)	\
    ( (This)->lpVtbl -> PasteFace(This) ) 

#define _CommandBarButton_get_ShortcutText(This,pbstrText)	\
    ( (This)->lpVtbl -> get_ShortcutText(This,pbstrText) ) 

#define _CommandBarButton_put_ShortcutText(This,pbstrText)	\
    ( (This)->lpVtbl -> put_ShortcutText(This,pbstrText) ) 

#define _CommandBarButton_get_State(This,pstate)	\
    ( (This)->lpVtbl -> get_State(This,pstate) ) 

#define _CommandBarButton_put_State(This,pstate)	\
    ( (This)->lpVtbl -> put_State(This,pstate) ) 

#define _CommandBarButton_get_Style(This,pstyle)	\
    ( (This)->lpVtbl -> get_Style(This,pstyle) ) 

#define _CommandBarButton_put_Style(This,pstyle)	\
    ( (This)->lpVtbl -> put_Style(This,pstyle) ) 

#define _CommandBarButton_get_HyperlinkType(This,phlType)	\
    ( (This)->lpVtbl -> get_HyperlinkType(This,phlType) ) 

#define _CommandBarButton_put_HyperlinkType(This,phlType)	\
    ( (This)->lpVtbl -> put_HyperlinkType(This,phlType) ) 

#define _CommandBarButton_get_Picture(This,ppdispPicture)	\
    ( (This)->lpVtbl -> get_Picture(This,ppdispPicture) ) 

#define _CommandBarButton_put_Picture(This,ppdispPicture)	\
    ( (This)->lpVtbl -> put_Picture(This,ppdispPicture) ) 

#define _CommandBarButton_get_Mask(This,ppipictdispMask)	\
    ( (This)->lpVtbl -> get_Mask(This,ppipictdispMask) ) 

#define _CommandBarButton_put_Mask(This,ppipictdispMask)	\
    ( (This)->lpVtbl -> put_Mask(This,ppipictdispMask) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CommandBarButton_INTERFACE_DEFINED__ */


#ifndef __CommandBarPopup_INTERFACE_DEFINED__
#define __CommandBarPopup_INTERFACE_DEFINED__

/* interface CommandBarPopup */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_CommandBarPopup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C030A-0000-0000-C000-000000000046")
    CommandBarPopup : public CommandBarControl
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandBar( 
            /* [retval][out] */ CommandBar **ppcb) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Controls( 
            /* [retval][out] */ CommandBarControls **ppcbcs) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OLEMenuGroup( 
            /* [retval][out] */ MsoOLEMenuGroup *pomg) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OLEMenuGroup( 
            /* [in] */ MsoOLEMenuGroup pomg) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CommandBarPopupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CommandBarPopup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CommandBarPopup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CommandBarPopup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CommandBarPopup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CommandBarPopup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CommandBarPopup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CommandBarPopup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accParent )( 
            CommandBarPopup * This,
            /* [retval][out] */ IDispatch **ppdispParent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChildCount )( 
            CommandBarPopup * This,
            /* [retval][out] */ long *pcountChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChild )( 
            CommandBarPopup * This,
            /* [in] */ VARIANT varChild,
            /* [retval][out] */ IDispatch **ppdispChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accName )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszName);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accValue )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszValue);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDescription )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDescription);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accRole )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarRole);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accState )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarState);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelp )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszHelp);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelpTopic )( 
            CommandBarPopup * This,
            /* [out] */ BSTR *pszHelpFile,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ long *pidTopic);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accKeyboardShortcut )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszKeyboardShortcut);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accFocus )( 
            CommandBarPopup * This,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accSelection )( 
            CommandBarPopup * This,
            /* [retval][out] */ VARIANT *pvarChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDefaultAction )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDefaultAction);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accSelect )( 
            CommandBarPopup * This,
            /* [in] */ long flagsSelect,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accLocation )( 
            CommandBarPopup * This,
            /* [out] */ long *pxLeft,
            /* [out] */ long *pyTop,
            /* [out] */ long *pcxWidth,
            /* [out] */ long *pcyHeight,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accNavigate )( 
            CommandBarPopup * This,
            /* [in] */ long navDir,
            /* [optional][in] */ VARIANT varStart,
            /* [retval][out] */ VARIANT *pvarEndUpAt);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accHitTest )( 
            CommandBarPopup * This,
            /* [in] */ long xLeft,
            /* [in] */ long yTop,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accDoDefaultAction )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accName )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszName);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accValue )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            CommandBarPopup * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            CommandBarPopup * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginGroup )( 
            CommandBarPopup * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBeginGroup);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BeginGroup )( 
            CommandBarPopup * This,
            /* [in] */ VARIANT_BOOL pvarfBeginGroup);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuiltIn )( 
            CommandBarPopup * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            CommandBarPopup * This,
            /* [retval][out] */ BSTR *pbstrCaption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            CommandBarPopup * This,
            /* [in] */ BSTR pbstrCaption);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Control )( 
            CommandBarPopup * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT Temporary);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DescriptionText )( 
            CommandBarPopup * This,
            /* [retval][out] */ BSTR *pbstrText);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DescriptionText )( 
            CommandBarPopup * This,
            /* [in] */ BSTR pbstrText);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            CommandBarPopup * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfEnabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            CommandBarPopup * This,
            /* [in] */ VARIANT_BOOL pvarfEnabled);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            CommandBarPopup * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            CommandBarPopup * This,
            /* [retval][out] */ int *pdy);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            CommandBarPopup * This,
            /* [in] */ int pdy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpContextId )( 
            CommandBarPopup * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpContextId )( 
            CommandBarPopup * This,
            /* [in] */ int pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpFile )( 
            CommandBarPopup * This,
            /* [retval][out] */ BSTR *pbstrFilename);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpFile )( 
            CommandBarPopup * This,
            /* [in] */ BSTR pbstrFilename);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            CommandBarPopup * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            CommandBarPopup * This,
            /* [retval][out] */ int *pi);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstanceId )( 
            CommandBarPopup * This,
            /* [retval][out] */ long *pid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            CommandBarPopup * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            CommandBarPopup * This,
            /* [retval][out] */ int *px);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OLEUsage )( 
            CommandBarPopup * This,
            /* [retval][out] */ MsoControlOLEUsage *pcou);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OLEUsage )( 
            CommandBarPopup * This,
            /* [in] */ MsoControlOLEUsage pcou);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnAction )( 
            CommandBarPopup * This,
            /* [retval][out] */ BSTR *pbstrOnAction);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnAction )( 
            CommandBarPopup * This,
            /* [in] */ BSTR pbstrOnAction);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CommandBarPopup * This,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parameter )( 
            CommandBarPopup * This,
            /* [retval][out] */ BSTR *pbstrParam);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Parameter )( 
            CommandBarPopup * This,
            /* [in] */ BSTR pbstrParam);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            CommandBarPopup * This,
            /* [retval][out] */ int *pnPri);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Priority )( 
            CommandBarPopup * This,
            /* [in] */ int pnPri);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            CommandBarPopup * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            CommandBarPopup * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            CommandBarPopup * This,
            /* [retval][out] */ BSTR *pbstrTag);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Tag )( 
            CommandBarPopup * This,
            /* [in] */ BSTR pbstrTag);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TooltipText )( 
            CommandBarPopup * This,
            /* [retval][out] */ BSTR *pbstrTooltip);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TooltipText )( 
            CommandBarPopup * This,
            /* [in] */ BSTR pbstrTooltip);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            CommandBarPopup * This,
            /* [retval][out] */ int *py);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CommandBarPopup * This,
            /* [retval][out] */ MsoControlType *ptype);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            CommandBarPopup * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            CommandBarPopup * This,
            /* [in] */ VARIANT_BOOL pvarfVisible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            CommandBarPopup * This,
            /* [retval][out] */ int *pdx);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            CommandBarPopup * This,
            /* [in] */ int pdx);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsPriorityDropped )( 
            CommandBarPopup * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDropped);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved1 )( 
            CommandBarPopup * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved2 )( 
            CommandBarPopup * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved3 )( 
            CommandBarPopup * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved4 )( 
            CommandBarPopup * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved5 )( 
            CommandBarPopup * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved6 )( 
            CommandBarPopup * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved7 )( 
            CommandBarPopup * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBar )( 
            CommandBarPopup * This,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Controls )( 
            CommandBarPopup * This,
            /* [retval][out] */ CommandBarControls **ppcbcs);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OLEMenuGroup )( 
            CommandBarPopup * This,
            /* [retval][out] */ MsoOLEMenuGroup *pomg);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OLEMenuGroup )( 
            CommandBarPopup * This,
            /* [in] */ MsoOLEMenuGroup pomg);
        
        END_INTERFACE
    } CommandBarPopupVtbl;

    interface CommandBarPopup
    {
        CONST_VTBL struct CommandBarPopupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CommandBarPopup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CommandBarPopup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CommandBarPopup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CommandBarPopup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CommandBarPopup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CommandBarPopup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CommandBarPopup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CommandBarPopup_get_accParent(This,ppdispParent)	\
    ( (This)->lpVtbl -> get_accParent(This,ppdispParent) ) 

#define CommandBarPopup_get_accChildCount(This,pcountChildren)	\
    ( (This)->lpVtbl -> get_accChildCount(This,pcountChildren) ) 

#define CommandBarPopup_get_accChild(This,varChild,ppdispChild)	\
    ( (This)->lpVtbl -> get_accChild(This,varChild,ppdispChild) ) 

#define CommandBarPopup_get_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> get_accName(This,varChild,pszName) ) 

#define CommandBarPopup_get_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> get_accValue(This,varChild,pszValue) ) 

#define CommandBarPopup_get_accDescription(This,varChild,pszDescription)	\
    ( (This)->lpVtbl -> get_accDescription(This,varChild,pszDescription) ) 

#define CommandBarPopup_get_accRole(This,varChild,pvarRole)	\
    ( (This)->lpVtbl -> get_accRole(This,varChild,pvarRole) ) 

#define CommandBarPopup_get_accState(This,varChild,pvarState)	\
    ( (This)->lpVtbl -> get_accState(This,varChild,pvarState) ) 

#define CommandBarPopup_get_accHelp(This,varChild,pszHelp)	\
    ( (This)->lpVtbl -> get_accHelp(This,varChild,pszHelp) ) 

#define CommandBarPopup_get_accHelpTopic(This,pszHelpFile,varChild,pidTopic)	\
    ( (This)->lpVtbl -> get_accHelpTopic(This,pszHelpFile,varChild,pidTopic) ) 

#define CommandBarPopup_get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut)	\
    ( (This)->lpVtbl -> get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut) ) 

#define CommandBarPopup_get_accFocus(This,pvarChild)	\
    ( (This)->lpVtbl -> get_accFocus(This,pvarChild) ) 

#define CommandBarPopup_get_accSelection(This,pvarChildren)	\
    ( (This)->lpVtbl -> get_accSelection(This,pvarChildren) ) 

#define CommandBarPopup_get_accDefaultAction(This,varChild,pszDefaultAction)	\
    ( (This)->lpVtbl -> get_accDefaultAction(This,varChild,pszDefaultAction) ) 

#define CommandBarPopup_accSelect(This,flagsSelect,varChild)	\
    ( (This)->lpVtbl -> accSelect(This,flagsSelect,varChild) ) 

#define CommandBarPopup_accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild)	\
    ( (This)->lpVtbl -> accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild) ) 

#define CommandBarPopup_accNavigate(This,navDir,varStart,pvarEndUpAt)	\
    ( (This)->lpVtbl -> accNavigate(This,navDir,varStart,pvarEndUpAt) ) 

#define CommandBarPopup_accHitTest(This,xLeft,yTop,pvarChild)	\
    ( (This)->lpVtbl -> accHitTest(This,xLeft,yTop,pvarChild) ) 

#define CommandBarPopup_accDoDefaultAction(This,varChild)	\
    ( (This)->lpVtbl -> accDoDefaultAction(This,varChild) ) 

#define CommandBarPopup_put_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> put_accName(This,varChild,pszName) ) 

#define CommandBarPopup_put_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> put_accValue(This,varChild,pszValue) ) 


#define CommandBarPopup_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define CommandBarPopup_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define CommandBarPopup_get_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> get_BeginGroup(This,pvarfBeginGroup) ) 

#define CommandBarPopup_put_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> put_BeginGroup(This,pvarfBeginGroup) ) 

#define CommandBarPopup_get_BuiltIn(This,pvarfBuiltIn)	\
    ( (This)->lpVtbl -> get_BuiltIn(This,pvarfBuiltIn) ) 

#define CommandBarPopup_get_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> get_Caption(This,pbstrCaption) ) 

#define CommandBarPopup_put_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> put_Caption(This,pbstrCaption) ) 

#define CommandBarPopup_get_Control(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Control(This,ppidisp) ) 

#define CommandBarPopup_Copy(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Copy(This,Bar,Before,ppcbc) ) 

#define CommandBarPopup_Delete(This,Temporary)	\
    ( (This)->lpVtbl -> Delete(This,Temporary) ) 

#define CommandBarPopup_get_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> get_DescriptionText(This,pbstrText) ) 

#define CommandBarPopup_put_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> put_DescriptionText(This,pbstrText) ) 

#define CommandBarPopup_get_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,pvarfEnabled) ) 

#define CommandBarPopup_put_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,pvarfEnabled) ) 

#define CommandBarPopup_Execute(This)	\
    ( (This)->lpVtbl -> Execute(This) ) 

#define CommandBarPopup_get_Height(This,pdy)	\
    ( (This)->lpVtbl -> get_Height(This,pdy) ) 

#define CommandBarPopup_put_Height(This,pdy)	\
    ( (This)->lpVtbl -> put_Height(This,pdy) ) 

#define CommandBarPopup_get_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> get_HelpContextId(This,pid) ) 

#define CommandBarPopup_put_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> put_HelpContextId(This,pid) ) 

#define CommandBarPopup_get_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> get_HelpFile(This,pbstrFilename) ) 

#define CommandBarPopup_put_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> put_HelpFile(This,pbstrFilename) ) 

#define CommandBarPopup_get_Id(This,pid)	\
    ( (This)->lpVtbl -> get_Id(This,pid) ) 

#define CommandBarPopup_get_Index(This,pi)	\
    ( (This)->lpVtbl -> get_Index(This,pi) ) 

#define CommandBarPopup_get_InstanceId(This,pid)	\
    ( (This)->lpVtbl -> get_InstanceId(This,pid) ) 

#define CommandBarPopup_Move(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Move(This,Bar,Before,ppcbc) ) 

#define CommandBarPopup_get_Left(This,px)	\
    ( (This)->lpVtbl -> get_Left(This,px) ) 

#define CommandBarPopup_get_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> get_OLEUsage(This,pcou) ) 

#define CommandBarPopup_put_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> put_OLEUsage(This,pcou) ) 

#define CommandBarPopup_get_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> get_OnAction(This,pbstrOnAction) ) 

#define CommandBarPopup_put_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> put_OnAction(This,pbstrOnAction) ) 

#define CommandBarPopup_get_Parent(This,ppcb)	\
    ( (This)->lpVtbl -> get_Parent(This,ppcb) ) 

#define CommandBarPopup_get_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> get_Parameter(This,pbstrParam) ) 

#define CommandBarPopup_put_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> put_Parameter(This,pbstrParam) ) 

#define CommandBarPopup_get_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> get_Priority(This,pnPri) ) 

#define CommandBarPopup_put_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> put_Priority(This,pnPri) ) 

#define CommandBarPopup_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define CommandBarPopup_SetFocus(This)	\
    ( (This)->lpVtbl -> SetFocus(This) ) 

#define CommandBarPopup_get_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> get_Tag(This,pbstrTag) ) 

#define CommandBarPopup_put_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> put_Tag(This,pbstrTag) ) 

#define CommandBarPopup_get_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> get_TooltipText(This,pbstrTooltip) ) 

#define CommandBarPopup_put_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> put_TooltipText(This,pbstrTooltip) ) 

#define CommandBarPopup_get_Top(This,py)	\
    ( (This)->lpVtbl -> get_Top(This,py) ) 

#define CommandBarPopup_get_Type(This,ptype)	\
    ( (This)->lpVtbl -> get_Type(This,ptype) ) 

#define CommandBarPopup_get_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pvarfVisible) ) 

#define CommandBarPopup_put_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> put_Visible(This,pvarfVisible) ) 

#define CommandBarPopup_get_Width(This,pdx)	\
    ( (This)->lpVtbl -> get_Width(This,pdx) ) 

#define CommandBarPopup_put_Width(This,pdx)	\
    ( (This)->lpVtbl -> put_Width(This,pdx) ) 

#define CommandBarPopup_get_IsPriorityDropped(This,pvarfDropped)	\
    ( (This)->lpVtbl -> get_IsPriorityDropped(This,pvarfDropped) ) 

#define CommandBarPopup_Reserved1(This)	\
    ( (This)->lpVtbl -> Reserved1(This) ) 

#define CommandBarPopup_Reserved2(This)	\
    ( (This)->lpVtbl -> Reserved2(This) ) 

#define CommandBarPopup_Reserved3(This)	\
    ( (This)->lpVtbl -> Reserved3(This) ) 

#define CommandBarPopup_Reserved4(This)	\
    ( (This)->lpVtbl -> Reserved4(This) ) 

#define CommandBarPopup_Reserved5(This)	\
    ( (This)->lpVtbl -> Reserved5(This) ) 

#define CommandBarPopup_Reserved6(This)	\
    ( (This)->lpVtbl -> Reserved6(This) ) 

#define CommandBarPopup_Reserved7(This)	\
    ( (This)->lpVtbl -> Reserved7(This) ) 


#define CommandBarPopup_get_CommandBar(This,ppcb)	\
    ( (This)->lpVtbl -> get_CommandBar(This,ppcb) ) 

#define CommandBarPopup_get_Controls(This,ppcbcs)	\
    ( (This)->lpVtbl -> get_Controls(This,ppcbcs) ) 

#define CommandBarPopup_get_OLEMenuGroup(This,pomg)	\
    ( (This)->lpVtbl -> get_OLEMenuGroup(This,pomg) ) 

#define CommandBarPopup_put_OLEMenuGroup(This,pomg)	\
    ( (This)->lpVtbl -> put_OLEMenuGroup(This,pomg) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CommandBarPopup_INTERFACE_DEFINED__ */


#ifndef ___CommandBarComboBox_INTERFACE_DEFINED__
#define ___CommandBarComboBox_INTERFACE_DEFINED__

/* interface _CommandBarComboBox */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__CommandBarComboBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C030C-0000-0000-C000-000000000046")
    _CommandBarComboBox : public CommandBarControl
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddItem( 
            /* [in] */ BSTR Text,
            /* [optional][in] */ VARIANT Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DropDownLines( 
            /* [retval][out] */ int *pcLines) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DropDownLines( 
            /* [in] */ int pcLines) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DropDownWidth( 
            /* [retval][out] */ int *pdx) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DropDownWidth( 
            /* [in] */ int pdx) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_List( 
            /* [in] */ int Index,
            /* [retval][out] */ BSTR *pbstrItem) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_List( 
            /* [in] */ int Index,
            /* [in] */ BSTR pbstrItem) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListCount( 
            /* [retval][out] */ int *pcItems) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListHeaderCount( 
            /* [retval][out] */ int *pcItems) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ListHeaderCount( 
            /* [in] */ int pcItems) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListIndex( 
            /* [retval][out] */ int *pi) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ListIndex( 
            /* [in] */ int pi) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveItem( 
            /* [in] */ int Index) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Style( 
            /* [retval][out] */ MsoComboStyle *pstyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Style( 
            /* [in] */ MsoComboStyle pstyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *pbstrText) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR pbstrText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _CommandBarComboBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CommandBarComboBox * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CommandBarComboBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CommandBarComboBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CommandBarComboBox * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CommandBarComboBox * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CommandBarComboBox * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CommandBarComboBox * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accParent )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ IDispatch **ppdispParent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChildCount )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ long *pcountChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChild )( 
            _CommandBarComboBox * This,
            /* [in] */ VARIANT varChild,
            /* [retval][out] */ IDispatch **ppdispChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accName )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszName);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accValue )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszValue);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDescription )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDescription);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accRole )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarRole);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accState )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarState);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelp )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszHelp);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelpTopic )( 
            _CommandBarComboBox * This,
            /* [out] */ BSTR *pszHelpFile,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ long *pidTopic);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accKeyboardShortcut )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszKeyboardShortcut);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accFocus )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accSelection )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ VARIANT *pvarChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDefaultAction )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDefaultAction);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accSelect )( 
            _CommandBarComboBox * This,
            /* [in] */ long flagsSelect,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accLocation )( 
            _CommandBarComboBox * This,
            /* [out] */ long *pxLeft,
            /* [out] */ long *pyTop,
            /* [out] */ long *pcxWidth,
            /* [out] */ long *pcyHeight,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accNavigate )( 
            _CommandBarComboBox * This,
            /* [in] */ long navDir,
            /* [optional][in] */ VARIANT varStart,
            /* [retval][out] */ VARIANT *pvarEndUpAt);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accHitTest )( 
            _CommandBarComboBox * This,
            /* [in] */ long xLeft,
            /* [in] */ long yTop,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accDoDefaultAction )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accName )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszName);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accValue )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginGroup )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBeginGroup);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BeginGroup )( 
            _CommandBarComboBox * This,
            /* [in] */ VARIANT_BOOL pvarfBeginGroup);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuiltIn )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ BSTR *pbstrCaption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _CommandBarComboBox * This,
            /* [in] */ BSTR pbstrCaption);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Control )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT Temporary);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DescriptionText )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ BSTR *pbstrText);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DescriptionText )( 
            _CommandBarComboBox * This,
            /* [in] */ BSTR pbstrText);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfEnabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _CommandBarComboBox * This,
            /* [in] */ VARIANT_BOOL pvarfEnabled);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            _CommandBarComboBox * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pdy);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            _CommandBarComboBox * This,
            /* [in] */ int pdy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpContextId )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpContextId )( 
            _CommandBarComboBox * This,
            /* [in] */ int pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpFile )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ BSTR *pbstrFilename);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpFile )( 
            _CommandBarComboBox * This,
            /* [in] */ BSTR pbstrFilename);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pi);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstanceId )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ long *pid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _CommandBarComboBox * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *px);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OLEUsage )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ MsoControlOLEUsage *pcou);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OLEUsage )( 
            _CommandBarComboBox * This,
            /* [in] */ MsoControlOLEUsage pcou);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnAction )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ BSTR *pbstrOnAction);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnAction )( 
            _CommandBarComboBox * This,
            /* [in] */ BSTR pbstrOnAction);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parameter )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ BSTR *pbstrParam);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Parameter )( 
            _CommandBarComboBox * This,
            /* [in] */ BSTR pbstrParam);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pnPri);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Priority )( 
            _CommandBarComboBox * This,
            /* [in] */ int pnPri);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _CommandBarComboBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            _CommandBarComboBox * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ BSTR *pbstrTag);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Tag )( 
            _CommandBarComboBox * This,
            /* [in] */ BSTR pbstrTag);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TooltipText )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ BSTR *pbstrTooltip);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TooltipText )( 
            _CommandBarComboBox * This,
            /* [in] */ BSTR pbstrTooltip);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *py);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ MsoControlType *ptype);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _CommandBarComboBox * This,
            /* [in] */ VARIANT_BOOL pvarfVisible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pdx);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            _CommandBarComboBox * This,
            /* [in] */ int pdx);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsPriorityDropped )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDropped);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved1 )( 
            _CommandBarComboBox * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved2 )( 
            _CommandBarComboBox * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved3 )( 
            _CommandBarComboBox * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved4 )( 
            _CommandBarComboBox * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved5 )( 
            _CommandBarComboBox * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved6 )( 
            _CommandBarComboBox * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved7 )( 
            _CommandBarComboBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddItem )( 
            _CommandBarComboBox * This,
            /* [in] */ BSTR Text,
            /* [optional][in] */ VARIANT Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            _CommandBarComboBox * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DropDownLines )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pcLines);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DropDownLines )( 
            _CommandBarComboBox * This,
            /* [in] */ int pcLines);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DropDownWidth )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pdx);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DropDownWidth )( 
            _CommandBarComboBox * This,
            /* [in] */ int pdx);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_List )( 
            _CommandBarComboBox * This,
            /* [in] */ int Index,
            /* [retval][out] */ BSTR *pbstrItem);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_List )( 
            _CommandBarComboBox * This,
            /* [in] */ int Index,
            /* [in] */ BSTR pbstrItem);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListCount )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pcItems);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListHeaderCount )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pcItems);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ListHeaderCount )( 
            _CommandBarComboBox * This,
            /* [in] */ int pcItems);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListIndex )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ int *pi);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ListIndex )( 
            _CommandBarComboBox * This,
            /* [in] */ int pi);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveItem )( 
            _CommandBarComboBox * This,
            /* [in] */ int Index);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Style )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ MsoComboStyle *pstyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Style )( 
            _CommandBarComboBox * This,
            /* [in] */ MsoComboStyle pstyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            _CommandBarComboBox * This,
            /* [retval][out] */ BSTR *pbstrText);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            _CommandBarComboBox * This,
            /* [in] */ BSTR pbstrText);
        
        END_INTERFACE
    } _CommandBarComboBoxVtbl;

    interface _CommandBarComboBox
    {
        CONST_VTBL struct _CommandBarComboBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CommandBarComboBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CommandBarComboBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CommandBarComboBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CommandBarComboBox_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CommandBarComboBox_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CommandBarComboBox_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CommandBarComboBox_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CommandBarComboBox_get_accParent(This,ppdispParent)	\
    ( (This)->lpVtbl -> get_accParent(This,ppdispParent) ) 

#define _CommandBarComboBox_get_accChildCount(This,pcountChildren)	\
    ( (This)->lpVtbl -> get_accChildCount(This,pcountChildren) ) 

#define _CommandBarComboBox_get_accChild(This,varChild,ppdispChild)	\
    ( (This)->lpVtbl -> get_accChild(This,varChild,ppdispChild) ) 

#define _CommandBarComboBox_get_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> get_accName(This,varChild,pszName) ) 

#define _CommandBarComboBox_get_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> get_accValue(This,varChild,pszValue) ) 

#define _CommandBarComboBox_get_accDescription(This,varChild,pszDescription)	\
    ( (This)->lpVtbl -> get_accDescription(This,varChild,pszDescription) ) 

#define _CommandBarComboBox_get_accRole(This,varChild,pvarRole)	\
    ( (This)->lpVtbl -> get_accRole(This,varChild,pvarRole) ) 

#define _CommandBarComboBox_get_accState(This,varChild,pvarState)	\
    ( (This)->lpVtbl -> get_accState(This,varChild,pvarState) ) 

#define _CommandBarComboBox_get_accHelp(This,varChild,pszHelp)	\
    ( (This)->lpVtbl -> get_accHelp(This,varChild,pszHelp) ) 

#define _CommandBarComboBox_get_accHelpTopic(This,pszHelpFile,varChild,pidTopic)	\
    ( (This)->lpVtbl -> get_accHelpTopic(This,pszHelpFile,varChild,pidTopic) ) 

#define _CommandBarComboBox_get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut)	\
    ( (This)->lpVtbl -> get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut) ) 

#define _CommandBarComboBox_get_accFocus(This,pvarChild)	\
    ( (This)->lpVtbl -> get_accFocus(This,pvarChild) ) 

#define _CommandBarComboBox_get_accSelection(This,pvarChildren)	\
    ( (This)->lpVtbl -> get_accSelection(This,pvarChildren) ) 

#define _CommandBarComboBox_get_accDefaultAction(This,varChild,pszDefaultAction)	\
    ( (This)->lpVtbl -> get_accDefaultAction(This,varChild,pszDefaultAction) ) 

#define _CommandBarComboBox_accSelect(This,flagsSelect,varChild)	\
    ( (This)->lpVtbl -> accSelect(This,flagsSelect,varChild) ) 

#define _CommandBarComboBox_accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild)	\
    ( (This)->lpVtbl -> accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild) ) 

#define _CommandBarComboBox_accNavigate(This,navDir,varStart,pvarEndUpAt)	\
    ( (This)->lpVtbl -> accNavigate(This,navDir,varStart,pvarEndUpAt) ) 

#define _CommandBarComboBox_accHitTest(This,xLeft,yTop,pvarChild)	\
    ( (This)->lpVtbl -> accHitTest(This,xLeft,yTop,pvarChild) ) 

#define _CommandBarComboBox_accDoDefaultAction(This,varChild)	\
    ( (This)->lpVtbl -> accDoDefaultAction(This,varChild) ) 

#define _CommandBarComboBox_put_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> put_accName(This,varChild,pszName) ) 

#define _CommandBarComboBox_put_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> put_accValue(This,varChild,pszValue) ) 


#define _CommandBarComboBox_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define _CommandBarComboBox_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define _CommandBarComboBox_get_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> get_BeginGroup(This,pvarfBeginGroup) ) 

#define _CommandBarComboBox_put_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> put_BeginGroup(This,pvarfBeginGroup) ) 

#define _CommandBarComboBox_get_BuiltIn(This,pvarfBuiltIn)	\
    ( (This)->lpVtbl -> get_BuiltIn(This,pvarfBuiltIn) ) 

#define _CommandBarComboBox_get_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> get_Caption(This,pbstrCaption) ) 

#define _CommandBarComboBox_put_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> put_Caption(This,pbstrCaption) ) 

#define _CommandBarComboBox_get_Control(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Control(This,ppidisp) ) 

#define _CommandBarComboBox_Copy(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Copy(This,Bar,Before,ppcbc) ) 

#define _CommandBarComboBox_Delete(This,Temporary)	\
    ( (This)->lpVtbl -> Delete(This,Temporary) ) 

#define _CommandBarComboBox_get_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> get_DescriptionText(This,pbstrText) ) 

#define _CommandBarComboBox_put_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> put_DescriptionText(This,pbstrText) ) 

#define _CommandBarComboBox_get_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,pvarfEnabled) ) 

#define _CommandBarComboBox_put_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,pvarfEnabled) ) 

#define _CommandBarComboBox_Execute(This)	\
    ( (This)->lpVtbl -> Execute(This) ) 

#define _CommandBarComboBox_get_Height(This,pdy)	\
    ( (This)->lpVtbl -> get_Height(This,pdy) ) 

#define _CommandBarComboBox_put_Height(This,pdy)	\
    ( (This)->lpVtbl -> put_Height(This,pdy) ) 

#define _CommandBarComboBox_get_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> get_HelpContextId(This,pid) ) 

#define _CommandBarComboBox_put_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> put_HelpContextId(This,pid) ) 

#define _CommandBarComboBox_get_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> get_HelpFile(This,pbstrFilename) ) 

#define _CommandBarComboBox_put_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> put_HelpFile(This,pbstrFilename) ) 

#define _CommandBarComboBox_get_Id(This,pid)	\
    ( (This)->lpVtbl -> get_Id(This,pid) ) 

#define _CommandBarComboBox_get_Index(This,pi)	\
    ( (This)->lpVtbl -> get_Index(This,pi) ) 

#define _CommandBarComboBox_get_InstanceId(This,pid)	\
    ( (This)->lpVtbl -> get_InstanceId(This,pid) ) 

#define _CommandBarComboBox_Move(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Move(This,Bar,Before,ppcbc) ) 

#define _CommandBarComboBox_get_Left(This,px)	\
    ( (This)->lpVtbl -> get_Left(This,px) ) 

#define _CommandBarComboBox_get_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> get_OLEUsage(This,pcou) ) 

#define _CommandBarComboBox_put_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> put_OLEUsage(This,pcou) ) 

#define _CommandBarComboBox_get_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> get_OnAction(This,pbstrOnAction) ) 

#define _CommandBarComboBox_put_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> put_OnAction(This,pbstrOnAction) ) 

#define _CommandBarComboBox_get_Parent(This,ppcb)	\
    ( (This)->lpVtbl -> get_Parent(This,ppcb) ) 

#define _CommandBarComboBox_get_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> get_Parameter(This,pbstrParam) ) 

#define _CommandBarComboBox_put_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> put_Parameter(This,pbstrParam) ) 

#define _CommandBarComboBox_get_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> get_Priority(This,pnPri) ) 

#define _CommandBarComboBox_put_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> put_Priority(This,pnPri) ) 

#define _CommandBarComboBox_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _CommandBarComboBox_SetFocus(This)	\
    ( (This)->lpVtbl -> SetFocus(This) ) 

#define _CommandBarComboBox_get_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> get_Tag(This,pbstrTag) ) 

#define _CommandBarComboBox_put_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> put_Tag(This,pbstrTag) ) 

#define _CommandBarComboBox_get_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> get_TooltipText(This,pbstrTooltip) ) 

#define _CommandBarComboBox_put_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> put_TooltipText(This,pbstrTooltip) ) 

#define _CommandBarComboBox_get_Top(This,py)	\
    ( (This)->lpVtbl -> get_Top(This,py) ) 

#define _CommandBarComboBox_get_Type(This,ptype)	\
    ( (This)->lpVtbl -> get_Type(This,ptype) ) 

#define _CommandBarComboBox_get_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pvarfVisible) ) 

#define _CommandBarComboBox_put_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> put_Visible(This,pvarfVisible) ) 

#define _CommandBarComboBox_get_Width(This,pdx)	\
    ( (This)->lpVtbl -> get_Width(This,pdx) ) 

#define _CommandBarComboBox_put_Width(This,pdx)	\
    ( (This)->lpVtbl -> put_Width(This,pdx) ) 

#define _CommandBarComboBox_get_IsPriorityDropped(This,pvarfDropped)	\
    ( (This)->lpVtbl -> get_IsPriorityDropped(This,pvarfDropped) ) 

#define _CommandBarComboBox_Reserved1(This)	\
    ( (This)->lpVtbl -> Reserved1(This) ) 

#define _CommandBarComboBox_Reserved2(This)	\
    ( (This)->lpVtbl -> Reserved2(This) ) 

#define _CommandBarComboBox_Reserved3(This)	\
    ( (This)->lpVtbl -> Reserved3(This) ) 

#define _CommandBarComboBox_Reserved4(This)	\
    ( (This)->lpVtbl -> Reserved4(This) ) 

#define _CommandBarComboBox_Reserved5(This)	\
    ( (This)->lpVtbl -> Reserved5(This) ) 

#define _CommandBarComboBox_Reserved6(This)	\
    ( (This)->lpVtbl -> Reserved6(This) ) 

#define _CommandBarComboBox_Reserved7(This)	\
    ( (This)->lpVtbl -> Reserved7(This) ) 


#define _CommandBarComboBox_AddItem(This,Text,Index)	\
    ( (This)->lpVtbl -> AddItem(This,Text,Index) ) 

#define _CommandBarComboBox_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define _CommandBarComboBox_get_DropDownLines(This,pcLines)	\
    ( (This)->lpVtbl -> get_DropDownLines(This,pcLines) ) 

#define _CommandBarComboBox_put_DropDownLines(This,pcLines)	\
    ( (This)->lpVtbl -> put_DropDownLines(This,pcLines) ) 

#define _CommandBarComboBox_get_DropDownWidth(This,pdx)	\
    ( (This)->lpVtbl -> get_DropDownWidth(This,pdx) ) 

#define _CommandBarComboBox_put_DropDownWidth(This,pdx)	\
    ( (This)->lpVtbl -> put_DropDownWidth(This,pdx) ) 

#define _CommandBarComboBox_get_List(This,Index,pbstrItem)	\
    ( (This)->lpVtbl -> get_List(This,Index,pbstrItem) ) 

#define _CommandBarComboBox_put_List(This,Index,pbstrItem)	\
    ( (This)->lpVtbl -> put_List(This,Index,pbstrItem) ) 

#define _CommandBarComboBox_get_ListCount(This,pcItems)	\
    ( (This)->lpVtbl -> get_ListCount(This,pcItems) ) 

#define _CommandBarComboBox_get_ListHeaderCount(This,pcItems)	\
    ( (This)->lpVtbl -> get_ListHeaderCount(This,pcItems) ) 

#define _CommandBarComboBox_put_ListHeaderCount(This,pcItems)	\
    ( (This)->lpVtbl -> put_ListHeaderCount(This,pcItems) ) 

#define _CommandBarComboBox_get_ListIndex(This,pi)	\
    ( (This)->lpVtbl -> get_ListIndex(This,pi) ) 

#define _CommandBarComboBox_put_ListIndex(This,pi)	\
    ( (This)->lpVtbl -> put_ListIndex(This,pi) ) 

#define _CommandBarComboBox_RemoveItem(This,Index)	\
    ( (This)->lpVtbl -> RemoveItem(This,Index) ) 

#define _CommandBarComboBox_get_Style(This,pstyle)	\
    ( (This)->lpVtbl -> get_Style(This,pstyle) ) 

#define _CommandBarComboBox_put_Style(This,pstyle)	\
    ( (This)->lpVtbl -> put_Style(This,pstyle) ) 

#define _CommandBarComboBox_get_Text(This,pbstrText)	\
    ( (This)->lpVtbl -> get_Text(This,pbstrText) ) 

#define _CommandBarComboBox_put_Text(This,pbstrText)	\
    ( (This)->lpVtbl -> put_Text(This,pbstrText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CommandBarComboBox_INTERFACE_DEFINED__ */


#ifndef ___CommandBarActiveX_INTERFACE_DEFINED__
#define ___CommandBarActiveX_INTERFACE_DEFINED__

/* interface _CommandBarActiveX */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__CommandBarActiveX;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C030D-0000-0000-C000-000000000046")
    _CommandBarActiveX : public CommandBarControl
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ControlCLSID( 
            /* [retval][out] */ BSTR *pbstrClsid) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ControlCLSID( 
            /* [in] */ BSTR pbstrClsid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_QueryControlInterface( 
            /* [in] */ BSTR bstrIid,
            /* [retval][out] */ IUnknown **ppUnk) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetInnerObjectFactory( 
            /* [in] */ IUnknown *pUnk) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE EnsureControl( void) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InitWith( 
            /* [in] */ IUnknown *rhs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _CommandBarActiveXVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CommandBarActiveX * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CommandBarActiveX * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CommandBarActiveX * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CommandBarActiveX * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CommandBarActiveX * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CommandBarActiveX * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CommandBarActiveX * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accParent )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ IDispatch **ppdispParent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChildCount )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ long *pcountChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accChild )( 
            _CommandBarActiveX * This,
            /* [in] */ VARIANT varChild,
            /* [retval][out] */ IDispatch **ppdispChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accName )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszName);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accValue )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszValue);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDescription )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDescription);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accRole )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarRole);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accState )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ VARIANT *pvarState);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelp )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszHelp);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accHelpTopic )( 
            _CommandBarActiveX * This,
            /* [out] */ BSTR *pszHelpFile,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ long *pidTopic);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accKeyboardShortcut )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszKeyboardShortcut);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accFocus )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accSelection )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ VARIANT *pvarChildren);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_accDefaultAction )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [retval][out] */ BSTR *pszDefaultAction);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accSelect )( 
            _CommandBarActiveX * This,
            /* [in] */ long flagsSelect,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accLocation )( 
            _CommandBarActiveX * This,
            /* [out] */ long *pxLeft,
            /* [out] */ long *pyTop,
            /* [out] */ long *pcxWidth,
            /* [out] */ long *pcyHeight,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accNavigate )( 
            _CommandBarActiveX * This,
            /* [in] */ long navDir,
            /* [optional][in] */ VARIANT varStart,
            /* [retval][out] */ VARIANT *pvarEndUpAt);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accHitTest )( 
            _CommandBarActiveX * This,
            /* [in] */ long xLeft,
            /* [in] */ long yTop,
            /* [retval][out] */ VARIANT *pvarChild);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *accDoDefaultAction )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accName )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszName);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_accValue )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT varChild,
            /* [in] */ BSTR pszValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginGroup )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBeginGroup);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BeginGroup )( 
            _CommandBarActiveX * This,
            /* [in] */ VARIANT_BOOL pvarfBeginGroup);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuiltIn )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfBuiltIn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ BSTR *pbstrCaption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _CommandBarActiveX * This,
            /* [in] */ BSTR pbstrCaption);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Control )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT Temporary);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DescriptionText )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ BSTR *pbstrText);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DescriptionText )( 
            _CommandBarActiveX * This,
            /* [in] */ BSTR pbstrText);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfEnabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _CommandBarActiveX * This,
            /* [in] */ VARIANT_BOOL pvarfEnabled);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            _CommandBarActiveX * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ int *pdy);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            _CommandBarActiveX * This,
            /* [in] */ int pdy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpContextId )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpContextId )( 
            _CommandBarActiveX * This,
            /* [in] */ int pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpFile )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ BSTR *pbstrFilename);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpFile )( 
            _CommandBarActiveX * This,
            /* [in] */ BSTR pbstrFilename);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ int *pid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ int *pi);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstanceId )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ long *pid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _CommandBarActiveX * This,
            /* [optional][in] */ VARIANT Bar,
            /* [optional][in] */ VARIANT Before,
            /* [retval][out] */ CommandBarControl **ppcbc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ int *px);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OLEUsage )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ MsoControlOLEUsage *pcou);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OLEUsage )( 
            _CommandBarActiveX * This,
            /* [in] */ MsoControlOLEUsage pcou);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnAction )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ BSTR *pbstrOnAction);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnAction )( 
            _CommandBarActiveX * This,
            /* [in] */ BSTR pbstrOnAction);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ CommandBar **ppcb);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parameter )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ BSTR *pbstrParam);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Parameter )( 
            _CommandBarActiveX * This,
            /* [in] */ BSTR pbstrParam);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ int *pnPri);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Priority )( 
            _CommandBarActiveX * This,
            /* [in] */ int pnPri);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _CommandBarActiveX * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            _CommandBarActiveX * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ BSTR *pbstrTag);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Tag )( 
            _CommandBarActiveX * This,
            /* [in] */ BSTR pbstrTag);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TooltipText )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ BSTR *pbstrTooltip);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TooltipText )( 
            _CommandBarActiveX * This,
            /* [in] */ BSTR pbstrTooltip);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ int *py);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ MsoControlType *ptype);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _CommandBarActiveX * This,
            /* [in] */ VARIANT_BOOL pvarfVisible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ int *pdx);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            _CommandBarActiveX * This,
            /* [in] */ int pdx);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsPriorityDropped )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfDropped);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved1 )( 
            _CommandBarActiveX * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved2 )( 
            _CommandBarActiveX * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved3 )( 
            _CommandBarActiveX * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved4 )( 
            _CommandBarActiveX * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved5 )( 
            _CommandBarActiveX * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved6 )( 
            _CommandBarActiveX * This);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Reserved7 )( 
            _CommandBarActiveX * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ControlCLSID )( 
            _CommandBarActiveX * This,
            /* [retval][out] */ BSTR *pbstrClsid);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ControlCLSID )( 
            _CommandBarActiveX * This,
            /* [in] */ BSTR pbstrClsid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QueryControlInterface )( 
            _CommandBarActiveX * This,
            /* [in] */ BSTR bstrIid,
            /* [retval][out] */ IUnknown **ppUnk);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetInnerObjectFactory )( 
            _CommandBarActiveX * This,
            /* [in] */ IUnknown *pUnk);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EnsureControl )( 
            _CommandBarActiveX * This);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InitWith )( 
            _CommandBarActiveX * This,
            /* [in] */ IUnknown *rhs);
        
        END_INTERFACE
    } _CommandBarActiveXVtbl;

    interface _CommandBarActiveX
    {
        CONST_VTBL struct _CommandBarActiveXVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CommandBarActiveX_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CommandBarActiveX_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CommandBarActiveX_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CommandBarActiveX_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CommandBarActiveX_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CommandBarActiveX_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CommandBarActiveX_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CommandBarActiveX_get_accParent(This,ppdispParent)	\
    ( (This)->lpVtbl -> get_accParent(This,ppdispParent) ) 

#define _CommandBarActiveX_get_accChildCount(This,pcountChildren)	\
    ( (This)->lpVtbl -> get_accChildCount(This,pcountChildren) ) 

#define _CommandBarActiveX_get_accChild(This,varChild,ppdispChild)	\
    ( (This)->lpVtbl -> get_accChild(This,varChild,ppdispChild) ) 

#define _CommandBarActiveX_get_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> get_accName(This,varChild,pszName) ) 

#define _CommandBarActiveX_get_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> get_accValue(This,varChild,pszValue) ) 

#define _CommandBarActiveX_get_accDescription(This,varChild,pszDescription)	\
    ( (This)->lpVtbl -> get_accDescription(This,varChild,pszDescription) ) 

#define _CommandBarActiveX_get_accRole(This,varChild,pvarRole)	\
    ( (This)->lpVtbl -> get_accRole(This,varChild,pvarRole) ) 

#define _CommandBarActiveX_get_accState(This,varChild,pvarState)	\
    ( (This)->lpVtbl -> get_accState(This,varChild,pvarState) ) 

#define _CommandBarActiveX_get_accHelp(This,varChild,pszHelp)	\
    ( (This)->lpVtbl -> get_accHelp(This,varChild,pszHelp) ) 

#define _CommandBarActiveX_get_accHelpTopic(This,pszHelpFile,varChild,pidTopic)	\
    ( (This)->lpVtbl -> get_accHelpTopic(This,pszHelpFile,varChild,pidTopic) ) 

#define _CommandBarActiveX_get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut)	\
    ( (This)->lpVtbl -> get_accKeyboardShortcut(This,varChild,pszKeyboardShortcut) ) 

#define _CommandBarActiveX_get_accFocus(This,pvarChild)	\
    ( (This)->lpVtbl -> get_accFocus(This,pvarChild) ) 

#define _CommandBarActiveX_get_accSelection(This,pvarChildren)	\
    ( (This)->lpVtbl -> get_accSelection(This,pvarChildren) ) 

#define _CommandBarActiveX_get_accDefaultAction(This,varChild,pszDefaultAction)	\
    ( (This)->lpVtbl -> get_accDefaultAction(This,varChild,pszDefaultAction) ) 

#define _CommandBarActiveX_accSelect(This,flagsSelect,varChild)	\
    ( (This)->lpVtbl -> accSelect(This,flagsSelect,varChild) ) 

#define _CommandBarActiveX_accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild)	\
    ( (This)->lpVtbl -> accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varChild) ) 

#define _CommandBarActiveX_accNavigate(This,navDir,varStart,pvarEndUpAt)	\
    ( (This)->lpVtbl -> accNavigate(This,navDir,varStart,pvarEndUpAt) ) 

#define _CommandBarActiveX_accHitTest(This,xLeft,yTop,pvarChild)	\
    ( (This)->lpVtbl -> accHitTest(This,xLeft,yTop,pvarChild) ) 

#define _CommandBarActiveX_accDoDefaultAction(This,varChild)	\
    ( (This)->lpVtbl -> accDoDefaultAction(This,varChild) ) 

#define _CommandBarActiveX_put_accName(This,varChild,pszName)	\
    ( (This)->lpVtbl -> put_accName(This,varChild,pszName) ) 

#define _CommandBarActiveX_put_accValue(This,varChild,pszValue)	\
    ( (This)->lpVtbl -> put_accValue(This,varChild,pszValue) ) 


#define _CommandBarActiveX_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define _CommandBarActiveX_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define _CommandBarActiveX_get_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> get_BeginGroup(This,pvarfBeginGroup) ) 

#define _CommandBarActiveX_put_BeginGroup(This,pvarfBeginGroup)	\
    ( (This)->lpVtbl -> put_BeginGroup(This,pvarfBeginGroup) ) 

#define _CommandBarActiveX_get_BuiltIn(This,pvarfBuiltIn)	\
    ( (This)->lpVtbl -> get_BuiltIn(This,pvarfBuiltIn) ) 

#define _CommandBarActiveX_get_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> get_Caption(This,pbstrCaption) ) 

#define _CommandBarActiveX_put_Caption(This,pbstrCaption)	\
    ( (This)->lpVtbl -> put_Caption(This,pbstrCaption) ) 

#define _CommandBarActiveX_get_Control(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Control(This,ppidisp) ) 

#define _CommandBarActiveX_Copy(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Copy(This,Bar,Before,ppcbc) ) 

#define _CommandBarActiveX_Delete(This,Temporary)	\
    ( (This)->lpVtbl -> Delete(This,Temporary) ) 

#define _CommandBarActiveX_get_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> get_DescriptionText(This,pbstrText) ) 

#define _CommandBarActiveX_put_DescriptionText(This,pbstrText)	\
    ( (This)->lpVtbl -> put_DescriptionText(This,pbstrText) ) 

#define _CommandBarActiveX_get_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,pvarfEnabled) ) 

#define _CommandBarActiveX_put_Enabled(This,pvarfEnabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,pvarfEnabled) ) 

#define _CommandBarActiveX_Execute(This)	\
    ( (This)->lpVtbl -> Execute(This) ) 

#define _CommandBarActiveX_get_Height(This,pdy)	\
    ( (This)->lpVtbl -> get_Height(This,pdy) ) 

#define _CommandBarActiveX_put_Height(This,pdy)	\
    ( (This)->lpVtbl -> put_Height(This,pdy) ) 

#define _CommandBarActiveX_get_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> get_HelpContextId(This,pid) ) 

#define _CommandBarActiveX_put_HelpContextId(This,pid)	\
    ( (This)->lpVtbl -> put_HelpContextId(This,pid) ) 

#define _CommandBarActiveX_get_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> get_HelpFile(This,pbstrFilename) ) 

#define _CommandBarActiveX_put_HelpFile(This,pbstrFilename)	\
    ( (This)->lpVtbl -> put_HelpFile(This,pbstrFilename) ) 

#define _CommandBarActiveX_get_Id(This,pid)	\
    ( (This)->lpVtbl -> get_Id(This,pid) ) 

#define _CommandBarActiveX_get_Index(This,pi)	\
    ( (This)->lpVtbl -> get_Index(This,pi) ) 

#define _CommandBarActiveX_get_InstanceId(This,pid)	\
    ( (This)->lpVtbl -> get_InstanceId(This,pid) ) 

#define _CommandBarActiveX_Move(This,Bar,Before,ppcbc)	\
    ( (This)->lpVtbl -> Move(This,Bar,Before,ppcbc) ) 

#define _CommandBarActiveX_get_Left(This,px)	\
    ( (This)->lpVtbl -> get_Left(This,px) ) 

#define _CommandBarActiveX_get_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> get_OLEUsage(This,pcou) ) 

#define _CommandBarActiveX_put_OLEUsage(This,pcou)	\
    ( (This)->lpVtbl -> put_OLEUsage(This,pcou) ) 

#define _CommandBarActiveX_get_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> get_OnAction(This,pbstrOnAction) ) 

#define _CommandBarActiveX_put_OnAction(This,pbstrOnAction)	\
    ( (This)->lpVtbl -> put_OnAction(This,pbstrOnAction) ) 

#define _CommandBarActiveX_get_Parent(This,ppcb)	\
    ( (This)->lpVtbl -> get_Parent(This,ppcb) ) 

#define _CommandBarActiveX_get_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> get_Parameter(This,pbstrParam) ) 

#define _CommandBarActiveX_put_Parameter(This,pbstrParam)	\
    ( (This)->lpVtbl -> put_Parameter(This,pbstrParam) ) 

#define _CommandBarActiveX_get_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> get_Priority(This,pnPri) ) 

#define _CommandBarActiveX_put_Priority(This,pnPri)	\
    ( (This)->lpVtbl -> put_Priority(This,pnPri) ) 

#define _CommandBarActiveX_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _CommandBarActiveX_SetFocus(This)	\
    ( (This)->lpVtbl -> SetFocus(This) ) 

#define _CommandBarActiveX_get_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> get_Tag(This,pbstrTag) ) 

#define _CommandBarActiveX_put_Tag(This,pbstrTag)	\
    ( (This)->lpVtbl -> put_Tag(This,pbstrTag) ) 

#define _CommandBarActiveX_get_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> get_TooltipText(This,pbstrTooltip) ) 

#define _CommandBarActiveX_put_TooltipText(This,pbstrTooltip)	\
    ( (This)->lpVtbl -> put_TooltipText(This,pbstrTooltip) ) 

#define _CommandBarActiveX_get_Top(This,py)	\
    ( (This)->lpVtbl -> get_Top(This,py) ) 

#define _CommandBarActiveX_get_Type(This,ptype)	\
    ( (This)->lpVtbl -> get_Type(This,ptype) ) 

#define _CommandBarActiveX_get_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pvarfVisible) ) 

#define _CommandBarActiveX_put_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> put_Visible(This,pvarfVisible) ) 

#define _CommandBarActiveX_get_Width(This,pdx)	\
    ( (This)->lpVtbl -> get_Width(This,pdx) ) 

#define _CommandBarActiveX_put_Width(This,pdx)	\
    ( (This)->lpVtbl -> put_Width(This,pdx) ) 

#define _CommandBarActiveX_get_IsPriorityDropped(This,pvarfDropped)	\
    ( (This)->lpVtbl -> get_IsPriorityDropped(This,pvarfDropped) ) 

#define _CommandBarActiveX_Reserved1(This)	\
    ( (This)->lpVtbl -> Reserved1(This) ) 

#define _CommandBarActiveX_Reserved2(This)	\
    ( (This)->lpVtbl -> Reserved2(This) ) 

#define _CommandBarActiveX_Reserved3(This)	\
    ( (This)->lpVtbl -> Reserved3(This) ) 

#define _CommandBarActiveX_Reserved4(This)	\
    ( (This)->lpVtbl -> Reserved4(This) ) 

#define _CommandBarActiveX_Reserved5(This)	\
    ( (This)->lpVtbl -> Reserved5(This) ) 

#define _CommandBarActiveX_Reserved6(This)	\
    ( (This)->lpVtbl -> Reserved6(This) ) 

#define _CommandBarActiveX_Reserved7(This)	\
    ( (This)->lpVtbl -> Reserved7(This) ) 


#define _CommandBarActiveX_get_ControlCLSID(This,pbstrClsid)	\
    ( (This)->lpVtbl -> get_ControlCLSID(This,pbstrClsid) ) 

#define _CommandBarActiveX_put_ControlCLSID(This,pbstrClsid)	\
    ( (This)->lpVtbl -> put_ControlCLSID(This,pbstrClsid) ) 

#define _CommandBarActiveX_get_QueryControlInterface(This,bstrIid,ppUnk)	\
    ( (This)->lpVtbl -> get_QueryControlInterface(This,bstrIid,ppUnk) ) 

#define _CommandBarActiveX_SetInnerObjectFactory(This,pUnk)	\
    ( (This)->lpVtbl -> SetInnerObjectFactory(This,pUnk) ) 

#define _CommandBarActiveX_EnsureControl(This)	\
    ( (This)->lpVtbl -> EnsureControl(This) ) 

#define _CommandBarActiveX_put_InitWith(This,rhs)	\
    ( (This)->lpVtbl -> put_InitWith(This,rhs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CommandBarActiveX_INTERFACE_DEFINED__ */


#ifndef __Adjustments_INTERFACE_DEFINED__
#define __Adjustments_INTERFACE_DEFINED__

/* interface Adjustments */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_Adjustments;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0310-0000-0000-C000-000000000046")
    Adjustments : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *Count) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ short *Val) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Item( 
            /* [in] */ int Index,
            /* [in] */ short Val) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AdjustmentsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Adjustments * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Adjustments * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Adjustments * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Adjustments * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Adjustments * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Adjustments * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Adjustments * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Adjustments * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Adjustments * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Adjustments * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Adjustments * This,
            /* [retval][out] */ int *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Adjustments * This,
            /* [in] */ int Index,
            /* [retval][out] */ short *Val);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Item )( 
            Adjustments * This,
            /* [in] */ int Index,
            /* [in] */ short Val);
        
        END_INTERFACE
    } AdjustmentsVtbl;

    interface Adjustments
    {
        CONST_VTBL struct AdjustmentsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Adjustments_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Adjustments_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Adjustments_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Adjustments_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Adjustments_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Adjustments_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Adjustments_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Adjustments_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Adjustments_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Adjustments_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Adjustments_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Adjustments_get_Item(This,Index,Val)	\
    ( (This)->lpVtbl -> get_Item(This,Index,Val) ) 

#define Adjustments_put_Item(This,Index,Val)	\
    ( (This)->lpVtbl -> put_Item(This,Index,Val) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Adjustments_INTERFACE_DEFINED__ */


#ifndef __CalloutFormat_INTERFACE_DEFINED__
#define __CalloutFormat_INTERFACE_DEFINED__

/* interface CalloutFormat */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_CalloutFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0311-0000-0000-C000-000000000046")
    CalloutFormat : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AutomaticLength( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CustomDrop( 
            /* [in] */ short Drop) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CustomLength( 
            /* [in] */ short Length) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PresetDrop( 
            /* [in] */ MsoCalloutDropType DropType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Accent( 
            /* [retval][out] */ MsoTriState *Accent) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Accent( 
            /* [in] */ MsoTriState Accent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Angle( 
            /* [retval][out] */ MsoCalloutAngleType *Angle) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Angle( 
            /* [in] */ MsoCalloutAngleType Angle) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoAttach( 
            /* [retval][out] */ MsoTriState *AutoAttach) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoAttach( 
            /* [in] */ MsoTriState AutoAttach) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoLength( 
            /* [retval][out] */ MsoTriState *AutoLength) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Border( 
            /* [retval][out] */ MsoTriState *Border) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Border( 
            /* [in] */ MsoTriState Border) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Drop( 
            /* [retval][out] */ short *Drop) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DropType( 
            /* [retval][out] */ MsoCalloutDropType *DropType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Gap( 
            /* [retval][out] */ short *Gap) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Gap( 
            /* [in] */ short Gap) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ short *Length) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoCalloutType *Type) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ MsoCalloutType Type) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CalloutFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CalloutFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CalloutFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CalloutFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CalloutFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CalloutFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CalloutFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CalloutFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            CalloutFormat * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            CalloutFormat * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CalloutFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AutomaticLength )( 
            CalloutFormat * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CustomDrop )( 
            CalloutFormat * This,
            /* [in] */ short Drop);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CustomLength )( 
            CalloutFormat * This,
            /* [in] */ short Length);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PresetDrop )( 
            CalloutFormat * This,
            /* [in] */ MsoCalloutDropType DropType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Accent )( 
            CalloutFormat * This,
            /* [retval][out] */ MsoTriState *Accent);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Accent )( 
            CalloutFormat * This,
            /* [in] */ MsoTriState Accent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Angle )( 
            CalloutFormat * This,
            /* [retval][out] */ MsoCalloutAngleType *Angle);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Angle )( 
            CalloutFormat * This,
            /* [in] */ MsoCalloutAngleType Angle);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoAttach )( 
            CalloutFormat * This,
            /* [retval][out] */ MsoTriState *AutoAttach);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoAttach )( 
            CalloutFormat * This,
            /* [in] */ MsoTriState AutoAttach);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoLength )( 
            CalloutFormat * This,
            /* [retval][out] */ MsoTriState *AutoLength);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Border )( 
            CalloutFormat * This,
            /* [retval][out] */ MsoTriState *Border);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Border )( 
            CalloutFormat * This,
            /* [in] */ MsoTriState Border);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Drop )( 
            CalloutFormat * This,
            /* [retval][out] */ short *Drop);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DropType )( 
            CalloutFormat * This,
            /* [retval][out] */ MsoCalloutDropType *DropType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Gap )( 
            CalloutFormat * This,
            /* [retval][out] */ short *Gap);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Gap )( 
            CalloutFormat * This,
            /* [in] */ short Gap);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            CalloutFormat * This,
            /* [retval][out] */ short *Length);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            CalloutFormat * This,
            /* [retval][out] */ MsoCalloutType *Type);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            CalloutFormat * This,
            /* [in] */ MsoCalloutType Type);
        
        END_INTERFACE
    } CalloutFormatVtbl;

    interface CalloutFormat
    {
        CONST_VTBL struct CalloutFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CalloutFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CalloutFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CalloutFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CalloutFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CalloutFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CalloutFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CalloutFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CalloutFormat_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define CalloutFormat_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define CalloutFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define CalloutFormat_AutomaticLength(This)	\
    ( (This)->lpVtbl -> AutomaticLength(This) ) 

#define CalloutFormat_CustomDrop(This,Drop)	\
    ( (This)->lpVtbl -> CustomDrop(This,Drop) ) 

#define CalloutFormat_CustomLength(This,Length)	\
    ( (This)->lpVtbl -> CustomLength(This,Length) ) 

#define CalloutFormat_PresetDrop(This,DropType)	\
    ( (This)->lpVtbl -> PresetDrop(This,DropType) ) 

#define CalloutFormat_get_Accent(This,Accent)	\
    ( (This)->lpVtbl -> get_Accent(This,Accent) ) 

#define CalloutFormat_put_Accent(This,Accent)	\
    ( (This)->lpVtbl -> put_Accent(This,Accent) ) 

#define CalloutFormat_get_Angle(This,Angle)	\
    ( (This)->lpVtbl -> get_Angle(This,Angle) ) 

#define CalloutFormat_put_Angle(This,Angle)	\
    ( (This)->lpVtbl -> put_Angle(This,Angle) ) 

#define CalloutFormat_get_AutoAttach(This,AutoAttach)	\
    ( (This)->lpVtbl -> get_AutoAttach(This,AutoAttach) ) 

#define CalloutFormat_put_AutoAttach(This,AutoAttach)	\
    ( (This)->lpVtbl -> put_AutoAttach(This,AutoAttach) ) 

#define CalloutFormat_get_AutoLength(This,AutoLength)	\
    ( (This)->lpVtbl -> get_AutoLength(This,AutoLength) ) 

#define CalloutFormat_get_Border(This,Border)	\
    ( (This)->lpVtbl -> get_Border(This,Border) ) 

#define CalloutFormat_put_Border(This,Border)	\
    ( (This)->lpVtbl -> put_Border(This,Border) ) 

#define CalloutFormat_get_Drop(This,Drop)	\
    ( (This)->lpVtbl -> get_Drop(This,Drop) ) 

#define CalloutFormat_get_DropType(This,DropType)	\
    ( (This)->lpVtbl -> get_DropType(This,DropType) ) 

#define CalloutFormat_get_Gap(This,Gap)	\
    ( (This)->lpVtbl -> get_Gap(This,Gap) ) 

#define CalloutFormat_put_Gap(This,Gap)	\
    ( (This)->lpVtbl -> put_Gap(This,Gap) ) 

#define CalloutFormat_get_Length(This,Length)	\
    ( (This)->lpVtbl -> get_Length(This,Length) ) 

#define CalloutFormat_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define CalloutFormat_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CalloutFormat_INTERFACE_DEFINED__ */


#ifndef __ColorFormat_INTERFACE_DEFINED__
#define __ColorFormat_INTERFACE_DEFINED__

/* interface ColorFormat */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_ColorFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0312-0000-0000-C000-000000000046")
    ColorFormat : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RGB( 
            /* [retval][out] */ MsoRGBType *RGB) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RGB( 
            /* [in] */ MsoRGBType RGB) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SchemeColor( 
            /* [retval][out] */ int *SchemeColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SchemeColor( 
            /* [in] */ int SchemeColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoColorType *Type) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TintAndShade( 
            /* [retval][out] */ short *pValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TintAndShade( 
            /* [in] */ short pValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ColorFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ColorFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ColorFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ColorFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ColorFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ColorFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ColorFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ColorFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ColorFormat * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ColorFormat * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ColorFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RGB )( 
            ColorFormat * This,
            /* [retval][out] */ MsoRGBType *RGB);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RGB )( 
            ColorFormat * This,
            /* [in] */ MsoRGBType RGB);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SchemeColor )( 
            ColorFormat * This,
            /* [retval][out] */ int *SchemeColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SchemeColor )( 
            ColorFormat * This,
            /* [in] */ int SchemeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            ColorFormat * This,
            /* [retval][out] */ MsoColorType *Type);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TintAndShade )( 
            ColorFormat * This,
            /* [retval][out] */ short *pValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TintAndShade )( 
            ColorFormat * This,
            /* [in] */ short pValue);
        
        END_INTERFACE
    } ColorFormatVtbl;

    interface ColorFormat
    {
        CONST_VTBL struct ColorFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ColorFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ColorFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ColorFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ColorFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ColorFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ColorFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ColorFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ColorFormat_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ColorFormat_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ColorFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define ColorFormat_get_RGB(This,RGB)	\
    ( (This)->lpVtbl -> get_RGB(This,RGB) ) 

#define ColorFormat_put_RGB(This,RGB)	\
    ( (This)->lpVtbl -> put_RGB(This,RGB) ) 

#define ColorFormat_get_SchemeColor(This,SchemeColor)	\
    ( (This)->lpVtbl -> get_SchemeColor(This,SchemeColor) ) 

#define ColorFormat_put_SchemeColor(This,SchemeColor)	\
    ( (This)->lpVtbl -> put_SchemeColor(This,SchemeColor) ) 

#define ColorFormat_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define ColorFormat_get_TintAndShade(This,pValue)	\
    ( (This)->lpVtbl -> get_TintAndShade(This,pValue) ) 

#define ColorFormat_put_TintAndShade(This,pValue)	\
    ( (This)->lpVtbl -> put_TintAndShade(This,pValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ColorFormat_INTERFACE_DEFINED__ */


#ifndef __ConnectorFormat_INTERFACE_DEFINED__
#define __ConnectorFormat_INTERFACE_DEFINED__

/* interface ConnectorFormat */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_ConnectorFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0313-0000-0000-C000-000000000046")
    ConnectorFormat : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE BeginConnect( 
            /* [in] */ Shape *ConnectedShape,
            /* [in] */ int ConnectionSite) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE BeginDisconnect( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE EndConnect( 
            /* [in] */ Shape *ConnectedShape,
            /* [in] */ int ConnectionSite) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE EndDisconnect( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BeginConnected( 
            /* [retval][out] */ MsoTriState *BeginConnected) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BeginConnectedShape( 
            /* [retval][out] */ Shape **BeginConnectedShape) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BeginConnectionSite( 
            /* [retval][out] */ int *BeginConnectionSite) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EndConnected( 
            /* [retval][out] */ MsoTriState *EndConnected) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EndConnectedShape( 
            /* [retval][out] */ Shape **EndConnectedShape) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EndConnectionSite( 
            /* [retval][out] */ int *EndConnectionSite) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoConnectorType *Type) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ MsoConnectorType Type) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ConnectorFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ConnectorFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ConnectorFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ConnectorFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ConnectorFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ConnectorFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ConnectorFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ConnectorFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ConnectorFormat * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ConnectorFormat * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ConnectorFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *BeginConnect )( 
            ConnectorFormat * This,
            /* [in] */ Shape *ConnectedShape,
            /* [in] */ int ConnectionSite);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *BeginDisconnect )( 
            ConnectorFormat * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndConnect )( 
            ConnectorFormat * This,
            /* [in] */ Shape *ConnectedShape,
            /* [in] */ int ConnectionSite);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndDisconnect )( 
            ConnectorFormat * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginConnected )( 
            ConnectorFormat * This,
            /* [retval][out] */ MsoTriState *BeginConnected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginConnectedShape )( 
            ConnectorFormat * This,
            /* [retval][out] */ Shape **BeginConnectedShape);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginConnectionSite )( 
            ConnectorFormat * This,
            /* [retval][out] */ int *BeginConnectionSite);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndConnected )( 
            ConnectorFormat * This,
            /* [retval][out] */ MsoTriState *EndConnected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndConnectedShape )( 
            ConnectorFormat * This,
            /* [retval][out] */ Shape **EndConnectedShape);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndConnectionSite )( 
            ConnectorFormat * This,
            /* [retval][out] */ int *EndConnectionSite);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            ConnectorFormat * This,
            /* [retval][out] */ MsoConnectorType *Type);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            ConnectorFormat * This,
            /* [in] */ MsoConnectorType Type);
        
        END_INTERFACE
    } ConnectorFormatVtbl;

    interface ConnectorFormat
    {
        CONST_VTBL struct ConnectorFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ConnectorFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ConnectorFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ConnectorFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ConnectorFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ConnectorFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ConnectorFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ConnectorFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ConnectorFormat_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ConnectorFormat_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ConnectorFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define ConnectorFormat_BeginConnect(This,ConnectedShape,ConnectionSite)	\
    ( (This)->lpVtbl -> BeginConnect(This,ConnectedShape,ConnectionSite) ) 

#define ConnectorFormat_BeginDisconnect(This)	\
    ( (This)->lpVtbl -> BeginDisconnect(This) ) 

#define ConnectorFormat_EndConnect(This,ConnectedShape,ConnectionSite)	\
    ( (This)->lpVtbl -> EndConnect(This,ConnectedShape,ConnectionSite) ) 

#define ConnectorFormat_EndDisconnect(This)	\
    ( (This)->lpVtbl -> EndDisconnect(This) ) 

#define ConnectorFormat_get_BeginConnected(This,BeginConnected)	\
    ( (This)->lpVtbl -> get_BeginConnected(This,BeginConnected) ) 

#define ConnectorFormat_get_BeginConnectedShape(This,BeginConnectedShape)	\
    ( (This)->lpVtbl -> get_BeginConnectedShape(This,BeginConnectedShape) ) 

#define ConnectorFormat_get_BeginConnectionSite(This,BeginConnectionSite)	\
    ( (This)->lpVtbl -> get_BeginConnectionSite(This,BeginConnectionSite) ) 

#define ConnectorFormat_get_EndConnected(This,EndConnected)	\
    ( (This)->lpVtbl -> get_EndConnected(This,EndConnected) ) 

#define ConnectorFormat_get_EndConnectedShape(This,EndConnectedShape)	\
    ( (This)->lpVtbl -> get_EndConnectedShape(This,EndConnectedShape) ) 

#define ConnectorFormat_get_EndConnectionSite(This,EndConnectionSite)	\
    ( (This)->lpVtbl -> get_EndConnectionSite(This,EndConnectionSite) ) 

#define ConnectorFormat_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define ConnectorFormat_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ConnectorFormat_INTERFACE_DEFINED__ */


#ifndef __FillFormat_INTERFACE_DEFINED__
#define __FillFormat_INTERFACE_DEFINED__

/* interface FillFormat */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_FillFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0314-0000-0000-C000-000000000046")
    FillFormat : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Background( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE OneColorGradient( 
            /* [in] */ MsoGradientStyle Style,
            /* [in] */ int Variant,
            /* [in] */ short Degree) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Patterned( 
            /* [in] */ MsoPatternType Pattern) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PresetGradient( 
            /* [in] */ MsoGradientStyle Style,
            /* [in] */ int Variant,
            /* [in] */ MsoPresetGradientType PresetGradientType) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PresetTextured( 
            /* [in] */ MsoPresetTexture PresetTexture) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Solid( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE TwoColorGradient( 
            /* [in] */ MsoGradientStyle Style,
            /* [in] */ int Variant) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE UserPicture( 
            /* [in] */ BSTR PictureFile) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE UserTextured( 
            /* [in] */ BSTR TextureFile) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ ColorFormat **BackColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ ColorFormat *BackColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ ColorFormat **ForeColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ ColorFormat *ForeColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GradientColorType( 
            /* [retval][out] */ MsoGradientColorType *GradientColorType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GradientDegree( 
            /* [retval][out] */ short *GradientDegree) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GradientStyle( 
            /* [retval][out] */ MsoGradientStyle *GradientStyle) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GradientVariant( 
            /* [retval][out] */ int *GradientVariant) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Pattern( 
            /* [retval][out] */ MsoPatternType *Pattern) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PresetGradientType( 
            /* [retval][out] */ MsoPresetGradientType *PresetGradientType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PresetTexture( 
            /* [retval][out] */ MsoPresetTexture *PresetTexture) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TextureName( 
            /* [retval][out] */ BSTR *TextureName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TextureType( 
            /* [retval][out] */ MsoTextureType *TextureType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Transparency( 
            /* [retval][out] */ short *Transparency) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Transparency( 
            /* [in] */ short Transparency) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoFillType *Type) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ MsoTriState *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ MsoTriState Visible) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FillFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FillFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FillFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FillFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FillFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FillFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FillFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FillFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FillFormat * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            FillFormat * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FillFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Background )( 
            FillFormat * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *OneColorGradient )( 
            FillFormat * This,
            /* [in] */ MsoGradientStyle Style,
            /* [in] */ int Variant,
            /* [in] */ short Degree);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Patterned )( 
            FillFormat * This,
            /* [in] */ MsoPatternType Pattern);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PresetGradient )( 
            FillFormat * This,
            /* [in] */ MsoGradientStyle Style,
            /* [in] */ int Variant,
            /* [in] */ MsoPresetGradientType PresetGradientType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PresetTextured )( 
            FillFormat * This,
            /* [in] */ MsoPresetTexture PresetTexture);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Solid )( 
            FillFormat * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TwoColorGradient )( 
            FillFormat * This,
            /* [in] */ MsoGradientStyle Style,
            /* [in] */ int Variant);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UserPicture )( 
            FillFormat * This,
            /* [in] */ BSTR PictureFile);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UserTextured )( 
            FillFormat * This,
            /* [in] */ BSTR TextureFile);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            FillFormat * This,
            /* [retval][out] */ ColorFormat **BackColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            FillFormat * This,
            /* [in] */ ColorFormat *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            FillFormat * This,
            /* [retval][out] */ ColorFormat **ForeColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            FillFormat * This,
            /* [in] */ ColorFormat *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GradientColorType )( 
            FillFormat * This,
            /* [retval][out] */ MsoGradientColorType *GradientColorType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GradientDegree )( 
            FillFormat * This,
            /* [retval][out] */ short *GradientDegree);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GradientStyle )( 
            FillFormat * This,
            /* [retval][out] */ MsoGradientStyle *GradientStyle);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GradientVariant )( 
            FillFormat * This,
            /* [retval][out] */ int *GradientVariant);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Pattern )( 
            FillFormat * This,
            /* [retval][out] */ MsoPatternType *Pattern);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PresetGradientType )( 
            FillFormat * This,
            /* [retval][out] */ MsoPresetGradientType *PresetGradientType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PresetTexture )( 
            FillFormat * This,
            /* [retval][out] */ MsoPresetTexture *PresetTexture);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextureName )( 
            FillFormat * This,
            /* [retval][out] */ BSTR *TextureName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextureType )( 
            FillFormat * This,
            /* [retval][out] */ MsoTextureType *TextureType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Transparency )( 
            FillFormat * This,
            /* [retval][out] */ short *Transparency);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Transparency )( 
            FillFormat * This,
            /* [in] */ short Transparency);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            FillFormat * This,
            /* [retval][out] */ MsoFillType *Type);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            FillFormat * This,
            /* [retval][out] */ MsoTriState *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            FillFormat * This,
            /* [in] */ MsoTriState Visible);
        
        END_INTERFACE
    } FillFormatVtbl;

    interface FillFormat
    {
        CONST_VTBL struct FillFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FillFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FillFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FillFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FillFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FillFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FillFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FillFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FillFormat_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define FillFormat_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define FillFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define FillFormat_Background(This)	\
    ( (This)->lpVtbl -> Background(This) ) 

#define FillFormat_OneColorGradient(This,Style,Variant,Degree)	\
    ( (This)->lpVtbl -> OneColorGradient(This,Style,Variant,Degree) ) 

#define FillFormat_Patterned(This,Pattern)	\
    ( (This)->lpVtbl -> Patterned(This,Pattern) ) 

#define FillFormat_PresetGradient(This,Style,Variant,PresetGradientType)	\
    ( (This)->lpVtbl -> PresetGradient(This,Style,Variant,PresetGradientType) ) 

#define FillFormat_PresetTextured(This,PresetTexture)	\
    ( (This)->lpVtbl -> PresetTextured(This,PresetTexture) ) 

#define FillFormat_Solid(This)	\
    ( (This)->lpVtbl -> Solid(This) ) 

#define FillFormat_TwoColorGradient(This,Style,Variant)	\
    ( (This)->lpVtbl -> TwoColorGradient(This,Style,Variant) ) 

#define FillFormat_UserPicture(This,PictureFile)	\
    ( (This)->lpVtbl -> UserPicture(This,PictureFile) ) 

#define FillFormat_UserTextured(This,TextureFile)	\
    ( (This)->lpVtbl -> UserTextured(This,TextureFile) ) 

#define FillFormat_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define FillFormat_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define FillFormat_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define FillFormat_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define FillFormat_get_GradientColorType(This,GradientColorType)	\
    ( (This)->lpVtbl -> get_GradientColorType(This,GradientColorType) ) 

#define FillFormat_get_GradientDegree(This,GradientDegree)	\
    ( (This)->lpVtbl -> get_GradientDegree(This,GradientDegree) ) 

#define FillFormat_get_GradientStyle(This,GradientStyle)	\
    ( (This)->lpVtbl -> get_GradientStyle(This,GradientStyle) ) 

#define FillFormat_get_GradientVariant(This,GradientVariant)	\
    ( (This)->lpVtbl -> get_GradientVariant(This,GradientVariant) ) 

#define FillFormat_get_Pattern(This,Pattern)	\
    ( (This)->lpVtbl -> get_Pattern(This,Pattern) ) 

#define FillFormat_get_PresetGradientType(This,PresetGradientType)	\
    ( (This)->lpVtbl -> get_PresetGradientType(This,PresetGradientType) ) 

#define FillFormat_get_PresetTexture(This,PresetTexture)	\
    ( (This)->lpVtbl -> get_PresetTexture(This,PresetTexture) ) 

#define FillFormat_get_TextureName(This,TextureName)	\
    ( (This)->lpVtbl -> get_TextureName(This,TextureName) ) 

#define FillFormat_get_TextureType(This,TextureType)	\
    ( (This)->lpVtbl -> get_TextureType(This,TextureType) ) 

#define FillFormat_get_Transparency(This,Transparency)	\
    ( (This)->lpVtbl -> get_Transparency(This,Transparency) ) 

#define FillFormat_put_Transparency(This,Transparency)	\
    ( (This)->lpVtbl -> put_Transparency(This,Transparency) ) 

#define FillFormat_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define FillFormat_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define FillFormat_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FillFormat_INTERFACE_DEFINED__ */


#ifndef __FreeformBuilder_INTERFACE_DEFINED__
#define __FreeformBuilder_INTERFACE_DEFINED__

/* interface FreeformBuilder */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_FreeformBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0315-0000-0000-C000-000000000046")
    FreeformBuilder : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddNodes( 
            /* [in] */ MsoSegmentType SegmentType,
            /* [in] */ MsoEditingType EditingType,
            /* [in] */ short X1,
            /* [in] */ short Y1,
            /* [defaultvalue][optional][in] */ short X2 = 0,
            /* [defaultvalue][optional][in] */ short Y2 = 0,
            /* [defaultvalue][optional][in] */ short X3 = 0,
            /* [defaultvalue][optional][in] */ short Y3 = 0) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ConvertToShape( 
            /* [retval][out] */ Shape **Freeform) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FreeformBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FreeformBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FreeformBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FreeformBuilder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FreeformBuilder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FreeformBuilder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FreeformBuilder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FreeformBuilder * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FreeformBuilder * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            FreeformBuilder * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FreeformBuilder * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddNodes )( 
            FreeformBuilder * This,
            /* [in] */ MsoSegmentType SegmentType,
            /* [in] */ MsoEditingType EditingType,
            /* [in] */ short X1,
            /* [in] */ short Y1,
            /* [defaultvalue][optional][in] */ short X2,
            /* [defaultvalue][optional][in] */ short Y2,
            /* [defaultvalue][optional][in] */ short X3,
            /* [defaultvalue][optional][in] */ short Y3);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ConvertToShape )( 
            FreeformBuilder * This,
            /* [retval][out] */ Shape **Freeform);
        
        END_INTERFACE
    } FreeformBuilderVtbl;

    interface FreeformBuilder
    {
        CONST_VTBL struct FreeformBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FreeformBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FreeformBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FreeformBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FreeformBuilder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FreeformBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FreeformBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FreeformBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FreeformBuilder_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define FreeformBuilder_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define FreeformBuilder_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define FreeformBuilder_AddNodes(This,SegmentType,EditingType,X1,Y1,X2,Y2,X3,Y3)	\
    ( (This)->lpVtbl -> AddNodes(This,SegmentType,EditingType,X1,Y1,X2,Y2,X3,Y3) ) 

#define FreeformBuilder_ConvertToShape(This,Freeform)	\
    ( (This)->lpVtbl -> ConvertToShape(This,Freeform) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FreeformBuilder_INTERFACE_DEFINED__ */


#ifndef __GroupShapes_INTERFACE_DEFINED__
#define __GroupShapes_INTERFACE_DEFINED__

/* interface GroupShapes */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_GroupShapes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0316-0000-0000-C000-000000000046")
    GroupShapes : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pnShapes) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Shape **Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Range( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ShapeRange **Range) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct GroupShapesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            GroupShapes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            GroupShapes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            GroupShapes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            GroupShapes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            GroupShapes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            GroupShapes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            GroupShapes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            GroupShapes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            GroupShapes * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            GroupShapes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            GroupShapes * This,
            /* [retval][out] */ int *pnShapes);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            GroupShapes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Shape **Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            GroupShapes * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Range )( 
            GroupShapes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ShapeRange **Range);
        
        END_INTERFACE
    } GroupShapesVtbl;

    interface GroupShapes
    {
        CONST_VTBL struct GroupShapesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define GroupShapes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define GroupShapes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define GroupShapes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define GroupShapes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define GroupShapes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define GroupShapes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define GroupShapes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define GroupShapes_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define GroupShapes_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define GroupShapes_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define GroupShapes_get_Count(This,pnShapes)	\
    ( (This)->lpVtbl -> get_Count(This,pnShapes) ) 

#define GroupShapes_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define GroupShapes_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define GroupShapes_Range(This,Index,Range)	\
    ( (This)->lpVtbl -> Range(This,Index,Range) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __GroupShapes_INTERFACE_DEFINED__ */


#ifndef __LineFormat_INTERFACE_DEFINED__
#define __LineFormat_INTERFACE_DEFINED__

/* interface LineFormat */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_LineFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0317-0000-0000-C000-000000000046")
    LineFormat : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ ColorFormat **BackColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ ColorFormat *BackColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BeginArrowheadLength( 
            /* [retval][out] */ MsoArrowheadLength *BeginArrowheadLength) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_BeginArrowheadLength( 
            /* [in] */ MsoArrowheadLength BeginArrowheadLength) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BeginArrowheadStyle( 
            /* [retval][out] */ MsoArrowheadStyle *BeginArrowheadStyle) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_BeginArrowheadStyle( 
            /* [in] */ MsoArrowheadStyle BeginArrowheadStyle) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BeginArrowheadWidth( 
            /* [retval][out] */ MsoArrowheadWidth *BeginArrowheadWidth) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_BeginArrowheadWidth( 
            /* [in] */ MsoArrowheadWidth BeginArrowheadWidth) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DashStyle( 
            /* [retval][out] */ MsoLineDashStyle *DashStyle) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_DashStyle( 
            /* [in] */ MsoLineDashStyle DashStyle) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EndArrowheadLength( 
            /* [retval][out] */ MsoArrowheadLength *EndArrowheadLength) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EndArrowheadLength( 
            /* [in] */ MsoArrowheadLength EndArrowheadLength) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EndArrowheadStyle( 
            /* [retval][out] */ MsoArrowheadStyle *EndArrowheadStyle) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EndArrowheadStyle( 
            /* [in] */ MsoArrowheadStyle EndArrowheadStyle) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EndArrowheadWidth( 
            /* [retval][out] */ MsoArrowheadWidth *EndArrowheadWidth) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EndArrowheadWidth( 
            /* [in] */ MsoArrowheadWidth EndArrowheadWidth) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ ColorFormat **ForeColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ ColorFormat *ForeColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Pattern( 
            /* [retval][out] */ MsoPatternType *Pattern) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Pattern( 
            /* [in] */ MsoPatternType Pattern) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Style( 
            /* [retval][out] */ MsoLineStyle *Style) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Style( 
            /* [in] */ MsoLineStyle Style) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Transparency( 
            /* [retval][out] */ short *Transparency) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Transparency( 
            /* [in] */ short Transparency) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ MsoTriState *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ MsoTriState Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Weight( 
            /* [retval][out] */ short *Weight) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Weight( 
            /* [in] */ short Weight) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InsetPen( 
            /* [retval][out] */ MsoTriState *InsetPen) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_InsetPen( 
            /* [in] */ MsoTriState InsetPen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct LineFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            LineFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            LineFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            LineFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            LineFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            LineFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            LineFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            LineFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            LineFormat * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            LineFormat * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            LineFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            LineFormat * This,
            /* [retval][out] */ ColorFormat **BackColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            LineFormat * This,
            /* [in] */ ColorFormat *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginArrowheadLength )( 
            LineFormat * This,
            /* [retval][out] */ MsoArrowheadLength *BeginArrowheadLength);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BeginArrowheadLength )( 
            LineFormat * This,
            /* [in] */ MsoArrowheadLength BeginArrowheadLength);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginArrowheadStyle )( 
            LineFormat * This,
            /* [retval][out] */ MsoArrowheadStyle *BeginArrowheadStyle);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BeginArrowheadStyle )( 
            LineFormat * This,
            /* [in] */ MsoArrowheadStyle BeginArrowheadStyle);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BeginArrowheadWidth )( 
            LineFormat * This,
            /* [retval][out] */ MsoArrowheadWidth *BeginArrowheadWidth);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BeginArrowheadWidth )( 
            LineFormat * This,
            /* [in] */ MsoArrowheadWidth BeginArrowheadWidth);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DashStyle )( 
            LineFormat * This,
            /* [retval][out] */ MsoLineDashStyle *DashStyle);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DashStyle )( 
            LineFormat * This,
            /* [in] */ MsoLineDashStyle DashStyle);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndArrowheadLength )( 
            LineFormat * This,
            /* [retval][out] */ MsoArrowheadLength *EndArrowheadLength);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndArrowheadLength )( 
            LineFormat * This,
            /* [in] */ MsoArrowheadLength EndArrowheadLength);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndArrowheadStyle )( 
            LineFormat * This,
            /* [retval][out] */ MsoArrowheadStyle *EndArrowheadStyle);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndArrowheadStyle )( 
            LineFormat * This,
            /* [in] */ MsoArrowheadStyle EndArrowheadStyle);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndArrowheadWidth )( 
            LineFormat * This,
            /* [retval][out] */ MsoArrowheadWidth *EndArrowheadWidth);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndArrowheadWidth )( 
            LineFormat * This,
            /* [in] */ MsoArrowheadWidth EndArrowheadWidth);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            LineFormat * This,
            /* [retval][out] */ ColorFormat **ForeColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            LineFormat * This,
            /* [in] */ ColorFormat *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Pattern )( 
            LineFormat * This,
            /* [retval][out] */ MsoPatternType *Pattern);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Pattern )( 
            LineFormat * This,
            /* [in] */ MsoPatternType Pattern);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Style )( 
            LineFormat * This,
            /* [retval][out] */ MsoLineStyle *Style);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Style )( 
            LineFormat * This,
            /* [in] */ MsoLineStyle Style);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Transparency )( 
            LineFormat * This,
            /* [retval][out] */ short *Transparency);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Transparency )( 
            LineFormat * This,
            /* [in] */ short Transparency);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            LineFormat * This,
            /* [retval][out] */ MsoTriState *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            LineFormat * This,
            /* [in] */ MsoTriState Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Weight )( 
            LineFormat * This,
            /* [retval][out] */ short *Weight);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Weight )( 
            LineFormat * This,
            /* [in] */ short Weight);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InsetPen )( 
            LineFormat * This,
            /* [retval][out] */ MsoTriState *InsetPen);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InsetPen )( 
            LineFormat * This,
            /* [in] */ MsoTriState InsetPen);
        
        END_INTERFACE
    } LineFormatVtbl;

    interface LineFormat
    {
        CONST_VTBL struct LineFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define LineFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define LineFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define LineFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define LineFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define LineFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define LineFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define LineFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define LineFormat_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define LineFormat_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define LineFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define LineFormat_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define LineFormat_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define LineFormat_get_BeginArrowheadLength(This,BeginArrowheadLength)	\
    ( (This)->lpVtbl -> get_BeginArrowheadLength(This,BeginArrowheadLength) ) 

#define LineFormat_put_BeginArrowheadLength(This,BeginArrowheadLength)	\
    ( (This)->lpVtbl -> put_BeginArrowheadLength(This,BeginArrowheadLength) ) 

#define LineFormat_get_BeginArrowheadStyle(This,BeginArrowheadStyle)	\
    ( (This)->lpVtbl -> get_BeginArrowheadStyle(This,BeginArrowheadStyle) ) 

#define LineFormat_put_BeginArrowheadStyle(This,BeginArrowheadStyle)	\
    ( (This)->lpVtbl -> put_BeginArrowheadStyle(This,BeginArrowheadStyle) ) 

#define LineFormat_get_BeginArrowheadWidth(This,BeginArrowheadWidth)	\
    ( (This)->lpVtbl -> get_BeginArrowheadWidth(This,BeginArrowheadWidth) ) 

#define LineFormat_put_BeginArrowheadWidth(This,BeginArrowheadWidth)	\
    ( (This)->lpVtbl -> put_BeginArrowheadWidth(This,BeginArrowheadWidth) ) 

#define LineFormat_get_DashStyle(This,DashStyle)	\
    ( (This)->lpVtbl -> get_DashStyle(This,DashStyle) ) 

#define LineFormat_put_DashStyle(This,DashStyle)	\
    ( (This)->lpVtbl -> put_DashStyle(This,DashStyle) ) 

#define LineFormat_get_EndArrowheadLength(This,EndArrowheadLength)	\
    ( (This)->lpVtbl -> get_EndArrowheadLength(This,EndArrowheadLength) ) 

#define LineFormat_put_EndArrowheadLength(This,EndArrowheadLength)	\
    ( (This)->lpVtbl -> put_EndArrowheadLength(This,EndArrowheadLength) ) 

#define LineFormat_get_EndArrowheadStyle(This,EndArrowheadStyle)	\
    ( (This)->lpVtbl -> get_EndArrowheadStyle(This,EndArrowheadStyle) ) 

#define LineFormat_put_EndArrowheadStyle(This,EndArrowheadStyle)	\
    ( (This)->lpVtbl -> put_EndArrowheadStyle(This,EndArrowheadStyle) ) 

#define LineFormat_get_EndArrowheadWidth(This,EndArrowheadWidth)	\
    ( (This)->lpVtbl -> get_EndArrowheadWidth(This,EndArrowheadWidth) ) 

#define LineFormat_put_EndArrowheadWidth(This,EndArrowheadWidth)	\
    ( (This)->lpVtbl -> put_EndArrowheadWidth(This,EndArrowheadWidth) ) 

#define LineFormat_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define LineFormat_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define LineFormat_get_Pattern(This,Pattern)	\
    ( (This)->lpVtbl -> get_Pattern(This,Pattern) ) 

#define LineFormat_put_Pattern(This,Pattern)	\
    ( (This)->lpVtbl -> put_Pattern(This,Pattern) ) 

#define LineFormat_get_Style(This,Style)	\
    ( (This)->lpVtbl -> get_Style(This,Style) ) 

#define LineFormat_put_Style(This,Style)	\
    ( (This)->lpVtbl -> put_Style(This,Style) ) 

#define LineFormat_get_Transparency(This,Transparency)	\
    ( (This)->lpVtbl -> get_Transparency(This,Transparency) ) 

#define LineFormat_put_Transparency(This,Transparency)	\
    ( (This)->lpVtbl -> put_Transparency(This,Transparency) ) 

#define LineFormat_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define LineFormat_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define LineFormat_get_Weight(This,Weight)	\
    ( (This)->lpVtbl -> get_Weight(This,Weight) ) 

#define LineFormat_put_Weight(This,Weight)	\
    ( (This)->lpVtbl -> put_Weight(This,Weight) ) 

#define LineFormat_get_InsetPen(This,InsetPen)	\
    ( (This)->lpVtbl -> get_InsetPen(This,InsetPen) ) 

#define LineFormat_put_InsetPen(This,InsetPen)	\
    ( (This)->lpVtbl -> put_InsetPen(This,InsetPen) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __LineFormat_INTERFACE_DEFINED__ */


#ifndef __ShapeNode_INTERFACE_DEFINED__
#define __ShapeNode_INTERFACE_DEFINED__

/* interface ShapeNode */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_ShapeNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0318-0000-0000-C000-000000000046")
    ShapeNode : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EditingType( 
            /* [retval][out] */ MsoEditingType *EditingType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Points( 
            /* [retval][out] */ VARIANT *Points) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SegmentType( 
            /* [retval][out] */ MsoSegmentType *SegmentType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ShapeNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ShapeNode * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ShapeNode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ShapeNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ShapeNode * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ShapeNode * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ShapeNode * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ShapeNode * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ShapeNode * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ShapeNode * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ShapeNode * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EditingType )( 
            ShapeNode * This,
            /* [retval][out] */ MsoEditingType *EditingType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Points )( 
            ShapeNode * This,
            /* [retval][out] */ VARIANT *Points);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SegmentType )( 
            ShapeNode * This,
            /* [retval][out] */ MsoSegmentType *SegmentType);
        
        END_INTERFACE
    } ShapeNodeVtbl;

    interface ShapeNode
    {
        CONST_VTBL struct ShapeNodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ShapeNode_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ShapeNode_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ShapeNode_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ShapeNode_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ShapeNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ShapeNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ShapeNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ShapeNode_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ShapeNode_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ShapeNode_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define ShapeNode_get_EditingType(This,EditingType)	\
    ( (This)->lpVtbl -> get_EditingType(This,EditingType) ) 

#define ShapeNode_get_Points(This,Points)	\
    ( (This)->lpVtbl -> get_Points(This,Points) ) 

#define ShapeNode_get_SegmentType(This,SegmentType)	\
    ( (This)->lpVtbl -> get_SegmentType(This,SegmentType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ShapeNode_INTERFACE_DEFINED__ */


#ifndef __ShapeNodes_INTERFACE_DEFINED__
#define __ShapeNodes_INTERFACE_DEFINED__

/* interface ShapeNodes */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_ShapeNodes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0319-0000-0000-C000-000000000046")
    ShapeNodes : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *Count) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ShapeNode **Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **_NewEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ int Index) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ int Index,
            /* [in] */ MsoSegmentType SegmentType,
            /* [in] */ MsoEditingType EditingType,
            /* [in] */ short X1,
            /* [in] */ short Y1,
            /* [defaultvalue][optional][in] */ short X2 = 0,
            /* [defaultvalue][optional][in] */ short Y2 = 0,
            /* [defaultvalue][optional][in] */ short X3 = 0,
            /* [defaultvalue][optional][in] */ short Y3 = 0) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetEditingType( 
            /* [in] */ int Index,
            /* [in] */ MsoEditingType EditingType) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetPosition( 
            /* [in] */ int Index,
            /* [in] */ short X1,
            /* [in] */ short Y1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetSegmentType( 
            /* [in] */ int Index,
            /* [in] */ MsoSegmentType SegmentType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ShapeNodesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ShapeNodes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ShapeNodes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ShapeNodes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ShapeNodes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ShapeNodes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ShapeNodes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ShapeNodes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ShapeNodes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ShapeNodes * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ShapeNodes * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ShapeNodes * This,
            /* [retval][out] */ int *Count);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ShapeNodes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ShapeNode **Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            ShapeNodes * This,
            /* [retval][out] */ IUnknown **_NewEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ShapeNodes * This,
            /* [in] */ int Index);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            ShapeNodes * This,
            /* [in] */ int Index,
            /* [in] */ MsoSegmentType SegmentType,
            /* [in] */ MsoEditingType EditingType,
            /* [in] */ short X1,
            /* [in] */ short Y1,
            /* [defaultvalue][optional][in] */ short X2,
            /* [defaultvalue][optional][in] */ short Y2,
            /* [defaultvalue][optional][in] */ short X3,
            /* [defaultvalue][optional][in] */ short Y3);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetEditingType )( 
            ShapeNodes * This,
            /* [in] */ int Index,
            /* [in] */ MsoEditingType EditingType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetPosition )( 
            ShapeNodes * This,
            /* [in] */ int Index,
            /* [in] */ short X1,
            /* [in] */ short Y1);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetSegmentType )( 
            ShapeNodes * This,
            /* [in] */ int Index,
            /* [in] */ MsoSegmentType SegmentType);
        
        END_INTERFACE
    } ShapeNodesVtbl;

    interface ShapeNodes
    {
        CONST_VTBL struct ShapeNodesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ShapeNodes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ShapeNodes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ShapeNodes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ShapeNodes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ShapeNodes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ShapeNodes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ShapeNodes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ShapeNodes_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ShapeNodes_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ShapeNodes_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define ShapeNodes_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define ShapeNodes_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define ShapeNodes_get__NewEnum(This,_NewEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,_NewEnum) ) 

#define ShapeNodes_Delete(This,Index)	\
    ( (This)->lpVtbl -> Delete(This,Index) ) 

#define ShapeNodes_Insert(This,Index,SegmentType,EditingType,X1,Y1,X2,Y2,X3,Y3)	\
    ( (This)->lpVtbl -> Insert(This,Index,SegmentType,EditingType,X1,Y1,X2,Y2,X3,Y3) ) 

#define ShapeNodes_SetEditingType(This,Index,EditingType)	\
    ( (This)->lpVtbl -> SetEditingType(This,Index,EditingType) ) 

#define ShapeNodes_SetPosition(This,Index,X1,Y1)	\
    ( (This)->lpVtbl -> SetPosition(This,Index,X1,Y1) ) 

#define ShapeNodes_SetSegmentType(This,Index,SegmentType)	\
    ( (This)->lpVtbl -> SetSegmentType(This,Index,SegmentType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ShapeNodes_INTERFACE_DEFINED__ */


#ifndef __PictureFormat_INTERFACE_DEFINED__
#define __PictureFormat_INTERFACE_DEFINED__

/* interface PictureFormat */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_PictureFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C031A-0000-0000-C000-000000000046")
    PictureFormat : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementBrightness( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementContrast( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Brightness( 
            /* [retval][out] */ short *Brightness) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Brightness( 
            /* [in] */ short Brightness) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ColorType( 
            /* [retval][out] */ MsoPictureColorType *ColorType) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ColorType( 
            /* [in] */ MsoPictureColorType ColorType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Contrast( 
            /* [retval][out] */ short *Contrast) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Contrast( 
            /* [in] */ short Contrast) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CropBottom( 
            /* [retval][out] */ short *CropBottom) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_CropBottom( 
            /* [in] */ short CropBottom) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CropLeft( 
            /* [retval][out] */ short *CropLeft) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_CropLeft( 
            /* [in] */ short CropLeft) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CropRight( 
            /* [retval][out] */ short *CropRight) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_CropRight( 
            /* [in] */ short CropRight) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CropTop( 
            /* [retval][out] */ short *CropTop) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_CropTop( 
            /* [in] */ short CropTop) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TransparencyColor( 
            /* [retval][out] */ MsoRGBType *TransparencyColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TransparencyColor( 
            /* [in] */ MsoRGBType TransparencyColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TransparentBackground( 
            /* [retval][out] */ MsoTriState *TransparentBackground) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TransparentBackground( 
            /* [in] */ MsoTriState TransparentBackground) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct PictureFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            PictureFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            PictureFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            PictureFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            PictureFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            PictureFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            PictureFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            PictureFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            PictureFormat * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            PictureFormat * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            PictureFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementBrightness )( 
            PictureFormat * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementContrast )( 
            PictureFormat * This,
            /* [in] */ short Increment);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Brightness )( 
            PictureFormat * This,
            /* [retval][out] */ short *Brightness);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Brightness )( 
            PictureFormat * This,
            /* [in] */ short Brightness);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ColorType )( 
            PictureFormat * This,
            /* [retval][out] */ MsoPictureColorType *ColorType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ColorType )( 
            PictureFormat * This,
            /* [in] */ MsoPictureColorType ColorType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Contrast )( 
            PictureFormat * This,
            /* [retval][out] */ short *Contrast);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Contrast )( 
            PictureFormat * This,
            /* [in] */ short Contrast);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CropBottom )( 
            PictureFormat * This,
            /* [retval][out] */ short *CropBottom);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CropBottom )( 
            PictureFormat * This,
            /* [in] */ short CropBottom);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CropLeft )( 
            PictureFormat * This,
            /* [retval][out] */ short *CropLeft);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CropLeft )( 
            PictureFormat * This,
            /* [in] */ short CropLeft);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CropRight )( 
            PictureFormat * This,
            /* [retval][out] */ short *CropRight);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CropRight )( 
            PictureFormat * This,
            /* [in] */ short CropRight);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CropTop )( 
            PictureFormat * This,
            /* [retval][out] */ short *CropTop);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CropTop )( 
            PictureFormat * This,
            /* [in] */ short CropTop);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransparencyColor )( 
            PictureFormat * This,
            /* [retval][out] */ MsoRGBType *TransparencyColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TransparencyColor )( 
            PictureFormat * This,
            /* [in] */ MsoRGBType TransparencyColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransparentBackground )( 
            PictureFormat * This,
            /* [retval][out] */ MsoTriState *TransparentBackground);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TransparentBackground )( 
            PictureFormat * This,
            /* [in] */ MsoTriState TransparentBackground);
        
        END_INTERFACE
    } PictureFormatVtbl;

    interface PictureFormat
    {
        CONST_VTBL struct PictureFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define PictureFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define PictureFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define PictureFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define PictureFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define PictureFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define PictureFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define PictureFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define PictureFormat_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define PictureFormat_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define PictureFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define PictureFormat_IncrementBrightness(This,Increment)	\
    ( (This)->lpVtbl -> IncrementBrightness(This,Increment) ) 

#define PictureFormat_IncrementContrast(This,Increment)	\
    ( (This)->lpVtbl -> IncrementContrast(This,Increment) ) 

#define PictureFormat_get_Brightness(This,Brightness)	\
    ( (This)->lpVtbl -> get_Brightness(This,Brightness) ) 

#define PictureFormat_put_Brightness(This,Brightness)	\
    ( (This)->lpVtbl -> put_Brightness(This,Brightness) ) 

#define PictureFormat_get_ColorType(This,ColorType)	\
    ( (This)->lpVtbl -> get_ColorType(This,ColorType) ) 

#define PictureFormat_put_ColorType(This,ColorType)	\
    ( (This)->lpVtbl -> put_ColorType(This,ColorType) ) 

#define PictureFormat_get_Contrast(This,Contrast)	\
    ( (This)->lpVtbl -> get_Contrast(This,Contrast) ) 

#define PictureFormat_put_Contrast(This,Contrast)	\
    ( (This)->lpVtbl -> put_Contrast(This,Contrast) ) 

#define PictureFormat_get_CropBottom(This,CropBottom)	\
    ( (This)->lpVtbl -> get_CropBottom(This,CropBottom) ) 

#define PictureFormat_put_CropBottom(This,CropBottom)	\
    ( (This)->lpVtbl -> put_CropBottom(This,CropBottom) ) 

#define PictureFormat_get_CropLeft(This,CropLeft)	\
    ( (This)->lpVtbl -> get_CropLeft(This,CropLeft) ) 

#define PictureFormat_put_CropLeft(This,CropLeft)	\
    ( (This)->lpVtbl -> put_CropLeft(This,CropLeft) ) 

#define PictureFormat_get_CropRight(This,CropRight)	\
    ( (This)->lpVtbl -> get_CropRight(This,CropRight) ) 

#define PictureFormat_put_CropRight(This,CropRight)	\
    ( (This)->lpVtbl -> put_CropRight(This,CropRight) ) 

#define PictureFormat_get_CropTop(This,CropTop)	\
    ( (This)->lpVtbl -> get_CropTop(This,CropTop) ) 

#define PictureFormat_put_CropTop(This,CropTop)	\
    ( (This)->lpVtbl -> put_CropTop(This,CropTop) ) 

#define PictureFormat_get_TransparencyColor(This,TransparencyColor)	\
    ( (This)->lpVtbl -> get_TransparencyColor(This,TransparencyColor) ) 

#define PictureFormat_put_TransparencyColor(This,TransparencyColor)	\
    ( (This)->lpVtbl -> put_TransparencyColor(This,TransparencyColor) ) 

#define PictureFormat_get_TransparentBackground(This,TransparentBackground)	\
    ( (This)->lpVtbl -> get_TransparentBackground(This,TransparentBackground) ) 

#define PictureFormat_put_TransparentBackground(This,TransparentBackground)	\
    ( (This)->lpVtbl -> put_TransparentBackground(This,TransparentBackground) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __PictureFormat_INTERFACE_DEFINED__ */


#ifndef __ShadowFormat_INTERFACE_DEFINED__
#define __ShadowFormat_INTERFACE_DEFINED__

/* interface ShadowFormat */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_ShadowFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C031B-0000-0000-C000-000000000046")
    ShadowFormat : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementOffsetX( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementOffsetY( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ ColorFormat **ForeColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ ColorFormat *ForeColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Obscured( 
            /* [retval][out] */ MsoTriState *Obscured) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Obscured( 
            /* [in] */ MsoTriState Obscured) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OffsetX( 
            /* [retval][out] */ short *OffsetX) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_OffsetX( 
            /* [in] */ short OffsetX) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OffsetY( 
            /* [retval][out] */ short *OffsetY) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_OffsetY( 
            /* [in] */ short OffsetY) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Transparency( 
            /* [retval][out] */ short *Transparency) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Transparency( 
            /* [in] */ short Transparency) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoShadowType *Type) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ MsoShadowType Type) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ MsoTriState *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ MsoTriState Visible) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ShadowFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ShadowFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ShadowFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ShadowFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ShadowFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ShadowFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ShadowFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ShadowFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ShadowFormat * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ShadowFormat * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ShadowFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementOffsetX )( 
            ShadowFormat * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementOffsetY )( 
            ShadowFormat * This,
            /* [in] */ short Increment);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            ShadowFormat * This,
            /* [retval][out] */ ColorFormat **ForeColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            ShadowFormat * This,
            /* [in] */ ColorFormat *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Obscured )( 
            ShadowFormat * This,
            /* [retval][out] */ MsoTriState *Obscured);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Obscured )( 
            ShadowFormat * This,
            /* [in] */ MsoTriState Obscured);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OffsetX )( 
            ShadowFormat * This,
            /* [retval][out] */ short *OffsetX);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OffsetX )( 
            ShadowFormat * This,
            /* [in] */ short OffsetX);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OffsetY )( 
            ShadowFormat * This,
            /* [retval][out] */ short *OffsetY);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OffsetY )( 
            ShadowFormat * This,
            /* [in] */ short OffsetY);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Transparency )( 
            ShadowFormat * This,
            /* [retval][out] */ short *Transparency);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Transparency )( 
            ShadowFormat * This,
            /* [in] */ short Transparency);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            ShadowFormat * This,
            /* [retval][out] */ MsoShadowType *Type);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            ShadowFormat * This,
            /* [in] */ MsoShadowType Type);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            ShadowFormat * This,
            /* [retval][out] */ MsoTriState *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            ShadowFormat * This,
            /* [in] */ MsoTriState Visible);
        
        END_INTERFACE
    } ShadowFormatVtbl;

    interface ShadowFormat
    {
        CONST_VTBL struct ShadowFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ShadowFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ShadowFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ShadowFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ShadowFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ShadowFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ShadowFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ShadowFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ShadowFormat_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ShadowFormat_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ShadowFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define ShadowFormat_IncrementOffsetX(This,Increment)	\
    ( (This)->lpVtbl -> IncrementOffsetX(This,Increment) ) 

#define ShadowFormat_IncrementOffsetY(This,Increment)	\
    ( (This)->lpVtbl -> IncrementOffsetY(This,Increment) ) 

#define ShadowFormat_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define ShadowFormat_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define ShadowFormat_get_Obscured(This,Obscured)	\
    ( (This)->lpVtbl -> get_Obscured(This,Obscured) ) 

#define ShadowFormat_put_Obscured(This,Obscured)	\
    ( (This)->lpVtbl -> put_Obscured(This,Obscured) ) 

#define ShadowFormat_get_OffsetX(This,OffsetX)	\
    ( (This)->lpVtbl -> get_OffsetX(This,OffsetX) ) 

#define ShadowFormat_put_OffsetX(This,OffsetX)	\
    ( (This)->lpVtbl -> put_OffsetX(This,OffsetX) ) 

#define ShadowFormat_get_OffsetY(This,OffsetY)	\
    ( (This)->lpVtbl -> get_OffsetY(This,OffsetY) ) 

#define ShadowFormat_put_OffsetY(This,OffsetY)	\
    ( (This)->lpVtbl -> put_OffsetY(This,OffsetY) ) 

#define ShadowFormat_get_Transparency(This,Transparency)	\
    ( (This)->lpVtbl -> get_Transparency(This,Transparency) ) 

#define ShadowFormat_put_Transparency(This,Transparency)	\
    ( (This)->lpVtbl -> put_Transparency(This,Transparency) ) 

#define ShadowFormat_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define ShadowFormat_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define ShadowFormat_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define ShadowFormat_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ShadowFormat_INTERFACE_DEFINED__ */


#ifndef __Script_INTERFACE_DEFINED__
#define __Script_INTERFACE_DEFINED__

/* interface Script */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Script;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0341-0000-0000-C000-000000000046")
    Script : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extended( 
            /* [retval][out] */ BSTR *Extended) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Extended( 
            /* [in] */ BSTR Extended) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Id( 
            /* [retval][out] */ BSTR *Id) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Id( 
            /* [in] */ BSTR Id) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ MsoScriptLanguage *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ MsoScriptLanguage Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Location( 
            /* [retval][out] */ MsoScriptLocation *Location) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Shape( 
            /* [retval][out] */ IDispatch **Object) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScriptText( 
            /* [retval][out] */ BSTR *Script) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScriptText( 
            /* [in] */ BSTR Script) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ScriptVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Script * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Script * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Script * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Script * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Script * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Script * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Script * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Script * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Script * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Script * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extended )( 
            Script * This,
            /* [retval][out] */ BSTR *Extended);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Extended )( 
            Script * This,
            /* [in] */ BSTR Extended);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            Script * This,
            /* [retval][out] */ BSTR *Id);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            Script * This,
            /* [in] */ BSTR Id);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            Script * This,
            /* [retval][out] */ MsoScriptLanguage *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            Script * This,
            /* [in] */ MsoScriptLanguage Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Location )( 
            Script * This,
            /* [retval][out] */ MsoScriptLocation *Location);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Script * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Shape )( 
            Script * This,
            /* [retval][out] */ IDispatch **Object);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScriptText )( 
            Script * This,
            /* [retval][out] */ BSTR *Script);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScriptText )( 
            Script * This,
            /* [in] */ BSTR Script);
        
        END_INTERFACE
    } ScriptVtbl;

    interface Script
    {
        CONST_VTBL struct ScriptVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Script_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Script_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Script_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Script_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Script_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Script_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Script_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Script_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Script_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Script_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Script_get_Extended(This,Extended)	\
    ( (This)->lpVtbl -> get_Extended(This,Extended) ) 

#define Script_put_Extended(This,Extended)	\
    ( (This)->lpVtbl -> put_Extended(This,Extended) ) 

#define Script_get_Id(This,Id)	\
    ( (This)->lpVtbl -> get_Id(This,Id) ) 

#define Script_put_Id(This,Id)	\
    ( (This)->lpVtbl -> put_Id(This,Id) ) 

#define Script_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define Script_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define Script_get_Location(This,Location)	\
    ( (This)->lpVtbl -> get_Location(This,Location) ) 

#define Script_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define Script_get_Shape(This,Object)	\
    ( (This)->lpVtbl -> get_Shape(This,Object) ) 

#define Script_get_ScriptText(This,Script)	\
    ( (This)->lpVtbl -> get_ScriptText(This,Script) ) 

#define Script_put_ScriptText(This,Script)	\
    ( (This)->lpVtbl -> put_ScriptText(This,Script) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Script_INTERFACE_DEFINED__ */


#ifndef __Scripts_INTERFACE_DEFINED__
#define __Scripts_INTERFACE_DEFINED__

/* interface Scripts */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Scripts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0340-0000-0000-C000-000000000046")
    Scripts : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **_NewEnum) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Script **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ IDispatch *Anchor,
            /* [defaultvalue][optional][in] */ MsoScriptLocation Location,
            /* [defaultvalue][optional][in] */ MsoScriptLanguage Language,
            /* [defaultvalue][optional][in] */ BSTR Id,
            /* [defaultvalue][optional][in] */ BSTR Extended,
            /* [defaultvalue][optional][in] */ BSTR ScriptText,
            /* [retval][out] */ Script **Add) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ScriptsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Scripts * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Scripts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Scripts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Scripts * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Scripts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Scripts * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Scripts * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Scripts * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Scripts * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Scripts * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Scripts * This,
            /* [retval][out] */ long *Count);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            Scripts * This,
            /* [retval][out] */ IUnknown **_NewEnum);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Scripts * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Script **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Scripts * This,
            /* [optional][in] */ IDispatch *Anchor,
            /* [defaultvalue][optional][in] */ MsoScriptLocation Location,
            /* [defaultvalue][optional][in] */ MsoScriptLanguage Language,
            /* [defaultvalue][optional][in] */ BSTR Id,
            /* [defaultvalue][optional][in] */ BSTR Extended,
            /* [defaultvalue][optional][in] */ BSTR ScriptText,
            /* [retval][out] */ Script **Add);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Scripts * This);
        
        END_INTERFACE
    } ScriptsVtbl;

    interface Scripts
    {
        CONST_VTBL struct ScriptsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Scripts_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Scripts_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Scripts_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Scripts_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Scripts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Scripts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Scripts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Scripts_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Scripts_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Scripts_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Scripts_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Scripts_get__NewEnum(This,_NewEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,_NewEnum) ) 

#define Scripts_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define Scripts_Add(This,Anchor,Location,Language,Id,Extended,ScriptText,Add)	\
    ( (This)->lpVtbl -> Add(This,Anchor,Location,Language,Id,Extended,ScriptText,Add) ) 

#define Scripts_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Scripts_INTERFACE_DEFINED__ */


#ifndef __Shape_INTERFACE_DEFINED__
#define __Shape_INTERFACE_DEFINED__

/* interface Shape */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_Shape;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C031C-0000-0000-C000-000000000046")
    Shape : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Duplicate( 
            /* [retval][out] */ Shape **Duplicate) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Flip( 
            /* [in] */ MsoFlipCmd FlipCmd) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementLeft( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementRotation( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementTop( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PickUp( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RerouteConnections( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ScaleHeight( 
            /* [in] */ short Factor,
            /* [in] */ MsoTriState RelativeToOriginalSize,
            /* [defaultvalue][optional][in] */ MsoScaleFrom fScale = 0) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ScaleWidth( 
            /* [in] */ short Factor,
            /* [in] */ MsoTriState RelativeToOriginalSize,
            /* [defaultvalue][optional][in] */ MsoScaleFrom fScale = 0) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Select( 
            /* [optional][in] */ VARIANT Replace) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetShapesDefaultProperties( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Ungroup( 
            /* [retval][out] */ ShapeRange **Ungroup) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ZOrder( 
            /* [in] */ MsoZOrderCmd ZOrderCmd) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Adjustments( 
            /* [retval][out] */ Adjustments **Adjustments) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoShapeType( 
            /* [retval][out] */ MsoAutoShapeType *AutoShapeType) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoShapeType( 
            /* [in] */ MsoAutoShapeType AutoShapeType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BlackWhiteMode( 
            /* [retval][out] */ MsoBlackWhiteMode *BlackWhiteMode) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_BlackWhiteMode( 
            /* [in] */ MsoBlackWhiteMode BlackWhiteMode) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Callout( 
            /* [retval][out] */ CalloutFormat **Callout) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ConnectionSiteCount( 
            /* [retval][out] */ int *ConnectionSiteCount) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Connector( 
            /* [retval][out] */ MsoTriState *Connector) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ConnectorFormat( 
            /* [retval][out] */ ConnectorFormat **ConnectorFormat) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Fill( 
            /* [retval][out] */ FillFormat **Fill) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GroupItems( 
            /* [retval][out] */ GroupShapes **GroupItems) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short *Height) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ short Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalFlip( 
            /* [retval][out] */ MsoTriState *HorizontalFlip) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short *Left) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ short Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Line( 
            /* [retval][out] */ LineFormat **Line) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LockAspectRatio( 
            /* [retval][out] */ MsoTriState *LockAspectRatio) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_LockAspectRatio( 
            /* [in] */ MsoTriState LockAspectRatio) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Nodes( 
            /* [retval][out] */ ShapeNodes **Nodes) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ short *Rotation) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ short Rotation) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PictureFormat( 
            /* [retval][out] */ PictureFormat **Picture) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Shadow( 
            /* [retval][out] */ ShadowFormat **Shadow) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TextEffect( 
            /* [retval][out] */ TextEffectFormat **TextEffect) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TextFrame( 
            /* [retval][out] */ TextFrame **TextFrame) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ThreeD( 
            /* [retval][out] */ ThreeDFormat **ThreeD) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short *Top) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ short Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoShapeType *Type) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VerticalFlip( 
            /* [retval][out] */ MsoTriState *VerticalFlip) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Vertices( 
            /* [retval][out] */ VARIANT *Vertices) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ MsoTriState *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ MsoTriState Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short *Width) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ short Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ZOrderPosition( 
            /* [retval][out] */ int *ZOrderPosition) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Script( 
            /* [retval][out] */ Script **Script) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AlternativeText( 
            /* [retval][out] */ BSTR *AlternativeText) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AlternativeText( 
            /* [in] */ BSTR AlternativeText) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasDiagram( 
            /* [retval][out] */ MsoTriState *pHasDiagram) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Diagram( 
            /* [retval][out] */ IMsoDiagram **Diagram) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasDiagramNode( 
            /* [retval][out] */ MsoTriState *pHasDiagram) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DiagramNode( 
            /* [retval][out] */ DiagramNode **DiagramNode) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Child( 
            /* [retval][out] */ MsoTriState *Child) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ParentGroup( 
            /* [retval][out] */ Shape **Parent) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_CanvasItems( 
            /* [retval][out] */ CanvasShapes **CanvasShapes) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Id( 
            /* [retval][out] */ int *pid) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE CanvasCropLeft( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE CanvasCropTop( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE CanvasCropRight( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE CanvasCropBottom( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTF( 
            /* [in] */ BSTR rhs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ShapeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Shape * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Shape * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Shape * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Shape * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Shape * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Shape * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Shape * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Shape * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Shape * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Shape * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            Shape * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Shape * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Duplicate )( 
            Shape * This,
            /* [retval][out] */ Shape **Duplicate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Flip )( 
            Shape * This,
            /* [in] */ MsoFlipCmd FlipCmd);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementLeft )( 
            Shape * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementRotation )( 
            Shape * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementTop )( 
            Shape * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PickUp )( 
            Shape * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RerouteConnections )( 
            Shape * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ScaleHeight )( 
            Shape * This,
            /* [in] */ short Factor,
            /* [in] */ MsoTriState RelativeToOriginalSize,
            /* [defaultvalue][optional][in] */ MsoScaleFrom fScale);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ScaleWidth )( 
            Shape * This,
            /* [in] */ short Factor,
            /* [in] */ MsoTriState RelativeToOriginalSize,
            /* [defaultvalue][optional][in] */ MsoScaleFrom fScale);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            Shape * This,
            /* [optional][in] */ VARIANT Replace);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetShapesDefaultProperties )( 
            Shape * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Ungroup )( 
            Shape * This,
            /* [retval][out] */ ShapeRange **Ungroup);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ZOrder )( 
            Shape * This,
            /* [in] */ MsoZOrderCmd ZOrderCmd);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Adjustments )( 
            Shape * This,
            /* [retval][out] */ Adjustments **Adjustments);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoShapeType )( 
            Shape * This,
            /* [retval][out] */ MsoAutoShapeType *AutoShapeType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoShapeType )( 
            Shape * This,
            /* [in] */ MsoAutoShapeType AutoShapeType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BlackWhiteMode )( 
            Shape * This,
            /* [retval][out] */ MsoBlackWhiteMode *BlackWhiteMode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BlackWhiteMode )( 
            Shape * This,
            /* [in] */ MsoBlackWhiteMode BlackWhiteMode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Callout )( 
            Shape * This,
            /* [retval][out] */ CalloutFormat **Callout);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionSiteCount )( 
            Shape * This,
            /* [retval][out] */ int *ConnectionSiteCount);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Connector )( 
            Shape * This,
            /* [retval][out] */ MsoTriState *Connector);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectorFormat )( 
            Shape * This,
            /* [retval][out] */ ConnectorFormat **ConnectorFormat);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fill )( 
            Shape * This,
            /* [retval][out] */ FillFormat **Fill);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GroupItems )( 
            Shape * This,
            /* [retval][out] */ GroupShapes **GroupItems);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            Shape * This,
            /* [retval][out] */ short *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            Shape * This,
            /* [in] */ short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalFlip )( 
            Shape * This,
            /* [retval][out] */ MsoTriState *HorizontalFlip);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            Shape * This,
            /* [retval][out] */ short *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            Shape * This,
            /* [in] */ short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Line )( 
            Shape * This,
            /* [retval][out] */ LineFormat **Line);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockAspectRatio )( 
            Shape * This,
            /* [retval][out] */ MsoTriState *LockAspectRatio);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockAspectRatio )( 
            Shape * This,
            /* [in] */ MsoTriState LockAspectRatio);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Shape * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            Shape * This,
            /* [in] */ BSTR Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Nodes )( 
            Shape * This,
            /* [retval][out] */ ShapeNodes **Nodes);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            Shape * This,
            /* [retval][out] */ short *Rotation);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            Shape * This,
            /* [in] */ short Rotation);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PictureFormat )( 
            Shape * This,
            /* [retval][out] */ PictureFormat **Picture);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Shadow )( 
            Shape * This,
            /* [retval][out] */ ShadowFormat **Shadow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextEffect )( 
            Shape * This,
            /* [retval][out] */ TextEffectFormat **TextEffect);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextFrame )( 
            Shape * This,
            /* [retval][out] */ TextFrame **TextFrame);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ThreeD )( 
            Shape * This,
            /* [retval][out] */ ThreeDFormat **ThreeD);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            Shape * This,
            /* [retval][out] */ short *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            Shape * This,
            /* [in] */ short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Shape * This,
            /* [retval][out] */ MsoShapeType *Type);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalFlip )( 
            Shape * This,
            /* [retval][out] */ MsoTriState *VerticalFlip);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Vertices )( 
            Shape * This,
            /* [retval][out] */ VARIANT *Vertices);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            Shape * This,
            /* [retval][out] */ MsoTriState *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            Shape * This,
            /* [in] */ MsoTriState Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            Shape * This,
            /* [retval][out] */ short *Width);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            Shape * This,
            /* [in] */ short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ZOrderPosition )( 
            Shape * This,
            /* [retval][out] */ int *ZOrderPosition);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Script )( 
            Shape * This,
            /* [retval][out] */ Script **Script);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AlternativeText )( 
            Shape * This,
            /* [retval][out] */ BSTR *AlternativeText);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AlternativeText )( 
            Shape * This,
            /* [in] */ BSTR AlternativeText);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasDiagram )( 
            Shape * This,
            /* [retval][out] */ MsoTriState *pHasDiagram);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Diagram )( 
            Shape * This,
            /* [retval][out] */ IMsoDiagram **Diagram);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasDiagramNode )( 
            Shape * This,
            /* [retval][out] */ MsoTriState *pHasDiagram);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DiagramNode )( 
            Shape * This,
            /* [retval][out] */ DiagramNode **DiagramNode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Child )( 
            Shape * This,
            /* [retval][out] */ MsoTriState *Child);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ParentGroup )( 
            Shape * This,
            /* [retval][out] */ Shape **Parent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanvasItems )( 
            Shape * This,
            /* [retval][out] */ CanvasShapes **CanvasShapes);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            Shape * This,
            /* [retval][out] */ int *pid);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CanvasCropLeft )( 
            Shape * This,
            /* [in] */ short Increment);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CanvasCropTop )( 
            Shape * This,
            /* [in] */ short Increment);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CanvasCropRight )( 
            Shape * This,
            /* [in] */ short Increment);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CanvasCropBottom )( 
            Shape * This,
            /* [in] */ short Increment);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTF )( 
            Shape * This,
            /* [in] */ BSTR rhs);
        
        END_INTERFACE
    } ShapeVtbl;

    interface Shape
    {
        CONST_VTBL struct ShapeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Shape_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Shape_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Shape_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Shape_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Shape_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Shape_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Shape_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Shape_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Shape_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Shape_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Shape_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define Shape_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define Shape_Duplicate(This,Duplicate)	\
    ( (This)->lpVtbl -> Duplicate(This,Duplicate) ) 

#define Shape_Flip(This,FlipCmd)	\
    ( (This)->lpVtbl -> Flip(This,FlipCmd) ) 

#define Shape_IncrementLeft(This,Increment)	\
    ( (This)->lpVtbl -> IncrementLeft(This,Increment) ) 

#define Shape_IncrementRotation(This,Increment)	\
    ( (This)->lpVtbl -> IncrementRotation(This,Increment) ) 

#define Shape_IncrementTop(This,Increment)	\
    ( (This)->lpVtbl -> IncrementTop(This,Increment) ) 

#define Shape_PickUp(This)	\
    ( (This)->lpVtbl -> PickUp(This) ) 

#define Shape_RerouteConnections(This)	\
    ( (This)->lpVtbl -> RerouteConnections(This) ) 

#define Shape_ScaleHeight(This,Factor,RelativeToOriginalSize,fScale)	\
    ( (This)->lpVtbl -> ScaleHeight(This,Factor,RelativeToOriginalSize,fScale) ) 

#define Shape_ScaleWidth(This,Factor,RelativeToOriginalSize,fScale)	\
    ( (This)->lpVtbl -> ScaleWidth(This,Factor,RelativeToOriginalSize,fScale) ) 

#define Shape_Select(This,Replace)	\
    ( (This)->lpVtbl -> Select(This,Replace) ) 

#define Shape_SetShapesDefaultProperties(This)	\
    ( (This)->lpVtbl -> SetShapesDefaultProperties(This) ) 

#define Shape_Ungroup(This,Ungroup)	\
    ( (This)->lpVtbl -> Ungroup(This,Ungroup) ) 

#define Shape_ZOrder(This,ZOrderCmd)	\
    ( (This)->lpVtbl -> ZOrder(This,ZOrderCmd) ) 

#define Shape_get_Adjustments(This,Adjustments)	\
    ( (This)->lpVtbl -> get_Adjustments(This,Adjustments) ) 

#define Shape_get_AutoShapeType(This,AutoShapeType)	\
    ( (This)->lpVtbl -> get_AutoShapeType(This,AutoShapeType) ) 

#define Shape_put_AutoShapeType(This,AutoShapeType)	\
    ( (This)->lpVtbl -> put_AutoShapeType(This,AutoShapeType) ) 

#define Shape_get_BlackWhiteMode(This,BlackWhiteMode)	\
    ( (This)->lpVtbl -> get_BlackWhiteMode(This,BlackWhiteMode) ) 

#define Shape_put_BlackWhiteMode(This,BlackWhiteMode)	\
    ( (This)->lpVtbl -> put_BlackWhiteMode(This,BlackWhiteMode) ) 

#define Shape_get_Callout(This,Callout)	\
    ( (This)->lpVtbl -> get_Callout(This,Callout) ) 

#define Shape_get_ConnectionSiteCount(This,ConnectionSiteCount)	\
    ( (This)->lpVtbl -> get_ConnectionSiteCount(This,ConnectionSiteCount) ) 

#define Shape_get_Connector(This,Connector)	\
    ( (This)->lpVtbl -> get_Connector(This,Connector) ) 

#define Shape_get_ConnectorFormat(This,ConnectorFormat)	\
    ( (This)->lpVtbl -> get_ConnectorFormat(This,ConnectorFormat) ) 

#define Shape_get_Fill(This,Fill)	\
    ( (This)->lpVtbl -> get_Fill(This,Fill) ) 

#define Shape_get_GroupItems(This,GroupItems)	\
    ( (This)->lpVtbl -> get_GroupItems(This,GroupItems) ) 

#define Shape_get_Height(This,Height)	\
    ( (This)->lpVtbl -> get_Height(This,Height) ) 

#define Shape_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define Shape_get_HorizontalFlip(This,HorizontalFlip)	\
    ( (This)->lpVtbl -> get_HorizontalFlip(This,HorizontalFlip) ) 

#define Shape_get_Left(This,Left)	\
    ( (This)->lpVtbl -> get_Left(This,Left) ) 

#define Shape_put_Left(This,Left)	\
    ( (This)->lpVtbl -> put_Left(This,Left) ) 

#define Shape_get_Line(This,Line)	\
    ( (This)->lpVtbl -> get_Line(This,Line) ) 

#define Shape_get_LockAspectRatio(This,LockAspectRatio)	\
    ( (This)->lpVtbl -> get_LockAspectRatio(This,LockAspectRatio) ) 

#define Shape_put_LockAspectRatio(This,LockAspectRatio)	\
    ( (This)->lpVtbl -> put_LockAspectRatio(This,LockAspectRatio) ) 

#define Shape_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Shape_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define Shape_get_Nodes(This,Nodes)	\
    ( (This)->lpVtbl -> get_Nodes(This,Nodes) ) 

#define Shape_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define Shape_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define Shape_get_PictureFormat(This,Picture)	\
    ( (This)->lpVtbl -> get_PictureFormat(This,Picture) ) 

#define Shape_get_Shadow(This,Shadow)	\
    ( (This)->lpVtbl -> get_Shadow(This,Shadow) ) 

#define Shape_get_TextEffect(This,TextEffect)	\
    ( (This)->lpVtbl -> get_TextEffect(This,TextEffect) ) 

#define Shape_get_TextFrame(This,TextFrame)	\
    ( (This)->lpVtbl -> get_TextFrame(This,TextFrame) ) 

#define Shape_get_ThreeD(This,ThreeD)	\
    ( (This)->lpVtbl -> get_ThreeD(This,ThreeD) ) 

#define Shape_get_Top(This,Top)	\
    ( (This)->lpVtbl -> get_Top(This,Top) ) 

#define Shape_put_Top(This,Top)	\
    ( (This)->lpVtbl -> put_Top(This,Top) ) 

#define Shape_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define Shape_get_VerticalFlip(This,VerticalFlip)	\
    ( (This)->lpVtbl -> get_VerticalFlip(This,VerticalFlip) ) 

#define Shape_get_Vertices(This,Vertices)	\
    ( (This)->lpVtbl -> get_Vertices(This,Vertices) ) 

#define Shape_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define Shape_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define Shape_get_Width(This,Width)	\
    ( (This)->lpVtbl -> get_Width(This,Width) ) 

#define Shape_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define Shape_get_ZOrderPosition(This,ZOrderPosition)	\
    ( (This)->lpVtbl -> get_ZOrderPosition(This,ZOrderPosition) ) 

#define Shape_get_Script(This,Script)	\
    ( (This)->lpVtbl -> get_Script(This,Script) ) 

#define Shape_get_AlternativeText(This,AlternativeText)	\
    ( (This)->lpVtbl -> get_AlternativeText(This,AlternativeText) ) 

#define Shape_put_AlternativeText(This,AlternativeText)	\
    ( (This)->lpVtbl -> put_AlternativeText(This,AlternativeText) ) 

#define Shape_get_HasDiagram(This,pHasDiagram)	\
    ( (This)->lpVtbl -> get_HasDiagram(This,pHasDiagram) ) 

#define Shape_get_Diagram(This,Diagram)	\
    ( (This)->lpVtbl -> get_Diagram(This,Diagram) ) 

#define Shape_get_HasDiagramNode(This,pHasDiagram)	\
    ( (This)->lpVtbl -> get_HasDiagramNode(This,pHasDiagram) ) 

#define Shape_get_DiagramNode(This,DiagramNode)	\
    ( (This)->lpVtbl -> get_DiagramNode(This,DiagramNode) ) 

#define Shape_get_Child(This,Child)	\
    ( (This)->lpVtbl -> get_Child(This,Child) ) 

#define Shape_get_ParentGroup(This,Parent)	\
    ( (This)->lpVtbl -> get_ParentGroup(This,Parent) ) 

#define Shape_get_CanvasItems(This,CanvasShapes)	\
    ( (This)->lpVtbl -> get_CanvasItems(This,CanvasShapes) ) 

#define Shape_get_Id(This,pid)	\
    ( (This)->lpVtbl -> get_Id(This,pid) ) 

#define Shape_CanvasCropLeft(This,Increment)	\
    ( (This)->lpVtbl -> CanvasCropLeft(This,Increment) ) 

#define Shape_CanvasCropTop(This,Increment)	\
    ( (This)->lpVtbl -> CanvasCropTop(This,Increment) ) 

#define Shape_CanvasCropRight(This,Increment)	\
    ( (This)->lpVtbl -> CanvasCropRight(This,Increment) ) 

#define Shape_CanvasCropBottom(This,Increment)	\
    ( (This)->lpVtbl -> CanvasCropBottom(This,Increment) ) 

#define Shape_put_RTF(This,rhs)	\
    ( (This)->lpVtbl -> put_RTF(This,rhs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Shape_INTERFACE_DEFINED__ */


#ifndef __ShapeRange_INTERFACE_DEFINED__
#define __ShapeRange_INTERFACE_DEFINED__

/* interface ShapeRange */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_ShapeRange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C031D-0000-0000-C000-000000000046")
    ShapeRange : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *Count) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Shape **Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **_NewEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Align( 
            /* [in] */ MsoAlignCmd AlignCmd,
            /* [in] */ MsoTriState RelativeTo) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Distribute( 
            /* [in] */ MsoDistributeCmd DistributeCmd,
            /* [in] */ MsoTriState RelativeTo) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Duplicate( 
            /* [retval][out] */ ShapeRange **Duplicate) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Flip( 
            /* [in] */ MsoFlipCmd FlipCmd) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementLeft( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementRotation( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementTop( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Group( 
            /* [retval][out] */ Shape **Group) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PickUp( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Regroup( 
            /* [retval][out] */ Shape **Regroup) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RerouteConnections( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ScaleHeight( 
            /* [in] */ short Factor,
            /* [in] */ MsoTriState RelativeToOriginalSize,
            /* [defaultvalue][optional][in] */ MsoScaleFrom fScale = 0) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ScaleWidth( 
            /* [in] */ short Factor,
            /* [in] */ MsoTriState RelativeToOriginalSize,
            /* [defaultvalue][optional][in] */ MsoScaleFrom fScale = 0) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Select( 
            /* [optional][in] */ VARIANT Replace) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetShapesDefaultProperties( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Ungroup( 
            /* [retval][out] */ ShapeRange **Ungroup) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ZOrder( 
            /* [in] */ MsoZOrderCmd ZOrderCmd) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Adjustments( 
            /* [retval][out] */ Adjustments **Adjustments) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoShapeType( 
            /* [retval][out] */ MsoAutoShapeType *AutoShapeType) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoShapeType( 
            /* [in] */ MsoAutoShapeType AutoShapeType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BlackWhiteMode( 
            /* [retval][out] */ MsoBlackWhiteMode *BlackWhiteMode) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_BlackWhiteMode( 
            /* [in] */ MsoBlackWhiteMode BlackWhiteMode) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Callout( 
            /* [retval][out] */ CalloutFormat **Callout) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ConnectionSiteCount( 
            /* [retval][out] */ int *ConnectionSiteCount) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Connector( 
            /* [retval][out] */ MsoTriState *Connector) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ConnectorFormat( 
            /* [retval][out] */ ConnectorFormat **ConnectorFormat) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Fill( 
            /* [retval][out] */ FillFormat **Fill) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GroupItems( 
            /* [retval][out] */ GroupShapes **GroupItems) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short *Height) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ short Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalFlip( 
            /* [retval][out] */ MsoTriState *HorizontalFlip) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short *Left) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ short Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Line( 
            /* [retval][out] */ LineFormat **Line) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LockAspectRatio( 
            /* [retval][out] */ MsoTriState *LockAspectRatio) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_LockAspectRatio( 
            /* [in] */ MsoTriState LockAspectRatio) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Nodes( 
            /* [retval][out] */ ShapeNodes **Nodes) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
            /* [retval][out] */ short *Rotation) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
            /* [in] */ short Rotation) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PictureFormat( 
            /* [retval][out] */ PictureFormat **Picture) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Shadow( 
            /* [retval][out] */ ShadowFormat **Shadow) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TextEffect( 
            /* [retval][out] */ TextEffectFormat **TextEffect) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TextFrame( 
            /* [retval][out] */ TextFrame **TextFrame) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ThreeD( 
            /* [retval][out] */ ThreeDFormat **ThreeD) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short *Top) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ short Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoShapeType *Type) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VerticalFlip( 
            /* [retval][out] */ MsoTriState *VerticalFlip) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Vertices( 
            /* [retval][out] */ VARIANT *Vertices) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ MsoTriState *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ MsoTriState Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short *Width) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ short Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ZOrderPosition( 
            /* [retval][out] */ int *ZOrderPosition) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Script( 
            /* [retval][out] */ Script **Script) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AlternativeText( 
            /* [retval][out] */ BSTR *AlternativeText) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AlternativeText( 
            /* [in] */ BSTR AlternativeText) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasDiagram( 
            /* [retval][out] */ MsoTriState *pHasDiagram) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Diagram( 
            /* [retval][out] */ IMsoDiagram **Diagram) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasDiagramNode( 
            /* [retval][out] */ MsoTriState *pHasDiagram) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DiagramNode( 
            /* [retval][out] */ DiagramNode **DiagramNode) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Child( 
            /* [retval][out] */ MsoTriState *Child) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ParentGroup( 
            /* [retval][out] */ Shape **Parent) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_CanvasItems( 
            /* [retval][out] */ CanvasShapes **CanvasShapes) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Id( 
            /* [retval][out] */ int *pid) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE CanvasCropLeft( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE CanvasCropTop( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE CanvasCropRight( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE CanvasCropBottom( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTF( 
            /* [in] */ BSTR rhs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ShapeRangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ShapeRange * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ShapeRange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ShapeRange * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ShapeRange * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ShapeRange * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ShapeRange * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ShapeRange * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ShapeRange * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ShapeRange * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ShapeRange * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ShapeRange * This,
            /* [retval][out] */ int *Count);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ShapeRange * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Shape **Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            ShapeRange * This,
            /* [retval][out] */ IUnknown **_NewEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Align )( 
            ShapeRange * This,
            /* [in] */ MsoAlignCmd AlignCmd,
            /* [in] */ MsoTriState RelativeTo);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            ShapeRange * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ShapeRange * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Distribute )( 
            ShapeRange * This,
            /* [in] */ MsoDistributeCmd DistributeCmd,
            /* [in] */ MsoTriState RelativeTo);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Duplicate )( 
            ShapeRange * This,
            /* [retval][out] */ ShapeRange **Duplicate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Flip )( 
            ShapeRange * This,
            /* [in] */ MsoFlipCmd FlipCmd);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementLeft )( 
            ShapeRange * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementRotation )( 
            ShapeRange * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementTop )( 
            ShapeRange * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Group )( 
            ShapeRange * This,
            /* [retval][out] */ Shape **Group);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PickUp )( 
            ShapeRange * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Regroup )( 
            ShapeRange * This,
            /* [retval][out] */ Shape **Regroup);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RerouteConnections )( 
            ShapeRange * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ScaleHeight )( 
            ShapeRange * This,
            /* [in] */ short Factor,
            /* [in] */ MsoTriState RelativeToOriginalSize,
            /* [defaultvalue][optional][in] */ MsoScaleFrom fScale);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ScaleWidth )( 
            ShapeRange * This,
            /* [in] */ short Factor,
            /* [in] */ MsoTriState RelativeToOriginalSize,
            /* [defaultvalue][optional][in] */ MsoScaleFrom fScale);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            ShapeRange * This,
            /* [optional][in] */ VARIANT Replace);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetShapesDefaultProperties )( 
            ShapeRange * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Ungroup )( 
            ShapeRange * This,
            /* [retval][out] */ ShapeRange **Ungroup);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ZOrder )( 
            ShapeRange * This,
            /* [in] */ MsoZOrderCmd ZOrderCmd);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Adjustments )( 
            ShapeRange * This,
            /* [retval][out] */ Adjustments **Adjustments);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoShapeType )( 
            ShapeRange * This,
            /* [retval][out] */ MsoAutoShapeType *AutoShapeType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoShapeType )( 
            ShapeRange * This,
            /* [in] */ MsoAutoShapeType AutoShapeType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BlackWhiteMode )( 
            ShapeRange * This,
            /* [retval][out] */ MsoBlackWhiteMode *BlackWhiteMode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BlackWhiteMode )( 
            ShapeRange * This,
            /* [in] */ MsoBlackWhiteMode BlackWhiteMode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Callout )( 
            ShapeRange * This,
            /* [retval][out] */ CalloutFormat **Callout);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionSiteCount )( 
            ShapeRange * This,
            /* [retval][out] */ int *ConnectionSiteCount);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Connector )( 
            ShapeRange * This,
            /* [retval][out] */ MsoTriState *Connector);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectorFormat )( 
            ShapeRange * This,
            /* [retval][out] */ ConnectorFormat **ConnectorFormat);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fill )( 
            ShapeRange * This,
            /* [retval][out] */ FillFormat **Fill);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GroupItems )( 
            ShapeRange * This,
            /* [retval][out] */ GroupShapes **GroupItems);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            ShapeRange * This,
            /* [retval][out] */ short *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            ShapeRange * This,
            /* [in] */ short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalFlip )( 
            ShapeRange * This,
            /* [retval][out] */ MsoTriState *HorizontalFlip);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            ShapeRange * This,
            /* [retval][out] */ short *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            ShapeRange * This,
            /* [in] */ short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Line )( 
            ShapeRange * This,
            /* [retval][out] */ LineFormat **Line);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockAspectRatio )( 
            ShapeRange * This,
            /* [retval][out] */ MsoTriState *LockAspectRatio);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockAspectRatio )( 
            ShapeRange * This,
            /* [in] */ MsoTriState LockAspectRatio);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ShapeRange * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            ShapeRange * This,
            /* [in] */ BSTR Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Nodes )( 
            ShapeRange * This,
            /* [retval][out] */ ShapeNodes **Nodes);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            ShapeRange * This,
            /* [retval][out] */ short *Rotation);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            ShapeRange * This,
            /* [in] */ short Rotation);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PictureFormat )( 
            ShapeRange * This,
            /* [retval][out] */ PictureFormat **Picture);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Shadow )( 
            ShapeRange * This,
            /* [retval][out] */ ShadowFormat **Shadow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextEffect )( 
            ShapeRange * This,
            /* [retval][out] */ TextEffectFormat **TextEffect);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextFrame )( 
            ShapeRange * This,
            /* [retval][out] */ TextFrame **TextFrame);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ThreeD )( 
            ShapeRange * This,
            /* [retval][out] */ ThreeDFormat **ThreeD);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            ShapeRange * This,
            /* [retval][out] */ short *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            ShapeRange * This,
            /* [in] */ short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            ShapeRange * This,
            /* [retval][out] */ MsoShapeType *Type);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalFlip )( 
            ShapeRange * This,
            /* [retval][out] */ MsoTriState *VerticalFlip);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Vertices )( 
            ShapeRange * This,
            /* [retval][out] */ VARIANT *Vertices);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            ShapeRange * This,
            /* [retval][out] */ MsoTriState *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            ShapeRange * This,
            /* [in] */ MsoTriState Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            ShapeRange * This,
            /* [retval][out] */ short *Width);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            ShapeRange * This,
            /* [in] */ short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ZOrderPosition )( 
            ShapeRange * This,
            /* [retval][out] */ int *ZOrderPosition);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Script )( 
            ShapeRange * This,
            /* [retval][out] */ Script **Script);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AlternativeText )( 
            ShapeRange * This,
            /* [retval][out] */ BSTR *AlternativeText);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AlternativeText )( 
            ShapeRange * This,
            /* [in] */ BSTR AlternativeText);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasDiagram )( 
            ShapeRange * This,
            /* [retval][out] */ MsoTriState *pHasDiagram);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Diagram )( 
            ShapeRange * This,
            /* [retval][out] */ IMsoDiagram **Diagram);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasDiagramNode )( 
            ShapeRange * This,
            /* [retval][out] */ MsoTriState *pHasDiagram);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DiagramNode )( 
            ShapeRange * This,
            /* [retval][out] */ DiagramNode **DiagramNode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Child )( 
            ShapeRange * This,
            /* [retval][out] */ MsoTriState *Child);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ParentGroup )( 
            ShapeRange * This,
            /* [retval][out] */ Shape **Parent);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanvasItems )( 
            ShapeRange * This,
            /* [retval][out] */ CanvasShapes **CanvasShapes);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            ShapeRange * This,
            /* [retval][out] */ int *pid);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CanvasCropLeft )( 
            ShapeRange * This,
            /* [in] */ short Increment);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CanvasCropTop )( 
            ShapeRange * This,
            /* [in] */ short Increment);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CanvasCropRight )( 
            ShapeRange * This,
            /* [in] */ short Increment);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CanvasCropBottom )( 
            ShapeRange * This,
            /* [in] */ short Increment);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTF )( 
            ShapeRange * This,
            /* [in] */ BSTR rhs);
        
        END_INTERFACE
    } ShapeRangeVtbl;

    interface ShapeRange
    {
        CONST_VTBL struct ShapeRangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ShapeRange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ShapeRange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ShapeRange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ShapeRange_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ShapeRange_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ShapeRange_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ShapeRange_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ShapeRange_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ShapeRange_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ShapeRange_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define ShapeRange_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define ShapeRange_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define ShapeRange_get__NewEnum(This,_NewEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,_NewEnum) ) 

#define ShapeRange_Align(This,AlignCmd,RelativeTo)	\
    ( (This)->lpVtbl -> Align(This,AlignCmd,RelativeTo) ) 

#define ShapeRange_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define ShapeRange_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define ShapeRange_Distribute(This,DistributeCmd,RelativeTo)	\
    ( (This)->lpVtbl -> Distribute(This,DistributeCmd,RelativeTo) ) 

#define ShapeRange_Duplicate(This,Duplicate)	\
    ( (This)->lpVtbl -> Duplicate(This,Duplicate) ) 

#define ShapeRange_Flip(This,FlipCmd)	\
    ( (This)->lpVtbl -> Flip(This,FlipCmd) ) 

#define ShapeRange_IncrementLeft(This,Increment)	\
    ( (This)->lpVtbl -> IncrementLeft(This,Increment) ) 

#define ShapeRange_IncrementRotation(This,Increment)	\
    ( (This)->lpVtbl -> IncrementRotation(This,Increment) ) 

#define ShapeRange_IncrementTop(This,Increment)	\
    ( (This)->lpVtbl -> IncrementTop(This,Increment) ) 

#define ShapeRange_Group(This,Group)	\
    ( (This)->lpVtbl -> Group(This,Group) ) 

#define ShapeRange_PickUp(This)	\
    ( (This)->lpVtbl -> PickUp(This) ) 

#define ShapeRange_Regroup(This,Regroup)	\
    ( (This)->lpVtbl -> Regroup(This,Regroup) ) 

#define ShapeRange_RerouteConnections(This)	\
    ( (This)->lpVtbl -> RerouteConnections(This) ) 

#define ShapeRange_ScaleHeight(This,Factor,RelativeToOriginalSize,fScale)	\
    ( (This)->lpVtbl -> ScaleHeight(This,Factor,RelativeToOriginalSize,fScale) ) 

#define ShapeRange_ScaleWidth(This,Factor,RelativeToOriginalSize,fScale)	\
    ( (This)->lpVtbl -> ScaleWidth(This,Factor,RelativeToOriginalSize,fScale) ) 

#define ShapeRange_Select(This,Replace)	\
    ( (This)->lpVtbl -> Select(This,Replace) ) 

#define ShapeRange_SetShapesDefaultProperties(This)	\
    ( (This)->lpVtbl -> SetShapesDefaultProperties(This) ) 

#define ShapeRange_Ungroup(This,Ungroup)	\
    ( (This)->lpVtbl -> Ungroup(This,Ungroup) ) 

#define ShapeRange_ZOrder(This,ZOrderCmd)	\
    ( (This)->lpVtbl -> ZOrder(This,ZOrderCmd) ) 

#define ShapeRange_get_Adjustments(This,Adjustments)	\
    ( (This)->lpVtbl -> get_Adjustments(This,Adjustments) ) 

#define ShapeRange_get_AutoShapeType(This,AutoShapeType)	\
    ( (This)->lpVtbl -> get_AutoShapeType(This,AutoShapeType) ) 

#define ShapeRange_put_AutoShapeType(This,AutoShapeType)	\
    ( (This)->lpVtbl -> put_AutoShapeType(This,AutoShapeType) ) 

#define ShapeRange_get_BlackWhiteMode(This,BlackWhiteMode)	\
    ( (This)->lpVtbl -> get_BlackWhiteMode(This,BlackWhiteMode) ) 

#define ShapeRange_put_BlackWhiteMode(This,BlackWhiteMode)	\
    ( (This)->lpVtbl -> put_BlackWhiteMode(This,BlackWhiteMode) ) 

#define ShapeRange_get_Callout(This,Callout)	\
    ( (This)->lpVtbl -> get_Callout(This,Callout) ) 

#define ShapeRange_get_ConnectionSiteCount(This,ConnectionSiteCount)	\
    ( (This)->lpVtbl -> get_ConnectionSiteCount(This,ConnectionSiteCount) ) 

#define ShapeRange_get_Connector(This,Connector)	\
    ( (This)->lpVtbl -> get_Connector(This,Connector) ) 

#define ShapeRange_get_ConnectorFormat(This,ConnectorFormat)	\
    ( (This)->lpVtbl -> get_ConnectorFormat(This,ConnectorFormat) ) 

#define ShapeRange_get_Fill(This,Fill)	\
    ( (This)->lpVtbl -> get_Fill(This,Fill) ) 

#define ShapeRange_get_GroupItems(This,GroupItems)	\
    ( (This)->lpVtbl -> get_GroupItems(This,GroupItems) ) 

#define ShapeRange_get_Height(This,Height)	\
    ( (This)->lpVtbl -> get_Height(This,Height) ) 

#define ShapeRange_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define ShapeRange_get_HorizontalFlip(This,HorizontalFlip)	\
    ( (This)->lpVtbl -> get_HorizontalFlip(This,HorizontalFlip) ) 

#define ShapeRange_get_Left(This,Left)	\
    ( (This)->lpVtbl -> get_Left(This,Left) ) 

#define ShapeRange_put_Left(This,Left)	\
    ( (This)->lpVtbl -> put_Left(This,Left) ) 

#define ShapeRange_get_Line(This,Line)	\
    ( (This)->lpVtbl -> get_Line(This,Line) ) 

#define ShapeRange_get_LockAspectRatio(This,LockAspectRatio)	\
    ( (This)->lpVtbl -> get_LockAspectRatio(This,LockAspectRatio) ) 

#define ShapeRange_put_LockAspectRatio(This,LockAspectRatio)	\
    ( (This)->lpVtbl -> put_LockAspectRatio(This,LockAspectRatio) ) 

#define ShapeRange_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define ShapeRange_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define ShapeRange_get_Nodes(This,Nodes)	\
    ( (This)->lpVtbl -> get_Nodes(This,Nodes) ) 

#define ShapeRange_get_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> get_Rotation(This,Rotation) ) 

#define ShapeRange_put_Rotation(This,Rotation)	\
    ( (This)->lpVtbl -> put_Rotation(This,Rotation) ) 

#define ShapeRange_get_PictureFormat(This,Picture)	\
    ( (This)->lpVtbl -> get_PictureFormat(This,Picture) ) 

#define ShapeRange_get_Shadow(This,Shadow)	\
    ( (This)->lpVtbl -> get_Shadow(This,Shadow) ) 

#define ShapeRange_get_TextEffect(This,TextEffect)	\
    ( (This)->lpVtbl -> get_TextEffect(This,TextEffect) ) 

#define ShapeRange_get_TextFrame(This,TextFrame)	\
    ( (This)->lpVtbl -> get_TextFrame(This,TextFrame) ) 

#define ShapeRange_get_ThreeD(This,ThreeD)	\
    ( (This)->lpVtbl -> get_ThreeD(This,ThreeD) ) 

#define ShapeRange_get_Top(This,Top)	\
    ( (This)->lpVtbl -> get_Top(This,Top) ) 

#define ShapeRange_put_Top(This,Top)	\
    ( (This)->lpVtbl -> put_Top(This,Top) ) 

#define ShapeRange_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define ShapeRange_get_VerticalFlip(This,VerticalFlip)	\
    ( (This)->lpVtbl -> get_VerticalFlip(This,VerticalFlip) ) 

#define ShapeRange_get_Vertices(This,Vertices)	\
    ( (This)->lpVtbl -> get_Vertices(This,Vertices) ) 

#define ShapeRange_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define ShapeRange_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define ShapeRange_get_Width(This,Width)	\
    ( (This)->lpVtbl -> get_Width(This,Width) ) 

#define ShapeRange_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define ShapeRange_get_ZOrderPosition(This,ZOrderPosition)	\
    ( (This)->lpVtbl -> get_ZOrderPosition(This,ZOrderPosition) ) 

#define ShapeRange_get_Script(This,Script)	\
    ( (This)->lpVtbl -> get_Script(This,Script) ) 

#define ShapeRange_get_AlternativeText(This,AlternativeText)	\
    ( (This)->lpVtbl -> get_AlternativeText(This,AlternativeText) ) 

#define ShapeRange_put_AlternativeText(This,AlternativeText)	\
    ( (This)->lpVtbl -> put_AlternativeText(This,AlternativeText) ) 

#define ShapeRange_get_HasDiagram(This,pHasDiagram)	\
    ( (This)->lpVtbl -> get_HasDiagram(This,pHasDiagram) ) 

#define ShapeRange_get_Diagram(This,Diagram)	\
    ( (This)->lpVtbl -> get_Diagram(This,Diagram) ) 

#define ShapeRange_get_HasDiagramNode(This,pHasDiagram)	\
    ( (This)->lpVtbl -> get_HasDiagramNode(This,pHasDiagram) ) 

#define ShapeRange_get_DiagramNode(This,DiagramNode)	\
    ( (This)->lpVtbl -> get_DiagramNode(This,DiagramNode) ) 

#define ShapeRange_get_Child(This,Child)	\
    ( (This)->lpVtbl -> get_Child(This,Child) ) 

#define ShapeRange_get_ParentGroup(This,Parent)	\
    ( (This)->lpVtbl -> get_ParentGroup(This,Parent) ) 

#define ShapeRange_get_CanvasItems(This,CanvasShapes)	\
    ( (This)->lpVtbl -> get_CanvasItems(This,CanvasShapes) ) 

#define ShapeRange_get_Id(This,pid)	\
    ( (This)->lpVtbl -> get_Id(This,pid) ) 

#define ShapeRange_CanvasCropLeft(This,Increment)	\
    ( (This)->lpVtbl -> CanvasCropLeft(This,Increment) ) 

#define ShapeRange_CanvasCropTop(This,Increment)	\
    ( (This)->lpVtbl -> CanvasCropTop(This,Increment) ) 

#define ShapeRange_CanvasCropRight(This,Increment)	\
    ( (This)->lpVtbl -> CanvasCropRight(This,Increment) ) 

#define ShapeRange_CanvasCropBottom(This,Increment)	\
    ( (This)->lpVtbl -> CanvasCropBottom(This,Increment) ) 

#define ShapeRange_put_RTF(This,rhs)	\
    ( (This)->lpVtbl -> put_RTF(This,rhs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ShapeRange_INTERFACE_DEFINED__ */


#ifndef __Shapes_INTERFACE_DEFINED__
#define __Shapes_INTERFACE_DEFINED__

/* interface Shapes */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_Shapes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C031E-0000-0000-C000-000000000046")
    Shapes : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *Count) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Shape **Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **_NewEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddCallout( 
            /* [in] */ MsoCalloutType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Callout) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddConnector( 
            /* [in] */ MsoConnectorType Type,
            /* [in] */ short BeginX,
            /* [in] */ short BeginY,
            /* [in] */ short EndX,
            /* [in] */ short EndY,
            /* [retval][out] */ Shape **Connector) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddCurve( 
            /* [in] */ VARIANT SafeArrayOfPoints,
            /* [retval][out] */ Shape **Curve) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddLabel( 
            /* [in] */ MsoTextOrientation Orientation,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Label) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddLine( 
            /* [in] */ short BeginX,
            /* [in] */ short BeginY,
            /* [in] */ short EndX,
            /* [in] */ short EndY,
            /* [retval][out] */ Shape **Line) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddPicture( 
            /* [in] */ BSTR FileName,
            /* [in] */ MsoTriState LinkToFile,
            /* [in] */ MsoTriState SaveWithDocument,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [defaultvalue][optional][in] */ short Width,
            /* [defaultvalue][optional][in] */ short Height,
            /* [retval][out] */ Shape **Picture) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddPolyline( 
            /* [in] */ VARIANT SafeArrayOfPoints,
            /* [retval][out] */ Shape **Polyline) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddShape( 
            /* [in] */ MsoAutoShapeType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Shape) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddTextEffect( 
            /* [in] */ MsoPresetTextEffect PresetTextEffect,
            /* [in] */ BSTR Text,
            /* [in] */ BSTR FontName,
            /* [in] */ short FontSize,
            /* [in] */ MsoTriState FontBold,
            /* [in] */ MsoTriState FontItalic,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [retval][out] */ Shape **TextEffect) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddTextbox( 
            /* [in] */ MsoTextOrientation Orientation,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Textbox) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE BuildFreeform( 
            /* [in] */ MsoEditingType EditingType,
            /* [in] */ short X1,
            /* [in] */ short Y1,
            /* [retval][out] */ FreeformBuilder **FreeformBuilder) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Range( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ShapeRange **Range) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Background( 
            /* [retval][out] */ Shape **Background) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Default( 
            /* [retval][out] */ Shape **Default) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddDiagram( 
            /* [in] */ MsoDiagramType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Diagram) = 0;
        
        virtual /* [hidden][id] */ HRESULT STDMETHODCALLTYPE AddCanvas( 
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Shape) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ShapesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Shapes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Shapes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Shapes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Shapes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Shapes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Shapes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Shapes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Shapes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Shapes * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Shapes * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Shapes * This,
            /* [retval][out] */ int *Count);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Shapes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Shape **Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            Shapes * This,
            /* [retval][out] */ IUnknown **_NewEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddCallout )( 
            Shapes * This,
            /* [in] */ MsoCalloutType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Callout);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddConnector )( 
            Shapes * This,
            /* [in] */ MsoConnectorType Type,
            /* [in] */ short BeginX,
            /* [in] */ short BeginY,
            /* [in] */ short EndX,
            /* [in] */ short EndY,
            /* [retval][out] */ Shape **Connector);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddCurve )( 
            Shapes * This,
            /* [in] */ VARIANT SafeArrayOfPoints,
            /* [retval][out] */ Shape **Curve);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddLabel )( 
            Shapes * This,
            /* [in] */ MsoTextOrientation Orientation,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Label);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            Shapes * This,
            /* [in] */ short BeginX,
            /* [in] */ short BeginY,
            /* [in] */ short EndX,
            /* [in] */ short EndY,
            /* [retval][out] */ Shape **Line);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddPicture )( 
            Shapes * This,
            /* [in] */ BSTR FileName,
            /* [in] */ MsoTriState LinkToFile,
            /* [in] */ MsoTriState SaveWithDocument,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [defaultvalue][optional][in] */ short Width,
            /* [defaultvalue][optional][in] */ short Height,
            /* [retval][out] */ Shape **Picture);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            Shapes * This,
            /* [in] */ VARIANT SafeArrayOfPoints,
            /* [retval][out] */ Shape **Polyline);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            Shapes * This,
            /* [in] */ MsoAutoShapeType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Shape);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddTextEffect )( 
            Shapes * This,
            /* [in] */ MsoPresetTextEffect PresetTextEffect,
            /* [in] */ BSTR Text,
            /* [in] */ BSTR FontName,
            /* [in] */ short FontSize,
            /* [in] */ MsoTriState FontBold,
            /* [in] */ MsoTriState FontItalic,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [retval][out] */ Shape **TextEffect);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddTextbox )( 
            Shapes * This,
            /* [in] */ MsoTextOrientation Orientation,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Textbox);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *BuildFreeform )( 
            Shapes * This,
            /* [in] */ MsoEditingType EditingType,
            /* [in] */ short X1,
            /* [in] */ short Y1,
            /* [retval][out] */ FreeformBuilder **FreeformBuilder);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Range )( 
            Shapes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ShapeRange **Range);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            Shapes * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Background )( 
            Shapes * This,
            /* [retval][out] */ Shape **Background);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Default )( 
            Shapes * This,
            /* [retval][out] */ Shape **Default);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddDiagram )( 
            Shapes * This,
            /* [in] */ MsoDiagramType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Diagram);
        
        /* [hidden][id] */ HRESULT ( STDMETHODCALLTYPE *AddCanvas )( 
            Shapes * This,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Shape);
        
        END_INTERFACE
    } ShapesVtbl;

    interface Shapes
    {
        CONST_VTBL struct ShapesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Shapes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Shapes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Shapes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Shapes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Shapes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Shapes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Shapes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Shapes_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Shapes_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Shapes_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Shapes_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Shapes_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define Shapes_get__NewEnum(This,_NewEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,_NewEnum) ) 

#define Shapes_AddCallout(This,Type,Left,Top,Width,Height,Callout)	\
    ( (This)->lpVtbl -> AddCallout(This,Type,Left,Top,Width,Height,Callout) ) 

#define Shapes_AddConnector(This,Type,BeginX,BeginY,EndX,EndY,Connector)	\
    ( (This)->lpVtbl -> AddConnector(This,Type,BeginX,BeginY,EndX,EndY,Connector) ) 

#define Shapes_AddCurve(This,SafeArrayOfPoints,Curve)	\
    ( (This)->lpVtbl -> AddCurve(This,SafeArrayOfPoints,Curve) ) 

#define Shapes_AddLabel(This,Orientation,Left,Top,Width,Height,Label)	\
    ( (This)->lpVtbl -> AddLabel(This,Orientation,Left,Top,Width,Height,Label) ) 

#define Shapes_AddLine(This,BeginX,BeginY,EndX,EndY,Line)	\
    ( (This)->lpVtbl -> AddLine(This,BeginX,BeginY,EndX,EndY,Line) ) 

#define Shapes_AddPicture(This,FileName,LinkToFile,SaveWithDocument,Left,Top,Width,Height,Picture)	\
    ( (This)->lpVtbl -> AddPicture(This,FileName,LinkToFile,SaveWithDocument,Left,Top,Width,Height,Picture) ) 

#define Shapes_AddPolyline(This,SafeArrayOfPoints,Polyline)	\
    ( (This)->lpVtbl -> AddPolyline(This,SafeArrayOfPoints,Polyline) ) 

#define Shapes_AddShape(This,Type,Left,Top,Width,Height,Shape)	\
    ( (This)->lpVtbl -> AddShape(This,Type,Left,Top,Width,Height,Shape) ) 

#define Shapes_AddTextEffect(This,PresetTextEffect,Text,FontName,FontSize,FontBold,FontItalic,Left,Top,TextEffect)	\
    ( (This)->lpVtbl -> AddTextEffect(This,PresetTextEffect,Text,FontName,FontSize,FontBold,FontItalic,Left,Top,TextEffect) ) 

#define Shapes_AddTextbox(This,Orientation,Left,Top,Width,Height,Textbox)	\
    ( (This)->lpVtbl -> AddTextbox(This,Orientation,Left,Top,Width,Height,Textbox) ) 

#define Shapes_BuildFreeform(This,EditingType,X1,Y1,FreeformBuilder)	\
    ( (This)->lpVtbl -> BuildFreeform(This,EditingType,X1,Y1,FreeformBuilder) ) 

#define Shapes_Range(This,Index,Range)	\
    ( (This)->lpVtbl -> Range(This,Index,Range) ) 

#define Shapes_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define Shapes_get_Background(This,Background)	\
    ( (This)->lpVtbl -> get_Background(This,Background) ) 

#define Shapes_get_Default(This,Default)	\
    ( (This)->lpVtbl -> get_Default(This,Default) ) 

#define Shapes_AddDiagram(This,Type,Left,Top,Width,Height,Diagram)	\
    ( (This)->lpVtbl -> AddDiagram(This,Type,Left,Top,Width,Height,Diagram) ) 

#define Shapes_AddCanvas(This,Left,Top,Width,Height,Shape)	\
    ( (This)->lpVtbl -> AddCanvas(This,Left,Top,Width,Height,Shape) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Shapes_INTERFACE_DEFINED__ */


#ifndef __TextEffectFormat_INTERFACE_DEFINED__
#define __TextEffectFormat_INTERFACE_DEFINED__

/* interface TextEffectFormat */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_TextEffectFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C031F-0000-0000-C000-000000000046")
    TextEffectFormat : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToggleVerticalText( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ MsoTextEffectAlignment *Alignment) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ MsoTextEffectAlignment Alignment) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontBold( 
            /* [retval][out] */ MsoTriState *FontBold) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontBold( 
            /* [in] */ MsoTriState FontBold) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontItalic( 
            /* [retval][out] */ MsoTriState *FontItalic) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontItalic( 
            /* [in] */ MsoTriState FontItalic) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontName( 
            /* [retval][out] */ BSTR *FontName) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontName( 
            /* [in] */ BSTR FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
            /* [retval][out] */ short *FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
            /* [in] */ short FontSize) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_KernedPairs( 
            /* [retval][out] */ MsoTriState *KernedPairs) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_KernedPairs( 
            /* [in] */ MsoTriState KernedPairs) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NormalizedHeight( 
            /* [retval][out] */ MsoTriState *NormalizedHeight) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_NormalizedHeight( 
            /* [in] */ MsoTriState NormalizedHeight) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PresetShape( 
            /* [retval][out] */ MsoPresetTextEffectShape *PresetShape) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_PresetShape( 
            /* [in] */ MsoPresetTextEffectShape PresetShape) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PresetTextEffect( 
            /* [retval][out] */ MsoPresetTextEffect *Preset) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_PresetTextEffect( 
            /* [in] */ MsoPresetTextEffect Preset) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RotatedChars( 
            /* [retval][out] */ MsoTriState *RotatedChars) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RotatedChars( 
            /* [in] */ MsoTriState RotatedChars) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *Text) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Tracking( 
            /* [retval][out] */ short *Tracking) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Tracking( 
            /* [in] */ short Tracking) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextEffectFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextEffectFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextEffectFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextEffectFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextEffectFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextEffectFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextEffectFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextEffectFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            TextEffectFormat * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            TextEffectFormat * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextEffectFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToggleVerticalText )( 
            TextEffectFormat * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            TextEffectFormat * This,
            /* [retval][out] */ MsoTextEffectAlignment *Alignment);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            TextEffectFormat * This,
            /* [in] */ MsoTextEffectAlignment Alignment);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FontBold )( 
            TextEffectFormat * This,
            /* [retval][out] */ MsoTriState *FontBold);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FontBold )( 
            TextEffectFormat * This,
            /* [in] */ MsoTriState FontBold);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FontItalic )( 
            TextEffectFormat * This,
            /* [retval][out] */ MsoTriState *FontItalic);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FontItalic )( 
            TextEffectFormat * This,
            /* [in] */ MsoTriState FontItalic);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FontName )( 
            TextEffectFormat * This,
            /* [retval][out] */ BSTR *FontName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FontName )( 
            TextEffectFormat * This,
            /* [in] */ BSTR FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FontSize )( 
            TextEffectFormat * This,
            /* [retval][out] */ short *FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FontSize )( 
            TextEffectFormat * This,
            /* [in] */ short FontSize);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_KernedPairs )( 
            TextEffectFormat * This,
            /* [retval][out] */ MsoTriState *KernedPairs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_KernedPairs )( 
            TextEffectFormat * This,
            /* [in] */ MsoTriState KernedPairs);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NormalizedHeight )( 
            TextEffectFormat * This,
            /* [retval][out] */ MsoTriState *NormalizedHeight);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NormalizedHeight )( 
            TextEffectFormat * This,
            /* [in] */ MsoTriState NormalizedHeight);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PresetShape )( 
            TextEffectFormat * This,
            /* [retval][out] */ MsoPresetTextEffectShape *PresetShape);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PresetShape )( 
            TextEffectFormat * This,
            /* [in] */ MsoPresetTextEffectShape PresetShape);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PresetTextEffect )( 
            TextEffectFormat * This,
            /* [retval][out] */ MsoPresetTextEffect *Preset);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PresetTextEffect )( 
            TextEffectFormat * This,
            /* [in] */ MsoPresetTextEffect Preset);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RotatedChars )( 
            TextEffectFormat * This,
            /* [retval][out] */ MsoTriState *RotatedChars);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RotatedChars )( 
            TextEffectFormat * This,
            /* [in] */ MsoTriState RotatedChars);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            TextEffectFormat * This,
            /* [retval][out] */ BSTR *Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            TextEffectFormat * This,
            /* [in] */ BSTR Text);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tracking )( 
            TextEffectFormat * This,
            /* [retval][out] */ short *Tracking);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Tracking )( 
            TextEffectFormat * This,
            /* [in] */ short Tracking);
        
        END_INTERFACE
    } TextEffectFormatVtbl;

    interface TextEffectFormat
    {
        CONST_VTBL struct TextEffectFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextEffectFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextEffectFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextEffectFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextEffectFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextEffectFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextEffectFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextEffectFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextEffectFormat_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define TextEffectFormat_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define TextEffectFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define TextEffectFormat_ToggleVerticalText(This)	\
    ( (This)->lpVtbl -> ToggleVerticalText(This) ) 

#define TextEffectFormat_get_Alignment(This,Alignment)	\
    ( (This)->lpVtbl -> get_Alignment(This,Alignment) ) 

#define TextEffectFormat_put_Alignment(This,Alignment)	\
    ( (This)->lpVtbl -> put_Alignment(This,Alignment) ) 

#define TextEffectFormat_get_FontBold(This,FontBold)	\
    ( (This)->lpVtbl -> get_FontBold(This,FontBold) ) 

#define TextEffectFormat_put_FontBold(This,FontBold)	\
    ( (This)->lpVtbl -> put_FontBold(This,FontBold) ) 

#define TextEffectFormat_get_FontItalic(This,FontItalic)	\
    ( (This)->lpVtbl -> get_FontItalic(This,FontItalic) ) 

#define TextEffectFormat_put_FontItalic(This,FontItalic)	\
    ( (This)->lpVtbl -> put_FontItalic(This,FontItalic) ) 

#define TextEffectFormat_get_FontName(This,FontName)	\
    ( (This)->lpVtbl -> get_FontName(This,FontName) ) 

#define TextEffectFormat_put_FontName(This,FontName)	\
    ( (This)->lpVtbl -> put_FontName(This,FontName) ) 

#define TextEffectFormat_get_FontSize(This,FontSize)	\
    ( (This)->lpVtbl -> get_FontSize(This,FontSize) ) 

#define TextEffectFormat_put_FontSize(This,FontSize)	\
    ( (This)->lpVtbl -> put_FontSize(This,FontSize) ) 

#define TextEffectFormat_get_KernedPairs(This,KernedPairs)	\
    ( (This)->lpVtbl -> get_KernedPairs(This,KernedPairs) ) 

#define TextEffectFormat_put_KernedPairs(This,KernedPairs)	\
    ( (This)->lpVtbl -> put_KernedPairs(This,KernedPairs) ) 

#define TextEffectFormat_get_NormalizedHeight(This,NormalizedHeight)	\
    ( (This)->lpVtbl -> get_NormalizedHeight(This,NormalizedHeight) ) 

#define TextEffectFormat_put_NormalizedHeight(This,NormalizedHeight)	\
    ( (This)->lpVtbl -> put_NormalizedHeight(This,NormalizedHeight) ) 

#define TextEffectFormat_get_PresetShape(This,PresetShape)	\
    ( (This)->lpVtbl -> get_PresetShape(This,PresetShape) ) 

#define TextEffectFormat_put_PresetShape(This,PresetShape)	\
    ( (This)->lpVtbl -> put_PresetShape(This,PresetShape) ) 

#define TextEffectFormat_get_PresetTextEffect(This,Preset)	\
    ( (This)->lpVtbl -> get_PresetTextEffect(This,Preset) ) 

#define TextEffectFormat_put_PresetTextEffect(This,Preset)	\
    ( (This)->lpVtbl -> put_PresetTextEffect(This,Preset) ) 

#define TextEffectFormat_get_RotatedChars(This,RotatedChars)	\
    ( (This)->lpVtbl -> get_RotatedChars(This,RotatedChars) ) 

#define TextEffectFormat_put_RotatedChars(This,RotatedChars)	\
    ( (This)->lpVtbl -> put_RotatedChars(This,RotatedChars) ) 

#define TextEffectFormat_get_Text(This,Text)	\
    ( (This)->lpVtbl -> get_Text(This,Text) ) 

#define TextEffectFormat_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#define TextEffectFormat_get_Tracking(This,Tracking)	\
    ( (This)->lpVtbl -> get_Tracking(This,Tracking) ) 

#define TextEffectFormat_put_Tracking(This,Tracking)	\
    ( (This)->lpVtbl -> put_Tracking(This,Tracking) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextEffectFormat_INTERFACE_DEFINED__ */


#ifndef __TextFrame_INTERFACE_DEFINED__
#define __TextFrame_INTERFACE_DEFINED__

/* interface TextFrame */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_TextFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0320-0000-0000-C000-000000000046")
    TextFrame : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MarginBottom( 
            /* [retval][out] */ short *MarginBottom) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_MarginBottom( 
            /* [in] */ short MarginBottom) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MarginLeft( 
            /* [retval][out] */ short *MarginLeft) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_MarginLeft( 
            /* [in] */ short MarginLeft) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MarginRight( 
            /* [retval][out] */ short *MarginRight) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_MarginRight( 
            /* [in] */ short MarginRight) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MarginTop( 
            /* [retval][out] */ short *MarginTop) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_MarginTop( 
            /* [in] */ short MarginTop) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
            /* [retval][out] */ MsoTextOrientation *Orientation) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
            /* [in] */ MsoTextOrientation Orientation) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct TextFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            TextFrame * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            TextFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            TextFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            TextFrame * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            TextFrame * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            TextFrame * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            TextFrame * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            TextFrame * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            TextFrame * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            TextFrame * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarginBottom )( 
            TextFrame * This,
            /* [retval][out] */ short *MarginBottom);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarginBottom )( 
            TextFrame * This,
            /* [in] */ short MarginBottom);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarginLeft )( 
            TextFrame * This,
            /* [retval][out] */ short *MarginLeft);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarginLeft )( 
            TextFrame * This,
            /* [in] */ short MarginLeft);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarginRight )( 
            TextFrame * This,
            /* [retval][out] */ short *MarginRight);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarginRight )( 
            TextFrame * This,
            /* [in] */ short MarginRight);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarginTop )( 
            TextFrame * This,
            /* [retval][out] */ short *MarginTop);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarginTop )( 
            TextFrame * This,
            /* [in] */ short MarginTop);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            TextFrame * This,
            /* [retval][out] */ MsoTextOrientation *Orientation);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            TextFrame * This,
            /* [in] */ MsoTextOrientation Orientation);
        
        END_INTERFACE
    } TextFrameVtbl;

    interface TextFrame
    {
        CONST_VTBL struct TextFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define TextFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define TextFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define TextFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define TextFrame_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define TextFrame_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define TextFrame_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define TextFrame_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define TextFrame_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define TextFrame_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define TextFrame_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define TextFrame_get_MarginBottom(This,MarginBottom)	\
    ( (This)->lpVtbl -> get_MarginBottom(This,MarginBottom) ) 

#define TextFrame_put_MarginBottom(This,MarginBottom)	\
    ( (This)->lpVtbl -> put_MarginBottom(This,MarginBottom) ) 

#define TextFrame_get_MarginLeft(This,MarginLeft)	\
    ( (This)->lpVtbl -> get_MarginLeft(This,MarginLeft) ) 

#define TextFrame_put_MarginLeft(This,MarginLeft)	\
    ( (This)->lpVtbl -> put_MarginLeft(This,MarginLeft) ) 

#define TextFrame_get_MarginRight(This,MarginRight)	\
    ( (This)->lpVtbl -> get_MarginRight(This,MarginRight) ) 

#define TextFrame_put_MarginRight(This,MarginRight)	\
    ( (This)->lpVtbl -> put_MarginRight(This,MarginRight) ) 

#define TextFrame_get_MarginTop(This,MarginTop)	\
    ( (This)->lpVtbl -> get_MarginTop(This,MarginTop) ) 

#define TextFrame_put_MarginTop(This,MarginTop)	\
    ( (This)->lpVtbl -> put_MarginTop(This,MarginTop) ) 

#define TextFrame_get_Orientation(This,Orientation)	\
    ( (This)->lpVtbl -> get_Orientation(This,Orientation) ) 

#define TextFrame_put_Orientation(This,Orientation)	\
    ( (This)->lpVtbl -> put_Orientation(This,Orientation) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __TextFrame_INTERFACE_DEFINED__ */


#ifndef __ThreeDFormat_INTERFACE_DEFINED__
#define __ThreeDFormat_INTERFACE_DEFINED__

/* interface ThreeDFormat */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_ThreeDFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0321-0000-0000-C000-000000000046")
    ThreeDFormat : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementRotationX( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IncrementRotationY( 
            /* [in] */ short Increment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ResetRotation( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetThreeDFormat( 
            /* [in] */ MsoPresetThreeDFormat PresetThreeDFormat) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetExtrusionDirection( 
            /* [in] */ MsoPresetExtrusionDirection PresetExtrusionDirection) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Depth( 
            /* [retval][out] */ short *Depth) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Depth( 
            /* [in] */ short Depth) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtrusionColor( 
            /* [retval][out] */ ColorFormat **ExtrusionColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtrusionColorType( 
            /* [retval][out] */ MsoExtrusionColorType *ExtrusionColorType) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtrusionColorType( 
            /* [in] */ MsoExtrusionColorType ExtrusionColorType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Perspective( 
            /* [retval][out] */ MsoTriState *Perspective) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Perspective( 
            /* [in] */ MsoTriState Perspective) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PresetExtrusionDirection( 
            /* [retval][out] */ MsoPresetExtrusionDirection *PresetExtrusionDirection) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PresetLightingDirection( 
            /* [retval][out] */ MsoPresetLightingDirection *PresetLightingDirection) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_PresetLightingDirection( 
            /* [in] */ MsoPresetLightingDirection PresetLightingDirection) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PresetLightingSoftness( 
            /* [retval][out] */ MsoPresetLightingSoftness *PresetLightingSoftness) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_PresetLightingSoftness( 
            /* [in] */ MsoPresetLightingSoftness PresetLightingSoftness) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PresetMaterial( 
            /* [retval][out] */ MsoPresetMaterial *PresetMaterial) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_PresetMaterial( 
            /* [in] */ MsoPresetMaterial PresetMaterial) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PresetThreeDFormat( 
            /* [retval][out] */ MsoPresetThreeDFormat *PresetThreeDFormat) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RotationX( 
            /* [retval][out] */ short *RotationX) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RotationX( 
            /* [in] */ short RotationX) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RotationY( 
            /* [retval][out] */ short *RotationY) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RotationY( 
            /* [in] */ short RotationY) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ MsoTriState *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ MsoTriState Visible) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ThreeDFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ThreeDFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ThreeDFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ThreeDFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ThreeDFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ThreeDFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ThreeDFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ThreeDFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ThreeDFormat * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ThreeDFormat * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ThreeDFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementRotationX )( 
            ThreeDFormat * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IncrementRotationY )( 
            ThreeDFormat * This,
            /* [in] */ short Increment);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetRotation )( 
            ThreeDFormat * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetThreeDFormat )( 
            ThreeDFormat * This,
            /* [in] */ MsoPresetThreeDFormat PresetThreeDFormat);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetExtrusionDirection )( 
            ThreeDFormat * This,
            /* [in] */ MsoPresetExtrusionDirection PresetExtrusionDirection);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Depth )( 
            ThreeDFormat * This,
            /* [retval][out] */ short *Depth);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Depth )( 
            ThreeDFormat * This,
            /* [in] */ short Depth);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtrusionColor )( 
            ThreeDFormat * This,
            /* [retval][out] */ ColorFormat **ExtrusionColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtrusionColorType )( 
            ThreeDFormat * This,
            /* [retval][out] */ MsoExtrusionColorType *ExtrusionColorType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtrusionColorType )( 
            ThreeDFormat * This,
            /* [in] */ MsoExtrusionColorType ExtrusionColorType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Perspective )( 
            ThreeDFormat * This,
            /* [retval][out] */ MsoTriState *Perspective);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Perspective )( 
            ThreeDFormat * This,
            /* [in] */ MsoTriState Perspective);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PresetExtrusionDirection )( 
            ThreeDFormat * This,
            /* [retval][out] */ MsoPresetExtrusionDirection *PresetExtrusionDirection);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PresetLightingDirection )( 
            ThreeDFormat * This,
            /* [retval][out] */ MsoPresetLightingDirection *PresetLightingDirection);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PresetLightingDirection )( 
            ThreeDFormat * This,
            /* [in] */ MsoPresetLightingDirection PresetLightingDirection);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PresetLightingSoftness )( 
            ThreeDFormat * This,
            /* [retval][out] */ MsoPresetLightingSoftness *PresetLightingSoftness);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PresetLightingSoftness )( 
            ThreeDFormat * This,
            /* [in] */ MsoPresetLightingSoftness PresetLightingSoftness);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PresetMaterial )( 
            ThreeDFormat * This,
            /* [retval][out] */ MsoPresetMaterial *PresetMaterial);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PresetMaterial )( 
            ThreeDFormat * This,
            /* [in] */ MsoPresetMaterial PresetMaterial);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PresetThreeDFormat )( 
            ThreeDFormat * This,
            /* [retval][out] */ MsoPresetThreeDFormat *PresetThreeDFormat);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RotationX )( 
            ThreeDFormat * This,
            /* [retval][out] */ short *RotationX);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RotationX )( 
            ThreeDFormat * This,
            /* [in] */ short RotationX);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RotationY )( 
            ThreeDFormat * This,
            /* [retval][out] */ short *RotationY);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RotationY )( 
            ThreeDFormat * This,
            /* [in] */ short RotationY);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            ThreeDFormat * This,
            /* [retval][out] */ MsoTriState *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            ThreeDFormat * This,
            /* [in] */ MsoTriState Visible);
        
        END_INTERFACE
    } ThreeDFormatVtbl;

    interface ThreeDFormat
    {
        CONST_VTBL struct ThreeDFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ThreeDFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ThreeDFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ThreeDFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ThreeDFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ThreeDFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ThreeDFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ThreeDFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ThreeDFormat_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ThreeDFormat_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ThreeDFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define ThreeDFormat_IncrementRotationX(This,Increment)	\
    ( (This)->lpVtbl -> IncrementRotationX(This,Increment) ) 

#define ThreeDFormat_IncrementRotationY(This,Increment)	\
    ( (This)->lpVtbl -> IncrementRotationY(This,Increment) ) 

#define ThreeDFormat_ResetRotation(This)	\
    ( (This)->lpVtbl -> ResetRotation(This) ) 

#define ThreeDFormat_SetThreeDFormat(This,PresetThreeDFormat)	\
    ( (This)->lpVtbl -> SetThreeDFormat(This,PresetThreeDFormat) ) 

#define ThreeDFormat_SetExtrusionDirection(This,PresetExtrusionDirection)	\
    ( (This)->lpVtbl -> SetExtrusionDirection(This,PresetExtrusionDirection) ) 

#define ThreeDFormat_get_Depth(This,Depth)	\
    ( (This)->lpVtbl -> get_Depth(This,Depth) ) 

#define ThreeDFormat_put_Depth(This,Depth)	\
    ( (This)->lpVtbl -> put_Depth(This,Depth) ) 

#define ThreeDFormat_get_ExtrusionColor(This,ExtrusionColor)	\
    ( (This)->lpVtbl -> get_ExtrusionColor(This,ExtrusionColor) ) 

#define ThreeDFormat_get_ExtrusionColorType(This,ExtrusionColorType)	\
    ( (This)->lpVtbl -> get_ExtrusionColorType(This,ExtrusionColorType) ) 

#define ThreeDFormat_put_ExtrusionColorType(This,ExtrusionColorType)	\
    ( (This)->lpVtbl -> put_ExtrusionColorType(This,ExtrusionColorType) ) 

#define ThreeDFormat_get_Perspective(This,Perspective)	\
    ( (This)->lpVtbl -> get_Perspective(This,Perspective) ) 

#define ThreeDFormat_put_Perspective(This,Perspective)	\
    ( (This)->lpVtbl -> put_Perspective(This,Perspective) ) 

#define ThreeDFormat_get_PresetExtrusionDirection(This,PresetExtrusionDirection)	\
    ( (This)->lpVtbl -> get_PresetExtrusionDirection(This,PresetExtrusionDirection) ) 

#define ThreeDFormat_get_PresetLightingDirection(This,PresetLightingDirection)	\
    ( (This)->lpVtbl -> get_PresetLightingDirection(This,PresetLightingDirection) ) 

#define ThreeDFormat_put_PresetLightingDirection(This,PresetLightingDirection)	\
    ( (This)->lpVtbl -> put_PresetLightingDirection(This,PresetLightingDirection) ) 

#define ThreeDFormat_get_PresetLightingSoftness(This,PresetLightingSoftness)	\
    ( (This)->lpVtbl -> get_PresetLightingSoftness(This,PresetLightingSoftness) ) 

#define ThreeDFormat_put_PresetLightingSoftness(This,PresetLightingSoftness)	\
    ( (This)->lpVtbl -> put_PresetLightingSoftness(This,PresetLightingSoftness) ) 

#define ThreeDFormat_get_PresetMaterial(This,PresetMaterial)	\
    ( (This)->lpVtbl -> get_PresetMaterial(This,PresetMaterial) ) 

#define ThreeDFormat_put_PresetMaterial(This,PresetMaterial)	\
    ( (This)->lpVtbl -> put_PresetMaterial(This,PresetMaterial) ) 

#define ThreeDFormat_get_PresetThreeDFormat(This,PresetThreeDFormat)	\
    ( (This)->lpVtbl -> get_PresetThreeDFormat(This,PresetThreeDFormat) ) 

#define ThreeDFormat_get_RotationX(This,RotationX)	\
    ( (This)->lpVtbl -> get_RotationX(This,RotationX) ) 

#define ThreeDFormat_put_RotationX(This,RotationX)	\
    ( (This)->lpVtbl -> put_RotationX(This,RotationX) ) 

#define ThreeDFormat_get_RotationY(This,RotationY)	\
    ( (This)->lpVtbl -> get_RotationY(This,RotationY) ) 

#define ThreeDFormat_put_RotationY(This,RotationY)	\
    ( (This)->lpVtbl -> put_RotationY(This,RotationY) ) 

#define ThreeDFormat_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define ThreeDFormat_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ThreeDFormat_INTERFACE_DEFINED__ */


#ifndef __IMsoDispCagNotifySink_INTERFACE_DEFINED__
#define __IMsoDispCagNotifySink_INTERFACE_DEFINED__

/* interface IMsoDispCagNotifySink */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_IMsoDispCagNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0359-0000-0000-C000-000000000046")
    IMsoDispCagNotifySink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE InsertClip( 
            /* [in] */ IUnknown *pClipMoniker,
            /* [in] */ IUnknown *pItemMoniker) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE WindowIsClosing( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsoDispCagNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMsoDispCagNotifySink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMsoDispCagNotifySink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMsoDispCagNotifySink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMsoDispCagNotifySink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMsoDispCagNotifySink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMsoDispCagNotifySink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMsoDispCagNotifySink * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *InsertClip )( 
            IMsoDispCagNotifySink * This,
            /* [in] */ IUnknown *pClipMoniker,
            /* [in] */ IUnknown *pItemMoniker);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *WindowIsClosing )( 
            IMsoDispCagNotifySink * This);
        
        END_INTERFACE
    } IMsoDispCagNotifySinkVtbl;

    interface IMsoDispCagNotifySink
    {
        CONST_VTBL struct IMsoDispCagNotifySinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsoDispCagNotifySink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMsoDispCagNotifySink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMsoDispCagNotifySink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMsoDispCagNotifySink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMsoDispCagNotifySink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMsoDispCagNotifySink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMsoDispCagNotifySink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMsoDispCagNotifySink_InsertClip(This,pClipMoniker,pItemMoniker)	\
    ( (This)->lpVtbl -> InsertClip(This,pClipMoniker,pItemMoniker) ) 

#define IMsoDispCagNotifySink_WindowIsClosing(This)	\
    ( (This)->lpVtbl -> WindowIsClosing(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMsoDispCagNotifySink_INTERFACE_DEFINED__ */


#ifndef __Balloon_INTERFACE_DEFINED__
#define __Balloon_INTERFACE_DEFINED__

/* interface Balloon */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Balloon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0324-0000-0000-C000-000000000046")
    Balloon : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Checkboxes( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Labels( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BalloonType( 
            /* [in] */ MsoBalloonType pbty) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BalloonType( 
            /* [retval][out] */ MsoBalloonType *pbty) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Icon( 
            /* [in] */ MsoIconType picn) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Icon( 
            /* [retval][out] */ MsoIconType *picn) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Heading( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Heading( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mode( 
            /* [in] */ MsoModeType pmd) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ MsoModeType *pmd) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Animation( 
            /* [in] */ MsoAnimationType pfca) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Animation( 
            /* [retval][out] */ MsoAnimationType *pfca) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Button( 
            /* [in] */ MsoButtonSetType psbs) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Button( 
            /* [retval][out] */ MsoButtonSetType *psbs) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Callback( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Callback( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Private( 
            /* [in] */ long plPrivate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Private( 
            /* [retval][out] */ long *plPrivate) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetAvoidRectangle( 
            /* [in] */ int Left,
            /* [in] */ int Top,
            /* [in] */ int Right,
            /* [in] */ int Bottom) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Show( 
            /* [retval][out] */ MsoBalloonButtonType *pibtn) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct BalloonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Balloon * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Balloon * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Balloon * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Balloon * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Balloon * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Balloon * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Balloon * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Balloon * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Balloon * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Balloon * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Checkboxes )( 
            Balloon * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Labels )( 
            Balloon * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BalloonType )( 
            Balloon * This,
            /* [in] */ MsoBalloonType pbty);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BalloonType )( 
            Balloon * This,
            /* [retval][out] */ MsoBalloonType *pbty);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Icon )( 
            Balloon * This,
            /* [in] */ MsoIconType picn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Icon )( 
            Balloon * This,
            /* [retval][out] */ MsoIconType *picn);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Heading )( 
            Balloon * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Heading )( 
            Balloon * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            Balloon * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            Balloon * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mode )( 
            Balloon * This,
            /* [in] */ MsoModeType pmd);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            Balloon * This,
            /* [retval][out] */ MsoModeType *pmd);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Animation )( 
            Balloon * This,
            /* [in] */ MsoAnimationType pfca);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Animation )( 
            Balloon * This,
            /* [retval][out] */ MsoAnimationType *pfca);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Button )( 
            Balloon * This,
            /* [in] */ MsoButtonSetType psbs);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Button )( 
            Balloon * This,
            /* [retval][out] */ MsoButtonSetType *psbs);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Callback )( 
            Balloon * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Callback )( 
            Balloon * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Private )( 
            Balloon * This,
            /* [in] */ long plPrivate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Private )( 
            Balloon * This,
            /* [retval][out] */ long *plPrivate);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetAvoidRectangle )( 
            Balloon * This,
            /* [in] */ int Left,
            /* [in] */ int Top,
            /* [in] */ int Right,
            /* [in] */ int Bottom);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Balloon * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Show )( 
            Balloon * This,
            /* [retval][out] */ MsoBalloonButtonType *pibtn);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            Balloon * This);
        
        END_INTERFACE
    } BalloonVtbl;

    interface Balloon
    {
        CONST_VTBL struct BalloonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Balloon_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Balloon_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Balloon_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Balloon_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Balloon_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Balloon_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Balloon_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Balloon_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Balloon_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Balloon_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define Balloon_get_Checkboxes(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Checkboxes(This,ppidisp) ) 

#define Balloon_get_Labels(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Labels(This,ppidisp) ) 

#define Balloon_put_BalloonType(This,pbty)	\
    ( (This)->lpVtbl -> put_BalloonType(This,pbty) ) 

#define Balloon_get_BalloonType(This,pbty)	\
    ( (This)->lpVtbl -> get_BalloonType(This,pbty) ) 

#define Balloon_put_Icon(This,picn)	\
    ( (This)->lpVtbl -> put_Icon(This,picn) ) 

#define Balloon_get_Icon(This,picn)	\
    ( (This)->lpVtbl -> get_Icon(This,picn) ) 

#define Balloon_put_Heading(This,pbstr)	\
    ( (This)->lpVtbl -> put_Heading(This,pbstr) ) 

#define Balloon_get_Heading(This,pbstr)	\
    ( (This)->lpVtbl -> get_Heading(This,pbstr) ) 

#define Balloon_put_Text(This,pbstr)	\
    ( (This)->lpVtbl -> put_Text(This,pbstr) ) 

#define Balloon_get_Text(This,pbstr)	\
    ( (This)->lpVtbl -> get_Text(This,pbstr) ) 

#define Balloon_put_Mode(This,pmd)	\
    ( (This)->lpVtbl -> put_Mode(This,pmd) ) 

#define Balloon_get_Mode(This,pmd)	\
    ( (This)->lpVtbl -> get_Mode(This,pmd) ) 

#define Balloon_put_Animation(This,pfca)	\
    ( (This)->lpVtbl -> put_Animation(This,pfca) ) 

#define Balloon_get_Animation(This,pfca)	\
    ( (This)->lpVtbl -> get_Animation(This,pfca) ) 

#define Balloon_put_Button(This,psbs)	\
    ( (This)->lpVtbl -> put_Button(This,psbs) ) 

#define Balloon_get_Button(This,psbs)	\
    ( (This)->lpVtbl -> get_Button(This,psbs) ) 

#define Balloon_put_Callback(This,pbstr)	\
    ( (This)->lpVtbl -> put_Callback(This,pbstr) ) 

#define Balloon_get_Callback(This,pbstr)	\
    ( (This)->lpVtbl -> get_Callback(This,pbstr) ) 

#define Balloon_put_Private(This,plPrivate)	\
    ( (This)->lpVtbl -> put_Private(This,plPrivate) ) 

#define Balloon_get_Private(This,plPrivate)	\
    ( (This)->lpVtbl -> get_Private(This,plPrivate) ) 

#define Balloon_SetAvoidRectangle(This,Left,Top,Right,Bottom)	\
    ( (This)->lpVtbl -> SetAvoidRectangle(This,Left,Top,Right,Bottom) ) 

#define Balloon_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define Balloon_Show(This,pibtn)	\
    ( (This)->lpVtbl -> Show(This,pibtn) ) 

#define Balloon_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Balloon_INTERFACE_DEFINED__ */


#ifndef __BalloonCheckboxes_INTERFACE_DEFINED__
#define __BalloonCheckboxes_INTERFACE_DEFINED__

/* interface BalloonCheckboxes */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_BalloonCheckboxes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0326-0000-0000-C000-000000000046")
    BalloonCheckboxes : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pccbx) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Count( 
            /* [in] */ int pccbx) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct BalloonCheckboxesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            BalloonCheckboxes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            BalloonCheckboxes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            BalloonCheckboxes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            BalloonCheckboxes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            BalloonCheckboxes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            BalloonCheckboxes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            BalloonCheckboxes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            BalloonCheckboxes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            BalloonCheckboxes * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            BalloonCheckboxes * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            BalloonCheckboxes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            BalloonCheckboxes * This,
            /* [in] */ int Index,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            BalloonCheckboxes * This,
            /* [retval][out] */ int *pccbx);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Count )( 
            BalloonCheckboxes * This,
            /* [in] */ int pccbx);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            BalloonCheckboxes * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        END_INTERFACE
    } BalloonCheckboxesVtbl;

    interface BalloonCheckboxes
    {
        CONST_VTBL struct BalloonCheckboxesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define BalloonCheckboxes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define BalloonCheckboxes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define BalloonCheckboxes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define BalloonCheckboxes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define BalloonCheckboxes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define BalloonCheckboxes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define BalloonCheckboxes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define BalloonCheckboxes_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define BalloonCheckboxes_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define BalloonCheckboxes_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define BalloonCheckboxes_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define BalloonCheckboxes_get_Item(This,Index,ppidisp)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppidisp) ) 

#define BalloonCheckboxes_get_Count(This,pccbx)	\
    ( (This)->lpVtbl -> get_Count(This,pccbx) ) 

#define BalloonCheckboxes_put_Count(This,pccbx)	\
    ( (This)->lpVtbl -> put_Count(This,pccbx) ) 

#define BalloonCheckboxes_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __BalloonCheckboxes_INTERFACE_DEFINED__ */


#ifndef __BalloonCheckbox_INTERFACE_DEFINED__
#define __BalloonCheckbox_INTERFACE_DEFINED__

/* interface BalloonCheckbox */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_BalloonCheckbox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0328-0000-0000-C000-000000000046")
    BalloonCheckbox : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Checked( 
            /* [in] */ VARIANT_BOOL pvarfChecked) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Checked( 
            /* [retval][out] */ VARIANT_BOOL *pvarfChecked) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct BalloonCheckboxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            BalloonCheckbox * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            BalloonCheckbox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            BalloonCheckbox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            BalloonCheckbox * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            BalloonCheckbox * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            BalloonCheckbox * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            BalloonCheckbox * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            BalloonCheckbox * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            BalloonCheckbox * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            BalloonCheckbox * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            BalloonCheckbox * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            BalloonCheckbox * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Checked )( 
            BalloonCheckbox * This,
            /* [in] */ VARIANT_BOOL pvarfChecked);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Checked )( 
            BalloonCheckbox * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfChecked);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            BalloonCheckbox * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            BalloonCheckbox * This,
            /* [retval][out] */ BSTR *pbstr);
        
        END_INTERFACE
    } BalloonCheckboxVtbl;

    interface BalloonCheckbox
    {
        CONST_VTBL struct BalloonCheckboxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define BalloonCheckbox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define BalloonCheckbox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define BalloonCheckbox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define BalloonCheckbox_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define BalloonCheckbox_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define BalloonCheckbox_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define BalloonCheckbox_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define BalloonCheckbox_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define BalloonCheckbox_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define BalloonCheckbox_get_Item(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Item(This,pbstrName) ) 

#define BalloonCheckbox_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define BalloonCheckbox_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define BalloonCheckbox_put_Checked(This,pvarfChecked)	\
    ( (This)->lpVtbl -> put_Checked(This,pvarfChecked) ) 

#define BalloonCheckbox_get_Checked(This,pvarfChecked)	\
    ( (This)->lpVtbl -> get_Checked(This,pvarfChecked) ) 

#define BalloonCheckbox_put_Text(This,pbstr)	\
    ( (This)->lpVtbl -> put_Text(This,pbstr) ) 

#define BalloonCheckbox_get_Text(This,pbstr)	\
    ( (This)->lpVtbl -> get_Text(This,pbstr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __BalloonCheckbox_INTERFACE_DEFINED__ */


#ifndef __BalloonLabels_INTERFACE_DEFINED__
#define __BalloonLabels_INTERFACE_DEFINED__

/* interface BalloonLabels */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_BalloonLabels;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C032E-0000-0000-C000-000000000046")
    BalloonLabels : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pcwz) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Count( 
            /* [in] */ int pcwz) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct BalloonLabelsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            BalloonLabels * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            BalloonLabels * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            BalloonLabels * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            BalloonLabels * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            BalloonLabels * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            BalloonLabels * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            BalloonLabels * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            BalloonLabels * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            BalloonLabels * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            BalloonLabels * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            BalloonLabels * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            BalloonLabels * This,
            /* [in] */ int Index,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            BalloonLabels * This,
            /* [retval][out] */ int *pcwz);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Count )( 
            BalloonLabels * This,
            /* [in] */ int pcwz);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            BalloonLabels * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        END_INTERFACE
    } BalloonLabelsVtbl;

    interface BalloonLabels
    {
        CONST_VTBL struct BalloonLabelsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define BalloonLabels_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define BalloonLabels_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define BalloonLabels_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define BalloonLabels_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define BalloonLabels_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define BalloonLabels_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define BalloonLabels_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define BalloonLabels_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define BalloonLabels_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define BalloonLabels_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define BalloonLabels_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define BalloonLabels_get_Item(This,Index,ppidisp)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppidisp) ) 

#define BalloonLabels_get_Count(This,pcwz)	\
    ( (This)->lpVtbl -> get_Count(This,pcwz) ) 

#define BalloonLabels_put_Count(This,pcwz)	\
    ( (This)->lpVtbl -> put_Count(This,pcwz) ) 

#define BalloonLabels_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __BalloonLabels_INTERFACE_DEFINED__ */


#ifndef __BalloonLabel_INTERFACE_DEFINED__
#define __BalloonLabel_INTERFACE_DEFINED__

/* interface BalloonLabel */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_BalloonLabel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0330-0000-0000-C000-000000000046")
    BalloonLabel : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct BalloonLabelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            BalloonLabel * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            BalloonLabel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            BalloonLabel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            BalloonLabel * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            BalloonLabel * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            BalloonLabel * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            BalloonLabel * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            BalloonLabel * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            BalloonLabel * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            BalloonLabel * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            BalloonLabel * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            BalloonLabel * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            BalloonLabel * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            BalloonLabel * This,
            /* [retval][out] */ BSTR *pbstr);
        
        END_INTERFACE
    } BalloonLabelVtbl;

    interface BalloonLabel
    {
        CONST_VTBL struct BalloonLabelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define BalloonLabel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define BalloonLabel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define BalloonLabel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define BalloonLabel_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define BalloonLabel_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define BalloonLabel_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define BalloonLabel_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define BalloonLabel_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define BalloonLabel_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define BalloonLabel_get_Item(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Item(This,pbstrName) ) 

#define BalloonLabel_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define BalloonLabel_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define BalloonLabel_put_Text(This,pbstr)	\
    ( (This)->lpVtbl -> put_Text(This,pbstr) ) 

#define BalloonLabel_get_Text(This,pbstr)	\
    ( (This)->lpVtbl -> get_Text(This,pbstr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __BalloonLabel_INTERFACE_DEFINED__ */


#ifndef __AnswerWizardFiles_INTERFACE_DEFINED__
#define __AnswerWizardFiles_INTERFACE_DEFINED__

/* interface AnswerWizardFiles */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_AnswerWizardFiles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0361-0000-0000-C000-000000000046")
    AnswerWizardFiles : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pCount) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ BSTR FileName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AnswerWizardFilesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AnswerWizardFiles * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AnswerWizardFiles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AnswerWizardFiles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AnswerWizardFiles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AnswerWizardFiles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AnswerWizardFiles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AnswerWizardFiles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            AnswerWizardFiles * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            AnswerWizardFiles * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            AnswerWizardFiles * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            AnswerWizardFiles * This,
            /* [in] */ int Index,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            AnswerWizardFiles * This,
            /* [retval][out] */ int *pCount);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            AnswerWizardFiles * This,
            /* [in] */ BSTR FileName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            AnswerWizardFiles * This,
            /* [in] */ BSTR FileName);
        
        END_INTERFACE
    } AnswerWizardFilesVtbl;

    interface AnswerWizardFiles
    {
        CONST_VTBL struct AnswerWizardFilesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AnswerWizardFiles_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AnswerWizardFiles_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AnswerWizardFiles_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AnswerWizardFiles_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AnswerWizardFiles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AnswerWizardFiles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AnswerWizardFiles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define AnswerWizardFiles_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define AnswerWizardFiles_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define AnswerWizardFiles_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define AnswerWizardFiles_get_Item(This,Index,pbstr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pbstr) ) 

#define AnswerWizardFiles_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define AnswerWizardFiles_Add(This,FileName)	\
    ( (This)->lpVtbl -> Add(This,FileName) ) 

#define AnswerWizardFiles_Delete(This,FileName)	\
    ( (This)->lpVtbl -> Delete(This,FileName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __AnswerWizardFiles_INTERFACE_DEFINED__ */


#ifndef __AnswerWizard_INTERFACE_DEFINED__
#define __AnswerWizard_INTERFACE_DEFINED__

/* interface AnswerWizard */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_AnswerWizard;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0360-0000-0000-C000-000000000046")
    AnswerWizard : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Files( 
            /* [retval][out] */ AnswerWizardFiles **Files) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearFileList( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetFileList( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AnswerWizardVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AnswerWizard * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AnswerWizard * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AnswerWizard * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AnswerWizard * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AnswerWizard * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AnswerWizard * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AnswerWizard * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            AnswerWizard * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            AnswerWizard * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            AnswerWizard * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Files )( 
            AnswerWizard * This,
            /* [retval][out] */ AnswerWizardFiles **Files);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearFileList )( 
            AnswerWizard * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetFileList )( 
            AnswerWizard * This);
        
        END_INTERFACE
    } AnswerWizardVtbl;

    interface AnswerWizard
    {
        CONST_VTBL struct AnswerWizardVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AnswerWizard_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AnswerWizard_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AnswerWizard_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AnswerWizard_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AnswerWizard_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AnswerWizard_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AnswerWizard_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define AnswerWizard_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define AnswerWizard_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define AnswerWizard_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define AnswerWizard_get_Files(This,Files)	\
    ( (This)->lpVtbl -> get_Files(This,Files) ) 

#define AnswerWizard_ClearFileList(This)	\
    ( (This)->lpVtbl -> ClearFileList(This) ) 

#define AnswerWizard_ResetFileList(This)	\
    ( (This)->lpVtbl -> ResetFileList(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __AnswerWizard_INTERFACE_DEFINED__ */


#ifndef __Assistant_INTERFACE_DEFINED__
#define __Assistant_INTERFACE_DEFINED__

/* interface Assistant */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Assistant;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0322-0000-0000-C000-000000000046")
    Assistant : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ int xLeft,
            /* [in] */ int yTop) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ int pyTop) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ int *pyTop) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ int pxLeft) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ int *pxLeft) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Help( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartWizard( 
            /* [in] */ VARIANT_BOOL On,
            /* [in] */ BSTR Callback,
            /* [in] */ long PrivateX,
            /* [optional][in] */ VARIANT Animation,
            /* [optional][in] */ VARIANT CustomTeaser,
            /* [optional][in] */ VARIANT Top,
            /* [optional][in] */ VARIANT Left,
            /* [optional][in] */ VARIANT Bottom,
            /* [optional][in] */ VARIANT Right,
            /* [retval][out] */ long *plWizID) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE EndWizard( 
            /* [in] */ long WizardID,
            /* [in] */ VARIANT_BOOL varfSuccess,
            /* [optional][in] */ VARIANT Animation) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ActivateWizard( 
            /* [in] */ long WizardID,
            /* [in] */ MsoWizardActType act,
            /* [optional][in] */ VARIANT Animation) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetTips( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NewBalloon( 
            /* [retval][out] */ Balloon **ppibal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BalloonError( 
            /* [retval][out] */ MsoBalloonErrorType *pbne) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL pvarfVisible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Animation( 
            /* [retval][out] */ MsoAnimationType *pfca) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Animation( 
            /* [in] */ MsoAnimationType pfca) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Reduced( 
            /* [retval][out] */ VARIANT_BOOL *pvarfReduced) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Reduced( 
            /* [in] */ VARIANT_BOOL pvarfReduced) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AssistWithHelp( 
            /* [in] */ VARIANT_BOOL pvarfAssistWithHelp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AssistWithHelp( 
            /* [retval][out] */ VARIANT_BOOL *pvarfAssistWithHelp) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AssistWithWizards( 
            /* [in] */ VARIANT_BOOL pvarfAssistWithWizards) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AssistWithWizards( 
            /* [retval][out] */ VARIANT_BOOL *pvarfAssistWithWizards) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AssistWithAlerts( 
            /* [in] */ VARIANT_BOOL pvarfAssistWithAlerts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AssistWithAlerts( 
            /* [retval][out] */ VARIANT_BOOL *pvarfAssistWithAlerts) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MoveWhenInTheWay( 
            /* [in] */ VARIANT_BOOL pvarfMove) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MoveWhenInTheWay( 
            /* [retval][out] */ VARIANT_BOOL *pvarfMove) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sounds( 
            /* [in] */ VARIANT_BOOL pvarfSounds) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sounds( 
            /* [retval][out] */ VARIANT_BOOL *pvarfSounds) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FeatureTips( 
            /* [in] */ VARIANT_BOOL pvarfFeatures) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FeatureTips( 
            /* [retval][out] */ VARIANT_BOOL *pvarfFeatures) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseTips( 
            /* [in] */ VARIANT_BOOL pvarfMouse) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseTips( 
            /* [retval][out] */ VARIANT_BOOL *pvarfMouse) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_KeyboardShortcutTips( 
            /* [in] */ VARIANT_BOOL pvarfKeyboardShortcuts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_KeyboardShortcutTips( 
            /* [retval][out] */ VARIANT_BOOL *pvarfKeyboardShortcuts) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HighPriorityTips( 
            /* [in] */ VARIANT_BOOL pvarfHighPriorityTips) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HighPriorityTips( 
            /* [retval][out] */ VARIANT_BOOL *pvarfHighPriorityTips) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TipOfDay( 
            /* [in] */ VARIANT_BOOL pvarfTipOfDay) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TipOfDay( 
            /* [retval][out] */ VARIANT_BOOL *pvarfTipOfDay) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_GuessHelp( 
            /* [in] */ VARIANT_BOOL pvarfGuessHelp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GuessHelp( 
            /* [retval][out] */ VARIANT_BOOL *pvarfGuessHelp) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SearchWhenProgramming( 
            /* [in] */ VARIANT_BOOL pvarfSearchInProgram) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchWhenProgramming( 
            /* [retval][out] */ VARIANT_BOOL *pvarfSearchInProgram) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FileName( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_On( 
            /* [retval][out] */ VARIANT_BOOL *pvarfOn) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_On( 
            /* [in] */ VARIANT_BOOL pvarfOn) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DoAlert( 
            /* [in] */ BSTR bstrAlertTitle,
            /* [in] */ BSTR bstrAlertText,
            /* [in] */ MsoAlertButtonType alb,
            /* [in] */ MsoAlertIconType alc,
            /* [in] */ MsoAlertDefaultType ald,
            /* [in] */ MsoAlertCancelType alq,
            /* [in] */ VARIANT_BOOL varfSysAlert,
            /* [retval][out] */ int *pibtn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AssistantVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Assistant * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Assistant * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Assistant * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Assistant * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Assistant * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Assistant * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Assistant * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Assistant * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Assistant * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Assistant * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            Assistant * This,
            /* [in] */ int xLeft,
            /* [in] */ int yTop);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            Assistant * This,
            /* [in] */ int pyTop);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            Assistant * This,
            /* [retval][out] */ int *pyTop);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            Assistant * This,
            /* [in] */ int pxLeft);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            Assistant * This,
            /* [retval][out] */ int *pxLeft);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Help )( 
            Assistant * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartWizard )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL On,
            /* [in] */ BSTR Callback,
            /* [in] */ long PrivateX,
            /* [optional][in] */ VARIANT Animation,
            /* [optional][in] */ VARIANT CustomTeaser,
            /* [optional][in] */ VARIANT Top,
            /* [optional][in] */ VARIANT Left,
            /* [optional][in] */ VARIANT Bottom,
            /* [optional][in] */ VARIANT Right,
            /* [retval][out] */ long *plWizID);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EndWizard )( 
            Assistant * This,
            /* [in] */ long WizardID,
            /* [in] */ VARIANT_BOOL varfSuccess,
            /* [optional][in] */ VARIANT Animation);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ActivateWizard )( 
            Assistant * This,
            /* [in] */ long WizardID,
            /* [in] */ MsoWizardActType act,
            /* [optional][in] */ VARIANT Animation);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTips )( 
            Assistant * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NewBalloon )( 
            Assistant * This,
            /* [retval][out] */ Balloon **ppibal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BalloonError )( 
            Assistant * This,
            /* [retval][out] */ MsoBalloonErrorType *pbne);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfVisible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfVisible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Animation )( 
            Assistant * This,
            /* [retval][out] */ MsoAnimationType *pfca);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Animation )( 
            Assistant * This,
            /* [in] */ MsoAnimationType pfca);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Reduced )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfReduced);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Reduced )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfReduced);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AssistWithHelp )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfAssistWithHelp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AssistWithHelp )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfAssistWithHelp);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AssistWithWizards )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfAssistWithWizards);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AssistWithWizards )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfAssistWithWizards);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AssistWithAlerts )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfAssistWithAlerts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AssistWithAlerts )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfAssistWithAlerts);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MoveWhenInTheWay )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfMove);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MoveWhenInTheWay )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfMove);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sounds )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfSounds);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sounds )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfSounds);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FeatureTips )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfFeatures);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FeatureTips )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfFeatures);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseTips )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfMouse);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseTips )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfMouse);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_KeyboardShortcutTips )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfKeyboardShortcuts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_KeyboardShortcutTips )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfKeyboardShortcuts);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HighPriorityTips )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfHighPriorityTips);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HighPriorityTips )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfHighPriorityTips);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TipOfDay )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfTipOfDay);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TipOfDay )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfTipOfDay);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GuessHelp )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfGuessHelp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GuessHelp )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfGuessHelp);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SearchWhenProgramming )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfSearchInProgram);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SearchWhenProgramming )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfSearchInProgram);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Assistant * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            Assistant * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FileName )( 
            Assistant * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Assistant * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_On )( 
            Assistant * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfOn);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_On )( 
            Assistant * This,
            /* [in] */ VARIANT_BOOL pvarfOn);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DoAlert )( 
            Assistant * This,
            /* [in] */ BSTR bstrAlertTitle,
            /* [in] */ BSTR bstrAlertText,
            /* [in] */ MsoAlertButtonType alb,
            /* [in] */ MsoAlertIconType alc,
            /* [in] */ MsoAlertDefaultType ald,
            /* [in] */ MsoAlertCancelType alq,
            /* [in] */ VARIANT_BOOL varfSysAlert,
            /* [retval][out] */ int *pibtn);
        
        END_INTERFACE
    } AssistantVtbl;

    interface Assistant
    {
        CONST_VTBL struct AssistantVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Assistant_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Assistant_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Assistant_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Assistant_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Assistant_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Assistant_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Assistant_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Assistant_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Assistant_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Assistant_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define Assistant_Move(This,xLeft,yTop)	\
    ( (This)->lpVtbl -> Move(This,xLeft,yTop) ) 

#define Assistant_put_Top(This,pyTop)	\
    ( (This)->lpVtbl -> put_Top(This,pyTop) ) 

#define Assistant_get_Top(This,pyTop)	\
    ( (This)->lpVtbl -> get_Top(This,pyTop) ) 

#define Assistant_put_Left(This,pxLeft)	\
    ( (This)->lpVtbl -> put_Left(This,pxLeft) ) 

#define Assistant_get_Left(This,pxLeft)	\
    ( (This)->lpVtbl -> get_Left(This,pxLeft) ) 

#define Assistant_Help(This)	\
    ( (This)->lpVtbl -> Help(This) ) 

#define Assistant_StartWizard(This,On,Callback,PrivateX,Animation,CustomTeaser,Top,Left,Bottom,Right,plWizID)	\
    ( (This)->lpVtbl -> StartWizard(This,On,Callback,PrivateX,Animation,CustomTeaser,Top,Left,Bottom,Right,plWizID) ) 

#define Assistant_EndWizard(This,WizardID,varfSuccess,Animation)	\
    ( (This)->lpVtbl -> EndWizard(This,WizardID,varfSuccess,Animation) ) 

#define Assistant_ActivateWizard(This,WizardID,act,Animation)	\
    ( (This)->lpVtbl -> ActivateWizard(This,WizardID,act,Animation) ) 

#define Assistant_ResetTips(This)	\
    ( (This)->lpVtbl -> ResetTips(This) ) 

#define Assistant_get_NewBalloon(This,ppibal)	\
    ( (This)->lpVtbl -> get_NewBalloon(This,ppibal) ) 

#define Assistant_get_BalloonError(This,pbne)	\
    ( (This)->lpVtbl -> get_BalloonError(This,pbne) ) 

#define Assistant_get_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> get_Visible(This,pvarfVisible) ) 

#define Assistant_put_Visible(This,pvarfVisible)	\
    ( (This)->lpVtbl -> put_Visible(This,pvarfVisible) ) 

#define Assistant_get_Animation(This,pfca)	\
    ( (This)->lpVtbl -> get_Animation(This,pfca) ) 

#define Assistant_put_Animation(This,pfca)	\
    ( (This)->lpVtbl -> put_Animation(This,pfca) ) 

#define Assistant_get_Reduced(This,pvarfReduced)	\
    ( (This)->lpVtbl -> get_Reduced(This,pvarfReduced) ) 

#define Assistant_put_Reduced(This,pvarfReduced)	\
    ( (This)->lpVtbl -> put_Reduced(This,pvarfReduced) ) 

#define Assistant_put_AssistWithHelp(This,pvarfAssistWithHelp)	\
    ( (This)->lpVtbl -> put_AssistWithHelp(This,pvarfAssistWithHelp) ) 

#define Assistant_get_AssistWithHelp(This,pvarfAssistWithHelp)	\
    ( (This)->lpVtbl -> get_AssistWithHelp(This,pvarfAssistWithHelp) ) 

#define Assistant_put_AssistWithWizards(This,pvarfAssistWithWizards)	\
    ( (This)->lpVtbl -> put_AssistWithWizards(This,pvarfAssistWithWizards) ) 

#define Assistant_get_AssistWithWizards(This,pvarfAssistWithWizards)	\
    ( (This)->lpVtbl -> get_AssistWithWizards(This,pvarfAssistWithWizards) ) 

#define Assistant_put_AssistWithAlerts(This,pvarfAssistWithAlerts)	\
    ( (This)->lpVtbl -> put_AssistWithAlerts(This,pvarfAssistWithAlerts) ) 

#define Assistant_get_AssistWithAlerts(This,pvarfAssistWithAlerts)	\
    ( (This)->lpVtbl -> get_AssistWithAlerts(This,pvarfAssistWithAlerts) ) 

#define Assistant_put_MoveWhenInTheWay(This,pvarfMove)	\
    ( (This)->lpVtbl -> put_MoveWhenInTheWay(This,pvarfMove) ) 

#define Assistant_get_MoveWhenInTheWay(This,pvarfMove)	\
    ( (This)->lpVtbl -> get_MoveWhenInTheWay(This,pvarfMove) ) 

#define Assistant_put_Sounds(This,pvarfSounds)	\
    ( (This)->lpVtbl -> put_Sounds(This,pvarfSounds) ) 

#define Assistant_get_Sounds(This,pvarfSounds)	\
    ( (This)->lpVtbl -> get_Sounds(This,pvarfSounds) ) 

#define Assistant_put_FeatureTips(This,pvarfFeatures)	\
    ( (This)->lpVtbl -> put_FeatureTips(This,pvarfFeatures) ) 

#define Assistant_get_FeatureTips(This,pvarfFeatures)	\
    ( (This)->lpVtbl -> get_FeatureTips(This,pvarfFeatures) ) 

#define Assistant_put_MouseTips(This,pvarfMouse)	\
    ( (This)->lpVtbl -> put_MouseTips(This,pvarfMouse) ) 

#define Assistant_get_MouseTips(This,pvarfMouse)	\
    ( (This)->lpVtbl -> get_MouseTips(This,pvarfMouse) ) 

#define Assistant_put_KeyboardShortcutTips(This,pvarfKeyboardShortcuts)	\
    ( (This)->lpVtbl -> put_KeyboardShortcutTips(This,pvarfKeyboardShortcuts) ) 

#define Assistant_get_KeyboardShortcutTips(This,pvarfKeyboardShortcuts)	\
    ( (This)->lpVtbl -> get_KeyboardShortcutTips(This,pvarfKeyboardShortcuts) ) 

#define Assistant_put_HighPriorityTips(This,pvarfHighPriorityTips)	\
    ( (This)->lpVtbl -> put_HighPriorityTips(This,pvarfHighPriorityTips) ) 

#define Assistant_get_HighPriorityTips(This,pvarfHighPriorityTips)	\
    ( (This)->lpVtbl -> get_HighPriorityTips(This,pvarfHighPriorityTips) ) 

#define Assistant_put_TipOfDay(This,pvarfTipOfDay)	\
    ( (This)->lpVtbl -> put_TipOfDay(This,pvarfTipOfDay) ) 

#define Assistant_get_TipOfDay(This,pvarfTipOfDay)	\
    ( (This)->lpVtbl -> get_TipOfDay(This,pvarfTipOfDay) ) 

#define Assistant_put_GuessHelp(This,pvarfGuessHelp)	\
    ( (This)->lpVtbl -> put_GuessHelp(This,pvarfGuessHelp) ) 

#define Assistant_get_GuessHelp(This,pvarfGuessHelp)	\
    ( (This)->lpVtbl -> get_GuessHelp(This,pvarfGuessHelp) ) 

#define Assistant_put_SearchWhenProgramming(This,pvarfSearchInProgram)	\
    ( (This)->lpVtbl -> put_SearchWhenProgramming(This,pvarfSearchInProgram) ) 

#define Assistant_get_SearchWhenProgramming(This,pvarfSearchInProgram)	\
    ( (This)->lpVtbl -> get_SearchWhenProgramming(This,pvarfSearchInProgram) ) 

#define Assistant_get_Item(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Item(This,pbstrName) ) 

#define Assistant_get_FileName(This,pbstr)	\
    ( (This)->lpVtbl -> get_FileName(This,pbstr) ) 

#define Assistant_put_FileName(This,pbstr)	\
    ( (This)->lpVtbl -> put_FileName(This,pbstr) ) 

#define Assistant_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define Assistant_get_On(This,pvarfOn)	\
    ( (This)->lpVtbl -> get_On(This,pvarfOn) ) 

#define Assistant_put_On(This,pvarfOn)	\
    ( (This)->lpVtbl -> put_On(This,pvarfOn) ) 

#define Assistant_DoAlert(This,bstrAlertTitle,bstrAlertText,alb,alc,ald,alq,varfSysAlert,pibtn)	\
    ( (This)->lpVtbl -> DoAlert(This,bstrAlertTitle,bstrAlertText,alb,alc,ald,alq,varfSysAlert,pibtn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Assistant_INTERFACE_DEFINED__ */


#ifndef __DocumentProperty_INTERFACE_DEFINED__
#define __DocumentProperty_INTERFACE_DEFINED__

/* interface DocumentProperty */
/* [object][helpcontext][uuid] */ 


EXTERN_C const IID IID_DocumentProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2DF8D04E-5BFA-101B-BDE5-00AA0044DE52")
    DocumentProperty : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ IDispatch *__stdcall get_Parent( void) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Delete( void) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Name( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *pbstrRetVal) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Name( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR pbstrRetVal) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Value( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *pvargRetVal) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Value( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT pvargRetVal) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Type( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ MsoDocProperties *ptypeRetVal) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Type( 
            /* [lcid][in] */ long lcid,
            /* [in] */ MsoDocProperties ptypeRetVal) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LinkToContent( 
            /* [retval][out] */ VARIANT_BOOL *pfLinkRetVal) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_LinkToContent( 
            /* [in] */ VARIANT_BOOL pfLinkRetVal) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LinkSource( 
            /* [retval][out] */ BSTR *pbstrSourceRetVal) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_LinkSource( 
            /* [in] */ BSTR pbstrSourceRetVal) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ long *plCreator) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DocumentPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DocumentProperty * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DocumentProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DocumentProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DocumentProperty * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DocumentProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DocumentProperty * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DocumentProperty * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ IDispatch *( __stdcall *get_Parent )( 
            DocumentProperty * This);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Delete )( 
            DocumentProperty * This);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Name )( 
            DocumentProperty * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *pbstrRetVal);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Name )( 
            DocumentProperty * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR pbstrRetVal);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Value )( 
            DocumentProperty * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *pvargRetVal);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Value )( 
            DocumentProperty * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT pvargRetVal);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Type )( 
            DocumentProperty * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ MsoDocProperties *ptypeRetVal);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Type )( 
            DocumentProperty * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ MsoDocProperties ptypeRetVal);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LinkToContent )( 
            DocumentProperty * This,
            /* [retval][out] */ VARIANT_BOOL *pfLinkRetVal);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_LinkToContent )( 
            DocumentProperty * This,
            /* [in] */ VARIANT_BOOL pfLinkRetVal);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LinkSource )( 
            DocumentProperty * This,
            /* [retval][out] */ BSTR *pbstrSourceRetVal);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_LinkSource )( 
            DocumentProperty * This,
            /* [in] */ BSTR pbstrSourceRetVal);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            DocumentProperty * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            DocumentProperty * This,
            /* [retval][out] */ long *plCreator);
        
        END_INTERFACE
    } DocumentPropertyVtbl;

    interface DocumentProperty
    {
        CONST_VTBL struct DocumentPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DocumentProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DocumentProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DocumentProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DocumentProperty_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DocumentProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DocumentProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DocumentProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define DocumentProperty_get_Parent(This)	\
    ( (This)->lpVtbl -> get_Parent(This) ) 

#define DocumentProperty_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define DocumentProperty_get_Name(This,lcid,pbstrRetVal)	\
    ( (This)->lpVtbl -> get_Name(This,lcid,pbstrRetVal) ) 

#define DocumentProperty_put_Name(This,lcid,pbstrRetVal)	\
    ( (This)->lpVtbl -> put_Name(This,lcid,pbstrRetVal) ) 

#define DocumentProperty_get_Value(This,lcid,pvargRetVal)	\
    ( (This)->lpVtbl -> get_Value(This,lcid,pvargRetVal) ) 

#define DocumentProperty_put_Value(This,lcid,pvargRetVal)	\
    ( (This)->lpVtbl -> put_Value(This,lcid,pvargRetVal) ) 

#define DocumentProperty_get_Type(This,lcid,ptypeRetVal)	\
    ( (This)->lpVtbl -> get_Type(This,lcid,ptypeRetVal) ) 

#define DocumentProperty_put_Type(This,lcid,ptypeRetVal)	\
    ( (This)->lpVtbl -> put_Type(This,lcid,ptypeRetVal) ) 

#define DocumentProperty_get_LinkToContent(This,pfLinkRetVal)	\
    ( (This)->lpVtbl -> get_LinkToContent(This,pfLinkRetVal) ) 

#define DocumentProperty_put_LinkToContent(This,pfLinkRetVal)	\
    ( (This)->lpVtbl -> put_LinkToContent(This,pfLinkRetVal) ) 

#define DocumentProperty_get_LinkSource(This,pbstrSourceRetVal)	\
    ( (This)->lpVtbl -> get_LinkSource(This,pbstrSourceRetVal) ) 

#define DocumentProperty_put_LinkSource(This,pbstrSourceRetVal)	\
    ( (This)->lpVtbl -> put_LinkSource(This,pbstrSourceRetVal) ) 

#define DocumentProperty_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define DocumentProperty_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __DocumentProperty_INTERFACE_DEFINED__ */


#ifndef __DocumentProperties_INTERFACE_DEFINED__
#define __DocumentProperties_INTERFACE_DEFINED__

/* interface DocumentProperties */
/* [object][helpcontext][uuid] */ 


EXTERN_C const IID IID_DocumentProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2DF8D04D-5BFA-101B-BDE5-00AA0044DE52")
    DocumentProperties : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ IDispatch *__stdcall get_Parent( void) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Item( 
            /* [in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ DocumentProperty **ppIDocProp) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Count( 
            /* [retval][out] */ long *pc) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Add( 
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT_BOOL LinkToContent,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Value,
            /* [optional][in] */ VARIANT LinkSource,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ DocumentProperty **ppIDocProp) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ long *plCreator) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DocumentPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DocumentProperties * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DocumentProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DocumentProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DocumentProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DocumentProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DocumentProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DocumentProperties * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ IDispatch *( __stdcall *get_Parent )( 
            DocumentProperties * This);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Item )( 
            DocumentProperties * This,
            /* [in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ DocumentProperty **ppIDocProp);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Count )( 
            DocumentProperties * This,
            /* [retval][out] */ long *pc);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Add )( 
            DocumentProperties * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT_BOOL LinkToContent,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Value,
            /* [optional][in] */ VARIANT LinkSource,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ DocumentProperty **ppIDocProp);
        
        /* [propget] */ HRESULT ( __stdcall *get__NewEnum )( 
            DocumentProperties * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            DocumentProperties * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            DocumentProperties * This,
            /* [retval][out] */ long *plCreator);
        
        END_INTERFACE
    } DocumentPropertiesVtbl;

    interface DocumentProperties
    {
        CONST_VTBL struct DocumentPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DocumentProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DocumentProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DocumentProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DocumentProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DocumentProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DocumentProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DocumentProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define DocumentProperties_get_Parent(This)	\
    ( (This)->lpVtbl -> get_Parent(This) ) 

#define DocumentProperties_get_Item(This,Index,lcid,ppIDocProp)	\
    ( (This)->lpVtbl -> get_Item(This,Index,lcid,ppIDocProp) ) 

#define DocumentProperties_get_Count(This,pc)	\
    ( (This)->lpVtbl -> get_Count(This,pc) ) 

#define DocumentProperties_Add(This,Name,LinkToContent,Type,Value,LinkSource,lcid,ppIDocProp)	\
    ( (This)->lpVtbl -> Add(This,Name,LinkToContent,Type,Value,LinkSource,lcid,ppIDocProp) ) 

#define DocumentProperties_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#define DocumentProperties_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define DocumentProperties_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __DocumentProperties_INTERFACE_DEFINED__ */


#ifndef __IFoundFiles_INTERFACE_DEFINED__
#define __IFoundFiles_INTERFACE_DEFINED__

/* interface IFoundFiles */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_IFoundFiles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0338-0000-0000-C000-000000000046")
    IFoundFiles : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pCount) = 0;
        
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFoundFilesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFoundFiles * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFoundFiles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFoundFiles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFoundFiles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFoundFiles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFoundFiles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFoundFiles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IFoundFiles * This,
            /* [in] */ int Index,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IFoundFiles * This,
            /* [retval][out] */ int *pCount);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IFoundFiles * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        END_INTERFACE
    } IFoundFilesVtbl;

    interface IFoundFiles
    {
        CONST_VTBL struct IFoundFilesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFoundFiles_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IFoundFiles_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IFoundFiles_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IFoundFiles_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IFoundFiles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IFoundFiles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IFoundFiles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IFoundFiles_get_Item(This,Index,pbstr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pbstr) ) 

#define IFoundFiles_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IFoundFiles_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IFoundFiles_INTERFACE_DEFINED__ */


#ifndef __IFind_INTERFACE_DEFINED__
#define __IFind_INTERFACE_DEFINED__

/* interface IFind */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_IFind;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0337-0000-0000-C000-000000000046")
    IFind : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchPath( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SubDir( 
            /* [retval][out] */ VARIANT_BOOL *retval) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Author( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Keywords( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Options( 
            /* [retval][out] */ MsoFileFindOptions *penmOptions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MatchCase( 
            /* [retval][out] */ VARIANT_BOOL *retval) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternMatch( 
            /* [retval][out] */ VARIANT_BOOL *retval) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DateSavedFrom( 
            /* [retval][out] */ VARIANT *pdatSavedFrom) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DateSavedTo( 
            /* [retval][out] */ VARIANT *pdatSavedTo) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SavedBy( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DateCreatedFrom( 
            /* [retval][out] */ VARIANT *pdatCreatedFrom) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DateCreatedTo( 
            /* [retval][out] */ VARIANT *pdatCreatedTo) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_View( 
            /* [retval][out] */ MsoFileFindView *penmView) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SortBy( 
            /* [retval][out] */ MsoFileFindSortBy *penmSortBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListBy( 
            /* [retval][out] */ MsoFileFindListBy *penmListBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedFile( 
            /* [retval][out] */ int *pintSelectedFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Results( 
            /* [retval][out] */ IFoundFiles **pdisp) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Show( 
            /* [retval][out] */ int *pRows) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SearchPath( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SubDir( 
            /* [in] */ VARIANT_BOOL retval) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Title( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Author( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Keywords( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Options( 
            /* [in] */ MsoFileFindOptions penmOptions) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MatchCase( 
            /* [in] */ VARIANT_BOOL retval) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PatternMatch( 
            /* [in] */ VARIANT_BOOL retval) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DateSavedFrom( 
            /* [in] */ VARIANT pdatSavedFrom) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DateSavedTo( 
            /* [in] */ VARIANT pdatSavedTo) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SavedBy( 
            /* [in] */ BSTR pbstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DateCreatedFrom( 
            /* [in] */ VARIANT pdatCreatedFrom) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DateCreatedTo( 
            /* [in] */ VARIANT pdatCreatedTo) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_View( 
            /* [in] */ MsoFileFindView penmView) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SortBy( 
            /* [in] */ MsoFileFindSortBy penmSortBy) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ListBy( 
            /* [in] */ MsoFileFindListBy penmListBy) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SelectedFile( 
            /* [in] */ int pintSelectedFile) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Execute( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ BSTR bstrQueryName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [in] */ BSTR bstrQueryName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ BSTR bstrQueryName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileType( 
            /* [retval][out] */ long *plFileType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FileType( 
            /* [in] */ long plFileType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFindVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFind * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFind * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFind * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFind * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFind * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFind * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFind * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SearchPath )( 
            IFind * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IFind * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SubDir )( 
            IFind * This,
            /* [retval][out] */ VARIANT_BOOL *retval);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IFind * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IFind * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Keywords )( 
            IFind * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            IFind * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Options )( 
            IFind * This,
            /* [retval][out] */ MsoFileFindOptions *penmOptions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MatchCase )( 
            IFind * This,
            /* [retval][out] */ VARIANT_BOOL *retval);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            IFind * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternMatch )( 
            IFind * This,
            /* [retval][out] */ VARIANT_BOOL *retval);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DateSavedFrom )( 
            IFind * This,
            /* [retval][out] */ VARIANT *pdatSavedFrom);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DateSavedTo )( 
            IFind * This,
            /* [retval][out] */ VARIANT *pdatSavedTo);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SavedBy )( 
            IFind * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DateCreatedFrom )( 
            IFind * This,
            /* [retval][out] */ VARIANT *pdatCreatedFrom);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DateCreatedTo )( 
            IFind * This,
            /* [retval][out] */ VARIANT *pdatCreatedTo);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_View )( 
            IFind * This,
            /* [retval][out] */ MsoFileFindView *penmView);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SortBy )( 
            IFind * This,
            /* [retval][out] */ MsoFileFindSortBy *penmSortBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListBy )( 
            IFind * This,
            /* [retval][out] */ MsoFileFindListBy *penmListBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedFile )( 
            IFind * This,
            /* [retval][out] */ int *pintSelectedFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Results )( 
            IFind * This,
            /* [retval][out] */ IFoundFiles **pdisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Show )( 
            IFind * This,
            /* [retval][out] */ int *pRows);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SearchPath )( 
            IFind * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IFind * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SubDir )( 
            IFind * This,
            /* [in] */ VARIANT_BOOL retval);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Title )( 
            IFind * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Author )( 
            IFind * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Keywords )( 
            IFind * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            IFind * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Options )( 
            IFind * This,
            /* [in] */ MsoFileFindOptions penmOptions);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MatchCase )( 
            IFind * This,
            /* [in] */ VARIANT_BOOL retval);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            IFind * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PatternMatch )( 
            IFind * This,
            /* [in] */ VARIANT_BOOL retval);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DateSavedFrom )( 
            IFind * This,
            /* [in] */ VARIANT pdatSavedFrom);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DateSavedTo )( 
            IFind * This,
            /* [in] */ VARIANT pdatSavedTo);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SavedBy )( 
            IFind * This,
            /* [in] */ BSTR pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DateCreatedFrom )( 
            IFind * This,
            /* [in] */ VARIANT pdatCreatedFrom);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DateCreatedTo )( 
            IFind * This,
            /* [in] */ VARIANT pdatCreatedTo);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_View )( 
            IFind * This,
            /* [in] */ MsoFileFindView penmView);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SortBy )( 
            IFind * This,
            /* [in] */ MsoFileFindSortBy penmSortBy);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ListBy )( 
            IFind * This,
            /* [in] */ MsoFileFindListBy penmListBy);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SelectedFile )( 
            IFind * This,
            /* [in] */ int pintSelectedFile);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            IFind * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Load )( 
            IFind * This,
            /* [in] */ BSTR bstrQueryName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            IFind * This,
            /* [in] */ BSTR bstrQueryName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IFind * This,
            /* [in] */ BSTR bstrQueryName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileType )( 
            IFind * This,
            /* [retval][out] */ long *plFileType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FileType )( 
            IFind * This,
            /* [in] */ long plFileType);
        
        END_INTERFACE
    } IFindVtbl;

    interface IFind
    {
        CONST_VTBL struct IFindVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFind_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IFind_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IFind_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IFind_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IFind_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IFind_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IFind_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IFind_get_SearchPath(This,pbstr)	\
    ( (This)->lpVtbl -> get_SearchPath(This,pbstr) ) 

#define IFind_get_Name(This,pbstr)	\
    ( (This)->lpVtbl -> get_Name(This,pbstr) ) 

#define IFind_get_SubDir(This,retval)	\
    ( (This)->lpVtbl -> get_SubDir(This,retval) ) 

#define IFind_get_Title(This,pbstr)	\
    ( (This)->lpVtbl -> get_Title(This,pbstr) ) 

#define IFind_get_Author(This,pbstr)	\
    ( (This)->lpVtbl -> get_Author(This,pbstr) ) 

#define IFind_get_Keywords(This,pbstr)	\
    ( (This)->lpVtbl -> get_Keywords(This,pbstr) ) 

#define IFind_get_Subject(This,pbstr)	\
    ( (This)->lpVtbl -> get_Subject(This,pbstr) ) 

#define IFind_get_Options(This,penmOptions)	\
    ( (This)->lpVtbl -> get_Options(This,penmOptions) ) 

#define IFind_get_MatchCase(This,retval)	\
    ( (This)->lpVtbl -> get_MatchCase(This,retval) ) 

#define IFind_get_Text(This,pbstr)	\
    ( (This)->lpVtbl -> get_Text(This,pbstr) ) 

#define IFind_get_PatternMatch(This,retval)	\
    ( (This)->lpVtbl -> get_PatternMatch(This,retval) ) 

#define IFind_get_DateSavedFrom(This,pdatSavedFrom)	\
    ( (This)->lpVtbl -> get_DateSavedFrom(This,pdatSavedFrom) ) 

#define IFind_get_DateSavedTo(This,pdatSavedTo)	\
    ( (This)->lpVtbl -> get_DateSavedTo(This,pdatSavedTo) ) 

#define IFind_get_SavedBy(This,pbstr)	\
    ( (This)->lpVtbl -> get_SavedBy(This,pbstr) ) 

#define IFind_get_DateCreatedFrom(This,pdatCreatedFrom)	\
    ( (This)->lpVtbl -> get_DateCreatedFrom(This,pdatCreatedFrom) ) 

#define IFind_get_DateCreatedTo(This,pdatCreatedTo)	\
    ( (This)->lpVtbl -> get_DateCreatedTo(This,pdatCreatedTo) ) 

#define IFind_get_View(This,penmView)	\
    ( (This)->lpVtbl -> get_View(This,penmView) ) 

#define IFind_get_SortBy(This,penmSortBy)	\
    ( (This)->lpVtbl -> get_SortBy(This,penmSortBy) ) 

#define IFind_get_ListBy(This,penmListBy)	\
    ( (This)->lpVtbl -> get_ListBy(This,penmListBy) ) 

#define IFind_get_SelectedFile(This,pintSelectedFile)	\
    ( (This)->lpVtbl -> get_SelectedFile(This,pintSelectedFile) ) 

#define IFind_get_Results(This,pdisp)	\
    ( (This)->lpVtbl -> get_Results(This,pdisp) ) 

#define IFind_Show(This,pRows)	\
    ( (This)->lpVtbl -> Show(This,pRows) ) 

#define IFind_put_SearchPath(This,pbstr)	\
    ( (This)->lpVtbl -> put_SearchPath(This,pbstr) ) 

#define IFind_put_Name(This,pbstr)	\
    ( (This)->lpVtbl -> put_Name(This,pbstr) ) 

#define IFind_put_SubDir(This,retval)	\
    ( (This)->lpVtbl -> put_SubDir(This,retval) ) 

#define IFind_put_Title(This,pbstr)	\
    ( (This)->lpVtbl -> put_Title(This,pbstr) ) 

#define IFind_put_Author(This,pbstr)	\
    ( (This)->lpVtbl -> put_Author(This,pbstr) ) 

#define IFind_put_Keywords(This,pbstr)	\
    ( (This)->lpVtbl -> put_Keywords(This,pbstr) ) 

#define IFind_put_Subject(This,pbstr)	\
    ( (This)->lpVtbl -> put_Subject(This,pbstr) ) 

#define IFind_put_Options(This,penmOptions)	\
    ( (This)->lpVtbl -> put_Options(This,penmOptions) ) 

#define IFind_put_MatchCase(This,retval)	\
    ( (This)->lpVtbl -> put_MatchCase(This,retval) ) 

#define IFind_put_Text(This,pbstr)	\
    ( (This)->lpVtbl -> put_Text(This,pbstr) ) 

#define IFind_put_PatternMatch(This,retval)	\
    ( (This)->lpVtbl -> put_PatternMatch(This,retval) ) 

#define IFind_put_DateSavedFrom(This,pdatSavedFrom)	\
    ( (This)->lpVtbl -> put_DateSavedFrom(This,pdatSavedFrom) ) 

#define IFind_put_DateSavedTo(This,pdatSavedTo)	\
    ( (This)->lpVtbl -> put_DateSavedTo(This,pdatSavedTo) ) 

#define IFind_put_SavedBy(This,pbstr)	\
    ( (This)->lpVtbl -> put_SavedBy(This,pbstr) ) 

#define IFind_put_DateCreatedFrom(This,pdatCreatedFrom)	\
    ( (This)->lpVtbl -> put_DateCreatedFrom(This,pdatCreatedFrom) ) 

#define IFind_put_DateCreatedTo(This,pdatCreatedTo)	\
    ( (This)->lpVtbl -> put_DateCreatedTo(This,pdatCreatedTo) ) 

#define IFind_put_View(This,penmView)	\
    ( (This)->lpVtbl -> put_View(This,penmView) ) 

#define IFind_put_SortBy(This,penmSortBy)	\
    ( (This)->lpVtbl -> put_SortBy(This,penmSortBy) ) 

#define IFind_put_ListBy(This,penmListBy)	\
    ( (This)->lpVtbl -> put_ListBy(This,penmListBy) ) 

#define IFind_put_SelectedFile(This,pintSelectedFile)	\
    ( (This)->lpVtbl -> put_SelectedFile(This,pintSelectedFile) ) 

#define IFind_Execute(This)	\
    ( (This)->lpVtbl -> Execute(This) ) 

#define IFind_Load(This,bstrQueryName)	\
    ( (This)->lpVtbl -> Load(This,bstrQueryName) ) 

#define IFind_Save(This,bstrQueryName)	\
    ( (This)->lpVtbl -> Save(This,bstrQueryName) ) 

#define IFind_Delete(This,bstrQueryName)	\
    ( (This)->lpVtbl -> Delete(This,bstrQueryName) ) 

#define IFind_get_FileType(This,plFileType)	\
    ( (This)->lpVtbl -> get_FileType(This,plFileType) ) 

#define IFind_put_FileType(This,plFileType)	\
    ( (This)->lpVtbl -> put_FileType(This,plFileType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IFind_INTERFACE_DEFINED__ */


#ifndef __FoundFiles_INTERFACE_DEFINED__
#define __FoundFiles_INTERFACE_DEFINED__

/* interface FoundFiles */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_FoundFiles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0331-0000-0000-C000-000000000046")
    FoundFiles : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *pbstrFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pc) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FoundFilesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FoundFiles * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FoundFiles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FoundFiles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FoundFiles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FoundFiles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FoundFiles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FoundFiles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FoundFiles * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            FoundFiles * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            FoundFiles * This,
            /* [in] */ int Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *pbstrFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            FoundFiles * This,
            /* [retval][out] */ long *pc);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            FoundFiles * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        END_INTERFACE
    } FoundFilesVtbl;

    interface FoundFiles
    {
        CONST_VTBL struct FoundFilesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FoundFiles_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FoundFiles_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FoundFiles_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FoundFiles_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FoundFiles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FoundFiles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FoundFiles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FoundFiles_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define FoundFiles_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define FoundFiles_get_Item(This,Index,lcid,pbstrFile)	\
    ( (This)->lpVtbl -> get_Item(This,Index,lcid,pbstrFile) ) 

#define FoundFiles_get_Count(This,pc)	\
    ( (This)->lpVtbl -> get_Count(This,pc) ) 

#define FoundFiles_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FoundFiles_INTERFACE_DEFINED__ */


#ifndef __PropertyTest_INTERFACE_DEFINED__
#define __PropertyTest_INTERFACE_DEFINED__

/* interface PropertyTest */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_PropertyTest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0333-0000-0000-C000-000000000046")
    PropertyTest : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Condition( 
            /* [retval][out] */ MsoCondition *pConditionRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pvargRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SecondValue( 
            /* [retval][out] */ VARIANT *pvargRetVal2) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Connector( 
            /* [retval][out] */ MsoConnector *pConnector) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct PropertyTestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            PropertyTest * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            PropertyTest * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            PropertyTest * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            PropertyTest * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            PropertyTest * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            PropertyTest * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            PropertyTest * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            PropertyTest * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            PropertyTest * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            PropertyTest * This,
            /* [retval][out] */ BSTR *pbstrRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Condition )( 
            PropertyTest * This,
            /* [retval][out] */ MsoCondition *pConditionRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            PropertyTest * This,
            /* [retval][out] */ VARIANT *pvargRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SecondValue )( 
            PropertyTest * This,
            /* [retval][out] */ VARIANT *pvargRetVal2);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Connector )( 
            PropertyTest * This,
            /* [retval][out] */ MsoConnector *pConnector);
        
        END_INTERFACE
    } PropertyTestVtbl;

    interface PropertyTest
    {
        CONST_VTBL struct PropertyTestVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define PropertyTest_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define PropertyTest_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define PropertyTest_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define PropertyTest_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define PropertyTest_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define PropertyTest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define PropertyTest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define PropertyTest_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define PropertyTest_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define PropertyTest_get_Name(This,pbstrRetVal)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrRetVal) ) 

#define PropertyTest_get_Condition(This,pConditionRetVal)	\
    ( (This)->lpVtbl -> get_Condition(This,pConditionRetVal) ) 

#define PropertyTest_get_Value(This,pvargRetVal)	\
    ( (This)->lpVtbl -> get_Value(This,pvargRetVal) ) 

#define PropertyTest_get_SecondValue(This,pvargRetVal2)	\
    ( (This)->lpVtbl -> get_SecondValue(This,pvargRetVal2) ) 

#define PropertyTest_get_Connector(This,pConnector)	\
    ( (This)->lpVtbl -> get_Connector(This,pConnector) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __PropertyTest_INTERFACE_DEFINED__ */


#ifndef __PropertyTests_INTERFACE_DEFINED__
#define __PropertyTests_INTERFACE_DEFINED__

/* interface PropertyTests */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_PropertyTests;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0334-0000-0000-C000-000000000046")
    PropertyTests : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ PropertyTest **ppIDocProp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pc) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [in] */ MsoCondition Condition,
            /* [optional][in] */ VARIANT Value,
            /* [optional][in] */ VARIANT SecondValue,
            /* [defaultvalue][optional][in] */ MsoConnector Connector = 1) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ int Index) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct PropertyTestsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            PropertyTests * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            PropertyTests * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            PropertyTests * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            PropertyTests * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            PropertyTests * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            PropertyTests * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            PropertyTests * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            PropertyTests * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            PropertyTests * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            PropertyTests * This,
            /* [in] */ int Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ PropertyTest **ppIDocProp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            PropertyTests * This,
            /* [retval][out] */ long *pc);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            PropertyTests * This,
            /* [in] */ BSTR Name,
            /* [in] */ MsoCondition Condition,
            /* [optional][in] */ VARIANT Value,
            /* [optional][in] */ VARIANT SecondValue,
            /* [defaultvalue][optional][in] */ MsoConnector Connector);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            PropertyTests * This,
            /* [in] */ int Index);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            PropertyTests * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        END_INTERFACE
    } PropertyTestsVtbl;

    interface PropertyTests
    {
        CONST_VTBL struct PropertyTestsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define PropertyTests_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define PropertyTests_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define PropertyTests_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define PropertyTests_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define PropertyTests_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define PropertyTests_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define PropertyTests_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define PropertyTests_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define PropertyTests_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define PropertyTests_get_Item(This,Index,lcid,ppIDocProp)	\
    ( (This)->lpVtbl -> get_Item(This,Index,lcid,ppIDocProp) ) 

#define PropertyTests_get_Count(This,pc)	\
    ( (This)->lpVtbl -> get_Count(This,pc) ) 

#define PropertyTests_Add(This,Name,Condition,Value,SecondValue,Connector)	\
    ( (This)->lpVtbl -> Add(This,Name,Condition,Value,SecondValue,Connector) ) 

#define PropertyTests_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define PropertyTests_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __PropertyTests_INTERFACE_DEFINED__ */


#ifndef __FileSearch_INTERFACE_DEFINED__
#define __FileSearch_INTERFACE_DEFINED__

/* interface FileSearch */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_FileSearch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0332-0000-0000-C000-000000000046")
    FileSearch : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchSubFolders( 
            /* [retval][out] */ VARIANT_BOOL *SearchSubFoldersRetVal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SearchSubFolders( 
            /* [in] */ VARIANT_BOOL SearchSubFoldersRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MatchTextExactly( 
            /* [retval][out] */ VARIANT_BOOL *MatchTextRetVal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MatchTextExactly( 
            /* [in] */ VARIANT_BOOL MatchTextRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MatchAllWordForms( 
            /* [retval][out] */ VARIANT_BOOL *MatchAllWordFormsRetVal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MatchAllWordForms( 
            /* [in] */ VARIANT_BOOL MatchAllWordFormsRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *FileNameRetVal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FileName( 
            /* [in] */ BSTR FileNameRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileType( 
            /* [retval][out] */ MsoFileType *FileTypeRetVal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FileType( 
            /* [in] */ MsoFileType FileTypeRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModified( 
            /* [retval][out] */ MsoLastModified *LastModifiedRetVal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LastModified( 
            /* [in] */ MsoLastModified LastModifiedRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextOrProperty( 
            /* [retval][out] */ BSTR *TextOrProperty) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextOrProperty( 
            /* [in] */ BSTR TextOrProperty) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LookIn( 
            /* [retval][out] */ BSTR *LookInRetVal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LookIn( 
            /* [in] */ BSTR LookInRetVal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [defaultvalue][optional][in] */ MsoSortBy SortBy,
            /* [defaultvalue][optional][in] */ MsoSortOrder SortOrder,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL AlwaysAccurate,
            /* [retval][out] */ int *pRet) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE NewSearch( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FoundFiles( 
            /* [retval][out] */ FoundFiles **FoundFilesRet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyTests( 
            /* [retval][out] */ PropertyTests **PropTestsRet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchScopes( 
            /* [retval][out] */ SearchScopes **SearchScopesRet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchFolders( 
            /* [retval][out] */ SearchFolders **SearchFoldersRet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileTypes( 
            /* [retval][out] */ FileTypes **FileTypesRet) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RefreshScopes( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FileSearchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FileSearch * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FileSearch * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FileSearch * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FileSearch * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FileSearch * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FileSearch * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FileSearch * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FileSearch * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            FileSearch * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SearchSubFolders )( 
            FileSearch * This,
            /* [retval][out] */ VARIANT_BOOL *SearchSubFoldersRetVal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SearchSubFolders )( 
            FileSearch * This,
            /* [in] */ VARIANT_BOOL SearchSubFoldersRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MatchTextExactly )( 
            FileSearch * This,
            /* [retval][out] */ VARIANT_BOOL *MatchTextRetVal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MatchTextExactly )( 
            FileSearch * This,
            /* [in] */ VARIANT_BOOL MatchTextRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MatchAllWordForms )( 
            FileSearch * This,
            /* [retval][out] */ VARIANT_BOOL *MatchAllWordFormsRetVal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MatchAllWordForms )( 
            FileSearch * This,
            /* [in] */ VARIANT_BOOL MatchAllWordFormsRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            FileSearch * This,
            /* [retval][out] */ BSTR *FileNameRetVal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FileName )( 
            FileSearch * This,
            /* [in] */ BSTR FileNameRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileType )( 
            FileSearch * This,
            /* [retval][out] */ MsoFileType *FileTypeRetVal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FileType )( 
            FileSearch * This,
            /* [in] */ MsoFileType FileTypeRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModified )( 
            FileSearch * This,
            /* [retval][out] */ MsoLastModified *LastModifiedRetVal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastModified )( 
            FileSearch * This,
            /* [in] */ MsoLastModified LastModifiedRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextOrProperty )( 
            FileSearch * This,
            /* [retval][out] */ BSTR *TextOrProperty);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextOrProperty )( 
            FileSearch * This,
            /* [in] */ BSTR TextOrProperty);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LookIn )( 
            FileSearch * This,
            /* [retval][out] */ BSTR *LookInRetVal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LookIn )( 
            FileSearch * This,
            /* [in] */ BSTR LookInRetVal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            FileSearch * This,
            /* [defaultvalue][optional][in] */ MsoSortBy SortBy,
            /* [defaultvalue][optional][in] */ MsoSortOrder SortOrder,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL AlwaysAccurate,
            /* [retval][out] */ int *pRet);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NewSearch )( 
            FileSearch * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FoundFiles )( 
            FileSearch * This,
            /* [retval][out] */ FoundFiles **FoundFilesRet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyTests )( 
            FileSearch * This,
            /* [retval][out] */ PropertyTests **PropTestsRet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SearchScopes )( 
            FileSearch * This,
            /* [retval][out] */ SearchScopes **SearchScopesRet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SearchFolders )( 
            FileSearch * This,
            /* [retval][out] */ SearchFolders **SearchFoldersRet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileTypes )( 
            FileSearch * This,
            /* [retval][out] */ FileTypes **FileTypesRet);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshScopes )( 
            FileSearch * This);
        
        END_INTERFACE
    } FileSearchVtbl;

    interface FileSearch
    {
        CONST_VTBL struct FileSearchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FileSearch_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FileSearch_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FileSearch_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FileSearch_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FileSearch_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FileSearch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FileSearch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FileSearch_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define FileSearch_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define FileSearch_get_SearchSubFolders(This,SearchSubFoldersRetVal)	\
    ( (This)->lpVtbl -> get_SearchSubFolders(This,SearchSubFoldersRetVal) ) 

#define FileSearch_put_SearchSubFolders(This,SearchSubFoldersRetVal)	\
    ( (This)->lpVtbl -> put_SearchSubFolders(This,SearchSubFoldersRetVal) ) 

#define FileSearch_get_MatchTextExactly(This,MatchTextRetVal)	\
    ( (This)->lpVtbl -> get_MatchTextExactly(This,MatchTextRetVal) ) 

#define FileSearch_put_MatchTextExactly(This,MatchTextRetVal)	\
    ( (This)->lpVtbl -> put_MatchTextExactly(This,MatchTextRetVal) ) 

#define FileSearch_get_MatchAllWordForms(This,MatchAllWordFormsRetVal)	\
    ( (This)->lpVtbl -> get_MatchAllWordForms(This,MatchAllWordFormsRetVal) ) 

#define FileSearch_put_MatchAllWordForms(This,MatchAllWordFormsRetVal)	\
    ( (This)->lpVtbl -> put_MatchAllWordForms(This,MatchAllWordFormsRetVal) ) 

#define FileSearch_get_FileName(This,FileNameRetVal)	\
    ( (This)->lpVtbl -> get_FileName(This,FileNameRetVal) ) 

#define FileSearch_put_FileName(This,FileNameRetVal)	\
    ( (This)->lpVtbl -> put_FileName(This,FileNameRetVal) ) 

#define FileSearch_get_FileType(This,FileTypeRetVal)	\
    ( (This)->lpVtbl -> get_FileType(This,FileTypeRetVal) ) 

#define FileSearch_put_FileType(This,FileTypeRetVal)	\
    ( (This)->lpVtbl -> put_FileType(This,FileTypeRetVal) ) 

#define FileSearch_get_LastModified(This,LastModifiedRetVal)	\
    ( (This)->lpVtbl -> get_LastModified(This,LastModifiedRetVal) ) 

#define FileSearch_put_LastModified(This,LastModifiedRetVal)	\
    ( (This)->lpVtbl -> put_LastModified(This,LastModifiedRetVal) ) 

#define FileSearch_get_TextOrProperty(This,TextOrProperty)	\
    ( (This)->lpVtbl -> get_TextOrProperty(This,TextOrProperty) ) 

#define FileSearch_put_TextOrProperty(This,TextOrProperty)	\
    ( (This)->lpVtbl -> put_TextOrProperty(This,TextOrProperty) ) 

#define FileSearch_get_LookIn(This,LookInRetVal)	\
    ( (This)->lpVtbl -> get_LookIn(This,LookInRetVal) ) 

#define FileSearch_put_LookIn(This,LookInRetVal)	\
    ( (This)->lpVtbl -> put_LookIn(This,LookInRetVal) ) 

#define FileSearch_Execute(This,SortBy,SortOrder,AlwaysAccurate,pRet)	\
    ( (This)->lpVtbl -> Execute(This,SortBy,SortOrder,AlwaysAccurate,pRet) ) 

#define FileSearch_NewSearch(This)	\
    ( (This)->lpVtbl -> NewSearch(This) ) 

#define FileSearch_get_FoundFiles(This,FoundFilesRet)	\
    ( (This)->lpVtbl -> get_FoundFiles(This,FoundFilesRet) ) 

#define FileSearch_get_PropertyTests(This,PropTestsRet)	\
    ( (This)->lpVtbl -> get_PropertyTests(This,PropTestsRet) ) 

#define FileSearch_get_SearchScopes(This,SearchScopesRet)	\
    ( (This)->lpVtbl -> get_SearchScopes(This,SearchScopesRet) ) 

#define FileSearch_get_SearchFolders(This,SearchFoldersRet)	\
    ( (This)->lpVtbl -> get_SearchFolders(This,SearchFoldersRet) ) 

#define FileSearch_get_FileTypes(This,FileTypesRet)	\
    ( (This)->lpVtbl -> get_FileTypes(This,FileTypesRet) ) 

#define FileSearch_RefreshScopes(This)	\
    ( (This)->lpVtbl -> RefreshScopes(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FileSearch_INTERFACE_DEFINED__ */


#ifndef __COMAddIn_INTERFACE_DEFINED__
#define __COMAddIn_INTERFACE_DEFINED__

/* interface COMAddIn */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_COMAddIn;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C033A-0000-0000-C000-000000000046")
    COMAddIn : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProgId( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Guid( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Connect( 
            /* [retval][out] */ VARIANT_BOOL *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Connect( 
            /* [in] */ VARIANT_BOOL RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [retval][out] */ IDispatch **RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Object( 
            /* [in] */ IDispatch *RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **retval) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct COMAddInVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            COMAddIn * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            COMAddIn * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            COMAddIn * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            COMAddIn * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            COMAddIn * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            COMAddIn * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            COMAddIn * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            COMAddIn * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            COMAddIn * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            COMAddIn * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            COMAddIn * This,
            /* [in] */ BSTR RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProgId )( 
            COMAddIn * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Guid )( 
            COMAddIn * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Connect )( 
            COMAddIn * This,
            /* [retval][out] */ VARIANT_BOOL *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Connect )( 
            COMAddIn * This,
            /* [in] */ VARIANT_BOOL RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            COMAddIn * This,
            /* [retval][out] */ IDispatch **RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Object )( 
            COMAddIn * This,
            /* [in] */ IDispatch *RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            COMAddIn * This,
            /* [retval][out] */ IDispatch **retval);
        
        END_INTERFACE
    } COMAddInVtbl;

    interface COMAddIn
    {
        CONST_VTBL struct COMAddInVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define COMAddIn_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define COMAddIn_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define COMAddIn_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define COMAddIn_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define COMAddIn_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define COMAddIn_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define COMAddIn_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define COMAddIn_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define COMAddIn_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define COMAddIn_get_Description(This,RetValue)	\
    ( (This)->lpVtbl -> get_Description(This,RetValue) ) 

#define COMAddIn_put_Description(This,RetValue)	\
    ( (This)->lpVtbl -> put_Description(This,RetValue) ) 

#define COMAddIn_get_ProgId(This,RetValue)	\
    ( (This)->lpVtbl -> get_ProgId(This,RetValue) ) 

#define COMAddIn_get_Guid(This,RetValue)	\
    ( (This)->lpVtbl -> get_Guid(This,RetValue) ) 

#define COMAddIn_get_Connect(This,RetValue)	\
    ( (This)->lpVtbl -> get_Connect(This,RetValue) ) 

#define COMAddIn_put_Connect(This,RetValue)	\
    ( (This)->lpVtbl -> put_Connect(This,RetValue) ) 

#define COMAddIn_get_Object(This,RetValue)	\
    ( (This)->lpVtbl -> get_Object(This,RetValue) ) 

#define COMAddIn_put_Object(This,RetValue)	\
    ( (This)->lpVtbl -> put_Object(This,RetValue) ) 

#define COMAddIn_get_Parent(This,retval)	\
    ( (This)->lpVtbl -> get_Parent(This,retval) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __COMAddIn_INTERFACE_DEFINED__ */


#ifndef __COMAddIns_INTERFACE_DEFINED__
#define __COMAddIns_INTERFACE_DEFINED__

/* interface COMAddIns */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_COMAddIns;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0339-0000-0000-C000-000000000046")
    COMAddIns : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT *Index,
            /* [retval][out] */ COMAddIn **RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [helpcontext][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **RetValue) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Update( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE SetAppModal( 
            /* [in] */ VARIANT_BOOL varfModal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct COMAddInsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            COMAddIns * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            COMAddIns * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            COMAddIns * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            COMAddIns * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            COMAddIns * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            COMAddIns * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            COMAddIns * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            COMAddIns * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            COMAddIns * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            COMAddIns * This,
            /* [in] */ VARIANT *Index,
            /* [retval][out] */ COMAddIn **RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            COMAddIns * This,
            /* [retval][out] */ long *RetValue);
        
        /* [helpcontext][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            COMAddIns * This,
            /* [retval][out] */ IUnknown **RetValue);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            COMAddIns * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            COMAddIns * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *SetAppModal )( 
            COMAddIns * This,
            /* [in] */ VARIANT_BOOL varfModal);
        
        END_INTERFACE
    } COMAddInsVtbl;

    interface COMAddIns
    {
        CONST_VTBL struct COMAddInsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define COMAddIns_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define COMAddIns_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define COMAddIns_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define COMAddIns_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define COMAddIns_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define COMAddIns_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define COMAddIns_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define COMAddIns_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define COMAddIns_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define COMAddIns_Item(This,Index,RetValue)	\
    ( (This)->lpVtbl -> Item(This,Index,RetValue) ) 

#define COMAddIns_get_Count(This,RetValue)	\
    ( (This)->lpVtbl -> get_Count(This,RetValue) ) 

#define COMAddIns_get__NewEnum(This,RetValue)	\
    ( (This)->lpVtbl -> get__NewEnum(This,RetValue) ) 

#define COMAddIns_Update(This)	\
    ( (This)->lpVtbl -> Update(This) ) 

#define COMAddIns_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define COMAddIns_SetAppModal(This,varfModal)	\
    ( (This)->lpVtbl -> SetAppModal(This,varfModal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __COMAddIns_INTERFACE_DEFINED__ */


#ifndef __LanguageSettings_INTERFACE_DEFINED__
#define __LanguageSettings_INTERFACE_DEFINED__

/* interface LanguageSettings */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_LanguageSettings;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0353-0000-0000-C000-000000000046")
    LanguageSettings : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageID( 
            /* [in] */ MsoAppLanguageID Id,
            /* [retval][out] */ int *plid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguagePreferredForEditing( 
            /* [in] */ MsoLanguageID lid,
            /* [retval][out] */ VARIANT_BOOL *pf) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct LanguageSettingsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            LanguageSettings * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            LanguageSettings * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            LanguageSettings * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            LanguageSettings * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            LanguageSettings * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            LanguageSettings * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            LanguageSettings * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            LanguageSettings * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            LanguageSettings * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageID )( 
            LanguageSettings * This,
            /* [in] */ MsoAppLanguageID Id,
            /* [retval][out] */ int *plid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LanguagePreferredForEditing )( 
            LanguageSettings * This,
            /* [in] */ MsoLanguageID lid,
            /* [retval][out] */ VARIANT_BOOL *pf);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            LanguageSettings * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } LanguageSettingsVtbl;

    interface LanguageSettings
    {
        CONST_VTBL struct LanguageSettingsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define LanguageSettings_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define LanguageSettings_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define LanguageSettings_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define LanguageSettings_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define LanguageSettings_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define LanguageSettings_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define LanguageSettings_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define LanguageSettings_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define LanguageSettings_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define LanguageSettings_get_LanguageID(This,Id,plid)	\
    ( (This)->lpVtbl -> get_LanguageID(This,Id,plid) ) 

#define LanguageSettings_get_LanguagePreferredForEditing(This,lid,pf)	\
    ( (This)->lpVtbl -> get_LanguagePreferredForEditing(This,lid,pf) ) 

#define LanguageSettings_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __LanguageSettings_INTERFACE_DEFINED__ */


#ifndef __ICommandBarsEvents_INTERFACE_DEFINED__
#define __ICommandBarsEvents_INTERFACE_DEFINED__

/* interface ICommandBarsEvents */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_ICommandBarsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("55F88892-7708-11D1-ACEB-006008961DA5")
    ICommandBarsEvents : public IDispatch
    {
    public:
        virtual /* [helpcontext][id] */ void STDMETHODCALLTYPE OnUpdate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICommandBarsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICommandBarsEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICommandBarsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICommandBarsEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICommandBarsEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICommandBarsEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICommandBarsEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICommandBarsEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id] */ void ( STDMETHODCALLTYPE *OnUpdate )( 
            ICommandBarsEvents * This);
        
        END_INTERFACE
    } ICommandBarsEventsVtbl;

    interface ICommandBarsEvents
    {
        CONST_VTBL struct ICommandBarsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICommandBarsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICommandBarsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICommandBarsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICommandBarsEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICommandBarsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICommandBarsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICommandBarsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICommandBarsEvents_OnUpdate(This)	\
    ( (This)->lpVtbl -> OnUpdate(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICommandBarsEvents_INTERFACE_DEFINED__ */


#ifndef ___CommandBarsEvents_DISPINTERFACE_DEFINED__
#define ___CommandBarsEvents_DISPINTERFACE_DEFINED__

/* dispinterface _CommandBarsEvents */
/* [hidden][uuid] */ 


EXTERN_C const IID DIID__CommandBarsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000C0352-0000-0000-C000-000000000046")
    _CommandBarsEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _CommandBarsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CommandBarsEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CommandBarsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CommandBarsEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CommandBarsEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CommandBarsEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CommandBarsEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CommandBarsEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _CommandBarsEventsVtbl;

    interface _CommandBarsEvents
    {
        CONST_VTBL struct _CommandBarsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CommandBarsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CommandBarsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CommandBarsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CommandBarsEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CommandBarsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CommandBarsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CommandBarsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___CommandBarsEvents_DISPINTERFACE_DEFINED__ */


#ifndef __ICommandBarComboBoxEvents_INTERFACE_DEFINED__
#define __ICommandBarComboBoxEvents_INTERFACE_DEFINED__

/* interface ICommandBarComboBoxEvents */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_ICommandBarComboBoxEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("55F88896-7708-11D1-ACEB-006008961DA5")
    ICommandBarComboBoxEvents : public IDispatch
    {
    public:
        virtual /* [helpcontext][id] */ void STDMETHODCALLTYPE Change( 
            /* [in] */ _CommandBarComboBox *Ctrl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICommandBarComboBoxEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICommandBarComboBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICommandBarComboBoxEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICommandBarComboBoxEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICommandBarComboBoxEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICommandBarComboBoxEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICommandBarComboBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICommandBarComboBoxEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id] */ void ( STDMETHODCALLTYPE *Change )( 
            ICommandBarComboBoxEvents * This,
            /* [in] */ _CommandBarComboBox *Ctrl);
        
        END_INTERFACE
    } ICommandBarComboBoxEventsVtbl;

    interface ICommandBarComboBoxEvents
    {
        CONST_VTBL struct ICommandBarComboBoxEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICommandBarComboBoxEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICommandBarComboBoxEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICommandBarComboBoxEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICommandBarComboBoxEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICommandBarComboBoxEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICommandBarComboBoxEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICommandBarComboBoxEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICommandBarComboBoxEvents_Change(This,Ctrl)	\
    ( (This)->lpVtbl -> Change(This,Ctrl) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICommandBarComboBoxEvents_INTERFACE_DEFINED__ */


#ifndef ___CommandBarComboBoxEvents_DISPINTERFACE_DEFINED__
#define ___CommandBarComboBoxEvents_DISPINTERFACE_DEFINED__

/* dispinterface _CommandBarComboBoxEvents */
/* [hidden][uuid] */ 


EXTERN_C const IID DIID__CommandBarComboBoxEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000C0354-0000-0000-C000-000000000046")
    _CommandBarComboBoxEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _CommandBarComboBoxEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CommandBarComboBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CommandBarComboBoxEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CommandBarComboBoxEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CommandBarComboBoxEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CommandBarComboBoxEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CommandBarComboBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CommandBarComboBoxEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _CommandBarComboBoxEventsVtbl;

    interface _CommandBarComboBoxEvents
    {
        CONST_VTBL struct _CommandBarComboBoxEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CommandBarComboBoxEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CommandBarComboBoxEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CommandBarComboBoxEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CommandBarComboBoxEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CommandBarComboBoxEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CommandBarComboBoxEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CommandBarComboBoxEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___CommandBarComboBoxEvents_DISPINTERFACE_DEFINED__ */


#ifndef __ICommandBarButtonEvents_INTERFACE_DEFINED__
#define __ICommandBarButtonEvents_INTERFACE_DEFINED__

/* interface ICommandBarButtonEvents */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_ICommandBarButtonEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("55F88890-7708-11D1-ACEB-006008961DA5")
    ICommandBarButtonEvents : public IDispatch
    {
    public:
        virtual /* [helpcontext][id] */ void STDMETHODCALLTYPE Click( 
            /* [in] */ _CommandBarButton *Ctrl,
            /* [out][in] */ VARIANT_BOOL *CancelDefault) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICommandBarButtonEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICommandBarButtonEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICommandBarButtonEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICommandBarButtonEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICommandBarButtonEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICommandBarButtonEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICommandBarButtonEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICommandBarButtonEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id] */ void ( STDMETHODCALLTYPE *Click )( 
            ICommandBarButtonEvents * This,
            /* [in] */ _CommandBarButton *Ctrl,
            /* [out][in] */ VARIANT_BOOL *CancelDefault);
        
        END_INTERFACE
    } ICommandBarButtonEventsVtbl;

    interface ICommandBarButtonEvents
    {
        CONST_VTBL struct ICommandBarButtonEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICommandBarButtonEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICommandBarButtonEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICommandBarButtonEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICommandBarButtonEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICommandBarButtonEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICommandBarButtonEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICommandBarButtonEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICommandBarButtonEvents_Click(This,Ctrl,CancelDefault)	\
    ( (This)->lpVtbl -> Click(This,Ctrl,CancelDefault) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICommandBarButtonEvents_INTERFACE_DEFINED__ */


#ifndef ___CommandBarButtonEvents_DISPINTERFACE_DEFINED__
#define ___CommandBarButtonEvents_DISPINTERFACE_DEFINED__

/* dispinterface _CommandBarButtonEvents */
/* [hidden][uuid] */ 


EXTERN_C const IID DIID__CommandBarButtonEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000C0351-0000-0000-C000-000000000046")
    _CommandBarButtonEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _CommandBarButtonEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CommandBarButtonEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CommandBarButtonEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CommandBarButtonEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CommandBarButtonEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CommandBarButtonEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CommandBarButtonEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CommandBarButtonEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _CommandBarButtonEventsVtbl;

    interface _CommandBarButtonEvents
    {
        CONST_VTBL struct _CommandBarButtonEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CommandBarButtonEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CommandBarButtonEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CommandBarButtonEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CommandBarButtonEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CommandBarButtonEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CommandBarButtonEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CommandBarButtonEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___CommandBarButtonEvents_DISPINTERFACE_DEFINED__ */


#ifndef __WebPageFont_INTERFACE_DEFINED__
#define __WebPageFont_INTERFACE_DEFINED__

/* interface WebPageFont */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_WebPageFont;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0913-0000-0000-C000-000000000046")
    WebPageFont : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProportionalFont( 
            /* [retval][out] */ BSTR *pstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ProportionalFont( 
            /* [in] */ BSTR pstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProportionalFontSize( 
            /* [retval][out] */ short *pf) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ProportionalFontSize( 
            /* [in] */ short pf) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FixedWidthFont( 
            /* [retval][out] */ BSTR *pstr) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FixedWidthFont( 
            /* [in] */ BSTR pstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FixedWidthFontSize( 
            /* [retval][out] */ short *pf) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FixedWidthFontSize( 
            /* [in] */ short pf) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WebPageFontVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WebPageFont * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WebPageFont * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WebPageFont * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WebPageFont * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WebPageFont * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WebPageFont * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WebPageFont * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            WebPageFont * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            WebPageFont * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProportionalFont )( 
            WebPageFont * This,
            /* [retval][out] */ BSTR *pstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProportionalFont )( 
            WebPageFont * This,
            /* [in] */ BSTR pstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProportionalFontSize )( 
            WebPageFont * This,
            /* [retval][out] */ short *pf);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProportionalFontSize )( 
            WebPageFont * This,
            /* [in] */ short pf);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FixedWidthFont )( 
            WebPageFont * This,
            /* [retval][out] */ BSTR *pstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FixedWidthFont )( 
            WebPageFont * This,
            /* [in] */ BSTR pstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FixedWidthFontSize )( 
            WebPageFont * This,
            /* [retval][out] */ short *pf);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FixedWidthFontSize )( 
            WebPageFont * This,
            /* [in] */ short pf);
        
        END_INTERFACE
    } WebPageFontVtbl;

    interface WebPageFont
    {
        CONST_VTBL struct WebPageFontVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WebPageFont_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WebPageFont_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WebPageFont_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WebPageFont_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WebPageFont_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WebPageFont_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WebPageFont_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define WebPageFont_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define WebPageFont_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define WebPageFont_get_ProportionalFont(This,pstr)	\
    ( (This)->lpVtbl -> get_ProportionalFont(This,pstr) ) 

#define WebPageFont_put_ProportionalFont(This,pstr)	\
    ( (This)->lpVtbl -> put_ProportionalFont(This,pstr) ) 

#define WebPageFont_get_ProportionalFontSize(This,pf)	\
    ( (This)->lpVtbl -> get_ProportionalFontSize(This,pf) ) 

#define WebPageFont_put_ProportionalFontSize(This,pf)	\
    ( (This)->lpVtbl -> put_ProportionalFontSize(This,pf) ) 

#define WebPageFont_get_FixedWidthFont(This,pstr)	\
    ( (This)->lpVtbl -> get_FixedWidthFont(This,pstr) ) 

#define WebPageFont_put_FixedWidthFont(This,pstr)	\
    ( (This)->lpVtbl -> put_FixedWidthFont(This,pstr) ) 

#define WebPageFont_get_FixedWidthFontSize(This,pf)	\
    ( (This)->lpVtbl -> get_FixedWidthFontSize(This,pf) ) 

#define WebPageFont_put_FixedWidthFontSize(This,pf)	\
    ( (This)->lpVtbl -> put_FixedWidthFontSize(This,pf) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __WebPageFont_INTERFACE_DEFINED__ */


#ifndef __WebPageFonts_INTERFACE_DEFINED__
#define __WebPageFonts_INTERFACE_DEFINED__

/* interface WebPageFonts */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_WebPageFonts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0914-0000-0000-C000-000000000046")
    WebPageFonts : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *Count) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ MsoCharacterSet Index,
            /* [retval][out] */ WebPageFont **Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **_NewEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WebPageFontsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WebPageFonts * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WebPageFonts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WebPageFonts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WebPageFonts * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WebPageFonts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WebPageFonts * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WebPageFonts * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            WebPageFonts * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            WebPageFonts * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            WebPageFonts * This,
            /* [retval][out] */ int *Count);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            WebPageFonts * This,
            /* [in] */ MsoCharacterSet Index,
            /* [retval][out] */ WebPageFont **Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            WebPageFonts * This,
            /* [retval][out] */ IUnknown **_NewEnum);
        
        END_INTERFACE
    } WebPageFontsVtbl;

    interface WebPageFonts
    {
        CONST_VTBL struct WebPageFontsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WebPageFonts_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WebPageFonts_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WebPageFonts_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WebPageFonts_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WebPageFonts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WebPageFonts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WebPageFonts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define WebPageFonts_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define WebPageFonts_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define WebPageFonts_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define WebPageFonts_get_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> get_Item(This,Index,Item) ) 

#define WebPageFonts_get__NewEnum(This,_NewEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,_NewEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __WebPageFonts_INTERFACE_DEFINED__ */


#ifndef __HTMLProjectItem_INTERFACE_DEFINED__
#define __HTMLProjectItem_INTERFACE_DEFINED__

/* interface HTMLProjectItem */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_HTMLProjectItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0358-0000-0000-C000-000000000046")
    HTMLProjectItem : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsOpen( 
            /* [retval][out] */ VARIANT_BOOL *RetValue) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadFromFile( 
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [defaultvalue][optional][in] */ MsoHTMLProjectOpen OpenKind = 0) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveCopyAs( 
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *Text) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct HTMLProjectItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            HTMLProjectItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            HTMLProjectItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            HTMLProjectItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            HTMLProjectItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            HTMLProjectItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            HTMLProjectItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLProjectItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            HTMLProjectItem * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            HTMLProjectItem * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            HTMLProjectItem * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            HTMLProjectItem * This,
            /* [retval][out] */ VARIANT_BOOL *RetValue);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadFromFile )( 
            HTMLProjectItem * This,
            /* [in] */ BSTR FileName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            HTMLProjectItem * This,
            /* [defaultvalue][optional][in] */ MsoHTMLProjectOpen OpenKind);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveCopyAs )( 
            HTMLProjectItem * This,
            /* [in] */ BSTR FileName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            HTMLProjectItem * This,
            /* [retval][out] */ BSTR *Text);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            HTMLProjectItem * This,
            /* [in] */ BSTR Text);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            HTMLProjectItem * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } HTMLProjectItemVtbl;

    interface HTMLProjectItem
    {
        CONST_VTBL struct HTMLProjectItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLProjectItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLProjectItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLProjectItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLProjectItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLProjectItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLProjectItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLProjectItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define HTMLProjectItem_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define HTMLProjectItem_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define HTMLProjectItem_get_Name(This,RetValue)	\
    ( (This)->lpVtbl -> get_Name(This,RetValue) ) 

#define HTMLProjectItem_get_IsOpen(This,RetValue)	\
    ( (This)->lpVtbl -> get_IsOpen(This,RetValue) ) 

#define HTMLProjectItem_LoadFromFile(This,FileName)	\
    ( (This)->lpVtbl -> LoadFromFile(This,FileName) ) 

#define HTMLProjectItem_Open(This,OpenKind)	\
    ( (This)->lpVtbl -> Open(This,OpenKind) ) 

#define HTMLProjectItem_SaveCopyAs(This,FileName)	\
    ( (This)->lpVtbl -> SaveCopyAs(This,FileName) ) 

#define HTMLProjectItem_get_Text(This,Text)	\
    ( (This)->lpVtbl -> get_Text(This,Text) ) 

#define HTMLProjectItem_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#define HTMLProjectItem_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __HTMLProjectItem_INTERFACE_DEFINED__ */


#ifndef __HTMLProjectItems_INTERFACE_DEFINED__
#define __HTMLProjectItems_INTERFACE_DEFINED__

/* interface HTMLProjectItems */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_HTMLProjectItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0357-0000-0000-C000-000000000046")
    HTMLProjectItems : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT *Index,
            /* [retval][out] */ HTMLProjectItem **RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [helpcontext][restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct HTMLProjectItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            HTMLProjectItems * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            HTMLProjectItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            HTMLProjectItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            HTMLProjectItems * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            HTMLProjectItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            HTMLProjectItems * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLProjectItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            HTMLProjectItems * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            HTMLProjectItems * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            HTMLProjectItems * This,
            /* [in] */ VARIANT *Index,
            /* [retval][out] */ HTMLProjectItem **RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            HTMLProjectItems * This,
            /* [retval][out] */ long *RetValue);
        
        /* [helpcontext][restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            HTMLProjectItems * This,
            /* [retval][out] */ IUnknown **RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            HTMLProjectItems * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } HTMLProjectItemsVtbl;

    interface HTMLProjectItems
    {
        CONST_VTBL struct HTMLProjectItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLProjectItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLProjectItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLProjectItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLProjectItems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLProjectItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLProjectItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLProjectItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define HTMLProjectItems_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define HTMLProjectItems_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define HTMLProjectItems_Item(This,Index,RetValue)	\
    ( (This)->lpVtbl -> Item(This,Index,RetValue) ) 

#define HTMLProjectItems_get_Count(This,RetValue)	\
    ( (This)->lpVtbl -> get_Count(This,RetValue) ) 

#define HTMLProjectItems_get__NewEnum(This,RetValue)	\
    ( (This)->lpVtbl -> get__NewEnum(This,RetValue) ) 

#define HTMLProjectItems_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __HTMLProjectItems_INTERFACE_DEFINED__ */


#ifndef __HTMLProject_INTERFACE_DEFINED__
#define __HTMLProject_INTERFACE_DEFINED__

/* interface HTMLProject */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_HTMLProject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0356-0000-0000-C000-000000000046")
    HTMLProject : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_State( 
            /* [retval][out] */ MsoHTMLProjectState *State) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RefreshProject( 
            /* [defaultvalue][optional][in] */ VARIANT_BOOL Refresh = -1) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RefreshDocument( 
            /* [defaultvalue][optional][in] */ VARIANT_BOOL Refresh = -1) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLProjectItems( 
            /* [retval][out] */ HTMLProjectItems **HTMLProjectItems) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [defaultvalue][optional][in] */ MsoHTMLProjectOpen OpenKind = 0) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct HTMLProjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            HTMLProject * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            HTMLProject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            HTMLProject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            HTMLProject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            HTMLProject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            HTMLProject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            HTMLProject * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            HTMLProject * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            HTMLProject * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            HTMLProject * This,
            /* [retval][out] */ MsoHTMLProjectState *State);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshProject )( 
            HTMLProject * This,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL Refresh);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshDocument )( 
            HTMLProject * This,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL Refresh);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLProjectItems )( 
            HTMLProject * This,
            /* [retval][out] */ HTMLProjectItems **HTMLProjectItems);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            HTMLProject * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            HTMLProject * This,
            /* [defaultvalue][optional][in] */ MsoHTMLProjectOpen OpenKind);
        
        END_INTERFACE
    } HTMLProjectVtbl;

    interface HTMLProject
    {
        CONST_VTBL struct HTMLProjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define HTMLProject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define HTMLProject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define HTMLProject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define HTMLProject_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define HTMLProject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define HTMLProject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define HTMLProject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define HTMLProject_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define HTMLProject_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define HTMLProject_get_State(This,State)	\
    ( (This)->lpVtbl -> get_State(This,State) ) 

#define HTMLProject_RefreshProject(This,Refresh)	\
    ( (This)->lpVtbl -> RefreshProject(This,Refresh) ) 

#define HTMLProject_RefreshDocument(This,Refresh)	\
    ( (This)->lpVtbl -> RefreshDocument(This,Refresh) ) 

#define HTMLProject_get_HTMLProjectItems(This,HTMLProjectItems)	\
    ( (This)->lpVtbl -> get_HTMLProjectItems(This,HTMLProjectItems) ) 

#define HTMLProject_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define HTMLProject_Open(This,OpenKind)	\
    ( (This)->lpVtbl -> Open(This,OpenKind) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __HTMLProject_INTERFACE_DEFINED__ */


#ifndef __MsoDebugOptions_INTERFACE_DEFINED__
#define __MsoDebugOptions_INTERFACE_DEFINED__

/* interface MsoDebugOptions */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_MsoDebugOptions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C035A-0000-0000-C000-000000000046")
    MsoDebugOptions : public _IMsoDispObj
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FeatureReports( 
            /* [retval][out] */ int *puintFeatureReports) = 0;
        
        virtual /* [hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FeatureReports( 
            /* [in] */ int puintFeatureReports) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OutputToDebugger( 
            /* [retval][out] */ VARIANT_BOOL *pvarfOutputToDebugger) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_OutputToDebugger( 
            /* [in] */ VARIANT_BOOL pvarfOutputToDebugger) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OutputToFile( 
            /* [retval][out] */ VARIANT_BOOL *pvarfOutputToFile) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_OutputToFile( 
            /* [in] */ VARIANT_BOOL pvarfOutputToFile) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OutputToMessageBox( 
            /* [retval][out] */ VARIANT_BOOL *pvarfOutputToMessageBox) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_OutputToMessageBox( 
            /* [in] */ VARIANT_BOOL pvarfOutputToMessageBox) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct MsoDebugOptionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            MsoDebugOptions * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            MsoDebugOptions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            MsoDebugOptions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            MsoDebugOptions * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            MsoDebugOptions * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            MsoDebugOptions * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            MsoDebugOptions * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            MsoDebugOptions * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            MsoDebugOptions * This,
            /* [retval][out] */ long *plCreator);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FeatureReports )( 
            MsoDebugOptions * This,
            /* [retval][out] */ int *puintFeatureReports);
        
        /* [hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FeatureReports )( 
            MsoDebugOptions * This,
            /* [in] */ int puintFeatureReports);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutputToDebugger )( 
            MsoDebugOptions * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfOutputToDebugger);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OutputToDebugger )( 
            MsoDebugOptions * This,
            /* [in] */ VARIANT_BOOL pvarfOutputToDebugger);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutputToFile )( 
            MsoDebugOptions * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfOutputToFile);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OutputToFile )( 
            MsoDebugOptions * This,
            /* [in] */ VARIANT_BOOL pvarfOutputToFile);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutputToMessageBox )( 
            MsoDebugOptions * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfOutputToMessageBox);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OutputToMessageBox )( 
            MsoDebugOptions * This,
            /* [in] */ VARIANT_BOOL pvarfOutputToMessageBox);
        
        END_INTERFACE
    } MsoDebugOptionsVtbl;

    interface MsoDebugOptions
    {
        CONST_VTBL struct MsoDebugOptionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define MsoDebugOptions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define MsoDebugOptions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define MsoDebugOptions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define MsoDebugOptions_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define MsoDebugOptions_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define MsoDebugOptions_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define MsoDebugOptions_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define MsoDebugOptions_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define MsoDebugOptions_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define MsoDebugOptions_get_FeatureReports(This,puintFeatureReports)	\
    ( (This)->lpVtbl -> get_FeatureReports(This,puintFeatureReports) ) 

#define MsoDebugOptions_put_FeatureReports(This,puintFeatureReports)	\
    ( (This)->lpVtbl -> put_FeatureReports(This,puintFeatureReports) ) 

#define MsoDebugOptions_get_OutputToDebugger(This,pvarfOutputToDebugger)	\
    ( (This)->lpVtbl -> get_OutputToDebugger(This,pvarfOutputToDebugger) ) 

#define MsoDebugOptions_put_OutputToDebugger(This,pvarfOutputToDebugger)	\
    ( (This)->lpVtbl -> put_OutputToDebugger(This,pvarfOutputToDebugger) ) 

#define MsoDebugOptions_get_OutputToFile(This,pvarfOutputToFile)	\
    ( (This)->lpVtbl -> get_OutputToFile(This,pvarfOutputToFile) ) 

#define MsoDebugOptions_put_OutputToFile(This,pvarfOutputToFile)	\
    ( (This)->lpVtbl -> put_OutputToFile(This,pvarfOutputToFile) ) 

#define MsoDebugOptions_get_OutputToMessageBox(This,pvarfOutputToMessageBox)	\
    ( (This)->lpVtbl -> get_OutputToMessageBox(This,pvarfOutputToMessageBox) ) 

#define MsoDebugOptions_put_OutputToMessageBox(This,pvarfOutputToMessageBox)	\
    ( (This)->lpVtbl -> put_OutputToMessageBox(This,pvarfOutputToMessageBox) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __MsoDebugOptions_INTERFACE_DEFINED__ */


#ifndef __FileDialogSelectedItems_INTERFACE_DEFINED__
#define __FileDialogSelectedItems_INTERFACE_DEFINED__

/* interface FileDialogSelectedItems */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_FileDialogSelectedItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0363-0000-0000-C000-000000000046")
    FileDialogSelectedItems : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pcFiles) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ int Index,
            /* [retval][out] */ BSTR *Item) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FileDialogSelectedItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FileDialogSelectedItems * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FileDialogSelectedItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FileDialogSelectedItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FileDialogSelectedItems * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FileDialogSelectedItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FileDialogSelectedItems * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FileDialogSelectedItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FileDialogSelectedItems * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            FileDialogSelectedItems * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FileDialogSelectedItems * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            FileDialogSelectedItems * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            FileDialogSelectedItems * This,
            /* [retval][out] */ long *pcFiles);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            FileDialogSelectedItems * This,
            /* [in] */ int Index,
            /* [retval][out] */ BSTR *Item);
        
        END_INTERFACE
    } FileDialogSelectedItemsVtbl;

    interface FileDialogSelectedItems
    {
        CONST_VTBL struct FileDialogSelectedItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FileDialogSelectedItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FileDialogSelectedItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FileDialogSelectedItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FileDialogSelectedItems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FileDialogSelectedItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FileDialogSelectedItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FileDialogSelectedItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FileDialogSelectedItems_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define FileDialogSelectedItems_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define FileDialogSelectedItems_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define FileDialogSelectedItems_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define FileDialogSelectedItems_get_Count(This,pcFiles)	\
    ( (This)->lpVtbl -> get_Count(This,pcFiles) ) 

#define FileDialogSelectedItems_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FileDialogSelectedItems_INTERFACE_DEFINED__ */


#ifndef __FileDialogFilter_INTERFACE_DEFINED__
#define __FileDialogFilter_INTERFACE_DEFINED__

/* interface FileDialogFilter */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_FileDialogFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0364-0000-0000-C000-000000000046")
    FileDialogFilter : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extensions( 
            /* [retval][out] */ BSTR *Extensions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *Description) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FileDialogFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FileDialogFilter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FileDialogFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FileDialogFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FileDialogFilter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FileDialogFilter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FileDialogFilter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FileDialogFilter * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FileDialogFilter * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            FileDialogFilter * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FileDialogFilter * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extensions )( 
            FileDialogFilter * This,
            /* [retval][out] */ BSTR *Extensions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            FileDialogFilter * This,
            /* [retval][out] */ BSTR *Description);
        
        END_INTERFACE
    } FileDialogFilterVtbl;

    interface FileDialogFilter
    {
        CONST_VTBL struct FileDialogFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FileDialogFilter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FileDialogFilter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FileDialogFilter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FileDialogFilter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FileDialogFilter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FileDialogFilter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FileDialogFilter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FileDialogFilter_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define FileDialogFilter_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define FileDialogFilter_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define FileDialogFilter_get_Extensions(This,Extensions)	\
    ( (This)->lpVtbl -> get_Extensions(This,Extensions) ) 

#define FileDialogFilter_get_Description(This,Description)	\
    ( (This)->lpVtbl -> get_Description(This,Description) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FileDialogFilter_INTERFACE_DEFINED__ */


#ifndef __FileDialogFilters_INTERFACE_DEFINED__
#define __FileDialogFilters_INTERFACE_DEFINED__

/* interface FileDialogFilters */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_FileDialogFilters;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0365-0000-0000-C000-000000000046")
    FileDialogFilters : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pcFilters) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ int Index,
            /* [retval][out] */ FileDialogFilter **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [optional][in] */ VARIANT filter) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Description,
            /* [in] */ BSTR Extensions,
            /* [optional][in] */ VARIANT Position,
            /* [retval][out] */ FileDialogFilter **Add) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FileDialogFiltersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FileDialogFilters * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FileDialogFilters * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FileDialogFilters * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FileDialogFilters * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FileDialogFilters * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FileDialogFilters * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FileDialogFilters * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FileDialogFilters * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            FileDialogFilters * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FileDialogFilters * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            FileDialogFilters * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            FileDialogFilters * This,
            /* [retval][out] */ long *pcFilters);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            FileDialogFilters * This,
            /* [in] */ int Index,
            /* [retval][out] */ FileDialogFilter **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            FileDialogFilters * This,
            /* [optional][in] */ VARIANT filter);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            FileDialogFilters * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            FileDialogFilters * This,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR Extensions,
            /* [optional][in] */ VARIANT Position,
            /* [retval][out] */ FileDialogFilter **Add);
        
        END_INTERFACE
    } FileDialogFiltersVtbl;

    interface FileDialogFilters
    {
        CONST_VTBL struct FileDialogFiltersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FileDialogFilters_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FileDialogFilters_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FileDialogFilters_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FileDialogFilters_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FileDialogFilters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FileDialogFilters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FileDialogFilters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FileDialogFilters_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define FileDialogFilters_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define FileDialogFilters_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define FileDialogFilters_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define FileDialogFilters_get_Count(This,pcFilters)	\
    ( (This)->lpVtbl -> get_Count(This,pcFilters) ) 

#define FileDialogFilters_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define FileDialogFilters_Delete(This,filter)	\
    ( (This)->lpVtbl -> Delete(This,filter) ) 

#define FileDialogFilters_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define FileDialogFilters_Add(This,Description,Extensions,Position,Add)	\
    ( (This)->lpVtbl -> Add(This,Description,Extensions,Position,Add) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FileDialogFilters_INTERFACE_DEFINED__ */


#ifndef __FileDialog_INTERFACE_DEFINED__
#define __FileDialog_INTERFACE_DEFINED__

/* interface FileDialog */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_FileDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0362-0000-0000-C000-000000000046")
    FileDialog : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filters( 
            /* [retval][out] */ FileDialogFilters **Filters) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FilterIndex( 
            /* [retval][out] */ int *FilterIndex) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FilterIndex( 
            /* [in] */ int FilterIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *Title) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Title( 
            /* [in] */ BSTR Title) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ButtonName( 
            /* [retval][out] */ BSTR *ButtonName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ButtonName( 
            /* [in] */ BSTR ButtonName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AllowMultiSelect( 
            /* [retval][out] */ VARIANT_BOOL *pvarfAllowMultiSelect) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AllowMultiSelect( 
            /* [in] */ VARIANT_BOOL pvarfAllowMultiSelect) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InitialView( 
            /* [retval][out] */ MsoFileDialogView *pinitialview) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InitialView( 
            /* [in] */ MsoFileDialogView pinitialview) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InitialFileName( 
            /* [retval][out] */ BSTR *InitialFileName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InitialFileName( 
            /* [in] */ BSTR InitialFileName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedItems( 
            /* [retval][out] */ FileDialogSelectedItems **Files) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DialogType( 
            /* [retval][out] */ MsoFileDialogType *pdialogtype) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Show( 
            /* [retval][out] */ int *rval) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Execute( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FileDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FileDialog * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FileDialog * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FileDialog * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FileDialog * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FileDialog * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FileDialog * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FileDialog * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FileDialog * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            FileDialog * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FileDialog * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filters )( 
            FileDialog * This,
            /* [retval][out] */ FileDialogFilters **Filters);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FilterIndex )( 
            FileDialog * This,
            /* [retval][out] */ int *FilterIndex);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FilterIndex )( 
            FileDialog * This,
            /* [in] */ int FilterIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            FileDialog * This,
            /* [retval][out] */ BSTR *Title);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Title )( 
            FileDialog * This,
            /* [in] */ BSTR Title);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ButtonName )( 
            FileDialog * This,
            /* [retval][out] */ BSTR *ButtonName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ButtonName )( 
            FileDialog * This,
            /* [in] */ BSTR ButtonName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AllowMultiSelect )( 
            FileDialog * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfAllowMultiSelect);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AllowMultiSelect )( 
            FileDialog * This,
            /* [in] */ VARIANT_BOOL pvarfAllowMultiSelect);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InitialView )( 
            FileDialog * This,
            /* [retval][out] */ MsoFileDialogView *pinitialview);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InitialView )( 
            FileDialog * This,
            /* [in] */ MsoFileDialogView pinitialview);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InitialFileName )( 
            FileDialog * This,
            /* [retval][out] */ BSTR *InitialFileName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InitialFileName )( 
            FileDialog * This,
            /* [in] */ BSTR InitialFileName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )( 
            FileDialog * This,
            /* [retval][out] */ FileDialogSelectedItems **Files);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DialogType )( 
            FileDialog * This,
            /* [retval][out] */ MsoFileDialogType *pdialogtype);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            FileDialog * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Show )( 
            FileDialog * This,
            /* [retval][out] */ int *rval);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            FileDialog * This);
        
        END_INTERFACE
    } FileDialogVtbl;

    interface FileDialog
    {
        CONST_VTBL struct FileDialogVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FileDialog_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FileDialog_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FileDialog_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FileDialog_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FileDialog_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FileDialog_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FileDialog_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FileDialog_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define FileDialog_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define FileDialog_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define FileDialog_get_Filters(This,Filters)	\
    ( (This)->lpVtbl -> get_Filters(This,Filters) ) 

#define FileDialog_get_FilterIndex(This,FilterIndex)	\
    ( (This)->lpVtbl -> get_FilterIndex(This,FilterIndex) ) 

#define FileDialog_put_FilterIndex(This,FilterIndex)	\
    ( (This)->lpVtbl -> put_FilterIndex(This,FilterIndex) ) 

#define FileDialog_get_Title(This,Title)	\
    ( (This)->lpVtbl -> get_Title(This,Title) ) 

#define FileDialog_put_Title(This,Title)	\
    ( (This)->lpVtbl -> put_Title(This,Title) ) 

#define FileDialog_get_ButtonName(This,ButtonName)	\
    ( (This)->lpVtbl -> get_ButtonName(This,ButtonName) ) 

#define FileDialog_put_ButtonName(This,ButtonName)	\
    ( (This)->lpVtbl -> put_ButtonName(This,ButtonName) ) 

#define FileDialog_get_AllowMultiSelect(This,pvarfAllowMultiSelect)	\
    ( (This)->lpVtbl -> get_AllowMultiSelect(This,pvarfAllowMultiSelect) ) 

#define FileDialog_put_AllowMultiSelect(This,pvarfAllowMultiSelect)	\
    ( (This)->lpVtbl -> put_AllowMultiSelect(This,pvarfAllowMultiSelect) ) 

#define FileDialog_get_InitialView(This,pinitialview)	\
    ( (This)->lpVtbl -> get_InitialView(This,pinitialview) ) 

#define FileDialog_put_InitialView(This,pinitialview)	\
    ( (This)->lpVtbl -> put_InitialView(This,pinitialview) ) 

#define FileDialog_get_InitialFileName(This,InitialFileName)	\
    ( (This)->lpVtbl -> get_InitialFileName(This,InitialFileName) ) 

#define FileDialog_put_InitialFileName(This,InitialFileName)	\
    ( (This)->lpVtbl -> put_InitialFileName(This,InitialFileName) ) 

#define FileDialog_get_SelectedItems(This,Files)	\
    ( (This)->lpVtbl -> get_SelectedItems(This,Files) ) 

#define FileDialog_get_DialogType(This,pdialogtype)	\
    ( (This)->lpVtbl -> get_DialogType(This,pdialogtype) ) 

#define FileDialog_get_Item(This,Name)	\
    ( (This)->lpVtbl -> get_Item(This,Name) ) 

#define FileDialog_Show(This,rval)	\
    ( (This)->lpVtbl -> Show(This,rval) ) 

#define FileDialog_Execute(This)	\
    ( (This)->lpVtbl -> Execute(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FileDialog_INTERFACE_DEFINED__ */


#ifndef __SignatureSet_INTERFACE_DEFINED__
#define __SignatureSet_INTERFACE_DEFINED__

/* interface SignatureSet */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SignatureSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0410-0000-0000-C000-000000000046")
    SignatureSet : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pcSig) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int iSig,
            /* [retval][out] */ Signature **ppidisp) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [retval][out] */ Signature **ppidisp) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Commit( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SignatureSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SignatureSet * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SignatureSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SignatureSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SignatureSet * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SignatureSet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SignatureSet * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SignatureSet * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SignatureSet * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SignatureSet * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            SignatureSet * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SignatureSet * This,
            /* [retval][out] */ int *pcSig);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            SignatureSet * This,
            /* [in] */ int iSig,
            /* [retval][out] */ Signature **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            SignatureSet * This,
            /* [retval][out] */ Signature **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Commit )( 
            SignatureSet * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SignatureSet * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } SignatureSetVtbl;

    interface SignatureSet
    {
        CONST_VTBL struct SignatureSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SignatureSet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SignatureSet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SignatureSet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SignatureSet_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SignatureSet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SignatureSet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SignatureSet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SignatureSet_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SignatureSet_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SignatureSet_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define SignatureSet_get_Count(This,pcSig)	\
    ( (This)->lpVtbl -> get_Count(This,pcSig) ) 

#define SignatureSet_get_Item(This,iSig,ppidisp)	\
    ( (This)->lpVtbl -> get_Item(This,iSig,ppidisp) ) 

#define SignatureSet_Add(This,ppidisp)	\
    ( (This)->lpVtbl -> Add(This,ppidisp) ) 

#define SignatureSet_Commit(This)	\
    ( (This)->lpVtbl -> Commit(This) ) 

#define SignatureSet_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SignatureSet_INTERFACE_DEFINED__ */


#ifndef __Signature_INTERFACE_DEFINED__
#define __Signature_INTERFACE_DEFINED__

/* interface Signature */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Signature;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0411-0000-0000-C000-000000000046")
    Signature : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Signer( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Issuer( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExpireDate( 
            /* [retval][out] */ VARIANT *pvarDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsValid( 
            /* [retval][out] */ VARIANT_BOOL *pfValid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AttachCertificate( 
            /* [retval][out] */ VARIANT_BOOL *pfAttach) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AttachCertificate( 
            /* [in] */ VARIANT_BOOL pfAttach) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCertificateExpired( 
            /* [retval][out] */ VARIANT_BOOL *pfExpired) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCertificateRevoked( 
            /* [retval][out] */ VARIANT_BOOL *pfExpired) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SignDate( 
            /* [retval][out] */ VARIANT *pvarDate) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SignatureVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Signature * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Signature * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Signature * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Signature * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Signature * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Signature * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Signature * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Signature * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Signature * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Signer )( 
            Signature * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Issuer )( 
            Signature * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpireDate )( 
            Signature * This,
            /* [retval][out] */ VARIANT *pvarDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsValid )( 
            Signature * This,
            /* [retval][out] */ VARIANT_BOOL *pfValid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AttachCertificate )( 
            Signature * This,
            /* [retval][out] */ VARIANT_BOOL *pfAttach);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AttachCertificate )( 
            Signature * This,
            /* [in] */ VARIANT_BOOL pfAttach);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Signature * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Signature * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCertificateExpired )( 
            Signature * This,
            /* [retval][out] */ VARIANT_BOOL *pfExpired);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCertificateRevoked )( 
            Signature * This,
            /* [retval][out] */ VARIANT_BOOL *pfExpired);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SignDate )( 
            Signature * This,
            /* [retval][out] */ VARIANT *pvarDate);
        
        END_INTERFACE
    } SignatureVtbl;

    interface Signature
    {
        CONST_VTBL struct SignatureVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Signature_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Signature_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Signature_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Signature_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Signature_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Signature_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Signature_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Signature_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Signature_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Signature_get_Signer(This,pbstr)	\
    ( (This)->lpVtbl -> get_Signer(This,pbstr) ) 

#define Signature_get_Issuer(This,pbstr)	\
    ( (This)->lpVtbl -> get_Issuer(This,pbstr) ) 

#define Signature_get_ExpireDate(This,pvarDate)	\
    ( (This)->lpVtbl -> get_ExpireDate(This,pvarDate) ) 

#define Signature_get_IsValid(This,pfValid)	\
    ( (This)->lpVtbl -> get_IsValid(This,pfValid) ) 

#define Signature_get_AttachCertificate(This,pfAttach)	\
    ( (This)->lpVtbl -> get_AttachCertificate(This,pfAttach) ) 

#define Signature_put_AttachCertificate(This,pfAttach)	\
    ( (This)->lpVtbl -> put_AttachCertificate(This,pfAttach) ) 

#define Signature_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define Signature_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define Signature_get_IsCertificateExpired(This,pfExpired)	\
    ( (This)->lpVtbl -> get_IsCertificateExpired(This,pfExpired) ) 

#define Signature_get_IsCertificateRevoked(This,pfExpired)	\
    ( (This)->lpVtbl -> get_IsCertificateRevoked(This,pfExpired) ) 

#define Signature_get_SignDate(This,pvarDate)	\
    ( (This)->lpVtbl -> get_SignDate(This,pvarDate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Signature_INTERFACE_DEFINED__ */


#ifndef __IMsoEnvelopeVB_INTERFACE_DEFINED__
#define __IMsoEnvelopeVB_INTERFACE_DEFINED__

/* interface IMsoEnvelopeVB */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IMsoEnvelopeVB;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672AC-0000-0000-C000-000000000046")
    IMsoEnvelopeVB : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Introduction( 
            /* [retval][out] */ BSTR *pbstrIntro) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Introduction( 
            /* [in] */ BSTR pbstrIntro) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [retval][out] */ IDispatch **ppdisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppdisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandBars( 
            /* [retval][out] */ IDispatch **ppdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsoEnvelopeVBVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMsoEnvelopeVB * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMsoEnvelopeVB * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMsoEnvelopeVB * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMsoEnvelopeVB * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMsoEnvelopeVB * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMsoEnvelopeVB * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMsoEnvelopeVB * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Introduction )( 
            IMsoEnvelopeVB * This,
            /* [retval][out] */ BSTR *pbstrIntro);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Introduction )( 
            IMsoEnvelopeVB * This,
            /* [in] */ BSTR pbstrIntro);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMsoEnvelopeVB * This,
            /* [retval][out] */ IDispatch **ppdisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IMsoEnvelopeVB * This,
            /* [retval][out] */ IDispatch **ppdisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBars )( 
            IMsoEnvelopeVB * This,
            /* [retval][out] */ IDispatch **ppdisp);
        
        END_INTERFACE
    } IMsoEnvelopeVBVtbl;

    interface IMsoEnvelopeVB
    {
        CONST_VTBL struct IMsoEnvelopeVBVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsoEnvelopeVB_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMsoEnvelopeVB_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMsoEnvelopeVB_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMsoEnvelopeVB_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMsoEnvelopeVB_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMsoEnvelopeVB_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMsoEnvelopeVB_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMsoEnvelopeVB_get_Introduction(This,pbstrIntro)	\
    ( (This)->lpVtbl -> get_Introduction(This,pbstrIntro) ) 

#define IMsoEnvelopeVB_put_Introduction(This,pbstrIntro)	\
    ( (This)->lpVtbl -> put_Introduction(This,pbstrIntro) ) 

#define IMsoEnvelopeVB_get_Item(This,ppdisp)	\
    ( (This)->lpVtbl -> get_Item(This,ppdisp) ) 

#define IMsoEnvelopeVB_get_Parent(This,ppdisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppdisp) ) 

#define IMsoEnvelopeVB_get_CommandBars(This,ppdisp)	\
    ( (This)->lpVtbl -> get_CommandBars(This,ppdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMsoEnvelopeVB_INTERFACE_DEFINED__ */


#ifndef __IMsoEnvelopeVBEvents_DISPINTERFACE_DEFINED__
#define __IMsoEnvelopeVBEvents_DISPINTERFACE_DEFINED__

/* dispinterface IMsoEnvelopeVBEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_IMsoEnvelopeVBEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672AD-0000-0000-C000-000000000046")
    IMsoEnvelopeVBEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct IMsoEnvelopeVBEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMsoEnvelopeVBEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMsoEnvelopeVBEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMsoEnvelopeVBEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMsoEnvelopeVBEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMsoEnvelopeVBEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMsoEnvelopeVBEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMsoEnvelopeVBEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } IMsoEnvelopeVBEventsVtbl;

    interface IMsoEnvelopeVBEvents
    {
        CONST_VTBL struct IMsoEnvelopeVBEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsoEnvelopeVBEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMsoEnvelopeVBEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMsoEnvelopeVBEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMsoEnvelopeVBEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMsoEnvelopeVBEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMsoEnvelopeVBEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMsoEnvelopeVBEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __IMsoEnvelopeVBEvents_DISPINTERFACE_DEFINED__ */


#ifndef __FileTypes_INTERFACE_DEFINED__
#define __FileTypes_INTERFACE_DEFINED__

/* interface FileTypes */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_FileTypes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C036C-0000-0000-C000-000000000046")
    FileTypes : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ MsoFileType *MsoFileTypeRet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *iCountRetVal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ MsoFileType FileType) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ int Index) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FileTypesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FileTypes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FileTypes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FileTypes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FileTypes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FileTypes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FileTypes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FileTypes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FileTypes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            FileTypes * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            FileTypes * This,
            /* [in] */ int Index,
            /* [retval][out] */ MsoFileType *MsoFileTypeRet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            FileTypes * This,
            /* [retval][out] */ int *iCountRetVal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            FileTypes * This,
            /* [in] */ MsoFileType FileType);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            FileTypes * This,
            /* [in] */ int Index);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            FileTypes * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        END_INTERFACE
    } FileTypesVtbl;

    interface FileTypes
    {
        CONST_VTBL struct FileTypesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FileTypes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FileTypes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FileTypes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FileTypes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FileTypes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FileTypes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FileTypes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FileTypes_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define FileTypes_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define FileTypes_get_Item(This,Index,MsoFileTypeRet)	\
    ( (This)->lpVtbl -> get_Item(This,Index,MsoFileTypeRet) ) 

#define FileTypes_get_Count(This,iCountRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,iCountRetVal) ) 

#define FileTypes_Add(This,FileType)	\
    ( (This)->lpVtbl -> Add(This,FileType) ) 

#define FileTypes_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define FileTypes_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FileTypes_INTERFACE_DEFINED__ */


#ifndef __SearchFolders_INTERFACE_DEFINED__
#define __SearchFolders_INTERFACE_DEFINED__

/* interface SearchFolders */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SearchFolders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C036A-0000-0000-C000-000000000046")
    SearchFolders : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ ScopeFolder **ScopeFolderRet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *iCountRetVal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ ScopeFolder *ScopeFolder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ int Index) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SearchFoldersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SearchFolders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SearchFolders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SearchFolders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SearchFolders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SearchFolders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SearchFolders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SearchFolders * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SearchFolders * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SearchFolders * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            SearchFolders * This,
            /* [in] */ int Index,
            /* [retval][out] */ ScopeFolder **ScopeFolderRet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SearchFolders * This,
            /* [retval][out] */ int *iCountRetVal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            SearchFolders * This,
            /* [in] */ ScopeFolder *ScopeFolder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            SearchFolders * This,
            /* [in] */ int Index);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            SearchFolders * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        END_INTERFACE
    } SearchFoldersVtbl;

    interface SearchFolders
    {
        CONST_VTBL struct SearchFoldersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SearchFolders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SearchFolders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SearchFolders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SearchFolders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SearchFolders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SearchFolders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SearchFolders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SearchFolders_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SearchFolders_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SearchFolders_get_Item(This,Index,ScopeFolderRet)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ScopeFolderRet) ) 

#define SearchFolders_get_Count(This,iCountRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,iCountRetVal) ) 

#define SearchFolders_Add(This,ScopeFolder)	\
    ( (This)->lpVtbl -> Add(This,ScopeFolder) ) 

#define SearchFolders_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define SearchFolders_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SearchFolders_INTERFACE_DEFINED__ */


#ifndef __ScopeFolders_INTERFACE_DEFINED__
#define __ScopeFolders_INTERFACE_DEFINED__

/* interface ScopeFolders */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_ScopeFolders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0369-0000-0000-C000-000000000046")
    ScopeFolders : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ ScopeFolder **ScopeFolderRet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *iCountRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ScopeFoldersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ScopeFolders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ScopeFolders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ScopeFolders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ScopeFolders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ScopeFolders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ScopeFolders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ScopeFolders * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ScopeFolders * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ScopeFolders * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            ScopeFolders * This,
            /* [in] */ int Index,
            /* [retval][out] */ ScopeFolder **ScopeFolderRet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ScopeFolders * This,
            /* [retval][out] */ int *iCountRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            ScopeFolders * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        END_INTERFACE
    } ScopeFoldersVtbl;

    interface ScopeFolders
    {
        CONST_VTBL struct ScopeFoldersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ScopeFolders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ScopeFolders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ScopeFolders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ScopeFolders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ScopeFolders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ScopeFolders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ScopeFolders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ScopeFolders_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ScopeFolders_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ScopeFolders_get_Item(This,Index,ScopeFolderRet)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ScopeFolderRet) ) 

#define ScopeFolders_get_Count(This,iCountRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,iCountRetVal) ) 

#define ScopeFolders_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ScopeFolders_INTERFACE_DEFINED__ */


#ifndef __ScopeFolder_INTERFACE_DEFINED__
#define __ScopeFolder_INTERFACE_DEFINED__

/* interface ScopeFolder */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_ScopeFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0368-0000-0000-C000-000000000046")
    ScopeFolder : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR *pbstrPath) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScopeFolders( 
            /* [retval][out] */ ScopeFolders **ScopeFoldersRet) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddToSearchFolders( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ScopeFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ScopeFolder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ScopeFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ScopeFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ScopeFolder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ScopeFolder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ScopeFolder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ScopeFolder * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ScopeFolder * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ScopeFolder * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ScopeFolder * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            ScopeFolder * This,
            /* [retval][out] */ BSTR *pbstrPath);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScopeFolders )( 
            ScopeFolder * This,
            /* [retval][out] */ ScopeFolders **ScopeFoldersRet);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddToSearchFolders )( 
            ScopeFolder * This);
        
        END_INTERFACE
    } ScopeFolderVtbl;

    interface ScopeFolder
    {
        CONST_VTBL struct ScopeFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ScopeFolder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ScopeFolder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ScopeFolder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ScopeFolder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ScopeFolder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ScopeFolder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ScopeFolder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ScopeFolder_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ScopeFolder_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ScopeFolder_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define ScopeFolder_get_Path(This,pbstrPath)	\
    ( (This)->lpVtbl -> get_Path(This,pbstrPath) ) 

#define ScopeFolder_get_ScopeFolders(This,ScopeFoldersRet)	\
    ( (This)->lpVtbl -> get_ScopeFolders(This,ScopeFoldersRet) ) 

#define ScopeFolder_AddToSearchFolders(This)	\
    ( (This)->lpVtbl -> AddToSearchFolders(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ScopeFolder_INTERFACE_DEFINED__ */


#ifndef __SearchScope_INTERFACE_DEFINED__
#define __SearchScope_INTERFACE_DEFINED__

/* interface SearchScope */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SearchScope;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0367-0000-0000-C000-000000000046")
    SearchScope : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoSearchIn *MsoSearchInRetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScopeFolder( 
            /* [retval][out] */ ScopeFolder **ScopeFolderRet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SearchScopeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SearchScope * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SearchScope * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SearchScope * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SearchScope * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SearchScope * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SearchScope * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SearchScope * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SearchScope * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SearchScope * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            SearchScope * This,
            /* [retval][out] */ MsoSearchIn *MsoSearchInRetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScopeFolder )( 
            SearchScope * This,
            /* [retval][out] */ ScopeFolder **ScopeFolderRet);
        
        END_INTERFACE
    } SearchScopeVtbl;

    interface SearchScope
    {
        CONST_VTBL struct SearchScopeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SearchScope_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SearchScope_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SearchScope_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SearchScope_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SearchScope_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SearchScope_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SearchScope_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SearchScope_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SearchScope_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SearchScope_get_Type(This,MsoSearchInRetVal)	\
    ( (This)->lpVtbl -> get_Type(This,MsoSearchInRetVal) ) 

#define SearchScope_get_ScopeFolder(This,ScopeFolderRet)	\
    ( (This)->lpVtbl -> get_ScopeFolder(This,ScopeFolderRet) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SearchScope_INTERFACE_DEFINED__ */


#ifndef __SearchScopes_INTERFACE_DEFINED__
#define __SearchScopes_INTERFACE_DEFINED__

/* interface SearchScopes */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SearchScopes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0366-0000-0000-C000-000000000046")
    SearchScopes : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ SearchScope **SearchScopeRet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *iCountRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SearchScopesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SearchScopes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SearchScopes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SearchScopes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SearchScopes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SearchScopes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SearchScopes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SearchScopes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SearchScopes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SearchScopes * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            SearchScopes * This,
            /* [in] */ int Index,
            /* [retval][out] */ SearchScope **SearchScopeRet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SearchScopes * This,
            /* [retval][out] */ int *iCountRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            SearchScopes * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        END_INTERFACE
    } SearchScopesVtbl;

    interface SearchScopes
    {
        CONST_VTBL struct SearchScopesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SearchScopes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SearchScopes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SearchScopes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SearchScopes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SearchScopes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SearchScopes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SearchScopes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SearchScopes_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SearchScopes_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SearchScopes_get_Item(This,Index,SearchScopeRet)	\
    ( (This)->lpVtbl -> get_Item(This,Index,SearchScopeRet) ) 

#define SearchScopes_get_Count(This,iCountRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,iCountRetVal) ) 

#define SearchScopes_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SearchScopes_INTERFACE_DEFINED__ */


#ifndef __IMsoDiagram_INTERFACE_DEFINED__
#define __IMsoDiagram_INTERFACE_DEFINED__

/* interface IMsoDiagram */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_IMsoDiagram;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C036D-0000-0000-C000-000000000046")
    IMsoDiagram : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Nodes( 
            /* [retval][out] */ DiagramNodes **Nodes) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ MsoDiagramType *Type) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoLayout( 
            /* [retval][out] */ MsoTriState *AutoLayout) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoLayout( 
            /* [in] */ MsoTriState AutoLayout) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Reverse( 
            /* [retval][out] */ MsoTriState *Reverse) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Reverse( 
            /* [in] */ MsoTriState Reverse) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoFormat( 
            /* [retval][out] */ MsoTriState *AutoFormat) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoFormat( 
            /* [in] */ MsoTriState AutoFormat) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Convert( 
            /* [in] */ MsoDiagramType Type) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FitText( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsoDiagramVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMsoDiagram * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMsoDiagram * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMsoDiagram * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMsoDiagram * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMsoDiagram * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMsoDiagram * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMsoDiagram * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IMsoDiagram * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            IMsoDiagram * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IMsoDiagram * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Nodes )( 
            IMsoDiagram * This,
            /* [retval][out] */ DiagramNodes **Nodes);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IMsoDiagram * This,
            /* [retval][out] */ MsoDiagramType *Type);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoLayout )( 
            IMsoDiagram * This,
            /* [retval][out] */ MsoTriState *AutoLayout);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoLayout )( 
            IMsoDiagram * This,
            /* [in] */ MsoTriState AutoLayout);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Reverse )( 
            IMsoDiagram * This,
            /* [retval][out] */ MsoTriState *Reverse);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Reverse )( 
            IMsoDiagram * This,
            /* [in] */ MsoTriState Reverse);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoFormat )( 
            IMsoDiagram * This,
            /* [retval][out] */ MsoTriState *AutoFormat);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoFormat )( 
            IMsoDiagram * This,
            /* [in] */ MsoTriState AutoFormat);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Convert )( 
            IMsoDiagram * This,
            /* [in] */ MsoDiagramType Type);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FitText )( 
            IMsoDiagram * This);
        
        END_INTERFACE
    } IMsoDiagramVtbl;

    interface IMsoDiagram
    {
        CONST_VTBL struct IMsoDiagramVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsoDiagram_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMsoDiagram_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMsoDiagram_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMsoDiagram_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMsoDiagram_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMsoDiagram_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMsoDiagram_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMsoDiagram_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define IMsoDiagram_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define IMsoDiagram_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define IMsoDiagram_get_Nodes(This,Nodes)	\
    ( (This)->lpVtbl -> get_Nodes(This,Nodes) ) 

#define IMsoDiagram_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define IMsoDiagram_get_AutoLayout(This,AutoLayout)	\
    ( (This)->lpVtbl -> get_AutoLayout(This,AutoLayout) ) 

#define IMsoDiagram_put_AutoLayout(This,AutoLayout)	\
    ( (This)->lpVtbl -> put_AutoLayout(This,AutoLayout) ) 

#define IMsoDiagram_get_Reverse(This,Reverse)	\
    ( (This)->lpVtbl -> get_Reverse(This,Reverse) ) 

#define IMsoDiagram_put_Reverse(This,Reverse)	\
    ( (This)->lpVtbl -> put_Reverse(This,Reverse) ) 

#define IMsoDiagram_get_AutoFormat(This,AutoFormat)	\
    ( (This)->lpVtbl -> get_AutoFormat(This,AutoFormat) ) 

#define IMsoDiagram_put_AutoFormat(This,AutoFormat)	\
    ( (This)->lpVtbl -> put_AutoFormat(This,AutoFormat) ) 

#define IMsoDiagram_Convert(This,Type)	\
    ( (This)->lpVtbl -> Convert(This,Type) ) 

#define IMsoDiagram_FitText(This)	\
    ( (This)->lpVtbl -> FitText(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMsoDiagram_INTERFACE_DEFINED__ */


#ifndef __DiagramNodes_INTERFACE_DEFINED__
#define __DiagramNodes_INTERFACE_DEFINED__

/* interface DiagramNodes */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_DiagramNodes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C036E-0000-0000-C000-000000000046")
    DiagramNodes : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ DiagramNode **ppdn) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *iDiagramNodes) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DiagramNodesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DiagramNodes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DiagramNodes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DiagramNodes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DiagramNodes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DiagramNodes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DiagramNodes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DiagramNodes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            DiagramNodes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            DiagramNodes * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            DiagramNodes * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            DiagramNodes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ DiagramNode **ppdn);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            DiagramNodes * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            DiagramNodes * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            DiagramNodes * This,
            /* [retval][out] */ int *iDiagramNodes);
        
        END_INTERFACE
    } DiagramNodesVtbl;

    interface DiagramNodes
    {
        CONST_VTBL struct DiagramNodesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DiagramNodes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DiagramNodes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DiagramNodes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DiagramNodes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DiagramNodes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DiagramNodes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DiagramNodes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define DiagramNodes_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define DiagramNodes_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define DiagramNodes_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#define DiagramNodes_Item(This,Index,ppdn)	\
    ( (This)->lpVtbl -> Item(This,Index,ppdn) ) 

#define DiagramNodes_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define DiagramNodes_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define DiagramNodes_get_Count(This,iDiagramNodes)	\
    ( (This)->lpVtbl -> get_Count(This,iDiagramNodes) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __DiagramNodes_INTERFACE_DEFINED__ */


#ifndef __DiagramNodeChildren_INTERFACE_DEFINED__
#define __DiagramNodeChildren_INTERFACE_DEFINED__

/* interface DiagramNodeChildren */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_DiagramNodeChildren;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C036F-0000-0000-C000-000000000046")
    DiagramNodeChildren : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ DiagramNode **Node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddNode( 
            /* [defaultvalue][optional][in] */ VARIANT Index,
            /* [defaultvalue][optional][in] */ MsoDiagramNodeType NodeType,
            /* [retval][out] */ DiagramNode **NewNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *iDiagramNodes) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FirstChild( 
            /* [retval][out] */ DiagramNode **First) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LastChild( 
            /* [retval][out] */ DiagramNode **Last) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DiagramNodeChildrenVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DiagramNodeChildren * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DiagramNodeChildren * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DiagramNodeChildren * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DiagramNodeChildren * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DiagramNodeChildren * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DiagramNodeChildren * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DiagramNodeChildren * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            DiagramNodeChildren * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            DiagramNodeChildren * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            DiagramNodeChildren * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            DiagramNodeChildren * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ DiagramNode **Node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddNode )( 
            DiagramNodeChildren * This,
            /* [defaultvalue][optional][in] */ VARIANT Index,
            /* [defaultvalue][optional][in] */ MsoDiagramNodeType NodeType,
            /* [retval][out] */ DiagramNode **NewNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            DiagramNodeChildren * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            DiagramNodeChildren * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            DiagramNodeChildren * This,
            /* [retval][out] */ int *iDiagramNodes);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FirstChild )( 
            DiagramNodeChildren * This,
            /* [retval][out] */ DiagramNode **First);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastChild )( 
            DiagramNodeChildren * This,
            /* [retval][out] */ DiagramNode **Last);
        
        END_INTERFACE
    } DiagramNodeChildrenVtbl;

    interface DiagramNodeChildren
    {
        CONST_VTBL struct DiagramNodeChildrenVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DiagramNodeChildren_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DiagramNodeChildren_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DiagramNodeChildren_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DiagramNodeChildren_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DiagramNodeChildren_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DiagramNodeChildren_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DiagramNodeChildren_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define DiagramNodeChildren_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define DiagramNodeChildren_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define DiagramNodeChildren_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#define DiagramNodeChildren_Item(This,Index,Node)	\
    ( (This)->lpVtbl -> Item(This,Index,Node) ) 

#define DiagramNodeChildren_AddNode(This,Index,NodeType,NewNode)	\
    ( (This)->lpVtbl -> AddNode(This,Index,NodeType,NewNode) ) 

#define DiagramNodeChildren_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define DiagramNodeChildren_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define DiagramNodeChildren_get_Count(This,iDiagramNodes)	\
    ( (This)->lpVtbl -> get_Count(This,iDiagramNodes) ) 

#define DiagramNodeChildren_get_FirstChild(This,First)	\
    ( (This)->lpVtbl -> get_FirstChild(This,First) ) 

#define DiagramNodeChildren_get_LastChild(This,Last)	\
    ( (This)->lpVtbl -> get_LastChild(This,Last) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __DiagramNodeChildren_INTERFACE_DEFINED__ */


#ifndef __DiagramNode_INTERFACE_DEFINED__
#define __DiagramNode_INTERFACE_DEFINED__

/* interface DiagramNode */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_DiagramNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0370-0000-0000-C000-000000000046")
    DiagramNode : public _IMsoDispObj
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddNode( 
            /* [defaultvalue][optional][in] */ MsoRelativeNodePosition Pos,
            /* [defaultvalue][optional][in] */ MsoDiagramNodeType NodeType,
            /* [retval][out] */ DiagramNode **NewNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MoveNode( 
            /* [in] */ DiagramNode *TargetNode,
            /* [in] */ MsoRelativeNodePosition Pos) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ReplaceNode( 
            /* [in] */ DiagramNode *TargetNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SwapNode( 
            /* [in] */ DiagramNode *TargetNode,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SwapChildren = -1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CloneNode( 
            /* [in] */ VARIANT_BOOL CopyChildren,
            /* [in] */ DiagramNode *TargetNode,
            /* [defaultvalue][optional][in] */ MsoRelativeNodePosition Pos,
            /* [retval][out] */ DiagramNode **Node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE TransferChildren( 
            /* [in] */ DiagramNode *ReceivingNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE NextNode( 
            /* [retval][out] */ DiagramNode **NextNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PrevNode( 
            /* [retval][out] */ DiagramNode **PrevNode) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ DiagramNodeChildren **Children) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Shape( 
            /* [retval][out] */ Shape **Shape) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Root( 
            /* [retval][out] */ DiagramNode **Root) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Diagram( 
            /* [retval][out] */ IMsoDiagram **Diagram) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Layout( 
            /* [retval][out] */ MsoOrgChartLayoutType *Type) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Layout( 
            /* [in] */ MsoOrgChartLayoutType Type) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TextShape( 
            /* [retval][out] */ Shape **Shape) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DiagramNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DiagramNode * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DiagramNode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DiagramNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DiagramNode * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DiagramNode * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DiagramNode * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DiagramNode * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            DiagramNode * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            DiagramNode * This,
            /* [retval][out] */ long *plCreator);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddNode )( 
            DiagramNode * This,
            /* [defaultvalue][optional][in] */ MsoRelativeNodePosition Pos,
            /* [defaultvalue][optional][in] */ MsoDiagramNodeType NodeType,
            /* [retval][out] */ DiagramNode **NewNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            DiagramNode * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *MoveNode )( 
            DiagramNode * This,
            /* [in] */ DiagramNode *TargetNode,
            /* [in] */ MsoRelativeNodePosition Pos);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ReplaceNode )( 
            DiagramNode * This,
            /* [in] */ DiagramNode *TargetNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SwapNode )( 
            DiagramNode * This,
            /* [in] */ DiagramNode *TargetNode,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SwapChildren);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CloneNode )( 
            DiagramNode * This,
            /* [in] */ VARIANT_BOOL CopyChildren,
            /* [in] */ DiagramNode *TargetNode,
            /* [defaultvalue][optional][in] */ MsoRelativeNodePosition Pos,
            /* [retval][out] */ DiagramNode **Node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TransferChildren )( 
            DiagramNode * This,
            /* [in] */ DiagramNode *ReceivingNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *NextNode )( 
            DiagramNode * This,
            /* [retval][out] */ DiagramNode **NextNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrevNode )( 
            DiagramNode * This,
            /* [retval][out] */ DiagramNode **PrevNode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            DiagramNode * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            DiagramNode * This,
            /* [retval][out] */ DiagramNodeChildren **Children);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Shape )( 
            DiagramNode * This,
            /* [retval][out] */ Shape **Shape);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Root )( 
            DiagramNode * This,
            /* [retval][out] */ DiagramNode **Root);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Diagram )( 
            DiagramNode * This,
            /* [retval][out] */ IMsoDiagram **Diagram);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Layout )( 
            DiagramNode * This,
            /* [retval][out] */ MsoOrgChartLayoutType *Type);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Layout )( 
            DiagramNode * This,
            /* [in] */ MsoOrgChartLayoutType Type);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextShape )( 
            DiagramNode * This,
            /* [retval][out] */ Shape **Shape);
        
        END_INTERFACE
    } DiagramNodeVtbl;

    interface DiagramNode
    {
        CONST_VTBL struct DiagramNodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DiagramNode_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DiagramNode_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DiagramNode_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DiagramNode_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DiagramNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DiagramNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DiagramNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define DiagramNode_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define DiagramNode_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define DiagramNode_AddNode(This,Pos,NodeType,NewNode)	\
    ( (This)->lpVtbl -> AddNode(This,Pos,NodeType,NewNode) ) 

#define DiagramNode_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define DiagramNode_MoveNode(This,TargetNode,Pos)	\
    ( (This)->lpVtbl -> MoveNode(This,TargetNode,Pos) ) 

#define DiagramNode_ReplaceNode(This,TargetNode)	\
    ( (This)->lpVtbl -> ReplaceNode(This,TargetNode) ) 

#define DiagramNode_SwapNode(This,TargetNode,SwapChildren)	\
    ( (This)->lpVtbl -> SwapNode(This,TargetNode,SwapChildren) ) 

#define DiagramNode_CloneNode(This,CopyChildren,TargetNode,Pos,Node)	\
    ( (This)->lpVtbl -> CloneNode(This,CopyChildren,TargetNode,Pos,Node) ) 

#define DiagramNode_TransferChildren(This,ReceivingNode)	\
    ( (This)->lpVtbl -> TransferChildren(This,ReceivingNode) ) 

#define DiagramNode_NextNode(This,NextNode)	\
    ( (This)->lpVtbl -> NextNode(This,NextNode) ) 

#define DiagramNode_PrevNode(This,PrevNode)	\
    ( (This)->lpVtbl -> PrevNode(This,PrevNode) ) 

#define DiagramNode_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define DiagramNode_get_Children(This,Children)	\
    ( (This)->lpVtbl -> get_Children(This,Children) ) 

#define DiagramNode_get_Shape(This,Shape)	\
    ( (This)->lpVtbl -> get_Shape(This,Shape) ) 

#define DiagramNode_get_Root(This,Root)	\
    ( (This)->lpVtbl -> get_Root(This,Root) ) 

#define DiagramNode_get_Diagram(This,Diagram)	\
    ( (This)->lpVtbl -> get_Diagram(This,Diagram) ) 

#define DiagramNode_get_Layout(This,Type)	\
    ( (This)->lpVtbl -> get_Layout(This,Type) ) 

#define DiagramNode_put_Layout(This,Type)	\
    ( (This)->lpVtbl -> put_Layout(This,Type) ) 

#define DiagramNode_get_TextShape(This,Shape)	\
    ( (This)->lpVtbl -> get_TextShape(This,Shape) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __DiagramNode_INTERFACE_DEFINED__ */


#ifndef __CanvasShapes_INTERFACE_DEFINED__
#define __CanvasShapes_INTERFACE_DEFINED__

/* interface CanvasShapes */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_CanvasShapes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0371-0000-0000-C000-000000000046")
    CanvasShapes : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *Count) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Shape **Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **_NewEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddCallout( 
            /* [in] */ MsoCalloutType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Callout) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddConnector( 
            /* [in] */ MsoConnectorType Type,
            /* [in] */ short BeginX,
            /* [in] */ short BeginY,
            /* [in] */ short EndX,
            /* [in] */ short EndY,
            /* [retval][out] */ Shape **Connector) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddCurve( 
            /* [in] */ VARIANT SafeArrayOfPoints,
            /* [retval][out] */ Shape **Curve) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddLabel( 
            /* [in] */ MsoTextOrientation Orientation,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Label) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddLine( 
            /* [in] */ short BeginX,
            /* [in] */ short BeginY,
            /* [in] */ short EndX,
            /* [in] */ short EndY,
            /* [retval][out] */ Shape **Line) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddPicture( 
            /* [in] */ BSTR FileName,
            /* [in] */ MsoTriState LinkToFile,
            /* [in] */ MsoTriState SaveWithDocument,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [defaultvalue][optional][in] */ short Width,
            /* [defaultvalue][optional][in] */ short Height,
            /* [retval][out] */ Shape **Picture) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddPolyline( 
            /* [in] */ VARIANT SafeArrayOfPoints,
            /* [retval][out] */ Shape **Polyline) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddShape( 
            /* [in] */ MsoAutoShapeType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Shape) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddTextEffect( 
            /* [in] */ MsoPresetTextEffect PresetTextEffect,
            /* [in] */ BSTR Text,
            /* [in] */ BSTR FontName,
            /* [in] */ short FontSize,
            /* [in] */ MsoTriState FontBold,
            /* [in] */ MsoTriState FontItalic,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [retval][out] */ Shape **TextEffect) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddTextbox( 
            /* [in] */ MsoTextOrientation Orientation,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Textbox) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE BuildFreeform( 
            /* [in] */ MsoEditingType EditingType,
            /* [in] */ short X1,
            /* [in] */ short Y1,
            /* [retval][out] */ FreeformBuilder **FreeformBuilder) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Range( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ShapeRange **Range) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Background( 
            /* [retval][out] */ Shape **Background) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct CanvasShapesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            CanvasShapes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            CanvasShapes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            CanvasShapes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            CanvasShapes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            CanvasShapes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            CanvasShapes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            CanvasShapes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            CanvasShapes * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            CanvasShapes * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            CanvasShapes * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            CanvasShapes * This,
            /* [retval][out] */ int *Count);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            CanvasShapes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Shape **Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            CanvasShapes * This,
            /* [retval][out] */ IUnknown **_NewEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddCallout )( 
            CanvasShapes * This,
            /* [in] */ MsoCalloutType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Callout);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddConnector )( 
            CanvasShapes * This,
            /* [in] */ MsoConnectorType Type,
            /* [in] */ short BeginX,
            /* [in] */ short BeginY,
            /* [in] */ short EndX,
            /* [in] */ short EndY,
            /* [retval][out] */ Shape **Connector);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddCurve )( 
            CanvasShapes * This,
            /* [in] */ VARIANT SafeArrayOfPoints,
            /* [retval][out] */ Shape **Curve);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddLabel )( 
            CanvasShapes * This,
            /* [in] */ MsoTextOrientation Orientation,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Label);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddLine )( 
            CanvasShapes * This,
            /* [in] */ short BeginX,
            /* [in] */ short BeginY,
            /* [in] */ short EndX,
            /* [in] */ short EndY,
            /* [retval][out] */ Shape **Line);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddPicture )( 
            CanvasShapes * This,
            /* [in] */ BSTR FileName,
            /* [in] */ MsoTriState LinkToFile,
            /* [in] */ MsoTriState SaveWithDocument,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [defaultvalue][optional][in] */ short Width,
            /* [defaultvalue][optional][in] */ short Height,
            /* [retval][out] */ Shape **Picture);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddPolyline )( 
            CanvasShapes * This,
            /* [in] */ VARIANT SafeArrayOfPoints,
            /* [retval][out] */ Shape **Polyline);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddShape )( 
            CanvasShapes * This,
            /* [in] */ MsoAutoShapeType Type,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Shape);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddTextEffect )( 
            CanvasShapes * This,
            /* [in] */ MsoPresetTextEffect PresetTextEffect,
            /* [in] */ BSTR Text,
            /* [in] */ BSTR FontName,
            /* [in] */ short FontSize,
            /* [in] */ MsoTriState FontBold,
            /* [in] */ MsoTriState FontItalic,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [retval][out] */ Shape **TextEffect);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddTextbox )( 
            CanvasShapes * This,
            /* [in] */ MsoTextOrientation Orientation,
            /* [in] */ short Left,
            /* [in] */ short Top,
            /* [in] */ short Width,
            /* [in] */ short Height,
            /* [retval][out] */ Shape **Textbox);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *BuildFreeform )( 
            CanvasShapes * This,
            /* [in] */ MsoEditingType EditingType,
            /* [in] */ short X1,
            /* [in] */ short Y1,
            /* [retval][out] */ FreeformBuilder **FreeformBuilder);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Range )( 
            CanvasShapes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ShapeRange **Range);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            CanvasShapes * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Background )( 
            CanvasShapes * This,
            /* [retval][out] */ Shape **Background);
        
        END_INTERFACE
    } CanvasShapesVtbl;

    interface CanvasShapes
    {
        CONST_VTBL struct CanvasShapesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define CanvasShapes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define CanvasShapes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define CanvasShapes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define CanvasShapes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define CanvasShapes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define CanvasShapes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define CanvasShapes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define CanvasShapes_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define CanvasShapes_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define CanvasShapes_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define CanvasShapes_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define CanvasShapes_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define CanvasShapes_get__NewEnum(This,_NewEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,_NewEnum) ) 

#define CanvasShapes_AddCallout(This,Type,Left,Top,Width,Height,Callout)	\
    ( (This)->lpVtbl -> AddCallout(This,Type,Left,Top,Width,Height,Callout) ) 

#define CanvasShapes_AddConnector(This,Type,BeginX,BeginY,EndX,EndY,Connector)	\
    ( (This)->lpVtbl -> AddConnector(This,Type,BeginX,BeginY,EndX,EndY,Connector) ) 

#define CanvasShapes_AddCurve(This,SafeArrayOfPoints,Curve)	\
    ( (This)->lpVtbl -> AddCurve(This,SafeArrayOfPoints,Curve) ) 

#define CanvasShapes_AddLabel(This,Orientation,Left,Top,Width,Height,Label)	\
    ( (This)->lpVtbl -> AddLabel(This,Orientation,Left,Top,Width,Height,Label) ) 

#define CanvasShapes_AddLine(This,BeginX,BeginY,EndX,EndY,Line)	\
    ( (This)->lpVtbl -> AddLine(This,BeginX,BeginY,EndX,EndY,Line) ) 

#define CanvasShapes_AddPicture(This,FileName,LinkToFile,SaveWithDocument,Left,Top,Width,Height,Picture)	\
    ( (This)->lpVtbl -> AddPicture(This,FileName,LinkToFile,SaveWithDocument,Left,Top,Width,Height,Picture) ) 

#define CanvasShapes_AddPolyline(This,SafeArrayOfPoints,Polyline)	\
    ( (This)->lpVtbl -> AddPolyline(This,SafeArrayOfPoints,Polyline) ) 

#define CanvasShapes_AddShape(This,Type,Left,Top,Width,Height,Shape)	\
    ( (This)->lpVtbl -> AddShape(This,Type,Left,Top,Width,Height,Shape) ) 

#define CanvasShapes_AddTextEffect(This,PresetTextEffect,Text,FontName,FontSize,FontBold,FontItalic,Left,Top,TextEffect)	\
    ( (This)->lpVtbl -> AddTextEffect(This,PresetTextEffect,Text,FontName,FontSize,FontBold,FontItalic,Left,Top,TextEffect) ) 

#define CanvasShapes_AddTextbox(This,Orientation,Left,Top,Width,Height,Textbox)	\
    ( (This)->lpVtbl -> AddTextbox(This,Orientation,Left,Top,Width,Height,Textbox) ) 

#define CanvasShapes_BuildFreeform(This,EditingType,X1,Y1,FreeformBuilder)	\
    ( (This)->lpVtbl -> BuildFreeform(This,EditingType,X1,Y1,FreeformBuilder) ) 

#define CanvasShapes_Range(This,Index,Range)	\
    ( (This)->lpVtbl -> Range(This,Index,Range) ) 

#define CanvasShapes_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define CanvasShapes_get_Background(This,Background)	\
    ( (This)->lpVtbl -> get_Background(This,Background) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __CanvasShapes_INTERFACE_DEFINED__ */


#ifndef __OfficeDataSourceObject_INTERFACE_DEFINED__
#define __OfficeDataSourceObject_INTERFACE_DEFINED__

/* interface OfficeDataSourceObject */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_OfficeDataSourceObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C1530-0000-0000-C000-000000000046")
    OfficeDataSourceObject : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConnectString( 
            /* [retval][out] */ BSTR *pbstrConnect) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConnectString( 
            /* [in] */ BSTR pbstrConnect) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Table( 
            /* [retval][out] */ BSTR *pbstrTable) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Table( 
            /* [in] */ BSTR pbstrTable) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DataSource( 
            /* [retval][out] */ BSTR *pbstrSrc) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DataSource( 
            /* [in] */ BSTR pbstrSrc) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Columns( 
            /* [retval][out] */ IDispatch **ppColumns) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RowCount( 
            /* [retval][out] */ long *pcRows) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filters( 
            /* [retval][out] */ IDispatch **ppFilters) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MsoMoveRow MsoMoveRow,
            /* [defaultvalue][optional][in] */ int RowNbr,
            /* [retval][out] */ int *rval) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [defaultvalue][optional][in] */ BSTR bstrSrc = L"",
            /* [defaultvalue][optional][in] */ BSTR bstrConnect = L"",
            /* [defaultvalue][optional][in] */ BSTR bstrTable = L"",
            /* [defaultvalue][optional][in] */ long fOpenExclusive = 0,
            /* [defaultvalue][optional][in] */ long fNeverPrompt = 1) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetSortOrder( 
            /* [in] */ BSTR SortField1,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SortAscending1 = -1,
            /* [defaultvalue][optional][in] */ BSTR SortField2 = L"",
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SortAscending2 = -1,
            /* [defaultvalue][optional][in] */ BSTR SortField3 = L"",
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SortAscending3 = -1) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ApplyFilter( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct OfficeDataSourceObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OfficeDataSourceObject * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OfficeDataSourceObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OfficeDataSourceObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OfficeDataSourceObject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OfficeDataSourceObject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OfficeDataSourceObject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OfficeDataSourceObject * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectString )( 
            OfficeDataSourceObject * This,
            /* [retval][out] */ BSTR *pbstrConnect);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConnectString )( 
            OfficeDataSourceObject * This,
            /* [in] */ BSTR pbstrConnect);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Table )( 
            OfficeDataSourceObject * This,
            /* [retval][out] */ BSTR *pbstrTable);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Table )( 
            OfficeDataSourceObject * This,
            /* [in] */ BSTR pbstrTable);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataSource )( 
            OfficeDataSourceObject * This,
            /* [retval][out] */ BSTR *pbstrSrc);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DataSource )( 
            OfficeDataSourceObject * This,
            /* [in] */ BSTR pbstrSrc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Columns )( 
            OfficeDataSourceObject * This,
            /* [retval][out] */ IDispatch **ppColumns);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RowCount )( 
            OfficeDataSourceObject * This,
            /* [retval][out] */ long *pcRows);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filters )( 
            OfficeDataSourceObject * This,
            /* [retval][out] */ IDispatch **ppFilters);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            OfficeDataSourceObject * This,
            /* [in] */ MsoMoveRow MsoMoveRow,
            /* [defaultvalue][optional][in] */ int RowNbr,
            /* [retval][out] */ int *rval);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            OfficeDataSourceObject * This,
            /* [defaultvalue][optional][in] */ BSTR bstrSrc,
            /* [defaultvalue][optional][in] */ BSTR bstrConnect,
            /* [defaultvalue][optional][in] */ BSTR bstrTable,
            /* [defaultvalue][optional][in] */ long fOpenExclusive,
            /* [defaultvalue][optional][in] */ long fNeverPrompt);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetSortOrder )( 
            OfficeDataSourceObject * This,
            /* [in] */ BSTR SortField1,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SortAscending1,
            /* [defaultvalue][optional][in] */ BSTR SortField2,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SortAscending2,
            /* [defaultvalue][optional][in] */ BSTR SortField3,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL SortAscending3);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ApplyFilter )( 
            OfficeDataSourceObject * This);
        
        END_INTERFACE
    } OfficeDataSourceObjectVtbl;

    interface OfficeDataSourceObject
    {
        CONST_VTBL struct OfficeDataSourceObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OfficeDataSourceObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OfficeDataSourceObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OfficeDataSourceObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OfficeDataSourceObject_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OfficeDataSourceObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OfficeDataSourceObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OfficeDataSourceObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OfficeDataSourceObject_get_ConnectString(This,pbstrConnect)	\
    ( (This)->lpVtbl -> get_ConnectString(This,pbstrConnect) ) 

#define OfficeDataSourceObject_put_ConnectString(This,pbstrConnect)	\
    ( (This)->lpVtbl -> put_ConnectString(This,pbstrConnect) ) 

#define OfficeDataSourceObject_get_Table(This,pbstrTable)	\
    ( (This)->lpVtbl -> get_Table(This,pbstrTable) ) 

#define OfficeDataSourceObject_put_Table(This,pbstrTable)	\
    ( (This)->lpVtbl -> put_Table(This,pbstrTable) ) 

#define OfficeDataSourceObject_get_DataSource(This,pbstrSrc)	\
    ( (This)->lpVtbl -> get_DataSource(This,pbstrSrc) ) 

#define OfficeDataSourceObject_put_DataSource(This,pbstrSrc)	\
    ( (This)->lpVtbl -> put_DataSource(This,pbstrSrc) ) 

#define OfficeDataSourceObject_get_Columns(This,ppColumns)	\
    ( (This)->lpVtbl -> get_Columns(This,ppColumns) ) 

#define OfficeDataSourceObject_get_RowCount(This,pcRows)	\
    ( (This)->lpVtbl -> get_RowCount(This,pcRows) ) 

#define OfficeDataSourceObject_get_Filters(This,ppFilters)	\
    ( (This)->lpVtbl -> get_Filters(This,ppFilters) ) 

#define OfficeDataSourceObject_Move(This,MsoMoveRow,RowNbr,rval)	\
    ( (This)->lpVtbl -> Move(This,MsoMoveRow,RowNbr,rval) ) 

#define OfficeDataSourceObject_Open(This,bstrSrc,bstrConnect,bstrTable,fOpenExclusive,fNeverPrompt)	\
    ( (This)->lpVtbl -> Open(This,bstrSrc,bstrConnect,bstrTable,fOpenExclusive,fNeverPrompt) ) 

#define OfficeDataSourceObject_SetSortOrder(This,SortField1,SortAscending1,SortField2,SortAscending2,SortField3,SortAscending3)	\
    ( (This)->lpVtbl -> SetSortOrder(This,SortField1,SortAscending1,SortField2,SortAscending2,SortField3,SortAscending3) ) 

#define OfficeDataSourceObject_ApplyFilter(This)	\
    ( (This)->lpVtbl -> ApplyFilter(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OfficeDataSourceObject_INTERFACE_DEFINED__ */


#ifndef __ODSOColumn_INTERFACE_DEFINED__
#define __ODSOColumn_INTERFACE_DEFINED__

/* interface ODSOColumn */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_ODSOColumn;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C1531-0000-0000-C000-000000000046")
    ODSOColumn : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ long *plIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppParent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ BSTR *pbstrValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ODSOColumnVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ODSOColumn * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ODSOColumn * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ODSOColumn * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ODSOColumn * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ODSOColumn * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ODSOColumn * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ODSOColumn * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ODSOColumn * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ODSOColumn * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            ODSOColumn * This,
            /* [retval][out] */ long *plIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ODSOColumn * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ODSOColumn * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            ODSOColumn * This,
            /* [retval][out] */ BSTR *pbstrValue);
        
        END_INTERFACE
    } ODSOColumnVtbl;

    interface ODSOColumn
    {
        CONST_VTBL struct ODSOColumnVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ODSOColumn_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ODSOColumn_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ODSOColumn_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ODSOColumn_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ODSOColumn_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ODSOColumn_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ODSOColumn_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ODSOColumn_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ODSOColumn_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ODSOColumn_get_Index(This,plIndex)	\
    ( (This)->lpVtbl -> get_Index(This,plIndex) ) 

#define ODSOColumn_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define ODSOColumn_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define ODSOColumn_get_Value(This,pbstrValue)	\
    ( (This)->lpVtbl -> get_Value(This,pbstrValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ODSOColumn_INTERFACE_DEFINED__ */


#ifndef __ODSOColumns_INTERFACE_DEFINED__
#define __ODSOColumns_INTERFACE_DEFINED__

/* interface ODSOColumns */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_ODSOColumns;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C1532-0000-0000-C000-000000000046")
    ODSOColumns : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plCount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppParentOdso) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT varIndex,
            /* [retval][out] */ IDispatch **ppColumn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ODSOColumnsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ODSOColumns * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ODSOColumns * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ODSOColumns * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ODSOColumns * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ODSOColumns * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ODSOColumns * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ODSOColumns * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ODSOColumns * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ODSOColumns * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ODSOColumns * This,
            /* [retval][out] */ long *plCount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ODSOColumns * This,
            /* [retval][out] */ IDispatch **ppParentOdso);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ODSOColumns * This,
            /* [in] */ VARIANT varIndex,
            /* [retval][out] */ IDispatch **ppColumn);
        
        END_INTERFACE
    } ODSOColumnsVtbl;

    interface ODSOColumns
    {
        CONST_VTBL struct ODSOColumnsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ODSOColumns_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ODSOColumns_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ODSOColumns_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ODSOColumns_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ODSOColumns_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ODSOColumns_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ODSOColumns_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ODSOColumns_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ODSOColumns_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ODSOColumns_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define ODSOColumns_get_Parent(This,ppParentOdso)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParentOdso) ) 

#define ODSOColumns_Item(This,varIndex,ppColumn)	\
    ( (This)->lpVtbl -> Item(This,varIndex,ppColumn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ODSOColumns_INTERFACE_DEFINED__ */


#ifndef __ODSOFilter_INTERFACE_DEFINED__
#define __ODSOFilter_INTERFACE_DEFINED__

/* interface ODSOFilter */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_ODSOFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C1533-0000-0000-C000-000000000046")
    ODSOFilter : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ long *plIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppParent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Column( 
            /* [retval][out] */ BSTR *pbstrCol) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Column( 
            /* [in] */ BSTR pbstrCol) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comparison( 
            /* [retval][out] */ MsoFilterComparison *pComparison) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comparison( 
            /* [in] */ MsoFilterComparison pComparison) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CompareTo( 
            /* [retval][out] */ BSTR *pbstrCompareTo) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CompareTo( 
            /* [in] */ BSTR pbstrCompareTo) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conjunction( 
            /* [retval][out] */ MsoFilterConjunction *pConjunction) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Conjunction( 
            /* [in] */ MsoFilterConjunction pConjunction) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ODSOFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ODSOFilter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ODSOFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ODSOFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ODSOFilter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ODSOFilter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ODSOFilter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ODSOFilter * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ODSOFilter * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ODSOFilter * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            ODSOFilter * This,
            /* [retval][out] */ long *plIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ODSOFilter * This,
            /* [retval][out] */ IDispatch **ppParent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Column )( 
            ODSOFilter * This,
            /* [retval][out] */ BSTR *pbstrCol);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Column )( 
            ODSOFilter * This,
            /* [in] */ BSTR pbstrCol);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comparison )( 
            ODSOFilter * This,
            /* [retval][out] */ MsoFilterComparison *pComparison);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comparison )( 
            ODSOFilter * This,
            /* [in] */ MsoFilterComparison pComparison);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CompareTo )( 
            ODSOFilter * This,
            /* [retval][out] */ BSTR *pbstrCompareTo);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CompareTo )( 
            ODSOFilter * This,
            /* [in] */ BSTR pbstrCompareTo);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conjunction )( 
            ODSOFilter * This,
            /* [retval][out] */ MsoFilterConjunction *pConjunction);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Conjunction )( 
            ODSOFilter * This,
            /* [in] */ MsoFilterConjunction pConjunction);
        
        END_INTERFACE
    } ODSOFilterVtbl;

    interface ODSOFilter
    {
        CONST_VTBL struct ODSOFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ODSOFilter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ODSOFilter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ODSOFilter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ODSOFilter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ODSOFilter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ODSOFilter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ODSOFilter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ODSOFilter_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ODSOFilter_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ODSOFilter_get_Index(This,plIndex)	\
    ( (This)->lpVtbl -> get_Index(This,plIndex) ) 

#define ODSOFilter_get_Parent(This,ppParent)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParent) ) 

#define ODSOFilter_get_Column(This,pbstrCol)	\
    ( (This)->lpVtbl -> get_Column(This,pbstrCol) ) 

#define ODSOFilter_put_Column(This,pbstrCol)	\
    ( (This)->lpVtbl -> put_Column(This,pbstrCol) ) 

#define ODSOFilter_get_Comparison(This,pComparison)	\
    ( (This)->lpVtbl -> get_Comparison(This,pComparison) ) 

#define ODSOFilter_put_Comparison(This,pComparison)	\
    ( (This)->lpVtbl -> put_Comparison(This,pComparison) ) 

#define ODSOFilter_get_CompareTo(This,pbstrCompareTo)	\
    ( (This)->lpVtbl -> get_CompareTo(This,pbstrCompareTo) ) 

#define ODSOFilter_put_CompareTo(This,pbstrCompareTo)	\
    ( (This)->lpVtbl -> put_CompareTo(This,pbstrCompareTo) ) 

#define ODSOFilter_get_Conjunction(This,pConjunction)	\
    ( (This)->lpVtbl -> get_Conjunction(This,pConjunction) ) 

#define ODSOFilter_put_Conjunction(This,pConjunction)	\
    ( (This)->lpVtbl -> put_Conjunction(This,pConjunction) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ODSOFilter_INTERFACE_DEFINED__ */


#ifndef __ODSOFilters_INTERFACE_DEFINED__
#define __ODSOFilters_INTERFACE_DEFINED__

/* interface ODSOFilters */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_ODSOFilters;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C1534-0000-0000-C000-000000000046")
    ODSOFilters : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plCount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppParentOdso) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IDispatch **ppColumn) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Column,
            /* [in] */ MsoFilterComparison Comparison,
            /* [in] */ MsoFilterConjunction Conjunction,
            /* [defaultvalue][optional][in] */ BSTR bstrCompareTo = L"",
            /* [defaultvalue][optional][in] */ VARIANT_BOOL DeferUpdate = 0) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ long Index,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL DeferUpdate = 0) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ODSOFiltersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ODSOFilters * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ODSOFilters * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ODSOFilters * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ODSOFilters * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ODSOFilters * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ODSOFilters * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ODSOFilters * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ODSOFilters * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            ODSOFilters * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ODSOFilters * This,
            /* [retval][out] */ long *plCount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ODSOFilters * This,
            /* [retval][out] */ IDispatch **ppParentOdso);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ODSOFilters * This,
            /* [in] */ long Index,
            /* [retval][out] */ IDispatch **ppColumn);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            ODSOFilters * This,
            /* [in] */ BSTR Column,
            /* [in] */ MsoFilterComparison Comparison,
            /* [in] */ MsoFilterConjunction Conjunction,
            /* [defaultvalue][optional][in] */ BSTR bstrCompareTo,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL DeferUpdate);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ODSOFilters * This,
            /* [in] */ long Index,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL DeferUpdate);
        
        END_INTERFACE
    } ODSOFiltersVtbl;

    interface ODSOFilters
    {
        CONST_VTBL struct ODSOFiltersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ODSOFilters_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ODSOFilters_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ODSOFilters_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ODSOFilters_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ODSOFilters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ODSOFilters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ODSOFilters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ODSOFilters_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define ODSOFilters_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define ODSOFilters_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define ODSOFilters_get_Parent(This,ppParentOdso)	\
    ( (This)->lpVtbl -> get_Parent(This,ppParentOdso) ) 

#define ODSOFilters_Item(This,Index,ppColumn)	\
    ( (This)->lpVtbl -> Item(This,Index,ppColumn) ) 

#define ODSOFilters_Add(This,Column,Comparison,Conjunction,bstrCompareTo,DeferUpdate)	\
    ( (This)->lpVtbl -> Add(This,Column,Comparison,Conjunction,bstrCompareTo,DeferUpdate) ) 

#define ODSOFilters_Delete(This,Index,DeferUpdate)	\
    ( (This)->lpVtbl -> Delete(This,Index,DeferUpdate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ODSOFilters_INTERFACE_DEFINED__ */


#ifndef __NewFile_INTERFACE_DEFINED__
#define __NewFile_INTERFACE_DEFINED__

/* interface NewFile */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_NewFile;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0936-0000-0000-C000-000000000046")
    NewFile : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR FileName,
            /* [optional][in] */ VARIANT Section,
            /* [optional][in] */ VARIANT DisplayName,
            /* [optional][in] */ VARIANT Action,
            /* [retval][out] */ VARIANT_BOOL *pvarf) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ BSTR FileName,
            /* [optional][in] */ VARIANT Section,
            /* [optional][in] */ VARIANT DisplayName,
            /* [optional][in] */ VARIANT Action,
            /* [retval][out] */ VARIANT_BOOL *pvarf) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct NewFileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            NewFile * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            NewFile * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            NewFile * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            NewFile * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            NewFile * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            NewFile * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            NewFile * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            NewFile * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            NewFile * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            NewFile * This,
            /* [in] */ BSTR FileName,
            /* [optional][in] */ VARIANT Section,
            /* [optional][in] */ VARIANT DisplayName,
            /* [optional][in] */ VARIANT Action,
            /* [retval][out] */ VARIANT_BOOL *pvarf);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            NewFile * This,
            /* [in] */ BSTR FileName,
            /* [optional][in] */ VARIANT Section,
            /* [optional][in] */ VARIANT DisplayName,
            /* [optional][in] */ VARIANT Action,
            /* [retval][out] */ VARIANT_BOOL *pvarf);
        
        END_INTERFACE
    } NewFileVtbl;

    interface NewFile
    {
        CONST_VTBL struct NewFileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define NewFile_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define NewFile_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define NewFile_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define NewFile_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define NewFile_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define NewFile_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define NewFile_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define NewFile_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define NewFile_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define NewFile_Add(This,FileName,Section,DisplayName,Action,pvarf)	\
    ( (This)->lpVtbl -> Add(This,FileName,Section,DisplayName,Action,pvarf) ) 

#define NewFile_Remove(This,FileName,Section,DisplayName,Action,pvarf)	\
    ( (This)->lpVtbl -> Remove(This,FileName,Section,DisplayName,Action,pvarf) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __NewFile_INTERFACE_DEFINED__ */


#ifndef __WebComponent_INTERFACE_DEFINED__
#define __WebComponent_INTERFACE_DEFINED__

/* interface WebComponent */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_WebComponent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000CD100-0000-0000-C000-000000000046")
    WebComponent : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Shape( 
            /* [retval][out] */ IDispatch **RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_URL( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTML( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HTML( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ long RetValue) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetPlaceHolderGraphic( 
            /* [in] */ BSTR PlaceHolderGraphic) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Commit( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Revert( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WebComponentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WebComponent * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WebComponent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WebComponent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WebComponent * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WebComponent * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WebComponent * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WebComponent * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Shape )( 
            WebComponent * This,
            /* [retval][out] */ IDispatch **RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_URL )( 
            WebComponent * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_URL )( 
            WebComponent * This,
            /* [in] */ BSTR RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTML )( 
            WebComponent * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HTML )( 
            WebComponent * This,
            /* [in] */ BSTR RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            WebComponent * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            WebComponent * This,
            /* [in] */ BSTR RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            WebComponent * This,
            /* [retval][out] */ long *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            WebComponent * This,
            /* [in] */ long RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            WebComponent * This,
            /* [retval][out] */ long *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            WebComponent * This,
            /* [in] */ long RetValue);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetPlaceHolderGraphic )( 
            WebComponent * This,
            /* [in] */ BSTR PlaceHolderGraphic);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Commit )( 
            WebComponent * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Revert )( 
            WebComponent * This);
        
        END_INTERFACE
    } WebComponentVtbl;

    interface WebComponent
    {
        CONST_VTBL struct WebComponentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WebComponent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WebComponent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WebComponent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WebComponent_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WebComponent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WebComponent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WebComponent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define WebComponent_get_Shape(This,RetValue)	\
    ( (This)->lpVtbl -> get_Shape(This,RetValue) ) 

#define WebComponent_get_URL(This,RetValue)	\
    ( (This)->lpVtbl -> get_URL(This,RetValue) ) 

#define WebComponent_put_URL(This,RetValue)	\
    ( (This)->lpVtbl -> put_URL(This,RetValue) ) 

#define WebComponent_get_HTML(This,RetValue)	\
    ( (This)->lpVtbl -> get_HTML(This,RetValue) ) 

#define WebComponent_put_HTML(This,RetValue)	\
    ( (This)->lpVtbl -> put_HTML(This,RetValue) ) 

#define WebComponent_get_Name(This,RetValue)	\
    ( (This)->lpVtbl -> get_Name(This,RetValue) ) 

#define WebComponent_put_Name(This,RetValue)	\
    ( (This)->lpVtbl -> put_Name(This,RetValue) ) 

#define WebComponent_get_Width(This,RetValue)	\
    ( (This)->lpVtbl -> get_Width(This,RetValue) ) 

#define WebComponent_put_Width(This,RetValue)	\
    ( (This)->lpVtbl -> put_Width(This,RetValue) ) 

#define WebComponent_get_Height(This,RetValue)	\
    ( (This)->lpVtbl -> get_Height(This,RetValue) ) 

#define WebComponent_put_Height(This,RetValue)	\
    ( (This)->lpVtbl -> put_Height(This,RetValue) ) 

#define WebComponent_SetPlaceHolderGraphic(This,PlaceHolderGraphic)	\
    ( (This)->lpVtbl -> SetPlaceHolderGraphic(This,PlaceHolderGraphic) ) 

#define WebComponent_Commit(This)	\
    ( (This)->lpVtbl -> Commit(This) ) 

#define WebComponent_Revert(This)	\
    ( (This)->lpVtbl -> Revert(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __WebComponent_INTERFACE_DEFINED__ */


#ifndef __WebComponentWindowExternal_INTERFACE_DEFINED__
#define __WebComponentWindowExternal_INTERFACE_DEFINED__

/* interface WebComponentWindowExternal */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_WebComponentWindowExternal;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000CD101-0000-0000-C000-000000000046")
    WebComponentWindowExternal : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InterfaceVersion( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ApplicationName( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ApplicationVersion( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **RetValue) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CloseWindow( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WebComponent( 
            /* [retval][out] */ WebComponent **RetValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WebComponentWindowExternalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WebComponentWindowExternal * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WebComponentWindowExternal * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WebComponentWindowExternal * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WebComponentWindowExternal * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WebComponentWindowExternal * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WebComponentWindowExternal * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WebComponentWindowExternal * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InterfaceVersion )( 
            WebComponentWindowExternal * This,
            /* [retval][out] */ long *RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationName )( 
            WebComponentWindowExternal * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationVersion )( 
            WebComponentWindowExternal * This,
            /* [retval][out] */ long *RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            WebComponentWindowExternal * This,
            /* [retval][out] */ IDispatch **RetValue);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CloseWindow )( 
            WebComponentWindowExternal * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WebComponent )( 
            WebComponentWindowExternal * This,
            /* [retval][out] */ WebComponent **RetValue);
        
        END_INTERFACE
    } WebComponentWindowExternalVtbl;

    interface WebComponentWindowExternal
    {
        CONST_VTBL struct WebComponentWindowExternalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WebComponentWindowExternal_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WebComponentWindowExternal_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WebComponentWindowExternal_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WebComponentWindowExternal_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WebComponentWindowExternal_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WebComponentWindowExternal_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WebComponentWindowExternal_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define WebComponentWindowExternal_get_InterfaceVersion(This,RetValue)	\
    ( (This)->lpVtbl -> get_InterfaceVersion(This,RetValue) ) 

#define WebComponentWindowExternal_get_ApplicationName(This,RetValue)	\
    ( (This)->lpVtbl -> get_ApplicationName(This,RetValue) ) 

#define WebComponentWindowExternal_get_ApplicationVersion(This,RetValue)	\
    ( (This)->lpVtbl -> get_ApplicationVersion(This,RetValue) ) 

#define WebComponentWindowExternal_get_Application(This,RetValue)	\
    ( (This)->lpVtbl -> get_Application(This,RetValue) ) 

#define WebComponentWindowExternal_CloseWindow(This)	\
    ( (This)->lpVtbl -> CloseWindow(This) ) 

#define WebComponentWindowExternal_get_WebComponent(This,RetValue)	\
    ( (This)->lpVtbl -> get_WebComponent(This,RetValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __WebComponentWindowExternal_INTERFACE_DEFINED__ */


#ifndef __WebComponentFormat_INTERFACE_DEFINED__
#define __WebComponentFormat_INTERFACE_DEFINED__

/* interface WebComponentFormat */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_WebComponentFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000CD102-0000-0000-C000-000000000046")
    WebComponentFormat : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_URL( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTML( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HTML( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ long RetValue) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PreviewGraphic( 
            /* [retval][out] */ BSTR *retval) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PreviewGraphic( 
            /* [in] */ BSTR retval) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE LaunchPropertiesWindow( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WebComponentFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WebComponentFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WebComponentFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WebComponentFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WebComponentFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WebComponentFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WebComponentFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WebComponentFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            WebComponentFormat * This,
            /* [retval][out] */ IDispatch **RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            WebComponentFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_URL )( 
            WebComponentFormat * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_URL )( 
            WebComponentFormat * This,
            /* [in] */ BSTR RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTML )( 
            WebComponentFormat * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HTML )( 
            WebComponentFormat * This,
            /* [in] */ BSTR RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            WebComponentFormat * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            WebComponentFormat * This,
            /* [in] */ BSTR RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            WebComponentFormat * This,
            /* [retval][out] */ long *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            WebComponentFormat * This,
            /* [in] */ long RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            WebComponentFormat * This,
            /* [retval][out] */ long *RetValue);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            WebComponentFormat * This,
            /* [in] */ long RetValue);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewGraphic )( 
            WebComponentFormat * This,
            /* [retval][out] */ BSTR *retval);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewGraphic )( 
            WebComponentFormat * This,
            /* [in] */ BSTR retval);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LaunchPropertiesWindow )( 
            WebComponentFormat * This);
        
        END_INTERFACE
    } WebComponentFormatVtbl;

    interface WebComponentFormat
    {
        CONST_VTBL struct WebComponentFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WebComponentFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WebComponentFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WebComponentFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WebComponentFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WebComponentFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WebComponentFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WebComponentFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define WebComponentFormat_get_Application(This,RetValue)	\
    ( (This)->lpVtbl -> get_Application(This,RetValue) ) 

#define WebComponentFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define WebComponentFormat_get_URL(This,RetValue)	\
    ( (This)->lpVtbl -> get_URL(This,RetValue) ) 

#define WebComponentFormat_put_URL(This,RetValue)	\
    ( (This)->lpVtbl -> put_URL(This,RetValue) ) 

#define WebComponentFormat_get_HTML(This,RetValue)	\
    ( (This)->lpVtbl -> get_HTML(This,RetValue) ) 

#define WebComponentFormat_put_HTML(This,RetValue)	\
    ( (This)->lpVtbl -> put_HTML(This,RetValue) ) 

#define WebComponentFormat_get_Name(This,RetValue)	\
    ( (This)->lpVtbl -> get_Name(This,RetValue) ) 

#define WebComponentFormat_put_Name(This,RetValue)	\
    ( (This)->lpVtbl -> put_Name(This,RetValue) ) 

#define WebComponentFormat_get_Width(This,RetValue)	\
    ( (This)->lpVtbl -> get_Width(This,RetValue) ) 

#define WebComponentFormat_put_Width(This,RetValue)	\
    ( (This)->lpVtbl -> put_Width(This,RetValue) ) 

#define WebComponentFormat_get_Height(This,RetValue)	\
    ( (This)->lpVtbl -> get_Height(This,RetValue) ) 

#define WebComponentFormat_put_Height(This,RetValue)	\
    ( (This)->lpVtbl -> put_Height(This,RetValue) ) 

#define WebComponentFormat_get_PreviewGraphic(This,retval)	\
    ( (This)->lpVtbl -> get_PreviewGraphic(This,retval) ) 

#define WebComponentFormat_put_PreviewGraphic(This,retval)	\
    ( (This)->lpVtbl -> put_PreviewGraphic(This,retval) ) 

#define WebComponentFormat_LaunchPropertiesWindow(This)	\
    ( (This)->lpVtbl -> LaunchPropertiesWindow(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __WebComponentFormat_INTERFACE_DEFINED__ */


#ifndef __ILicWizExternal_INTERFACE_DEFINED__
#define __ILicWizExternal_INTERFACE_DEFINED__

/* interface ILicWizExternal */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_ILicWizExternal;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4CAC6328-B9B0-11D3-8D59-0050048384E3")
    ILicWizExternal : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PrintHtmlDocument( 
            /* [in] */ IUnknown *punkHtmlDoc) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE InvokeDateTimeApplet( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FormatDate( 
            /* [in] */ DATE date,
            /* [defaultvalue][optional][in] */ BSTR pFormat,
            /* [retval][out] */ BSTR *pDateString) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShowHelp( 
            /* [optional][in] */ VARIANT *pvarId) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Terminate( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DisableVORWReminder( 
            /* [in] */ long BPC) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SaveReceipt( 
            /* [in] */ BSTR bstrReceipt,
            /* [retval][out] */ BSTR *pbstrPath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE OpenInDefaultBrowser( 
            /* [in] */ BSTR bstrUrl) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MsoAlert( 
            /* [in] */ BSTR bstrText,
            /* [in] */ BSTR bstrButtons,
            /* [in] */ BSTR bstrIcon,
            /* [retval][out] */ long *plRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DepositPidKey( 
            /* [in] */ BSTR bstrKey,
            /* [in] */ int fMORW,
            /* [retval][out] */ long *plRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE WriteLog( 
            /* [in] */ BSTR bstrMessage) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ResignDpc( 
            /* [in] */ BSTR bstrProductCode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ResetPID( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetDialogSize( 
            /* [in] */ long dx,
            /* [in] */ long dy) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE VerifyClock( 
            /* [in] */ long lMode,
            /* [retval][out] */ long *plRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SortSelectOptions( 
            /* [in] */ IDispatch *pdispSelect) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE InternetDisconnect( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetConnectedState( 
            /* [retval][out] */ int *pfConnected) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Context( 
            /* [retval][out] */ long *plwctx) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Validator( 
            /* [retval][out] */ IDispatch **ppdispValidator) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LicAgent( 
            /* [retval][out] */ IDispatch **ppdispLicAgent) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CountryInfo( 
            /* [retval][out] */ BSTR *pbstrUrl) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_WizardVisible( 
            /* [in] */ int rhs) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_WizardTitle( 
            /* [in] */ BSTR rhs) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AnimationEnabled( 
            /* [retval][out] */ int *fEnabled) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_CurrentHelpId( 
            /* [in] */ long rhs) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OfficeOnTheWebUrl( 
            /* [retval][out] */ BSTR *bstrUrl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ILicWizExternalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicWizExternal * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicWizExternal * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicWizExternal * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicWizExternal * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicWizExternal * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicWizExternal * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicWizExternal * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrintHtmlDocument )( 
            ILicWizExternal * This,
            /* [in] */ IUnknown *punkHtmlDoc);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *InvokeDateTimeApplet )( 
            ILicWizExternal * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FormatDate )( 
            ILicWizExternal * This,
            /* [in] */ DATE date,
            /* [defaultvalue][optional][in] */ BSTR pFormat,
            /* [retval][out] */ BSTR *pDateString);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ShowHelp )( 
            ILicWizExternal * This,
            /* [optional][in] */ VARIANT *pvarId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Terminate )( 
            ILicWizExternal * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableVORWReminder )( 
            ILicWizExternal * This,
            /* [in] */ long BPC);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SaveReceipt )( 
            ILicWizExternal * This,
            /* [in] */ BSTR bstrReceipt,
            /* [retval][out] */ BSTR *pbstrPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *OpenInDefaultBrowser )( 
            ILicWizExternal * This,
            /* [in] */ BSTR bstrUrl);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *MsoAlert )( 
            ILicWizExternal * This,
            /* [in] */ BSTR bstrText,
            /* [in] */ BSTR bstrButtons,
            /* [in] */ BSTR bstrIcon,
            /* [retval][out] */ long *plRet);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DepositPidKey )( 
            ILicWizExternal * This,
            /* [in] */ BSTR bstrKey,
            /* [in] */ int fMORW,
            /* [retval][out] */ long *plRet);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *WriteLog )( 
            ILicWizExternal * This,
            /* [in] */ BSTR bstrMessage);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResignDpc )( 
            ILicWizExternal * This,
            /* [in] */ BSTR bstrProductCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetPID )( 
            ILicWizExternal * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetDialogSize )( 
            ILicWizExternal * This,
            /* [in] */ long dx,
            /* [in] */ long dy);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *VerifyClock )( 
            ILicWizExternal * This,
            /* [in] */ long lMode,
            /* [retval][out] */ long *plRet);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SortSelectOptions )( 
            ILicWizExternal * This,
            /* [in] */ IDispatch *pdispSelect);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *InternetDisconnect )( 
            ILicWizExternal * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConnectedState )( 
            ILicWizExternal * This,
            /* [retval][out] */ int *pfConnected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Context )( 
            ILicWizExternal * This,
            /* [retval][out] */ long *plwctx);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Validator )( 
            ILicWizExternal * This,
            /* [retval][out] */ IDispatch **ppdispValidator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LicAgent )( 
            ILicWizExternal * This,
            /* [retval][out] */ IDispatch **ppdispLicAgent);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CountryInfo )( 
            ILicWizExternal * This,
            /* [retval][out] */ BSTR *pbstrUrl);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WizardVisible )( 
            ILicWizExternal * This,
            /* [in] */ int rhs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WizardTitle )( 
            ILicWizExternal * This,
            /* [in] */ BSTR rhs);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AnimationEnabled )( 
            ILicWizExternal * This,
            /* [retval][out] */ int *fEnabled);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentHelpId )( 
            ILicWizExternal * This,
            /* [in] */ long rhs);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfficeOnTheWebUrl )( 
            ILicWizExternal * This,
            /* [retval][out] */ BSTR *bstrUrl);
        
        END_INTERFACE
    } ILicWizExternalVtbl;

    interface ILicWizExternal
    {
        CONST_VTBL struct ILicWizExternalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicWizExternal_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicWizExternal_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicWizExternal_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicWizExternal_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicWizExternal_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicWizExternal_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicWizExternal_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicWizExternal_PrintHtmlDocument(This,punkHtmlDoc)	\
    ( (This)->lpVtbl -> PrintHtmlDocument(This,punkHtmlDoc) ) 

#define ILicWizExternal_InvokeDateTimeApplet(This)	\
    ( (This)->lpVtbl -> InvokeDateTimeApplet(This) ) 

#define ILicWizExternal_FormatDate(This,date,pFormat,pDateString)	\
    ( (This)->lpVtbl -> FormatDate(This,date,pFormat,pDateString) ) 

#define ILicWizExternal_ShowHelp(This,pvarId)	\
    ( (This)->lpVtbl -> ShowHelp(This,pvarId) ) 

#define ILicWizExternal_Terminate(This)	\
    ( (This)->lpVtbl -> Terminate(This) ) 

#define ILicWizExternal_DisableVORWReminder(This,BPC)	\
    ( (This)->lpVtbl -> DisableVORWReminder(This,BPC) ) 

#define ILicWizExternal_SaveReceipt(This,bstrReceipt,pbstrPath)	\
    ( (This)->lpVtbl -> SaveReceipt(This,bstrReceipt,pbstrPath) ) 

#define ILicWizExternal_OpenInDefaultBrowser(This,bstrUrl)	\
    ( (This)->lpVtbl -> OpenInDefaultBrowser(This,bstrUrl) ) 

#define ILicWizExternal_MsoAlert(This,bstrText,bstrButtons,bstrIcon,plRet)	\
    ( (This)->lpVtbl -> MsoAlert(This,bstrText,bstrButtons,bstrIcon,plRet) ) 

#define ILicWizExternal_DepositPidKey(This,bstrKey,fMORW,plRet)	\
    ( (This)->lpVtbl -> DepositPidKey(This,bstrKey,fMORW,plRet) ) 

#define ILicWizExternal_WriteLog(This,bstrMessage)	\
    ( (This)->lpVtbl -> WriteLog(This,bstrMessage) ) 

#define ILicWizExternal_ResignDpc(This,bstrProductCode)	\
    ( (This)->lpVtbl -> ResignDpc(This,bstrProductCode) ) 

#define ILicWizExternal_ResetPID(This)	\
    ( (This)->lpVtbl -> ResetPID(This) ) 

#define ILicWizExternal_SetDialogSize(This,dx,dy)	\
    ( (This)->lpVtbl -> SetDialogSize(This,dx,dy) ) 

#define ILicWizExternal_VerifyClock(This,lMode,plRet)	\
    ( (This)->lpVtbl -> VerifyClock(This,lMode,plRet) ) 

#define ILicWizExternal_SortSelectOptions(This,pdispSelect)	\
    ( (This)->lpVtbl -> SortSelectOptions(This,pdispSelect) ) 

#define ILicWizExternal_InternetDisconnect(This)	\
    ( (This)->lpVtbl -> InternetDisconnect(This) ) 

#define ILicWizExternal_GetConnectedState(This,pfConnected)	\
    ( (This)->lpVtbl -> GetConnectedState(This,pfConnected) ) 

#define ILicWizExternal_get_Context(This,plwctx)	\
    ( (This)->lpVtbl -> get_Context(This,plwctx) ) 

#define ILicWizExternal_get_Validator(This,ppdispValidator)	\
    ( (This)->lpVtbl -> get_Validator(This,ppdispValidator) ) 

#define ILicWizExternal_get_LicAgent(This,ppdispLicAgent)	\
    ( (This)->lpVtbl -> get_LicAgent(This,ppdispLicAgent) ) 

#define ILicWizExternal_get_CountryInfo(This,pbstrUrl)	\
    ( (This)->lpVtbl -> get_CountryInfo(This,pbstrUrl) ) 

#define ILicWizExternal_put_WizardVisible(This,rhs)	\
    ( (This)->lpVtbl -> put_WizardVisible(This,rhs) ) 

#define ILicWizExternal_put_WizardTitle(This,rhs)	\
    ( (This)->lpVtbl -> put_WizardTitle(This,rhs) ) 

#define ILicWizExternal_get_AnimationEnabled(This,fEnabled)	\
    ( (This)->lpVtbl -> get_AnimationEnabled(This,fEnabled) ) 

#define ILicWizExternal_put_CurrentHelpId(This,rhs)	\
    ( (This)->lpVtbl -> put_CurrentHelpId(This,rhs) ) 

#define ILicWizExternal_get_OfficeOnTheWebUrl(This,bstrUrl)	\
    ( (This)->lpVtbl -> get_OfficeOnTheWebUrl(This,bstrUrl) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicWizExternal_INTERFACE_DEFINED__ */


#ifndef __ILicValidator_INTERFACE_DEFINED__
#define __ILicValidator_INTERFACE_DEFINED__

/* interface ILicValidator */
/* [object][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID_ILicValidator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("919AA22C-B9AD-11D3-8D59-0050048384E3")
    ILicValidator : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Products( 
            /* [retval][out] */ VARIANT *pVariant) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ int *piSel) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ int piSel) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ILicValidatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicValidator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicValidator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicValidator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicValidator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicValidator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicValidator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicValidator * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Products )( 
            ILicValidator * This,
            /* [retval][out] */ VARIANT *pVariant);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            ILicValidator * This,
            /* [retval][out] */ int *piSel);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            ILicValidator * This,
            /* [in] */ int piSel);
        
        END_INTERFACE
    } ILicValidatorVtbl;

    interface ILicValidator
    {
        CONST_VTBL struct ILicValidatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicValidator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicValidator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicValidator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicValidator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicValidator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicValidator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicValidator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicValidator_get_Products(This,pVariant)	\
    ( (This)->lpVtbl -> get_Products(This,pVariant) ) 

#define ILicValidator_get_Selection(This,piSel)	\
    ( (This)->lpVtbl -> get_Selection(This,piSel) ) 

#define ILicValidator_put_Selection(This,piSel)	\
    ( (This)->lpVtbl -> put_Selection(This,piSel) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicValidator_INTERFACE_DEFINED__ */


#ifndef __ILicAgent_INTERFACE_DEFINED__
#define __ILicAgent_INTERFACE_DEFINED__

/* interface ILicAgent */
/* [object][oleautomation][nonextensible][dual][hidden][helpstring][uuid] */ 


EXTERN_C const IID IID_ILicAgent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00194002-D9C3-11D3-8D59-0050048384E3")
    ILicAgent : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ unsigned long dwBPC,
            /* [in] */ unsigned long dwMode,
            /* [in] */ BSTR bstrLicSource,
            /* [retval][out] */ unsigned long *pdwRetCode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetFirstName( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetFirstName( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetLastName( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetLastName( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetOrgName( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetOrgName( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetEmail( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetEmail( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPhone( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetPhone( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAddress1( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetAddress1( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCity( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCity( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetState( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetState( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCountryCode( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCountryCode( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCountryDesc( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCountryDesc( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetZip( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetZip( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetIsoLanguage( 
            /* [retval][out] */ unsigned long *pdwVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetIsoLanguage( 
            /* [in] */ unsigned long dwNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetMSUpdate( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetMSUpdate( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetMSOffer( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetMSOffer( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetOtherOffer( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetOtherOffer( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAddress2( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetAddress2( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CheckSystemClock( 
            /* [retval][out] */ unsigned long *pdwRetCode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetExistingExpiryDate( 
            /* [retval][out] */ DATE *pDateVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetNewExpiryDate( 
            /* [retval][out] */ DATE *pDateVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBillingFirstName( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBillingFirstName( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBillingLastName( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBillingLastName( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBillingPhone( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBillingPhone( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBillingAddress1( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBillingAddress1( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBillingAddress2( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBillingAddress2( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBillingCity( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBillingCity( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBillingState( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBillingState( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBillingCountryCode( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBillingCountryCode( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBillingZip( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetBillingZip( 
            /* [in] */ BSTR bstrNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveBillingInfo( 
            /* [in] */ int bSave,
            /* [retval][out] */ unsigned long *pdwRetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsCCRenewalCountry( 
            /* [in] */ BSTR bstrCountryCode,
            /* [retval][out] */ int *pbRetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetVATLabel( 
            /* [in] */ BSTR bstrCountryCode,
            /* [retval][out] */ BSTR *pbstrVATLabel) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCCRenewalExpiryDate( 
            /* [retval][out] */ DATE *pDateVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetVATNumber( 
            /* [in] */ BSTR bstrVATNumber) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCreditCardType( 
            /* [in] */ BSTR bstrCCCode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCreditCardNumber( 
            /* [in] */ BSTR bstrCCNumber) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCreditCardExpiryYear( 
            /* [in] */ unsigned long dwCCYear) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCreditCardExpiryMonth( 
            /* [in] */ unsigned long dwCCMonth) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCreditCardCount( 
            /* [retval][out] */ unsigned long *pdwCount) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCreditCardCode( 
            /* [in] */ unsigned long dwIndex,
            /* [retval][out] */ BSTR *pbstrCode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCreditCardName( 
            /* [in] */ unsigned long dwIndex,
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetVATNumber( 
            /* [retval][out] */ BSTR *pbstrVATNumber) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCreditCardType( 
            /* [retval][out] */ BSTR *pbstrCCCode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCreditCardNumber( 
            /* [retval][out] */ BSTR *pbstrCCNumber) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCreditCardExpiryYear( 
            /* [retval][out] */ unsigned long *pdwCCYear) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCreditCardExpiryMonth( 
            /* [retval][out] */ unsigned long *pdwCCMonth) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetDisconnectOption( 
            /* [retval][out] */ int *pbRetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetDisconnectOption( 
            /* [in] */ int bNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AsyncProcessHandshakeRequest( 
            /* [in] */ int bReviseCustInfo) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AsyncProcessNewLicenseRequest( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AsyncProcessReissueLicenseRequest( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AsyncProcessRetailRenewalLicenseRequest( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AsyncProcessReviseCustInfoRequest( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AsyncProcessCCRenewalPriceRequest( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AsyncProcessCCRenewalLicenseRequest( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAsyncProcessReturnCode( 
            /* [retval][out] */ unsigned long *pdwRetCode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsUpgradeAvailable( 
            /* [retval][out] */ int *pbUpgradeAvailable) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE WantUpgrade( 
            /* [in] */ int bWantUpgrade) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AsyncProcessDroppedLicenseRequest( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GenerateInstallationId( 
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DepositConfirmationId( 
            /* [in] */ BSTR bstrVal,
            /* [retval][out] */ unsigned long *pdwRetCode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE VerifyCheckDigits( 
            /* [in] */ BSTR bstrCIDIID,
            /* [retval][out] */ int *pbValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCurrentExpiryDate( 
            /* [retval][out] */ DATE *pDateVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CancelAsyncProcessRequest( 
            /* [in] */ int bIsLicenseRequest) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCurrencyDescription( 
            /* [in] */ unsigned long dwCurrencyIndex,
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPriceItemCount( 
            /* [retval][out] */ unsigned long *pdwCount) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPriceItemLabel( 
            /* [in] */ unsigned long dwIndex,
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPriceItemValue( 
            /* [in] */ unsigned long dwCurrencyIndex,
            /* [in] */ unsigned long dwIndex,
            /* [retval][out] */ BSTR *pbstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetInvoiceText( 
            /* [retval][out] */ BSTR *pNewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBackendErrorMsg( 
            /* [retval][out] */ BSTR *pbstrErrMsg) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCurrencyOption( 
            /* [retval][out] */ unsigned long *dwCurrencyOption) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCurrencyOption( 
            /* [in] */ unsigned long dwCurrencyOption) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetEndOfLifeHtmlText( 
            /* [retval][out] */ BSTR *pbstrHtmlText) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DisplaySSLCert( 
            /* [retval][out] */ unsigned long *dwRetCode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ILicAgentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicAgent * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicAgent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicAgent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicAgent * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicAgent * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicAgent * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicAgent * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwBPC,
            /* [in] */ unsigned long dwMode,
            /* [in] */ BSTR bstrLicSource,
            /* [retval][out] */ unsigned long *pdwRetCode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetFirstName )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetFirstName )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetLastName )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetLastName )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetOrgName )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetOrgName )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetEmail )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetEmail )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPhone )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetPhone )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAddress1 )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetAddress1 )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCity )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCity )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetState )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCountryCode )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCountryCode )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCountryDesc )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCountryDesc )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetZip )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetZip )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetIsoLanguage )( 
            ILicAgent * This,
            /* [retval][out] */ unsigned long *pdwVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetIsoLanguage )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetMSUpdate )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetMSUpdate )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetMSOffer )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetMSOffer )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetOtherOffer )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetOtherOffer )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAddress2 )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetAddress2 )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSystemClock )( 
            ILicAgent * This,
            /* [retval][out] */ unsigned long *pdwRetCode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExistingExpiryDate )( 
            ILicAgent * This,
            /* [retval][out] */ DATE *pDateVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetNewExpiryDate )( 
            ILicAgent * This,
            /* [retval][out] */ DATE *pDateVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBillingFirstName )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBillingFirstName )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBillingLastName )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBillingLastName )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBillingPhone )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBillingPhone )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBillingAddress1 )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBillingAddress1 )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBillingAddress2 )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBillingAddress2 )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBillingCity )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBillingCity )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBillingState )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBillingState )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBillingCountryCode )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBillingCountryCode )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBillingZip )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetBillingZip )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveBillingInfo )( 
            ILicAgent * This,
            /* [in] */ int bSave,
            /* [retval][out] */ unsigned long *pdwRetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsCCRenewalCountry )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrCountryCode,
            /* [retval][out] */ int *pbRetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetVATLabel )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrCountryCode,
            /* [retval][out] */ BSTR *pbstrVATLabel);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCCRenewalExpiryDate )( 
            ILicAgent * This,
            /* [retval][out] */ DATE *pDateVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVATNumber )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrVATNumber);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCreditCardType )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrCCCode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCreditCardNumber )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrCCNumber);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCreditCardExpiryYear )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwCCYear);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCreditCardExpiryMonth )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwCCMonth);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCreditCardCount )( 
            ILicAgent * This,
            /* [retval][out] */ unsigned long *pdwCount);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCreditCardCode )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwIndex,
            /* [retval][out] */ BSTR *pbstrCode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCreditCardName )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwIndex,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetVATNumber )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVATNumber);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCreditCardType )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrCCCode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCreditCardNumber )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrCCNumber);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCreditCardExpiryYear )( 
            ILicAgent * This,
            /* [retval][out] */ unsigned long *pdwCCYear);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCreditCardExpiryMonth )( 
            ILicAgent * This,
            /* [retval][out] */ unsigned long *pdwCCMonth);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetDisconnectOption )( 
            ILicAgent * This,
            /* [retval][out] */ int *pbRetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetDisconnectOption )( 
            ILicAgent * This,
            /* [in] */ int bNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessHandshakeRequest )( 
            ILicAgent * This,
            /* [in] */ int bReviseCustInfo);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessNewLicenseRequest )( 
            ILicAgent * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessReissueLicenseRequest )( 
            ILicAgent * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessRetailRenewalLicenseRequest )( 
            ILicAgent * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessReviseCustInfoRequest )( 
            ILicAgent * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessCCRenewalPriceRequest )( 
            ILicAgent * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessCCRenewalLicenseRequest )( 
            ILicAgent * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAsyncProcessReturnCode )( 
            ILicAgent * This,
            /* [retval][out] */ unsigned long *pdwRetCode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsUpgradeAvailable )( 
            ILicAgent * This,
            /* [retval][out] */ int *pbUpgradeAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *WantUpgrade )( 
            ILicAgent * This,
            /* [in] */ int bWantUpgrade);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessDroppedLicenseRequest )( 
            ILicAgent * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GenerateInstallationId )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DepositConfirmationId )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrVal,
            /* [retval][out] */ unsigned long *pdwRetCode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *VerifyCheckDigits )( 
            ILicAgent * This,
            /* [in] */ BSTR bstrCIDIID,
            /* [retval][out] */ int *pbValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentExpiryDate )( 
            ILicAgent * This,
            /* [retval][out] */ DATE *pDateVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CancelAsyncProcessRequest )( 
            ILicAgent * This,
            /* [in] */ int bIsLicenseRequest);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrencyDescription )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwCurrencyIndex,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPriceItemCount )( 
            ILicAgent * This,
            /* [retval][out] */ unsigned long *pdwCount);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPriceItemLabel )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwIndex,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPriceItemValue )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwCurrencyIndex,
            /* [in] */ unsigned long dwIndex,
            /* [retval][out] */ BSTR *pbstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetInvoiceText )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pNewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBackendErrorMsg )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrErrMsg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrencyOption )( 
            ILicAgent * This,
            /* [retval][out] */ unsigned long *dwCurrencyOption);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCurrencyOption )( 
            ILicAgent * This,
            /* [in] */ unsigned long dwCurrencyOption);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetEndOfLifeHtmlText )( 
            ILicAgent * This,
            /* [retval][out] */ BSTR *pbstrHtmlText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DisplaySSLCert )( 
            ILicAgent * This,
            /* [retval][out] */ unsigned long *dwRetCode);
        
        END_INTERFACE
    } ILicAgentVtbl;

    interface ILicAgent
    {
        CONST_VTBL struct ILicAgentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicAgent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicAgent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicAgent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicAgent_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicAgent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicAgent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicAgent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicAgent_Initialize(This,dwBPC,dwMode,bstrLicSource,pdwRetCode)	\
    ( (This)->lpVtbl -> Initialize(This,dwBPC,dwMode,bstrLicSource,pdwRetCode) ) 

#define ILicAgent_GetFirstName(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetFirstName(This,pbstrVal) ) 

#define ILicAgent_SetFirstName(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetFirstName(This,bstrNewVal) ) 

#define ILicAgent_GetLastName(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetLastName(This,pbstrVal) ) 

#define ILicAgent_SetLastName(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetLastName(This,bstrNewVal) ) 

#define ILicAgent_GetOrgName(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetOrgName(This,pbstrVal) ) 

#define ILicAgent_SetOrgName(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetOrgName(This,bstrNewVal) ) 

#define ILicAgent_GetEmail(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetEmail(This,pbstrVal) ) 

#define ILicAgent_SetEmail(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetEmail(This,bstrNewVal) ) 

#define ILicAgent_GetPhone(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetPhone(This,pbstrVal) ) 

#define ILicAgent_SetPhone(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetPhone(This,bstrNewVal) ) 

#define ILicAgent_GetAddress1(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetAddress1(This,pbstrVal) ) 

#define ILicAgent_SetAddress1(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetAddress1(This,bstrNewVal) ) 

#define ILicAgent_GetCity(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetCity(This,pbstrVal) ) 

#define ILicAgent_SetCity(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetCity(This,bstrNewVal) ) 

#define ILicAgent_GetState(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetState(This,pbstrVal) ) 

#define ILicAgent_SetState(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetState(This,bstrNewVal) ) 

#define ILicAgent_GetCountryCode(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetCountryCode(This,pbstrVal) ) 

#define ILicAgent_SetCountryCode(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetCountryCode(This,bstrNewVal) ) 

#define ILicAgent_GetCountryDesc(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetCountryDesc(This,pbstrVal) ) 

#define ILicAgent_SetCountryDesc(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetCountryDesc(This,bstrNewVal) ) 

#define ILicAgent_GetZip(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetZip(This,pbstrVal) ) 

#define ILicAgent_SetZip(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetZip(This,bstrNewVal) ) 

#define ILicAgent_GetIsoLanguage(This,pdwVal)	\
    ( (This)->lpVtbl -> GetIsoLanguage(This,pdwVal) ) 

#define ILicAgent_SetIsoLanguage(This,dwNewVal)	\
    ( (This)->lpVtbl -> SetIsoLanguage(This,dwNewVal) ) 

#define ILicAgent_GetMSUpdate(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetMSUpdate(This,pbstrVal) ) 

#define ILicAgent_SetMSUpdate(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetMSUpdate(This,bstrNewVal) ) 

#define ILicAgent_GetMSOffer(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetMSOffer(This,pbstrVal) ) 

#define ILicAgent_SetMSOffer(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetMSOffer(This,bstrNewVal) ) 

#define ILicAgent_GetOtherOffer(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetOtherOffer(This,pbstrVal) ) 

#define ILicAgent_SetOtherOffer(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetOtherOffer(This,bstrNewVal) ) 

#define ILicAgent_GetAddress2(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetAddress2(This,pbstrVal) ) 

#define ILicAgent_SetAddress2(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetAddress2(This,bstrNewVal) ) 

#define ILicAgent_CheckSystemClock(This,pdwRetCode)	\
    ( (This)->lpVtbl -> CheckSystemClock(This,pdwRetCode) ) 

#define ILicAgent_GetExistingExpiryDate(This,pDateVal)	\
    ( (This)->lpVtbl -> GetExistingExpiryDate(This,pDateVal) ) 

#define ILicAgent_GetNewExpiryDate(This,pDateVal)	\
    ( (This)->lpVtbl -> GetNewExpiryDate(This,pDateVal) ) 

#define ILicAgent_GetBillingFirstName(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetBillingFirstName(This,pbstrVal) ) 

#define ILicAgent_SetBillingFirstName(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetBillingFirstName(This,bstrNewVal) ) 

#define ILicAgent_GetBillingLastName(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetBillingLastName(This,pbstrVal) ) 

#define ILicAgent_SetBillingLastName(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetBillingLastName(This,bstrNewVal) ) 

#define ILicAgent_GetBillingPhone(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetBillingPhone(This,pbstrVal) ) 

#define ILicAgent_SetBillingPhone(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetBillingPhone(This,bstrNewVal) ) 

#define ILicAgent_GetBillingAddress1(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetBillingAddress1(This,pbstrVal) ) 

#define ILicAgent_SetBillingAddress1(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetBillingAddress1(This,bstrNewVal) ) 

#define ILicAgent_GetBillingAddress2(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetBillingAddress2(This,pbstrVal) ) 

#define ILicAgent_SetBillingAddress2(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetBillingAddress2(This,bstrNewVal) ) 

#define ILicAgent_GetBillingCity(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetBillingCity(This,pbstrVal) ) 

#define ILicAgent_SetBillingCity(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetBillingCity(This,bstrNewVal) ) 

#define ILicAgent_GetBillingState(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetBillingState(This,pbstrVal) ) 

#define ILicAgent_SetBillingState(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetBillingState(This,bstrNewVal) ) 

#define ILicAgent_GetBillingCountryCode(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetBillingCountryCode(This,pbstrVal) ) 

#define ILicAgent_SetBillingCountryCode(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetBillingCountryCode(This,bstrNewVal) ) 

#define ILicAgent_GetBillingZip(This,pbstrVal)	\
    ( (This)->lpVtbl -> GetBillingZip(This,pbstrVal) ) 

#define ILicAgent_SetBillingZip(This,bstrNewVal)	\
    ( (This)->lpVtbl -> SetBillingZip(This,bstrNewVal) ) 

#define ILicAgent_SaveBillingInfo(This,bSave,pdwRetVal)	\
    ( (This)->lpVtbl -> SaveBillingInfo(This,bSave,pdwRetVal) ) 

#define ILicAgent_IsCCRenewalCountry(This,bstrCountryCode,pbRetVal)	\
    ( (This)->lpVtbl -> IsCCRenewalCountry(This,bstrCountryCode,pbRetVal) ) 

#define ILicAgent_GetVATLabel(This,bstrCountryCode,pbstrVATLabel)	\
    ( (This)->lpVtbl -> GetVATLabel(This,bstrCountryCode,pbstrVATLabel) ) 

#define ILicAgent_GetCCRenewalExpiryDate(This,pDateVal)	\
    ( (This)->lpVtbl -> GetCCRenewalExpiryDate(This,pDateVal) ) 

#define ILicAgent_SetVATNumber(This,bstrVATNumber)	\
    ( (This)->lpVtbl -> SetVATNumber(This,bstrVATNumber) ) 

#define ILicAgent_SetCreditCardType(This,bstrCCCode)	\
    ( (This)->lpVtbl -> SetCreditCardType(This,bstrCCCode) ) 

#define ILicAgent_SetCreditCardNumber(This,bstrCCNumber)	\
    ( (This)->lpVtbl -> SetCreditCardNumber(This,bstrCCNumber) ) 

#define ILicAgent_SetCreditCardExpiryYear(This,dwCCYear)	\
    ( (This)->lpVtbl -> SetCreditCardExpiryYear(This,dwCCYear) ) 

#define ILicAgent_SetCreditCardExpiryMonth(This,dwCCMonth)	\
    ( (This)->lpVtbl -> SetCreditCardExpiryMonth(This,dwCCMonth) ) 

#define ILicAgent_GetCreditCardCount(This,pdwCount)	\
    ( (This)->lpVtbl -> GetCreditCardCount(This,pdwCount) ) 

#define ILicAgent_GetCreditCardCode(This,dwIndex,pbstrCode)	\
    ( (This)->lpVtbl -> GetCreditCardCode(This,dwIndex,pbstrCode) ) 

#define ILicAgent_GetCreditCardName(This,dwIndex,pbstrName)	\
    ( (This)->lpVtbl -> GetCreditCardName(This,dwIndex,pbstrName) ) 

#define ILicAgent_GetVATNumber(This,pbstrVATNumber)	\
    ( (This)->lpVtbl -> GetVATNumber(This,pbstrVATNumber) ) 

#define ILicAgent_GetCreditCardType(This,pbstrCCCode)	\
    ( (This)->lpVtbl -> GetCreditCardType(This,pbstrCCCode) ) 

#define ILicAgent_GetCreditCardNumber(This,pbstrCCNumber)	\
    ( (This)->lpVtbl -> GetCreditCardNumber(This,pbstrCCNumber) ) 

#define ILicAgent_GetCreditCardExpiryYear(This,pdwCCYear)	\
    ( (This)->lpVtbl -> GetCreditCardExpiryYear(This,pdwCCYear) ) 

#define ILicAgent_GetCreditCardExpiryMonth(This,pdwCCMonth)	\
    ( (This)->lpVtbl -> GetCreditCardExpiryMonth(This,pdwCCMonth) ) 

#define ILicAgent_GetDisconnectOption(This,pbRetVal)	\
    ( (This)->lpVtbl -> GetDisconnectOption(This,pbRetVal) ) 

#define ILicAgent_SetDisconnectOption(This,bNewVal)	\
    ( (This)->lpVtbl -> SetDisconnectOption(This,bNewVal) ) 

#define ILicAgent_AsyncProcessHandshakeRequest(This,bReviseCustInfo)	\
    ( (This)->lpVtbl -> AsyncProcessHandshakeRequest(This,bReviseCustInfo) ) 

#define ILicAgent_AsyncProcessNewLicenseRequest(This)	\
    ( (This)->lpVtbl -> AsyncProcessNewLicenseRequest(This) ) 

#define ILicAgent_AsyncProcessReissueLicenseRequest(This)	\
    ( (This)->lpVtbl -> AsyncProcessReissueLicenseRequest(This) ) 

#define ILicAgent_AsyncProcessRetailRenewalLicenseRequest(This)	\
    ( (This)->lpVtbl -> AsyncProcessRetailRenewalLicenseRequest(This) ) 

#define ILicAgent_AsyncProcessReviseCustInfoRequest(This)	\
    ( (This)->lpVtbl -> AsyncProcessReviseCustInfoRequest(This) ) 

#define ILicAgent_AsyncProcessCCRenewalPriceRequest(This)	\
    ( (This)->lpVtbl -> AsyncProcessCCRenewalPriceRequest(This) ) 

#define ILicAgent_AsyncProcessCCRenewalLicenseRequest(This)	\
    ( (This)->lpVtbl -> AsyncProcessCCRenewalLicenseRequest(This) ) 

#define ILicAgent_GetAsyncProcessReturnCode(This,pdwRetCode)	\
    ( (This)->lpVtbl -> GetAsyncProcessReturnCode(This,pdwRetCode) ) 

#define ILicAgent_IsUpgradeAvailable(This,pbUpgradeAvailable)	\
    ( (This)->lpVtbl -> IsUpgradeAvailable(This,pbUpgradeAvailable) ) 

#define ILicAgent_WantUpgrade(This,bWantUpgrade)	\
    ( (This)->lpVtbl -> WantUpgrade(This,bWantUpgrade) ) 

#define ILicAgent_AsyncProcessDroppedLicenseRequest(This)	\
    ( (This)->lpVtbl -> AsyncProcessDroppedLicenseRequest(This) ) 

#define ILicAgent_GenerateInstallationId(This,pbstrVal)	\
    ( (This)->lpVtbl -> GenerateInstallationId(This,pbstrVal) ) 

#define ILicAgent_DepositConfirmationId(This,bstrVal,pdwRetCode)	\
    ( (This)->lpVtbl -> DepositConfirmationId(This,bstrVal,pdwRetCode) ) 

#define ILicAgent_VerifyCheckDigits(This,bstrCIDIID,pbValue)	\
    ( (This)->lpVtbl -> VerifyCheckDigits(This,bstrCIDIID,pbValue) ) 

#define ILicAgent_GetCurrentExpiryDate(This,pDateVal)	\
    ( (This)->lpVtbl -> GetCurrentExpiryDate(This,pDateVal) ) 

#define ILicAgent_CancelAsyncProcessRequest(This,bIsLicenseRequest)	\
    ( (This)->lpVtbl -> CancelAsyncProcessRequest(This,bIsLicenseRequest) ) 

#define ILicAgent_GetCurrencyDescription(This,dwCurrencyIndex,pbstrVal)	\
    ( (This)->lpVtbl -> GetCurrencyDescription(This,dwCurrencyIndex,pbstrVal) ) 

#define ILicAgent_GetPriceItemCount(This,pdwCount)	\
    ( (This)->lpVtbl -> GetPriceItemCount(This,pdwCount) ) 

#define ILicAgent_GetPriceItemLabel(This,dwIndex,pbstrVal)	\
    ( (This)->lpVtbl -> GetPriceItemLabel(This,dwIndex,pbstrVal) ) 

#define ILicAgent_GetPriceItemValue(This,dwCurrencyIndex,dwIndex,pbstrVal)	\
    ( (This)->lpVtbl -> GetPriceItemValue(This,dwCurrencyIndex,dwIndex,pbstrVal) ) 

#define ILicAgent_GetInvoiceText(This,pNewVal)	\
    ( (This)->lpVtbl -> GetInvoiceText(This,pNewVal) ) 

#define ILicAgent_GetBackendErrorMsg(This,pbstrErrMsg)	\
    ( (This)->lpVtbl -> GetBackendErrorMsg(This,pbstrErrMsg) ) 

#define ILicAgent_GetCurrencyOption(This,dwCurrencyOption)	\
    ( (This)->lpVtbl -> GetCurrencyOption(This,dwCurrencyOption) ) 

#define ILicAgent_SetCurrencyOption(This,dwCurrencyOption)	\
    ( (This)->lpVtbl -> SetCurrencyOption(This,dwCurrencyOption) ) 

#define ILicAgent_GetEndOfLifeHtmlText(This,pbstrHtmlText)	\
    ( (This)->lpVtbl -> GetEndOfLifeHtmlText(This,pbstrHtmlText) ) 

#define ILicAgent_DisplaySSLCert(This,dwRetCode)	\
    ( (This)->lpVtbl -> DisplaySSLCert(This,dwRetCode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicAgent_INTERFACE_DEFINED__ */


#ifndef __IMsoEServicesDialog_INTERFACE_DEFINED__
#define __IMsoEServicesDialog_INTERFACE_DEFINED__

/* interface IMsoEServicesDialog */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IMsoEServicesDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0372-0000-0000-C000-000000000046")
    IMsoEServicesDialog : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [defaultvalue][optional][in] */ VARIANT_BOOL ApplyWebComponentChanges = 0) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddTrustedDomain( 
            /* [in] */ BSTR Domain) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ApplicationName( 
            /* [retval][out] */ BSTR *retval) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppdisp) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_WebComponent( 
            /* [retval][out] */ IDispatch **ppdisp) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ClipArt( 
            /* [retval][out] */ IDispatch **ppdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsoEServicesDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMsoEServicesDialog * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMsoEServicesDialog * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMsoEServicesDialog * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMsoEServicesDialog * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMsoEServicesDialog * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMsoEServicesDialog * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMsoEServicesDialog * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMsoEServicesDialog * This,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL ApplyWebComponentChanges);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddTrustedDomain )( 
            IMsoEServicesDialog * This,
            /* [in] */ BSTR Domain);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationName )( 
            IMsoEServicesDialog * This,
            /* [retval][out] */ BSTR *retval);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IMsoEServicesDialog * This,
            /* [retval][out] */ IDispatch **ppdisp);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WebComponent )( 
            IMsoEServicesDialog * This,
            /* [retval][out] */ IDispatch **ppdisp);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ClipArt )( 
            IMsoEServicesDialog * This,
            /* [retval][out] */ IDispatch **ppdisp);
        
        END_INTERFACE
    } IMsoEServicesDialogVtbl;

    interface IMsoEServicesDialog
    {
        CONST_VTBL struct IMsoEServicesDialogVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsoEServicesDialog_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMsoEServicesDialog_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMsoEServicesDialog_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMsoEServicesDialog_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMsoEServicesDialog_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMsoEServicesDialog_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMsoEServicesDialog_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMsoEServicesDialog_Close(This,ApplyWebComponentChanges)	\
    ( (This)->lpVtbl -> Close(This,ApplyWebComponentChanges) ) 

#define IMsoEServicesDialog_AddTrustedDomain(This,Domain)	\
    ( (This)->lpVtbl -> AddTrustedDomain(This,Domain) ) 

#define IMsoEServicesDialog_get_ApplicationName(This,retval)	\
    ( (This)->lpVtbl -> get_ApplicationName(This,retval) ) 

#define IMsoEServicesDialog_get_Application(This,ppdisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppdisp) ) 

#define IMsoEServicesDialog_get_WebComponent(This,ppdisp)	\
    ( (This)->lpVtbl -> get_WebComponent(This,ppdisp) ) 

#define IMsoEServicesDialog_get_ClipArt(This,ppdisp)	\
    ( (This)->lpVtbl -> get_ClipArt(This,ppdisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMsoEServicesDialog_INTERFACE_DEFINED__ */


#ifndef __WebComponentProperties_INTERFACE_DEFINED__
#define __WebComponentProperties_INTERFACE_DEFINED__

/* interface WebComponentProperties */
/* [object][oleautomation][nonextensible][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_WebComponentProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0373-0000-0000-C000-000000000046")
    WebComponentProperties : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Shape( 
            /* [retval][out] */ IDispatch **RetValue) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_URL( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HTML( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HTML( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PreviewGraphic( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_PreviewGraphic( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PreviewHTML( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_PreviewHTML( 
            /* [in] */ BSTR RetValue) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long RetValue) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ long *RetValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ long RetValue) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Tag( 
            /* [retval][out] */ BSTR *RetValue) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Tag( 
            /* [in] */ BSTR RetValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WebComponentPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WebComponentProperties * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WebComponentProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WebComponentProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WebComponentProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WebComponentProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WebComponentProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WebComponentProperties * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Shape )( 
            WebComponentProperties * This,
            /* [retval][out] */ IDispatch **RetValue);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            WebComponentProperties * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            WebComponentProperties * This,
            /* [in] */ BSTR RetValue);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_URL )( 
            WebComponentProperties * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_URL )( 
            WebComponentProperties * This,
            /* [in] */ BSTR RetValue);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTML )( 
            WebComponentProperties * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HTML )( 
            WebComponentProperties * This,
            /* [in] */ BSTR RetValue);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewGraphic )( 
            WebComponentProperties * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewGraphic )( 
            WebComponentProperties * This,
            /* [in] */ BSTR RetValue);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewHTML )( 
            WebComponentProperties * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewHTML )( 
            WebComponentProperties * This,
            /* [in] */ BSTR RetValue);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            WebComponentProperties * This,
            /* [retval][out] */ long *RetValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            WebComponentProperties * This,
            /* [in] */ long RetValue);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            WebComponentProperties * This,
            /* [retval][out] */ long *RetValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            WebComponentProperties * This,
            /* [in] */ long RetValue);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            WebComponentProperties * This,
            /* [retval][out] */ BSTR *RetValue);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Tag )( 
            WebComponentProperties * This,
            /* [in] */ BSTR RetValue);
        
        END_INTERFACE
    } WebComponentPropertiesVtbl;

    interface WebComponentProperties
    {
        CONST_VTBL struct WebComponentPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WebComponentProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WebComponentProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WebComponentProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WebComponentProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WebComponentProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WebComponentProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WebComponentProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define WebComponentProperties_get_Shape(This,RetValue)	\
    ( (This)->lpVtbl -> get_Shape(This,RetValue) ) 

#define WebComponentProperties_get_Name(This,RetValue)	\
    ( (This)->lpVtbl -> get_Name(This,RetValue) ) 

#define WebComponentProperties_put_Name(This,RetValue)	\
    ( (This)->lpVtbl -> put_Name(This,RetValue) ) 

#define WebComponentProperties_get_URL(This,RetValue)	\
    ( (This)->lpVtbl -> get_URL(This,RetValue) ) 

#define WebComponentProperties_put_URL(This,RetValue)	\
    ( (This)->lpVtbl -> put_URL(This,RetValue) ) 

#define WebComponentProperties_get_HTML(This,RetValue)	\
    ( (This)->lpVtbl -> get_HTML(This,RetValue) ) 

#define WebComponentProperties_put_HTML(This,RetValue)	\
    ( (This)->lpVtbl -> put_HTML(This,RetValue) ) 

#define WebComponentProperties_get_PreviewGraphic(This,RetValue)	\
    ( (This)->lpVtbl -> get_PreviewGraphic(This,RetValue) ) 

#define WebComponentProperties_put_PreviewGraphic(This,RetValue)	\
    ( (This)->lpVtbl -> put_PreviewGraphic(This,RetValue) ) 

#define WebComponentProperties_get_PreviewHTML(This,RetValue)	\
    ( (This)->lpVtbl -> get_PreviewHTML(This,RetValue) ) 

#define WebComponentProperties_put_PreviewHTML(This,RetValue)	\
    ( (This)->lpVtbl -> put_PreviewHTML(This,RetValue) ) 

#define WebComponentProperties_get_Width(This,RetValue)	\
    ( (This)->lpVtbl -> get_Width(This,RetValue) ) 

#define WebComponentProperties_put_Width(This,RetValue)	\
    ( (This)->lpVtbl -> put_Width(This,RetValue) ) 

#define WebComponentProperties_get_Height(This,RetValue)	\
    ( (This)->lpVtbl -> get_Height(This,RetValue) ) 

#define WebComponentProperties_put_Height(This,RetValue)	\
    ( (This)->lpVtbl -> put_Height(This,RetValue) ) 

#define WebComponentProperties_get_Tag(This,RetValue)	\
    ( (This)->lpVtbl -> get_Tag(This,RetValue) ) 

#define WebComponentProperties_put_Tag(This,RetValue)	\
    ( (This)->lpVtbl -> put_Tag(This,RetValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __WebComponentProperties_INTERFACE_DEFINED__ */


#ifndef __SmartDocument_INTERFACE_DEFINED__
#define __SmartDocument_INTERFACE_DEFINED__

/* interface SmartDocument */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SmartDocument;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0377-0000-0000-C000-000000000046")
    SmartDocument : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SolutionID( 
            /* [retval][out] */ BSTR *pbstrID) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SolutionID( 
            /* [in] */ BSTR pbstrID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SolutionURL( 
            /* [retval][out] */ BSTR *pbstrUrl) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SolutionURL( 
            /* [in] */ BSTR pbstrUrl) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PickSolution( 
            /* [defaultvalue][optional][in] */ VARIANT_BOOL ConsiderAllSchemas = 0) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RefreshPane( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SmartDocumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SmartDocument * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SmartDocument * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SmartDocument * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SmartDocument * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SmartDocument * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SmartDocument * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SmartDocument * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SmartDocument * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SmartDocument * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionID )( 
            SmartDocument * This,
            /* [retval][out] */ BSTR *pbstrID);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SolutionID )( 
            SmartDocument * This,
            /* [in] */ BSTR pbstrID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SolutionURL )( 
            SmartDocument * This,
            /* [retval][out] */ BSTR *pbstrUrl);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SolutionURL )( 
            SmartDocument * This,
            /* [in] */ BSTR pbstrUrl);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PickSolution )( 
            SmartDocument * This,
            /* [defaultvalue][optional][in] */ VARIANT_BOOL ConsiderAllSchemas);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshPane )( 
            SmartDocument * This);
        
        END_INTERFACE
    } SmartDocumentVtbl;

    interface SmartDocument
    {
        CONST_VTBL struct SmartDocumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SmartDocument_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SmartDocument_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SmartDocument_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SmartDocument_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SmartDocument_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SmartDocument_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SmartDocument_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SmartDocument_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SmartDocument_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SmartDocument_get_SolutionID(This,pbstrID)	\
    ( (This)->lpVtbl -> get_SolutionID(This,pbstrID) ) 

#define SmartDocument_put_SolutionID(This,pbstrID)	\
    ( (This)->lpVtbl -> put_SolutionID(This,pbstrID) ) 

#define SmartDocument_get_SolutionURL(This,pbstrUrl)	\
    ( (This)->lpVtbl -> get_SolutionURL(This,pbstrUrl) ) 

#define SmartDocument_put_SolutionURL(This,pbstrUrl)	\
    ( (This)->lpVtbl -> put_SolutionURL(This,pbstrUrl) ) 

#define SmartDocument_PickSolution(This,ConsiderAllSchemas)	\
    ( (This)->lpVtbl -> PickSolution(This,ConsiderAllSchemas) ) 

#define SmartDocument_RefreshPane(This)	\
    ( (This)->lpVtbl -> RefreshPane(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SmartDocument_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceMember_INTERFACE_DEFINED__
#define __SharedWorkspaceMember_INTERFACE_DEFINED__

/* interface SharedWorkspaceMember */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceMember;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0381-0000-0000-C000-000000000046")
    SharedWorkspaceMember : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DomainName( 
            /* [retval][out] */ BSTR *pbstrDomainName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email( 
            /* [retval][out] */ BSTR *pbstrEmail) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Id( 
            /* [retval][out] */ BSTR *Id) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceMemberVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceMember * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceMember * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceMember * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceMember * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceMember * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceMember * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceMember * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceMember * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceMember * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DomainName )( 
            SharedWorkspaceMember * This,
            /* [retval][out] */ BSTR *pbstrDomainName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            SharedWorkspaceMember * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email )( 
            SharedWorkspaceMember * This,
            /* [retval][out] */ BSTR *pbstrEmail);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            SharedWorkspaceMember * This);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            SharedWorkspaceMember * This,
            /* [retval][out] */ BSTR *Id);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceMember * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } SharedWorkspaceMemberVtbl;

    interface SharedWorkspaceMember
    {
        CONST_VTBL struct SharedWorkspaceMemberVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceMember_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceMember_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceMember_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceMember_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceMember_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceMember_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceMember_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceMember_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceMember_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceMember_get_DomainName(This,pbstrDomainName)	\
    ( (This)->lpVtbl -> get_DomainName(This,pbstrDomainName) ) 

#define SharedWorkspaceMember_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define SharedWorkspaceMember_get_Email(This,pbstrEmail)	\
    ( (This)->lpVtbl -> get_Email(This,pbstrEmail) ) 

#define SharedWorkspaceMember_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define SharedWorkspaceMember_get_Id(This,Id)	\
    ( (This)->lpVtbl -> get_Id(This,Id) ) 

#define SharedWorkspaceMember_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceMember_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceMembers_INTERFACE_DEFINED__
#define __SharedWorkspaceMembers_INTERFACE_DEFINED__

/* interface SharedWorkspaceMembers */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceMembers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0382-0000-0000-C000-000000000046")
    SharedWorkspaceMembers : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceMember **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pcItems) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Email,
            /* [in] */ BSTR DomainName,
            /* [in] */ BSTR DisplayName,
            /* [optional][in] */ VARIANT Role,
            /* [retval][out] */ SharedWorkspaceMember **ppMember) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemCountExceeded( 
            /* [retval][out] */ VARIANT_BOOL *pf) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceMembersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceMembers * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceMembers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceMembers * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceMembers * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceMembers * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceMembers * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceMembers * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceMembers * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceMembers * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            SharedWorkspaceMembers * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            SharedWorkspaceMembers * This,
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceMember **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SharedWorkspaceMembers * This,
            /* [retval][out] */ int *pcItems);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            SharedWorkspaceMembers * This,
            /* [in] */ BSTR Email,
            /* [in] */ BSTR DomainName,
            /* [in] */ BSTR DisplayName,
            /* [optional][in] */ VARIANT Role,
            /* [retval][out] */ SharedWorkspaceMember **ppMember);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceMembers * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemCountExceeded )( 
            SharedWorkspaceMembers * This,
            /* [retval][out] */ VARIANT_BOOL *pf);
        
        END_INTERFACE
    } SharedWorkspaceMembersVtbl;

    interface SharedWorkspaceMembers
    {
        CONST_VTBL struct SharedWorkspaceMembersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceMembers_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceMembers_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceMembers_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceMembers_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceMembers_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceMembers_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceMembers_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceMembers_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceMembers_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceMembers_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define SharedWorkspaceMembers_get_Item(This,Index,ppidisp)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppidisp) ) 

#define SharedWorkspaceMembers_get_Count(This,pcItems)	\
    ( (This)->lpVtbl -> get_Count(This,pcItems) ) 

#define SharedWorkspaceMembers_Add(This,Email,DomainName,DisplayName,Role,ppMember)	\
    ( (This)->lpVtbl -> Add(This,Email,DomainName,DisplayName,Role,ppMember) ) 

#define SharedWorkspaceMembers_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define SharedWorkspaceMembers_get_ItemCountExceeded(This,pf)	\
    ( (This)->lpVtbl -> get_ItemCountExceeded(This,pf) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceMembers_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceTask_INTERFACE_DEFINED__
#define __SharedWorkspaceTask_INTERFACE_DEFINED__

/* interface SharedWorkspaceTask */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceTask;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0379-0000-0000-C000-000000000046")
    SharedWorkspaceTask : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *Title) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Title( 
            /* [in] */ BSTR Title) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AssignedTo( 
            /* [retval][out] */ BSTR *AssignedTo) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AssignedTo( 
            /* [in] */ BSTR AssignedTo) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ MsoSharedWorkspaceTaskStatus *Status) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Status( 
            /* [in] */ MsoSharedWorkspaceTaskStatus Status) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Priority( 
            /* [retval][out] */ MsoSharedWorkspaceTaskPriority *Priority) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Priority( 
            /* [in] */ MsoSharedWorkspaceTaskPriority Priority) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *Description) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR Description) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DueDate( 
            /* [retval][out] */ VARIANT *DueDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DueDate( 
            /* [in] */ VARIANT DueDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreatedBy( 
            /* [retval][out] */ BSTR *CreatedBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreatedDate( 
            /* [retval][out] */ VARIANT *CreatedDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModifiedBy( 
            /* [retval][out] */ BSTR *ModifiedBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModifiedDate( 
            /* [retval][out] */ VARIANT *ModifiedDate) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceTaskVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceTask * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceTask * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceTask * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceTask * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceTask * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceTask * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceTask * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ BSTR *Title);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Title )( 
            SharedWorkspaceTask * This,
            /* [in] */ BSTR Title);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AssignedTo )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ BSTR *AssignedTo);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AssignedTo )( 
            SharedWorkspaceTask * This,
            /* [in] */ BSTR AssignedTo);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ MsoSharedWorkspaceTaskStatus *Status);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Status )( 
            SharedWorkspaceTask * This,
            /* [in] */ MsoSharedWorkspaceTaskStatus Status);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ MsoSharedWorkspaceTaskPriority *Priority);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Priority )( 
            SharedWorkspaceTask * This,
            /* [in] */ MsoSharedWorkspaceTaskPriority Priority);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ BSTR *Description);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            SharedWorkspaceTask * This,
            /* [in] */ BSTR Description);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DueDate )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ VARIANT *DueDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DueDate )( 
            SharedWorkspaceTask * This,
            /* [in] */ VARIANT DueDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreatedBy )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ BSTR *CreatedBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreatedDate )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ VARIANT *CreatedDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModifiedBy )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ BSTR *ModifiedBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModifiedDate )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ VARIANT *ModifiedDate);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            SharedWorkspaceTask * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            SharedWorkspaceTask * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceTask * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } SharedWorkspaceTaskVtbl;

    interface SharedWorkspaceTask
    {
        CONST_VTBL struct SharedWorkspaceTaskVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceTask_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceTask_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceTask_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceTask_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceTask_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceTask_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceTask_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceTask_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceTask_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceTask_get_Title(This,Title)	\
    ( (This)->lpVtbl -> get_Title(This,Title) ) 

#define SharedWorkspaceTask_put_Title(This,Title)	\
    ( (This)->lpVtbl -> put_Title(This,Title) ) 

#define SharedWorkspaceTask_get_AssignedTo(This,AssignedTo)	\
    ( (This)->lpVtbl -> get_AssignedTo(This,AssignedTo) ) 

#define SharedWorkspaceTask_put_AssignedTo(This,AssignedTo)	\
    ( (This)->lpVtbl -> put_AssignedTo(This,AssignedTo) ) 

#define SharedWorkspaceTask_get_Status(This,Status)	\
    ( (This)->lpVtbl -> get_Status(This,Status) ) 

#define SharedWorkspaceTask_put_Status(This,Status)	\
    ( (This)->lpVtbl -> put_Status(This,Status) ) 

#define SharedWorkspaceTask_get_Priority(This,Priority)	\
    ( (This)->lpVtbl -> get_Priority(This,Priority) ) 

#define SharedWorkspaceTask_put_Priority(This,Priority)	\
    ( (This)->lpVtbl -> put_Priority(This,Priority) ) 

#define SharedWorkspaceTask_get_Description(This,Description)	\
    ( (This)->lpVtbl -> get_Description(This,Description) ) 

#define SharedWorkspaceTask_put_Description(This,Description)	\
    ( (This)->lpVtbl -> put_Description(This,Description) ) 

#define SharedWorkspaceTask_get_DueDate(This,DueDate)	\
    ( (This)->lpVtbl -> get_DueDate(This,DueDate) ) 

#define SharedWorkspaceTask_put_DueDate(This,DueDate)	\
    ( (This)->lpVtbl -> put_DueDate(This,DueDate) ) 

#define SharedWorkspaceTask_get_CreatedBy(This,CreatedBy)	\
    ( (This)->lpVtbl -> get_CreatedBy(This,CreatedBy) ) 

#define SharedWorkspaceTask_get_CreatedDate(This,CreatedDate)	\
    ( (This)->lpVtbl -> get_CreatedDate(This,CreatedDate) ) 

#define SharedWorkspaceTask_get_ModifiedBy(This,ModifiedBy)	\
    ( (This)->lpVtbl -> get_ModifiedBy(This,ModifiedBy) ) 

#define SharedWorkspaceTask_get_ModifiedDate(This,ModifiedDate)	\
    ( (This)->lpVtbl -> get_ModifiedDate(This,ModifiedDate) ) 

#define SharedWorkspaceTask_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define SharedWorkspaceTask_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define SharedWorkspaceTask_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceTask_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceTasks_INTERFACE_DEFINED__
#define __SharedWorkspaceTasks_INTERFACE_DEFINED__

/* interface SharedWorkspaceTasks */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceTasks;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C037A-0000-0000-C000-000000000046")
    SharedWorkspaceTasks : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceTask **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pcItems) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Title,
            /* [optional][in] */ VARIANT Status,
            /* [optional][in] */ VARIANT Priority,
            /* [optional][in] */ VARIANT Assignee,
            /* [optional][in] */ VARIANT Description,
            /* [optional][in] */ VARIANT DueDate,
            /* [retval][out] */ SharedWorkspaceTask **ppTask) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemCountExceeded( 
            /* [retval][out] */ VARIANT_BOOL *pf) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceTasksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceTasks * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceTasks * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceTasks * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceTasks * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceTasks * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceTasks * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceTasks * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceTasks * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceTasks * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            SharedWorkspaceTasks * This,
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceTask **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SharedWorkspaceTasks * This,
            /* [retval][out] */ int *pcItems);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            SharedWorkspaceTasks * This,
            /* [in] */ BSTR Title,
            /* [optional][in] */ VARIANT Status,
            /* [optional][in] */ VARIANT Priority,
            /* [optional][in] */ VARIANT Assignee,
            /* [optional][in] */ VARIANT Description,
            /* [optional][in] */ VARIANT DueDate,
            /* [retval][out] */ SharedWorkspaceTask **ppTask);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceTasks * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemCountExceeded )( 
            SharedWorkspaceTasks * This,
            /* [retval][out] */ VARIANT_BOOL *pf);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            SharedWorkspaceTasks * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        END_INTERFACE
    } SharedWorkspaceTasksVtbl;

    interface SharedWorkspaceTasks
    {
        CONST_VTBL struct SharedWorkspaceTasksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceTasks_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceTasks_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceTasks_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceTasks_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceTasks_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceTasks_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceTasks_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceTasks_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceTasks_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceTasks_get_Item(This,Index,ppidisp)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppidisp) ) 

#define SharedWorkspaceTasks_get_Count(This,pcItems)	\
    ( (This)->lpVtbl -> get_Count(This,pcItems) ) 

#define SharedWorkspaceTasks_Add(This,Title,Status,Priority,Assignee,Description,DueDate,ppTask)	\
    ( (This)->lpVtbl -> Add(This,Title,Status,Priority,Assignee,Description,DueDate,ppTask) ) 

#define SharedWorkspaceTasks_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define SharedWorkspaceTasks_get_ItemCountExceeded(This,pf)	\
    ( (This)->lpVtbl -> get_ItemCountExceeded(This,pf) ) 

#define SharedWorkspaceTasks_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceTasks_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceFile_INTERFACE_DEFINED__
#define __SharedWorkspaceFile_INTERFACE_DEFINED__

/* interface SharedWorkspaceFile */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceFile;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C037B-0000-0000-C000-000000000046")
    SharedWorkspaceFile : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [retval][out] */ BSTR *pbstrFilename) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreatedBy( 
            /* [retval][out] */ BSTR *pbstrCreatedBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreatedDate( 
            /* [retval][out] */ VARIANT *CreatedDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModifiedBy( 
            /* [retval][out] */ BSTR *pbstrModifiedBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModifiedDate( 
            /* [retval][out] */ VARIANT *ModifiedDate) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceFileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceFile * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceFile * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceFile * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceFile * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceFile * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceFile * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceFile * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceFile * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceFile * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_URL )( 
            SharedWorkspaceFile * This,
            /* [retval][out] */ BSTR *pbstrFilename);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreatedBy )( 
            SharedWorkspaceFile * This,
            /* [retval][out] */ BSTR *pbstrCreatedBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreatedDate )( 
            SharedWorkspaceFile * This,
            /* [retval][out] */ VARIANT *CreatedDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModifiedBy )( 
            SharedWorkspaceFile * This,
            /* [retval][out] */ BSTR *pbstrModifiedBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModifiedDate )( 
            SharedWorkspaceFile * This,
            /* [retval][out] */ VARIANT *ModifiedDate);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            SharedWorkspaceFile * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceFile * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } SharedWorkspaceFileVtbl;

    interface SharedWorkspaceFile
    {
        CONST_VTBL struct SharedWorkspaceFileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceFile_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceFile_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceFile_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceFile_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceFile_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceFile_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceFile_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceFile_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceFile_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceFile_get_URL(This,pbstrFilename)	\
    ( (This)->lpVtbl -> get_URL(This,pbstrFilename) ) 

#define SharedWorkspaceFile_get_CreatedBy(This,pbstrCreatedBy)	\
    ( (This)->lpVtbl -> get_CreatedBy(This,pbstrCreatedBy) ) 

#define SharedWorkspaceFile_get_CreatedDate(This,CreatedDate)	\
    ( (This)->lpVtbl -> get_CreatedDate(This,CreatedDate) ) 

#define SharedWorkspaceFile_get_ModifiedBy(This,pbstrModifiedBy)	\
    ( (This)->lpVtbl -> get_ModifiedBy(This,pbstrModifiedBy) ) 

#define SharedWorkspaceFile_get_ModifiedDate(This,ModifiedDate)	\
    ( (This)->lpVtbl -> get_ModifiedDate(This,ModifiedDate) ) 

#define SharedWorkspaceFile_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define SharedWorkspaceFile_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceFile_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceFiles_INTERFACE_DEFINED__
#define __SharedWorkspaceFiles_INTERFACE_DEFINED__

/* interface SharedWorkspaceFiles */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceFiles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C037C-0000-0000-C000-000000000046")
    SharedWorkspaceFiles : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceFile **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pcItems) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR FileName,
            /* [optional][in] */ VARIANT ParentFolder,
            /* [optional][in] */ VARIANT OverwriteIfFileAlreadyExists,
            /* [optional][in] */ VARIANT KeepInSync,
            /* [retval][out] */ SharedWorkspaceFile **ppFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemCountExceeded( 
            /* [retval][out] */ VARIANT_BOOL *pf) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceFilesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceFiles * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceFiles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceFiles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceFiles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceFiles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceFiles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceFiles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceFiles * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceFiles * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            SharedWorkspaceFiles * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            SharedWorkspaceFiles * This,
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceFile **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SharedWorkspaceFiles * This,
            /* [retval][out] */ int *pcItems);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            SharedWorkspaceFiles * This,
            /* [in] */ BSTR FileName,
            /* [optional][in] */ VARIANT ParentFolder,
            /* [optional][in] */ VARIANT OverwriteIfFileAlreadyExists,
            /* [optional][in] */ VARIANT KeepInSync,
            /* [retval][out] */ SharedWorkspaceFile **ppFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceFiles * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemCountExceeded )( 
            SharedWorkspaceFiles * This,
            /* [retval][out] */ VARIANT_BOOL *pf);
        
        END_INTERFACE
    } SharedWorkspaceFilesVtbl;

    interface SharedWorkspaceFiles
    {
        CONST_VTBL struct SharedWorkspaceFilesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceFiles_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceFiles_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceFiles_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceFiles_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceFiles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceFiles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceFiles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceFiles_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceFiles_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceFiles_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define SharedWorkspaceFiles_get_Item(This,Index,ppidisp)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppidisp) ) 

#define SharedWorkspaceFiles_get_Count(This,pcItems)	\
    ( (This)->lpVtbl -> get_Count(This,pcItems) ) 

#define SharedWorkspaceFiles_Add(This,FileName,ParentFolder,OverwriteIfFileAlreadyExists,KeepInSync,ppFile)	\
    ( (This)->lpVtbl -> Add(This,FileName,ParentFolder,OverwriteIfFileAlreadyExists,KeepInSync,ppFile) ) 

#define SharedWorkspaceFiles_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define SharedWorkspaceFiles_get_ItemCountExceeded(This,pf)	\
    ( (This)->lpVtbl -> get_ItemCountExceeded(This,pf) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceFiles_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceFolder_INTERFACE_DEFINED__
#define __SharedWorkspaceFolder_INTERFACE_DEFINED__

/* interface SharedWorkspaceFolder */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C037D-0000-0000-C000-000000000046")
    SharedWorkspaceFolder : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FolderName( 
            /* [retval][out] */ BSTR *FolderName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [optional][in] */ VARIANT DeleteEventIfFolderContainsFiles) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceFolder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceFolder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceFolder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceFolder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceFolder * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceFolder * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceFolder * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FolderName )( 
            SharedWorkspaceFolder * This,
            /* [retval][out] */ BSTR *FolderName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            SharedWorkspaceFolder * This,
            /* [optional][in] */ VARIANT DeleteEventIfFolderContainsFiles);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceFolder * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } SharedWorkspaceFolderVtbl;

    interface SharedWorkspaceFolder
    {
        CONST_VTBL struct SharedWorkspaceFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceFolder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceFolder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceFolder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceFolder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceFolder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceFolder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceFolder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceFolder_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceFolder_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceFolder_get_FolderName(This,FolderName)	\
    ( (This)->lpVtbl -> get_FolderName(This,FolderName) ) 

#define SharedWorkspaceFolder_Delete(This,DeleteEventIfFolderContainsFiles)	\
    ( (This)->lpVtbl -> Delete(This,DeleteEventIfFolderContainsFiles) ) 

#define SharedWorkspaceFolder_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceFolder_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceFolders_INTERFACE_DEFINED__
#define __SharedWorkspaceFolders_INTERFACE_DEFINED__

/* interface SharedWorkspaceFolders */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceFolders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C037E-0000-0000-C000-000000000046")
    SharedWorkspaceFolders : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceFolder **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pcItems) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR FolderName,
            /* [optional][in] */ VARIANT ParentFolder,
            /* [retval][out] */ SharedWorkspaceFolder **ppFolder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemCountExceeded( 
            /* [retval][out] */ VARIANT_BOOL *pf) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceFoldersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceFolders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceFolders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceFolders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceFolders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceFolders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceFolders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceFolders * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceFolders * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceFolders * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            SharedWorkspaceFolders * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            SharedWorkspaceFolders * This,
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceFolder **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SharedWorkspaceFolders * This,
            /* [retval][out] */ int *pcItems);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            SharedWorkspaceFolders * This,
            /* [in] */ BSTR FolderName,
            /* [optional][in] */ VARIANT ParentFolder,
            /* [retval][out] */ SharedWorkspaceFolder **ppFolder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceFolders * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemCountExceeded )( 
            SharedWorkspaceFolders * This,
            /* [retval][out] */ VARIANT_BOOL *pf);
        
        END_INTERFACE
    } SharedWorkspaceFoldersVtbl;

    interface SharedWorkspaceFolders
    {
        CONST_VTBL struct SharedWorkspaceFoldersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceFolders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceFolders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceFolders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceFolders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceFolders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceFolders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceFolders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceFolders_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceFolders_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceFolders_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define SharedWorkspaceFolders_get_Item(This,Index,ppidisp)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppidisp) ) 

#define SharedWorkspaceFolders_get_Count(This,pcItems)	\
    ( (This)->lpVtbl -> get_Count(This,pcItems) ) 

#define SharedWorkspaceFolders_Add(This,FolderName,ParentFolder,ppFolder)	\
    ( (This)->lpVtbl -> Add(This,FolderName,ParentFolder,ppFolder) ) 

#define SharedWorkspaceFolders_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define SharedWorkspaceFolders_get_ItemCountExceeded(This,pf)	\
    ( (This)->lpVtbl -> get_ItemCountExceeded(This,pf) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceFolders_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceLink_INTERFACE_DEFINED__
#define __SharedWorkspaceLink_INTERFACE_DEFINED__

/* interface SharedWorkspaceLink */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceLink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C037F-0000-0000-C000-000000000046")
    SharedWorkspaceLink : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [retval][out] */ BSTR *URL) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_URL( 
            /* [in] */ BSTR URL) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *Description) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR Description) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Notes( 
            /* [retval][out] */ BSTR *Notes) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Notes( 
            /* [in] */ BSTR Notes) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreatedBy( 
            /* [retval][out] */ BSTR *CreatedBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreatedDate( 
            /* [retval][out] */ VARIANT *CreatedDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModifiedBy( 
            /* [retval][out] */ BSTR *ModifiedBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModifiedDate( 
            /* [retval][out] */ VARIANT *ModifiedDate) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceLinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceLink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceLink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceLink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceLink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceLink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceLink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceLink * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_URL )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ BSTR *URL);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_URL )( 
            SharedWorkspaceLink * This,
            /* [in] */ BSTR URL);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ BSTR *Description);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            SharedWorkspaceLink * This,
            /* [in] */ BSTR Description);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Notes )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ BSTR *Notes);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Notes )( 
            SharedWorkspaceLink * This,
            /* [in] */ BSTR Notes);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreatedBy )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ BSTR *CreatedBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreatedDate )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ VARIANT *CreatedDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModifiedBy )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ BSTR *ModifiedBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModifiedDate )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ VARIANT *ModifiedDate);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            SharedWorkspaceLink * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            SharedWorkspaceLink * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceLink * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } SharedWorkspaceLinkVtbl;

    interface SharedWorkspaceLink
    {
        CONST_VTBL struct SharedWorkspaceLinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceLink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceLink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceLink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceLink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceLink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceLink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceLink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceLink_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceLink_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceLink_get_URL(This,URL)	\
    ( (This)->lpVtbl -> get_URL(This,URL) ) 

#define SharedWorkspaceLink_put_URL(This,URL)	\
    ( (This)->lpVtbl -> put_URL(This,URL) ) 

#define SharedWorkspaceLink_get_Description(This,Description)	\
    ( (This)->lpVtbl -> get_Description(This,Description) ) 

#define SharedWorkspaceLink_put_Description(This,Description)	\
    ( (This)->lpVtbl -> put_Description(This,Description) ) 

#define SharedWorkspaceLink_get_Notes(This,Notes)	\
    ( (This)->lpVtbl -> get_Notes(This,Notes) ) 

#define SharedWorkspaceLink_put_Notes(This,Notes)	\
    ( (This)->lpVtbl -> put_Notes(This,Notes) ) 

#define SharedWorkspaceLink_get_CreatedBy(This,CreatedBy)	\
    ( (This)->lpVtbl -> get_CreatedBy(This,CreatedBy) ) 

#define SharedWorkspaceLink_get_CreatedDate(This,CreatedDate)	\
    ( (This)->lpVtbl -> get_CreatedDate(This,CreatedDate) ) 

#define SharedWorkspaceLink_get_ModifiedBy(This,ModifiedBy)	\
    ( (This)->lpVtbl -> get_ModifiedBy(This,ModifiedBy) ) 

#define SharedWorkspaceLink_get_ModifiedDate(This,ModifiedDate)	\
    ( (This)->lpVtbl -> get_ModifiedDate(This,ModifiedDate) ) 

#define SharedWorkspaceLink_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define SharedWorkspaceLink_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define SharedWorkspaceLink_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceLink_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspaceLinks_INTERFACE_DEFINED__
#define __SharedWorkspaceLinks_INTERFACE_DEFINED__

/* interface SharedWorkspaceLinks */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspaceLinks;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0380-0000-0000-C000-000000000046")
    SharedWorkspaceLinks : public _IMsoDispObj
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceLink **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ int *pcItems) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR URL,
            /* [optional][in] */ VARIANT Description,
            /* [optional][in] */ VARIANT Notes,
            /* [retval][out] */ SharedWorkspaceLink **ppLink) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemCountExceeded( 
            /* [retval][out] */ VARIANT_BOOL *pf) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceLinksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspaceLinks * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspaceLinks * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspaceLinks * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspaceLinks * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspaceLinks * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspaceLinks * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspaceLinks * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspaceLinks * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspaceLinks * This,
            /* [retval][out] */ long *plCreator);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            SharedWorkspaceLinks * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            SharedWorkspaceLinks * This,
            /* [in] */ int Index,
            /* [retval][out] */ SharedWorkspaceLink **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SharedWorkspaceLinks * This,
            /* [retval][out] */ int *pcItems);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            SharedWorkspaceLinks * This,
            /* [in] */ BSTR URL,
            /* [optional][in] */ VARIANT Description,
            /* [optional][in] */ VARIANT Notes,
            /* [retval][out] */ SharedWorkspaceLink **ppLink);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspaceLinks * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemCountExceeded )( 
            SharedWorkspaceLinks * This,
            /* [retval][out] */ VARIANT_BOOL *pf);
        
        END_INTERFACE
    } SharedWorkspaceLinksVtbl;

    interface SharedWorkspaceLinks
    {
        CONST_VTBL struct SharedWorkspaceLinksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspaceLinks_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspaceLinks_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspaceLinks_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspaceLinks_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspaceLinks_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspaceLinks_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspaceLinks_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspaceLinks_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspaceLinks_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspaceLinks_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#define SharedWorkspaceLinks_get_Item(This,Index,ppidisp)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppidisp) ) 

#define SharedWorkspaceLinks_get_Count(This,pcItems)	\
    ( (This)->lpVtbl -> get_Count(This,pcItems) ) 

#define SharedWorkspaceLinks_Add(This,URL,Description,Notes,ppLink)	\
    ( (This)->lpVtbl -> Add(This,URL,Description,Notes,ppLink) ) 

#define SharedWorkspaceLinks_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define SharedWorkspaceLinks_get_ItemCountExceeded(This,pf)	\
    ( (This)->lpVtbl -> get_ItemCountExceeded(This,pf) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspaceLinks_INTERFACE_DEFINED__ */


#ifndef __SharedWorkspace_INTERFACE_DEFINED__
#define __SharedWorkspace_INTERFACE_DEFINED__

/* interface SharedWorkspace */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SharedWorkspace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0385-0000-0000-C000-000000000046")
    SharedWorkspace : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ SharedWorkspaceMembers **ppMembers) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Tasks( 
            /* [retval][out] */ SharedWorkspaceTasks **ppTasks) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Files( 
            /* [retval][out] */ SharedWorkspaceFiles **ppFiles) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Folders( 
            /* [retval][out] */ SharedWorkspaceFolders **ppFolders) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ SharedWorkspaceLinks **ppLinks) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateNew( 
            /* [optional][in] */ VARIANT URL,
            /* [optional][in] */ VARIANT Name) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [retval][out] */ BSTR *pbstrUrl) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Connected( 
            /* [retval][out] */ VARIANT_BOOL *pfConnected) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastRefreshed( 
            /* [retval][out] */ VARIANT *pvarLastRefreshed) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SourceURL( 
            /* [retval][out] */ BSTR *pbstrSourceURL) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SourceURL( 
            /* [in] */ BSTR pbstrSourceURL) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveDocument( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Disconnect( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SharedWorkspaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SharedWorkspace * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SharedWorkspace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SharedWorkspace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SharedWorkspace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SharedWorkspace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SharedWorkspace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SharedWorkspace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SharedWorkspace * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            SharedWorkspace * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            SharedWorkspace * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            SharedWorkspace * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            SharedWorkspace * This,
            /* [retval][out] */ SharedWorkspaceMembers **ppMembers);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            SharedWorkspace * This,
            /* [retval][out] */ SharedWorkspaceTasks **ppTasks);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Files )( 
            SharedWorkspace * This,
            /* [retval][out] */ SharedWorkspaceFiles **ppFiles);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Folders )( 
            SharedWorkspace * This,
            /* [retval][out] */ SharedWorkspaceFolders **ppFolders);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            SharedWorkspace * This,
            /* [retval][out] */ SharedWorkspaceLinks **ppLinks);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            SharedWorkspace * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateNew )( 
            SharedWorkspace * This,
            /* [optional][in] */ VARIANT URL,
            /* [optional][in] */ VARIANT Name);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            SharedWorkspace * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SharedWorkspace * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_URL )( 
            SharedWorkspace * This,
            /* [retval][out] */ BSTR *pbstrUrl);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Connected )( 
            SharedWorkspace * This,
            /* [retval][out] */ VARIANT_BOOL *pfConnected);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastRefreshed )( 
            SharedWorkspace * This,
            /* [retval][out] */ VARIANT *pvarLastRefreshed);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SourceURL )( 
            SharedWorkspace * This,
            /* [retval][out] */ BSTR *pbstrSourceURL);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SourceURL )( 
            SharedWorkspace * This,
            /* [in] */ BSTR pbstrSourceURL);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveDocument )( 
            SharedWorkspace * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Disconnect )( 
            SharedWorkspace * This);
        
        END_INTERFACE
    } SharedWorkspaceVtbl;

    interface SharedWorkspace
    {
        CONST_VTBL struct SharedWorkspaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SharedWorkspace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SharedWorkspace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SharedWorkspace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SharedWorkspace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SharedWorkspace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SharedWorkspace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SharedWorkspace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SharedWorkspace_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define SharedWorkspace_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define SharedWorkspace_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define SharedWorkspace_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define SharedWorkspace_get_Members(This,ppMembers)	\
    ( (This)->lpVtbl -> get_Members(This,ppMembers) ) 

#define SharedWorkspace_get_Tasks(This,ppTasks)	\
    ( (This)->lpVtbl -> get_Tasks(This,ppTasks) ) 

#define SharedWorkspace_get_Files(This,ppFiles)	\
    ( (This)->lpVtbl -> get_Files(This,ppFiles) ) 

#define SharedWorkspace_get_Folders(This,ppFolders)	\
    ( (This)->lpVtbl -> get_Folders(This,ppFolders) ) 

#define SharedWorkspace_get_Links(This,ppLinks)	\
    ( (This)->lpVtbl -> get_Links(This,ppLinks) ) 

#define SharedWorkspace_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#define SharedWorkspace_CreateNew(This,URL,Name)	\
    ( (This)->lpVtbl -> CreateNew(This,URL,Name) ) 

#define SharedWorkspace_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define SharedWorkspace_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define SharedWorkspace_get_URL(This,pbstrUrl)	\
    ( (This)->lpVtbl -> get_URL(This,pbstrUrl) ) 

#define SharedWorkspace_get_Connected(This,pfConnected)	\
    ( (This)->lpVtbl -> get_Connected(This,pfConnected) ) 

#define SharedWorkspace_get_LastRefreshed(This,pvarLastRefreshed)	\
    ( (This)->lpVtbl -> get_LastRefreshed(This,pvarLastRefreshed) ) 

#define SharedWorkspace_get_SourceURL(This,pbstrSourceURL)	\
    ( (This)->lpVtbl -> get_SourceURL(This,pbstrSourceURL) ) 

#define SharedWorkspace_put_SourceURL(This,pbstrSourceURL)	\
    ( (This)->lpVtbl -> put_SourceURL(This,pbstrSourceURL) ) 

#define SharedWorkspace_RemoveDocument(This)	\
    ( (This)->lpVtbl -> RemoveDocument(This) ) 

#define SharedWorkspace_Disconnect(This)	\
    ( (This)->lpVtbl -> Disconnect(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SharedWorkspace_INTERFACE_DEFINED__ */


#ifndef __Sync_INTERFACE_DEFINED__
#define __Sync_INTERFACE_DEFINED__

/* interface Sync */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Sync;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0386-0000-0000-C000-000000000046")
    Sync : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ MsoSyncStatusType *pStatusType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WorkspaceLastChangedBy( 
            /* [retval][out] */ BSTR *pbstrWorkspaceLastChangedBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastSyncTime( 
            /* [retval][out] */ VARIANT *pdatSavedTo) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ErrorType( 
            /* [retval][out] */ MsoSyncErrorType *pErrorType) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetUpdate( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PutUpdate( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenVersion( 
            /* [in] */ MsoSyncVersionType SyncVersionType) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResolveConflict( 
            /* [in] */ MsoSyncConflictResolutionType SyncConflictResolution) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Unsuspend( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SyncVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Sync * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Sync * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Sync * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Sync * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Sync * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Sync * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Sync * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Sync * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Sync * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            Sync * This,
            /* [retval][out] */ MsoSyncStatusType *pStatusType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WorkspaceLastChangedBy )( 
            Sync * This,
            /* [retval][out] */ BSTR *pbstrWorkspaceLastChangedBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastSyncTime )( 
            Sync * This,
            /* [retval][out] */ VARIANT *pdatSavedTo);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorType )( 
            Sync * This,
            /* [retval][out] */ MsoSyncErrorType *pErrorType);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetUpdate )( 
            Sync * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PutUpdate )( 
            Sync * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenVersion )( 
            Sync * This,
            /* [in] */ MsoSyncVersionType SyncVersionType);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResolveConflict )( 
            Sync * This,
            /* [in] */ MsoSyncConflictResolutionType SyncConflictResolution);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Unsuspend )( 
            Sync * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Sync * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        END_INTERFACE
    } SyncVtbl;

    interface Sync
    {
        CONST_VTBL struct SyncVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Sync_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Sync_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Sync_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Sync_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Sync_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Sync_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Sync_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Sync_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Sync_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Sync_get_Status(This,pStatusType)	\
    ( (This)->lpVtbl -> get_Status(This,pStatusType) ) 

#define Sync_get_WorkspaceLastChangedBy(This,pbstrWorkspaceLastChangedBy)	\
    ( (This)->lpVtbl -> get_WorkspaceLastChangedBy(This,pbstrWorkspaceLastChangedBy) ) 

#define Sync_get_LastSyncTime(This,pdatSavedTo)	\
    ( (This)->lpVtbl -> get_LastSyncTime(This,pdatSavedTo) ) 

#define Sync_get_ErrorType(This,pErrorType)	\
    ( (This)->lpVtbl -> get_ErrorType(This,pErrorType) ) 

#define Sync_GetUpdate(This)	\
    ( (This)->lpVtbl -> GetUpdate(This) ) 

#define Sync_PutUpdate(This)	\
    ( (This)->lpVtbl -> PutUpdate(This) ) 

#define Sync_OpenVersion(This,SyncVersionType)	\
    ( (This)->lpVtbl -> OpenVersion(This,SyncVersionType) ) 

#define Sync_ResolveConflict(This,SyncConflictResolution)	\
    ( (This)->lpVtbl -> ResolveConflict(This,SyncConflictResolution) ) 

#define Sync_Unsuspend(This)	\
    ( (This)->lpVtbl -> Unsuspend(This) ) 

#define Sync_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Sync_INTERFACE_DEFINED__ */


#ifndef __DocumentLibraryVersion_INTERFACE_DEFINED__
#define __DocumentLibraryVersion_INTERFACE_DEFINED__

/* interface DocumentLibraryVersion */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_DocumentLibraryVersion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0387-0000-0000-C000-000000000046")
    DocumentLibraryVersion : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Modified( 
            /* [retval][out] */ VARIANT *pvarDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ long *lIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModifiedBy( 
            /* [retval][out] */ BSTR *userName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comments( 
            /* [retval][out] */ BSTR *Comments) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [retval][out] */ IDispatch **ppdispOpened) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Restore( 
            /* [retval][out] */ IDispatch **ppdispOpened) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DocumentLibraryVersionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DocumentLibraryVersion * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DocumentLibraryVersion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DocumentLibraryVersion * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DocumentLibraryVersion * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DocumentLibraryVersion * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DocumentLibraryVersion * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DocumentLibraryVersion * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            DocumentLibraryVersion * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            DocumentLibraryVersion * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Modified )( 
            DocumentLibraryVersion * This,
            /* [retval][out] */ VARIANT *pvarDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            DocumentLibraryVersion * This,
            /* [retval][out] */ long *lIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            DocumentLibraryVersion * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModifiedBy )( 
            DocumentLibraryVersion * This,
            /* [retval][out] */ BSTR *userName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comments )( 
            DocumentLibraryVersion * This,
            /* [retval][out] */ BSTR *Comments);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            DocumentLibraryVersion * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            DocumentLibraryVersion * This,
            /* [retval][out] */ IDispatch **ppdispOpened);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Restore )( 
            DocumentLibraryVersion * This,
            /* [retval][out] */ IDispatch **ppdispOpened);
        
        END_INTERFACE
    } DocumentLibraryVersionVtbl;

    interface DocumentLibraryVersion
    {
        CONST_VTBL struct DocumentLibraryVersionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DocumentLibraryVersion_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DocumentLibraryVersion_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DocumentLibraryVersion_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DocumentLibraryVersion_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DocumentLibraryVersion_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DocumentLibraryVersion_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DocumentLibraryVersion_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define DocumentLibraryVersion_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define DocumentLibraryVersion_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define DocumentLibraryVersion_get_Modified(This,pvarDate)	\
    ( (This)->lpVtbl -> get_Modified(This,pvarDate) ) 

#define DocumentLibraryVersion_get_Index(This,lIndex)	\
    ( (This)->lpVtbl -> get_Index(This,lIndex) ) 

#define DocumentLibraryVersion_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define DocumentLibraryVersion_get_ModifiedBy(This,userName)	\
    ( (This)->lpVtbl -> get_ModifiedBy(This,userName) ) 

#define DocumentLibraryVersion_get_Comments(This,Comments)	\
    ( (This)->lpVtbl -> get_Comments(This,Comments) ) 

#define DocumentLibraryVersion_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define DocumentLibraryVersion_Open(This,ppdispOpened)	\
    ( (This)->lpVtbl -> Open(This,ppdispOpened) ) 

#define DocumentLibraryVersion_Restore(This,ppdispOpened)	\
    ( (This)->lpVtbl -> Restore(This,ppdispOpened) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __DocumentLibraryVersion_INTERFACE_DEFINED__ */


#ifndef __DocumentLibraryVersions_INTERFACE_DEFINED__
#define __DocumentLibraryVersions_INTERFACE_DEFINED__

/* interface DocumentLibraryVersions */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_DocumentLibraryVersions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0388-0000-0000-C000-000000000046")
    DocumentLibraryVersions : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long lIndex,
            /* [retval][out] */ DocumentLibraryVersion **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *lCount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsVersioningEnabled( 
            /* [retval][out] */ VARIANT_BOOL *pvarfVersioningOn) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppienum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DocumentLibraryVersionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DocumentLibraryVersions * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DocumentLibraryVersions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DocumentLibraryVersions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DocumentLibraryVersions * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DocumentLibraryVersions * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DocumentLibraryVersions * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DocumentLibraryVersions * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            DocumentLibraryVersions * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            DocumentLibraryVersions * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            DocumentLibraryVersions * This,
            /* [in] */ long lIndex,
            /* [retval][out] */ DocumentLibraryVersion **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            DocumentLibraryVersions * This,
            /* [retval][out] */ long *lCount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            DocumentLibraryVersions * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsVersioningEnabled )( 
            DocumentLibraryVersions * This,
            /* [retval][out] */ VARIANT_BOOL *pvarfVersioningOn);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            DocumentLibraryVersions * This,
            /* [retval][out] */ IUnknown **ppienum);
        
        END_INTERFACE
    } DocumentLibraryVersionsVtbl;

    interface DocumentLibraryVersions
    {
        CONST_VTBL struct DocumentLibraryVersionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DocumentLibraryVersions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DocumentLibraryVersions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DocumentLibraryVersions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DocumentLibraryVersions_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DocumentLibraryVersions_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DocumentLibraryVersions_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DocumentLibraryVersions_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define DocumentLibraryVersions_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define DocumentLibraryVersions_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define DocumentLibraryVersions_get_Item(This,lIndex,ppidisp)	\
    ( (This)->lpVtbl -> get_Item(This,lIndex,ppidisp) ) 

#define DocumentLibraryVersions_get_Count(This,lCount)	\
    ( (This)->lpVtbl -> get_Count(This,lCount) ) 

#define DocumentLibraryVersions_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define DocumentLibraryVersions_get_IsVersioningEnabled(This,pvarfVersioningOn)	\
    ( (This)->lpVtbl -> get_IsVersioningEnabled(This,pvarfVersioningOn) ) 

#define DocumentLibraryVersions_get__NewEnum(This,ppienum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppienum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __DocumentLibraryVersions_INTERFACE_DEFINED__ */


#ifndef __UserPermission_INTERFACE_DEFINED__
#define __UserPermission_INTERFACE_DEFINED__

/* interface UserPermission */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_UserPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0375-0000-0000-C000-000000000046")
    UserPermission : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserId( 
            /* [retval][out] */ BSTR *UserId) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Permission( 
            /* [retval][out] */ long *Permission) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Permission( 
            /* [in] */ long Permission) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExpirationDate( 
            /* [retval][out] */ VARIANT *ExpirationDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExpirationDate( 
            /* [in] */ VARIANT ExpirationDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct UserPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            UserPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            UserPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            UserPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            UserPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            UserPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            UserPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            UserPermission * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            UserPermission * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            UserPermission * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserId )( 
            UserPermission * This,
            /* [retval][out] */ BSTR *UserId);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Permission )( 
            UserPermission * This,
            /* [retval][out] */ long *Permission);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Permission )( 
            UserPermission * This,
            /* [in] */ long Permission);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpirationDate )( 
            UserPermission * This,
            /* [retval][out] */ VARIANT *ExpirationDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpirationDate )( 
            UserPermission * This,
            /* [in] */ VARIANT ExpirationDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            UserPermission * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            UserPermission * This);
        
        END_INTERFACE
    } UserPermissionVtbl;

    interface UserPermission
    {
        CONST_VTBL struct UserPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define UserPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define UserPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define UserPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define UserPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define UserPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define UserPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define UserPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define UserPermission_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define UserPermission_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define UserPermission_get_UserId(This,UserId)	\
    ( (This)->lpVtbl -> get_UserId(This,UserId) ) 

#define UserPermission_get_Permission(This,Permission)	\
    ( (This)->lpVtbl -> get_Permission(This,Permission) ) 

#define UserPermission_put_Permission(This,Permission)	\
    ( (This)->lpVtbl -> put_Permission(This,Permission) ) 

#define UserPermission_get_ExpirationDate(This,ExpirationDate)	\
    ( (This)->lpVtbl -> get_ExpirationDate(This,ExpirationDate) ) 

#define UserPermission_put_ExpirationDate(This,ExpirationDate)	\
    ( (This)->lpVtbl -> put_ExpirationDate(This,ExpirationDate) ) 

#define UserPermission_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define UserPermission_Remove(This)	\
    ( (This)->lpVtbl -> Remove(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __UserPermission_INTERFACE_DEFINED__ */


#ifndef __Permission_INTERFACE_DEFINED__
#define __Permission_INTERFACE_DEFINED__

/* interface Permission */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Permission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000C0376-0000-0000-C000-000000000046")
    Permission : public _IMsoDispObj
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ UserPermission **UserPerm) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableTrustedBrowser( 
            /* [retval][out] */ VARIANT_BOOL *Enable) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableTrustedBrowser( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR UserId,
            /* [optional][in] */ VARIANT Permission,
            /* [optional][in] */ VARIANT ExpirationDate,
            /* [retval][out] */ UserPermission **UserPerm) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ApplyPolicy( 
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppidisp) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RequestPermissionURL( 
            /* [retval][out] */ BSTR *Contact) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RequestPermissionURL( 
            /* [in] */ BSTR Contact) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PolicyName( 
            /* [retval][out] */ BSTR *PolicyName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PolicyDescription( 
            /* [retval][out] */ BSTR *PolicyDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StoreLicenses( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StoreLicenses( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocumentAuthor( 
            /* [retval][out] */ BSTR *Author) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocumentAuthor( 
            /* [in] */ BSTR Author) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PermissionFromPolicy( 
            /* [retval][out] */ VARIANT_BOOL *FromPolicy) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct PermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Permission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Permission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Permission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Permission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Permission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Permission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Permission * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Permission * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Permission * This,
            /* [retval][out] */ long *plCreator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Permission * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ UserPermission **UserPerm);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Permission * This,
            /* [retval][out] */ long *Count);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableTrustedBrowser )( 
            Permission * This,
            /* [retval][out] */ VARIANT_BOOL *Enable);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableTrustedBrowser )( 
            Permission * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Permission * This,
            /* [in] */ BSTR UserId,
            /* [optional][in] */ VARIANT Permission,
            /* [optional][in] */ VARIANT ExpirationDate,
            /* [retval][out] */ UserPermission **UserPerm);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ApplyPolicy )( 
            Permission * This,
            /* [in] */ BSTR FileName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Permission * This,
            /* [retval][out] */ IDispatch **ppidisp);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            Permission * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            Permission * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            Permission * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RequestPermissionURL )( 
            Permission * This,
            /* [retval][out] */ BSTR *Contact);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RequestPermissionURL )( 
            Permission * This,
            /* [in] */ BSTR Contact);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyName )( 
            Permission * This,
            /* [retval][out] */ BSTR *PolicyName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyDescription )( 
            Permission * This,
            /* [retval][out] */ BSTR *PolicyDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StoreLicenses )( 
            Permission * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StoreLicenses )( 
            Permission * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentAuthor )( 
            Permission * This,
            /* [retval][out] */ BSTR *Author);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocumentAuthor )( 
            Permission * This,
            /* [in] */ BSTR Author);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PermissionFromPolicy )( 
            Permission * This,
            /* [retval][out] */ VARIANT_BOOL *FromPolicy);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            Permission * This,
            /* [retval][out] */ IUnknown **ppunkEnum);
        
        END_INTERFACE
    } PermissionVtbl;

    interface Permission
    {
        CONST_VTBL struct PermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Permission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Permission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Permission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Permission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Permission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Permission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Permission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Permission_get_Application(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Application(This,ppidisp) ) 

#define Permission_get_Creator(This,plCreator)	\
    ( (This)->lpVtbl -> get_Creator(This,plCreator) ) 


#define Permission_get_Item(This,Index,UserPerm)	\
    ( (This)->lpVtbl -> get_Item(This,Index,UserPerm) ) 

#define Permission_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Permission_get_EnableTrustedBrowser(This,Enable)	\
    ( (This)->lpVtbl -> get_EnableTrustedBrowser(This,Enable) ) 

#define Permission_put_EnableTrustedBrowser(This,Enable)	\
    ( (This)->lpVtbl -> put_EnableTrustedBrowser(This,Enable) ) 

#define Permission_Add(This,UserId,Permission,ExpirationDate,UserPerm)	\
    ( (This)->lpVtbl -> Add(This,UserId,Permission,ExpirationDate,UserPerm) ) 

#define Permission_ApplyPolicy(This,FileName)	\
    ( (This)->lpVtbl -> ApplyPolicy(This,FileName) ) 

#define Permission_get_Parent(This,ppidisp)	\
    ( (This)->lpVtbl -> get_Parent(This,ppidisp) ) 

#define Permission_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#define Permission_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define Permission_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define Permission_get_RequestPermissionURL(This,Contact)	\
    ( (This)->lpVtbl -> get_RequestPermissionURL(This,Contact) ) 

#define Permission_put_RequestPermissionURL(This,Contact)	\
    ( (This)->lpVtbl -> put_RequestPermissionURL(This,Contact) ) 

#define Permission_get_PolicyName(This,PolicyName)	\
    ( (This)->lpVtbl -> get_PolicyName(This,PolicyName) ) 

#define Permission_get_PolicyDescription(This,PolicyDescription)	\
    ( (This)->lpVtbl -> get_PolicyDescription(This,PolicyDescription) ) 

#define Permission_get_StoreLicenses(This,Enabled)	\
    ( (This)->lpVtbl -> get_StoreLicenses(This,Enabled) ) 

#define Permission_put_StoreLicenses(This,Enabled)	\
    ( (This)->lpVtbl -> put_StoreLicenses(This,Enabled) ) 

#define Permission_get_DocumentAuthor(This,Author)	\
    ( (This)->lpVtbl -> get_DocumentAuthor(This,Author) ) 

#define Permission_put_DocumentAuthor(This,Author)	\
    ( (This)->lpVtbl -> put_DocumentAuthor(This,Author) ) 

#define Permission_get_PermissionFromPolicy(This,FromPolicy)	\
    ( (This)->lpVtbl -> get_PermissionFromPolicy(This,FromPolicy) ) 

#define Permission_get__NewEnum(This,ppunkEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppunkEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Permission_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_CommandBars;

#ifdef __cplusplus

class DECLSPEC_UUID("55F88893-7708-11D1-ACEB-006008961DA5")
CommandBars;
#endif

EXTERN_C const CLSID CLSID_CommandBarComboBox;

#ifdef __cplusplus

class DECLSPEC_UUID("55F88897-7708-11D1-ACEB-006008961DA5")
CommandBarComboBox;
#endif

EXTERN_C const CLSID CLSID_CommandBarButton;

#ifdef __cplusplus

class DECLSPEC_UUID("55F88891-7708-11D1-ACEB-006008961DA5")
CommandBarButton;
#endif

EXTERN_C const CLSID CLSID_MsoEnvelope;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F01A-0000-0000-C000-000000000046")
MsoEnvelope;
#endif
#endif /* __Office_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


