

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.00.0595 */
/* at Sun Sep 15 13:49:07 2013
 */
/* Compiler settings for msoutl_temp.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 8.00.0595 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __msoutl_h__
#define __msoutl_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ___IRecipientControl_FWD_DEFINED__
#define ___IRecipientControl_FWD_DEFINED__
typedef interface _IRecipientControl _IRecipientControl;

#endif 	/* ___IRecipientControl_FWD_DEFINED__ */


#ifndef ___DRecipientControl_FWD_DEFINED__
#define ___DRecipientControl_FWD_DEFINED__
typedef interface _DRecipientControl _DRecipientControl;

#endif 	/* ___DRecipientControl_FWD_DEFINED__ */


#ifndef ___DRecipientControlEvents_FWD_DEFINED__
#define ___DRecipientControlEvents_FWD_DEFINED__
typedef interface _DRecipientControlEvents _DRecipientControlEvents;

#endif 	/* ___DRecipientControlEvents_FWD_DEFINED__ */


#ifndef ___IDocSiteControl_FWD_DEFINED__
#define ___IDocSiteControl_FWD_DEFINED__
typedef interface _IDocSiteControl _IDocSiteControl;

#endif 	/* ___IDocSiteControl_FWD_DEFINED__ */


#ifndef ___DDocSiteControl_FWD_DEFINED__
#define ___DDocSiteControl_FWD_DEFINED__
typedef interface _DDocSiteControl _DDocSiteControl;

#endif 	/* ___DDocSiteControl_FWD_DEFINED__ */


#ifndef ___DDocSiteControlEvents_FWD_DEFINED__
#define ___DDocSiteControlEvents_FWD_DEFINED__
typedef interface _DDocSiteControlEvents _DDocSiteControlEvents;

#endif 	/* ___DDocSiteControlEvents_FWD_DEFINED__ */


#ifndef __OlkControl_FWD_DEFINED__
#define __OlkControl_FWD_DEFINED__
typedef interface OlkControl OlkControl;

#endif 	/* __OlkControl_FWD_DEFINED__ */


#ifndef ___OlkTextBox_FWD_DEFINED__
#define ___OlkTextBox_FWD_DEFINED__
typedef interface _OlkTextBox _OlkTextBox;

#endif 	/* ___OlkTextBox_FWD_DEFINED__ */


#ifndef __OlkTextBoxEvents_FWD_DEFINED__
#define __OlkTextBoxEvents_FWD_DEFINED__
typedef interface OlkTextBoxEvents OlkTextBoxEvents;

#endif 	/* __OlkTextBoxEvents_FWD_DEFINED__ */


#ifndef ___OlkLabel_FWD_DEFINED__
#define ___OlkLabel_FWD_DEFINED__
typedef interface _OlkLabel _OlkLabel;

#endif 	/* ___OlkLabel_FWD_DEFINED__ */


#ifndef __OlkLabelEvents_FWD_DEFINED__
#define __OlkLabelEvents_FWD_DEFINED__
typedef interface OlkLabelEvents OlkLabelEvents;

#endif 	/* __OlkLabelEvents_FWD_DEFINED__ */


#ifndef ___OlkCommandButton_FWD_DEFINED__
#define ___OlkCommandButton_FWD_DEFINED__
typedef interface _OlkCommandButton _OlkCommandButton;

#endif 	/* ___OlkCommandButton_FWD_DEFINED__ */


#ifndef __OlkCommandButtonEvents_FWD_DEFINED__
#define __OlkCommandButtonEvents_FWD_DEFINED__
typedef interface OlkCommandButtonEvents OlkCommandButtonEvents;

#endif 	/* __OlkCommandButtonEvents_FWD_DEFINED__ */


#ifndef ___OlkCheckBox_FWD_DEFINED__
#define ___OlkCheckBox_FWD_DEFINED__
typedef interface _OlkCheckBox _OlkCheckBox;

#endif 	/* ___OlkCheckBox_FWD_DEFINED__ */


#ifndef __OlkCheckBoxEvents_FWD_DEFINED__
#define __OlkCheckBoxEvents_FWD_DEFINED__
typedef interface OlkCheckBoxEvents OlkCheckBoxEvents;

#endif 	/* __OlkCheckBoxEvents_FWD_DEFINED__ */


#ifndef ___OlkOptionButton_FWD_DEFINED__
#define ___OlkOptionButton_FWD_DEFINED__
typedef interface _OlkOptionButton _OlkOptionButton;

#endif 	/* ___OlkOptionButton_FWD_DEFINED__ */


#ifndef __OlkOptionButtonEvents_FWD_DEFINED__
#define __OlkOptionButtonEvents_FWD_DEFINED__
typedef interface OlkOptionButtonEvents OlkOptionButtonEvents;

#endif 	/* __OlkOptionButtonEvents_FWD_DEFINED__ */


#ifndef ___OlkComboBox_FWD_DEFINED__
#define ___OlkComboBox_FWD_DEFINED__
typedef interface _OlkComboBox _OlkComboBox;

#endif 	/* ___OlkComboBox_FWD_DEFINED__ */


#ifndef __OlkComboBoxEvents_FWD_DEFINED__
#define __OlkComboBoxEvents_FWD_DEFINED__
typedef interface OlkComboBoxEvents OlkComboBoxEvents;

#endif 	/* __OlkComboBoxEvents_FWD_DEFINED__ */


#ifndef ___OlkListBox_FWD_DEFINED__
#define ___OlkListBox_FWD_DEFINED__
typedef interface _OlkListBox _OlkListBox;

#endif 	/* ___OlkListBox_FWD_DEFINED__ */


#ifndef __OlkListBoxEvents_FWD_DEFINED__
#define __OlkListBoxEvents_FWD_DEFINED__
typedef interface OlkListBoxEvents OlkListBoxEvents;

#endif 	/* __OlkListBoxEvents_FWD_DEFINED__ */


#ifndef ___OlkInfoBar_FWD_DEFINED__
#define ___OlkInfoBar_FWD_DEFINED__
typedef interface _OlkInfoBar _OlkInfoBar;

#endif 	/* ___OlkInfoBar_FWD_DEFINED__ */


#ifndef __OlkInfoBarEvents_FWD_DEFINED__
#define __OlkInfoBarEvents_FWD_DEFINED__
typedef interface OlkInfoBarEvents OlkInfoBarEvents;

#endif 	/* __OlkInfoBarEvents_FWD_DEFINED__ */


#ifndef ___OlkContactPhoto_FWD_DEFINED__
#define ___OlkContactPhoto_FWD_DEFINED__
typedef interface _OlkContactPhoto _OlkContactPhoto;

#endif 	/* ___OlkContactPhoto_FWD_DEFINED__ */


#ifndef __OlkContactPhotoEvents_FWD_DEFINED__
#define __OlkContactPhotoEvents_FWD_DEFINED__
typedef interface OlkContactPhotoEvents OlkContactPhotoEvents;

#endif 	/* __OlkContactPhotoEvents_FWD_DEFINED__ */


#ifndef ___OlkBusinessCardControl_FWD_DEFINED__
#define ___OlkBusinessCardControl_FWD_DEFINED__
typedef interface _OlkBusinessCardControl _OlkBusinessCardControl;

#endif 	/* ___OlkBusinessCardControl_FWD_DEFINED__ */


#ifndef __OlkBusinessCardControlEvents_FWD_DEFINED__
#define __OlkBusinessCardControlEvents_FWD_DEFINED__
typedef interface OlkBusinessCardControlEvents OlkBusinessCardControlEvents;

#endif 	/* __OlkBusinessCardControlEvents_FWD_DEFINED__ */


#ifndef ___OlkPageControl_FWD_DEFINED__
#define ___OlkPageControl_FWD_DEFINED__
typedef interface _OlkPageControl _OlkPageControl;

#endif 	/* ___OlkPageControl_FWD_DEFINED__ */


#ifndef __OlkPageControlEvents_FWD_DEFINED__
#define __OlkPageControlEvents_FWD_DEFINED__
typedef interface OlkPageControlEvents OlkPageControlEvents;

#endif 	/* __OlkPageControlEvents_FWD_DEFINED__ */


#ifndef ___OlkDateControl_FWD_DEFINED__
#define ___OlkDateControl_FWD_DEFINED__
typedef interface _OlkDateControl _OlkDateControl;

#endif 	/* ___OlkDateControl_FWD_DEFINED__ */


#ifndef __OlkDateControlEvents_FWD_DEFINED__
#define __OlkDateControlEvents_FWD_DEFINED__
typedef interface OlkDateControlEvents OlkDateControlEvents;

#endif 	/* __OlkDateControlEvents_FWD_DEFINED__ */


#ifndef ___OlkTimeControl_FWD_DEFINED__
#define ___OlkTimeControl_FWD_DEFINED__
typedef interface _OlkTimeControl _OlkTimeControl;

#endif 	/* ___OlkTimeControl_FWD_DEFINED__ */


#ifndef __OlkTimeControlEvents_FWD_DEFINED__
#define __OlkTimeControlEvents_FWD_DEFINED__
typedef interface OlkTimeControlEvents OlkTimeControlEvents;

#endif 	/* __OlkTimeControlEvents_FWD_DEFINED__ */


#ifndef ___OlkCategory_FWD_DEFINED__
#define ___OlkCategory_FWD_DEFINED__
typedef interface _OlkCategory _OlkCategory;

#endif 	/* ___OlkCategory_FWD_DEFINED__ */


#ifndef __OlkCategoryEvents_FWD_DEFINED__
#define __OlkCategoryEvents_FWD_DEFINED__
typedef interface OlkCategoryEvents OlkCategoryEvents;

#endif 	/* __OlkCategoryEvents_FWD_DEFINED__ */


#ifndef ___OlkFrameHeader_FWD_DEFINED__
#define ___OlkFrameHeader_FWD_DEFINED__
typedef interface _OlkFrameHeader _OlkFrameHeader;

#endif 	/* ___OlkFrameHeader_FWD_DEFINED__ */


#ifndef __OlkFrameHeaderEvents_FWD_DEFINED__
#define __OlkFrameHeaderEvents_FWD_DEFINED__
typedef interface OlkFrameHeaderEvents OlkFrameHeaderEvents;

#endif 	/* __OlkFrameHeaderEvents_FWD_DEFINED__ */


#ifndef ___OlkSenderPhoto_FWD_DEFINED__
#define ___OlkSenderPhoto_FWD_DEFINED__
typedef interface _OlkSenderPhoto _OlkSenderPhoto;

#endif 	/* ___OlkSenderPhoto_FWD_DEFINED__ */


#ifndef __OlkSenderPhotoEvents_FWD_DEFINED__
#define __OlkSenderPhotoEvents_FWD_DEFINED__
typedef interface OlkSenderPhotoEvents OlkSenderPhotoEvents;

#endif 	/* __OlkSenderPhotoEvents_FWD_DEFINED__ */


#ifndef ___TimeZone_FWD_DEFINED__
#define ___TimeZone_FWD_DEFINED__
typedef interface _TimeZone _TimeZone;

#endif 	/* ___TimeZone_FWD_DEFINED__ */


#ifndef ___Application_FWD_DEFINED__
#define ___Application_FWD_DEFINED__
typedef interface _Application _Application;

#endif 	/* ___Application_FWD_DEFINED__ */


#ifndef ___NameSpace_FWD_DEFINED__
#define ___NameSpace_FWD_DEFINED__
typedef interface _NameSpace _NameSpace;

#endif 	/* ___NameSpace_FWD_DEFINED__ */


#ifndef __Recipient_FWD_DEFINED__
#define __Recipient_FWD_DEFINED__
typedef interface Recipient Recipient;

#endif 	/* __Recipient_FWD_DEFINED__ */


#ifndef __AddressEntry_FWD_DEFINED__
#define __AddressEntry_FWD_DEFINED__
typedef interface AddressEntry AddressEntry;

#endif 	/* __AddressEntry_FWD_DEFINED__ */


#ifndef __AddressEntries_FWD_DEFINED__
#define __AddressEntries_FWD_DEFINED__
typedef interface AddressEntries AddressEntries;

#endif 	/* __AddressEntries_FWD_DEFINED__ */


#ifndef ___ContactItem_FWD_DEFINED__
#define ___ContactItem_FWD_DEFINED__
typedef interface _ContactItem _ContactItem;

#endif 	/* ___ContactItem_FWD_DEFINED__ */


#ifndef __Actions_FWD_DEFINED__
#define __Actions_FWD_DEFINED__
typedef interface Actions Actions;

#endif 	/* __Actions_FWD_DEFINED__ */


#ifndef __Action_FWD_DEFINED__
#define __Action_FWD_DEFINED__
typedef interface Action Action;

#endif 	/* __Action_FWD_DEFINED__ */


#ifndef __Attachments_FWD_DEFINED__
#define __Attachments_FWD_DEFINED__
typedef interface Attachments Attachments;

#endif 	/* __Attachments_FWD_DEFINED__ */


#ifndef __Attachment_FWD_DEFINED__
#define __Attachment_FWD_DEFINED__
typedef interface Attachment Attachment;

#endif 	/* __Attachment_FWD_DEFINED__ */


#ifndef ___PropertyAccessor_FWD_DEFINED__
#define ___PropertyAccessor_FWD_DEFINED__
typedef interface _PropertyAccessor _PropertyAccessor;

#endif 	/* ___PropertyAccessor_FWD_DEFINED__ */


#ifndef __FormDescription_FWD_DEFINED__
#define __FormDescription_FWD_DEFINED__
typedef interface FormDescription FormDescription;

#endif 	/* __FormDescription_FWD_DEFINED__ */


#ifndef ___Inspector_FWD_DEFINED__
#define ___Inspector_FWD_DEFINED__
typedef interface _Inspector _Inspector;

#endif 	/* ___Inspector_FWD_DEFINED__ */


#ifndef ___AttachmentSelection_FWD_DEFINED__
#define ___AttachmentSelection_FWD_DEFINED__
typedef interface _AttachmentSelection _AttachmentSelection;

#endif 	/* ___AttachmentSelection_FWD_DEFINED__ */


#ifndef __Selection_FWD_DEFINED__
#define __Selection_FWD_DEFINED__
typedef interface Selection Selection;

#endif 	/* __Selection_FWD_DEFINED__ */


#ifndef __UserProperties_FWD_DEFINED__
#define __UserProperties_FWD_DEFINED__
typedef interface UserProperties UserProperties;

#endif 	/* __UserProperties_FWD_DEFINED__ */


#ifndef __UserProperty_FWD_DEFINED__
#define __UserProperty_FWD_DEFINED__
typedef interface UserProperty UserProperty;

#endif 	/* __UserProperty_FWD_DEFINED__ */


#ifndef __MAPIFolder_FWD_DEFINED__
#define __MAPIFolder_FWD_DEFINED__
typedef interface MAPIFolder MAPIFolder;

#endif 	/* __MAPIFolder_FWD_DEFINED__ */


#ifndef ___Folders_FWD_DEFINED__
#define ___Folders_FWD_DEFINED__
typedef interface _Folders _Folders;

#endif 	/* ___Folders_FWD_DEFINED__ */


#ifndef ___Items_FWD_DEFINED__
#define ___Items_FWD_DEFINED__
typedef interface _Items _Items;

#endif 	/* ___Items_FWD_DEFINED__ */


#ifndef ___Explorer_FWD_DEFINED__
#define ___Explorer_FWD_DEFINED__
typedef interface _Explorer _Explorer;

#endif 	/* ___Explorer_FWD_DEFINED__ */


#ifndef __Panes_FWD_DEFINED__
#define __Panes_FWD_DEFINED__
typedef interface Panes Panes;

#endif 	/* __Panes_FWD_DEFINED__ */


#ifndef ___NavigationPane_FWD_DEFINED__
#define ___NavigationPane_FWD_DEFINED__
typedef interface _NavigationPane _NavigationPane;

#endif 	/* ___NavigationPane_FWD_DEFINED__ */


#ifndef ___NavigationModule_FWD_DEFINED__
#define ___NavigationModule_FWD_DEFINED__
typedef interface _NavigationModule _NavigationModule;

#endif 	/* ___NavigationModule_FWD_DEFINED__ */


#ifndef ___NavigationModules_FWD_DEFINED__
#define ___NavigationModules_FWD_DEFINED__
typedef interface _NavigationModules _NavigationModules;

#endif 	/* ___NavigationModules_FWD_DEFINED__ */


#ifndef ___AccountSelector_FWD_DEFINED__
#define ___AccountSelector_FWD_DEFINED__
typedef interface _AccountSelector _AccountSelector;

#endif 	/* ___AccountSelector_FWD_DEFINED__ */


#ifndef ___Account_FWD_DEFINED__
#define ___Account_FWD_DEFINED__
typedef interface _Account _Account;

#endif 	/* ___Account_FWD_DEFINED__ */


#ifndef ___Store_FWD_DEFINED__
#define ___Store_FWD_DEFINED__
typedef interface _Store _Store;

#endif 	/* ___Store_FWD_DEFINED__ */


#ifndef ___Rules_FWD_DEFINED__
#define ___Rules_FWD_DEFINED__
typedef interface _Rules _Rules;

#endif 	/* ___Rules_FWD_DEFINED__ */


#ifndef ___Rule_FWD_DEFINED__
#define ___Rule_FWD_DEFINED__
typedef interface _Rule _Rule;

#endif 	/* ___Rule_FWD_DEFINED__ */


#ifndef ___RuleActions_FWD_DEFINED__
#define ___RuleActions_FWD_DEFINED__
typedef interface _RuleActions _RuleActions;

#endif 	/* ___RuleActions_FWD_DEFINED__ */


#ifndef ___RuleAction_FWD_DEFINED__
#define ___RuleAction_FWD_DEFINED__
typedef interface _RuleAction _RuleAction;

#endif 	/* ___RuleAction_FWD_DEFINED__ */


#ifndef ___MoveOrCopyRuleAction_FWD_DEFINED__
#define ___MoveOrCopyRuleAction_FWD_DEFINED__
typedef interface _MoveOrCopyRuleAction _MoveOrCopyRuleAction;

#endif 	/* ___MoveOrCopyRuleAction_FWD_DEFINED__ */


#ifndef ___SendRuleAction_FWD_DEFINED__
#define ___SendRuleAction_FWD_DEFINED__
typedef interface _SendRuleAction _SendRuleAction;

#endif 	/* ___SendRuleAction_FWD_DEFINED__ */


#ifndef __Recipients_FWD_DEFINED__
#define __Recipients_FWD_DEFINED__
typedef interface Recipients Recipients;

#endif 	/* __Recipients_FWD_DEFINED__ */


#ifndef ___AssignToCategoryRuleAction_FWD_DEFINED__
#define ___AssignToCategoryRuleAction_FWD_DEFINED__
typedef interface _AssignToCategoryRuleAction _AssignToCategoryRuleAction;

#endif 	/* ___AssignToCategoryRuleAction_FWD_DEFINED__ */


#ifndef ___PlaySoundRuleAction_FWD_DEFINED__
#define ___PlaySoundRuleAction_FWD_DEFINED__
typedef interface _PlaySoundRuleAction _PlaySoundRuleAction;

#endif 	/* ___PlaySoundRuleAction_FWD_DEFINED__ */


#ifndef ___MarkAsTaskRuleAction_FWD_DEFINED__
#define ___MarkAsTaskRuleAction_FWD_DEFINED__
typedef interface _MarkAsTaskRuleAction _MarkAsTaskRuleAction;

#endif 	/* ___MarkAsTaskRuleAction_FWD_DEFINED__ */


#ifndef ___NewItemAlertRuleAction_FWD_DEFINED__
#define ___NewItemAlertRuleAction_FWD_DEFINED__
typedef interface _NewItemAlertRuleAction _NewItemAlertRuleAction;

#endif 	/* ___NewItemAlertRuleAction_FWD_DEFINED__ */


#ifndef ___RuleConditions_FWD_DEFINED__
#define ___RuleConditions_FWD_DEFINED__
typedef interface _RuleConditions _RuleConditions;

#endif 	/* ___RuleConditions_FWD_DEFINED__ */


#ifndef ___RuleCondition_FWD_DEFINED__
#define ___RuleCondition_FWD_DEFINED__
typedef interface _RuleCondition _RuleCondition;

#endif 	/* ___RuleCondition_FWD_DEFINED__ */


#ifndef ___ImportanceRuleCondition_FWD_DEFINED__
#define ___ImportanceRuleCondition_FWD_DEFINED__
typedef interface _ImportanceRuleCondition _ImportanceRuleCondition;

#endif 	/* ___ImportanceRuleCondition_FWD_DEFINED__ */


#ifndef ___AccountRuleCondition_FWD_DEFINED__
#define ___AccountRuleCondition_FWD_DEFINED__
typedef interface _AccountRuleCondition _AccountRuleCondition;

#endif 	/* ___AccountRuleCondition_FWD_DEFINED__ */


#ifndef ___TextRuleCondition_FWD_DEFINED__
#define ___TextRuleCondition_FWD_DEFINED__
typedef interface _TextRuleCondition _TextRuleCondition;

#endif 	/* ___TextRuleCondition_FWD_DEFINED__ */


#ifndef ___CategoryRuleCondition_FWD_DEFINED__
#define ___CategoryRuleCondition_FWD_DEFINED__
typedef interface _CategoryRuleCondition _CategoryRuleCondition;

#endif 	/* ___CategoryRuleCondition_FWD_DEFINED__ */


#ifndef ___FormNameRuleCondition_FWD_DEFINED__
#define ___FormNameRuleCondition_FWD_DEFINED__
typedef interface _FormNameRuleCondition _FormNameRuleCondition;

#endif 	/* ___FormNameRuleCondition_FWD_DEFINED__ */


#ifndef ___ToOrFromRuleCondition_FWD_DEFINED__
#define ___ToOrFromRuleCondition_FWD_DEFINED__
typedef interface _ToOrFromRuleCondition _ToOrFromRuleCondition;

#endif 	/* ___ToOrFromRuleCondition_FWD_DEFINED__ */


#ifndef ___AddressRuleCondition_FWD_DEFINED__
#define ___AddressRuleCondition_FWD_DEFINED__
typedef interface _AddressRuleCondition _AddressRuleCondition;

#endif 	/* ___AddressRuleCondition_FWD_DEFINED__ */


#ifndef ___SenderInAddressListRuleCondition_FWD_DEFINED__
#define ___SenderInAddressListRuleCondition_FWD_DEFINED__
typedef interface _SenderInAddressListRuleCondition _SenderInAddressListRuleCondition;

#endif 	/* ___SenderInAddressListRuleCondition_FWD_DEFINED__ */


#ifndef __AddressList_FWD_DEFINED__
#define __AddressList_FWD_DEFINED__
typedef interface AddressList AddressList;

#endif 	/* __AddressList_FWD_DEFINED__ */


#ifndef ___FromRssFeedRuleCondition_FWD_DEFINED__
#define ___FromRssFeedRuleCondition_FWD_DEFINED__
typedef interface _FromRssFeedRuleCondition _FromRssFeedRuleCondition;

#endif 	/* ___FromRssFeedRuleCondition_FWD_DEFINED__ */


#ifndef ___Categories_FWD_DEFINED__
#define ___Categories_FWD_DEFINED__
typedef interface _Categories _Categories;

#endif 	/* ___Categories_FWD_DEFINED__ */


#ifndef ___Category_FWD_DEFINED__
#define ___Category_FWD_DEFINED__
typedef interface _Category _Category;

#endif 	/* ___Category_FWD_DEFINED__ */


#ifndef __View_FWD_DEFINED__
#define __View_FWD_DEFINED__
typedef interface View View;

#endif 	/* __View_FWD_DEFINED__ */


#ifndef ___Views_FWD_DEFINED__
#define ___Views_FWD_DEFINED__
typedef interface _Views _Views;

#endif 	/* ___Views_FWD_DEFINED__ */


#ifndef ___StorageItem_FWD_DEFINED__
#define ___StorageItem_FWD_DEFINED__
typedef interface _StorageItem _StorageItem;

#endif 	/* ___StorageItem_FWD_DEFINED__ */


#ifndef ___Table_FWD_DEFINED__
#define ___Table_FWD_DEFINED__
typedef interface _Table _Table;

#endif 	/* ___Table_FWD_DEFINED__ */


#ifndef ___Row_FWD_DEFINED__
#define ___Row_FWD_DEFINED__
typedef interface _Row _Row;

#endif 	/* ___Row_FWD_DEFINED__ */


#ifndef ___Columns_FWD_DEFINED__
#define ___Columns_FWD_DEFINED__
typedef interface _Columns _Columns;

#endif 	/* ___Columns_FWD_DEFINED__ */


#ifndef ___Column_FWD_DEFINED__
#define ___Column_FWD_DEFINED__
typedef interface _Column _Column;

#endif 	/* ___Column_FWD_DEFINED__ */


#ifndef ___CalendarSharing_FWD_DEFINED__
#define ___CalendarSharing_FWD_DEFINED__
typedef interface _CalendarSharing _CalendarSharing;

#endif 	/* ___CalendarSharing_FWD_DEFINED__ */


#ifndef ___MailItem_FWD_DEFINED__
#define ___MailItem_FWD_DEFINED__
typedef interface _MailItem _MailItem;

#endif 	/* ___MailItem_FWD_DEFINED__ */


#ifndef __Links_FWD_DEFINED__
#define __Links_FWD_DEFINED__
typedef interface Links Links;

#endif 	/* __Links_FWD_DEFINED__ */


#ifndef __Link_FWD_DEFINED__
#define __Link_FWD_DEFINED__
typedef interface Link Link;

#endif 	/* __Link_FWD_DEFINED__ */


#ifndef __ItemProperties_FWD_DEFINED__
#define __ItemProperties_FWD_DEFINED__
typedef interface ItemProperties ItemProperties;

#endif 	/* __ItemProperties_FWD_DEFINED__ */


#ifndef __ItemProperty_FWD_DEFINED__
#define __ItemProperty_FWD_DEFINED__
typedef interface ItemProperty ItemProperty;

#endif 	/* __ItemProperty_FWD_DEFINED__ */


#ifndef __Conflicts_FWD_DEFINED__
#define __Conflicts_FWD_DEFINED__
typedef interface Conflicts Conflicts;

#endif 	/* __Conflicts_FWD_DEFINED__ */


#ifndef __Conflict_FWD_DEFINED__
#define __Conflict_FWD_DEFINED__
typedef interface Conflict Conflict;

#endif 	/* __Conflict_FWD_DEFINED__ */


#ifndef __ItemEvents_FWD_DEFINED__
#define __ItemEvents_FWD_DEFINED__
typedef interface ItemEvents ItemEvents;

#endif 	/* __ItemEvents_FWD_DEFINED__ */


#ifndef __ItemEvents_10_FWD_DEFINED__
#define __ItemEvents_10_FWD_DEFINED__
typedef interface ItemEvents_10 ItemEvents_10;

#endif 	/* __ItemEvents_10_FWD_DEFINED__ */


#ifndef ___Conversation_FWD_DEFINED__
#define ___Conversation_FWD_DEFINED__
typedef interface _Conversation _Conversation;

#endif 	/* ___Conversation_FWD_DEFINED__ */


#ifndef ___SimpleItems_FWD_DEFINED__
#define ___SimpleItems_FWD_DEFINED__
typedef interface _SimpleItems _SimpleItems;

#endif 	/* ___SimpleItems_FWD_DEFINED__ */


#ifndef ___UserDefinedProperties_FWD_DEFINED__
#define ___UserDefinedProperties_FWD_DEFINED__
typedef interface _UserDefinedProperties _UserDefinedProperties;

#endif 	/* ___UserDefinedProperties_FWD_DEFINED__ */


#ifndef ___UserDefinedProperty_FWD_DEFINED__
#define ___UserDefinedProperty_FWD_DEFINED__
typedef interface _UserDefinedProperty _UserDefinedProperty;

#endif 	/* ___UserDefinedProperty_FWD_DEFINED__ */


#ifndef ___ExchangeUser_FWD_DEFINED__
#define ___ExchangeUser_FWD_DEFINED__
typedef interface _ExchangeUser _ExchangeUser;

#endif 	/* ___ExchangeUser_FWD_DEFINED__ */


#ifndef ___ExchangeDistributionList_FWD_DEFINED__
#define ___ExchangeDistributionList_FWD_DEFINED__
typedef interface _ExchangeDistributionList _ExchangeDistributionList;

#endif 	/* ___ExchangeDistributionList_FWD_DEFINED__ */


#ifndef __AddressLists_FWD_DEFINED__
#define __AddressLists_FWD_DEFINED__
typedef interface AddressLists AddressLists;

#endif 	/* __AddressLists_FWD_DEFINED__ */


#ifndef __SyncObjects_FWD_DEFINED__
#define __SyncObjects_FWD_DEFINED__
typedef interface SyncObjects SyncObjects;

#endif 	/* __SyncObjects_FWD_DEFINED__ */


#ifndef ___SyncObject_FWD_DEFINED__
#define ___SyncObject_FWD_DEFINED__
typedef interface _SyncObject _SyncObject;

#endif 	/* ___SyncObject_FWD_DEFINED__ */


#ifndef __SyncObjectEvents_FWD_DEFINED__
#define __SyncObjectEvents_FWD_DEFINED__
typedef interface SyncObjectEvents SyncObjectEvents;

#endif 	/* __SyncObjectEvents_FWD_DEFINED__ */


#ifndef ___Accounts_FWD_DEFINED__
#define ___Accounts_FWD_DEFINED__
typedef interface _Accounts _Accounts;

#endif 	/* ___Accounts_FWD_DEFINED__ */


#ifndef __AccountsEvents_FWD_DEFINED__
#define __AccountsEvents_FWD_DEFINED__
typedef interface AccountsEvents AccountsEvents;

#endif 	/* __AccountsEvents_FWD_DEFINED__ */


#ifndef ___Stores_FWD_DEFINED__
#define ___Stores_FWD_DEFINED__
typedef interface _Stores _Stores;

#endif 	/* ___Stores_FWD_DEFINED__ */


#ifndef __StoresEvents_12_FWD_DEFINED__
#define __StoresEvents_12_FWD_DEFINED__
typedef interface StoresEvents_12 StoresEvents_12;

#endif 	/* __StoresEvents_12_FWD_DEFINED__ */


#ifndef ___SelectNamesDialog_FWD_DEFINED__
#define ___SelectNamesDialog_FWD_DEFINED__
typedef interface _SelectNamesDialog _SelectNamesDialog;

#endif 	/* ___SelectNamesDialog_FWD_DEFINED__ */


#ifndef ___SharingItem_FWD_DEFINED__
#define ___SharingItem_FWD_DEFINED__
typedef interface _SharingItem _SharingItem;

#endif 	/* ___SharingItem_FWD_DEFINED__ */


#ifndef ___Explorers_FWD_DEFINED__
#define ___Explorers_FWD_DEFINED__
typedef interface _Explorers _Explorers;

#endif 	/* ___Explorers_FWD_DEFINED__ */


#ifndef __ExplorerEvents_FWD_DEFINED__
#define __ExplorerEvents_FWD_DEFINED__
typedef interface ExplorerEvents ExplorerEvents;

#endif 	/* __ExplorerEvents_FWD_DEFINED__ */


#ifndef __ExplorerEvents_10_FWD_DEFINED__
#define __ExplorerEvents_10_FWD_DEFINED__
typedef interface ExplorerEvents_10 ExplorerEvents_10;

#endif 	/* __ExplorerEvents_10_FWD_DEFINED__ */


#ifndef ___Inspectors_FWD_DEFINED__
#define ___Inspectors_FWD_DEFINED__
typedef interface _Inspectors _Inspectors;

#endif 	/* ___Inspectors_FWD_DEFINED__ */


#ifndef __InspectorEvents_FWD_DEFINED__
#define __InspectorEvents_FWD_DEFINED__
typedef interface InspectorEvents InspectorEvents;

#endif 	/* __InspectorEvents_FWD_DEFINED__ */


#ifndef __InspectorEvents_10_FWD_DEFINED__
#define __InspectorEvents_10_FWD_DEFINED__
typedef interface InspectorEvents_10 InspectorEvents_10;

#endif 	/* __InspectorEvents_10_FWD_DEFINED__ */


#ifndef __Search_FWD_DEFINED__
#define __Search_FWD_DEFINED__
typedef interface Search Search;

#endif 	/* __Search_FWD_DEFINED__ */


#ifndef ___Results_FWD_DEFINED__
#define ___Results_FWD_DEFINED__
typedef interface _Results _Results;

#endif 	/* ___Results_FWD_DEFINED__ */


#ifndef ___Reminders_FWD_DEFINED__
#define ___Reminders_FWD_DEFINED__
typedef interface _Reminders _Reminders;

#endif 	/* ___Reminders_FWD_DEFINED__ */


#ifndef ___Reminder_FWD_DEFINED__
#define ___Reminder_FWD_DEFINED__
typedef interface _Reminder _Reminder;

#endif 	/* ___Reminder_FWD_DEFINED__ */


#ifndef ___TimeZones_FWD_DEFINED__
#define ___TimeZones_FWD_DEFINED__
typedef interface _TimeZones _TimeZones;

#endif 	/* ___TimeZones_FWD_DEFINED__ */


#ifndef ___OlkTimeZoneControl_FWD_DEFINED__
#define ___OlkTimeZoneControl_FWD_DEFINED__
typedef interface _OlkTimeZoneControl _OlkTimeZoneControl;

#endif 	/* ___OlkTimeZoneControl_FWD_DEFINED__ */


#ifndef __OlkTimeZoneControlEvents_FWD_DEFINED__
#define __OlkTimeZoneControlEvents_FWD_DEFINED__
typedef interface OlkTimeZoneControlEvents OlkTimeZoneControlEvents;

#endif 	/* __OlkTimeZoneControlEvents_FWD_DEFINED__ */


#ifndef __ApplicationEvents_FWD_DEFINED__
#define __ApplicationEvents_FWD_DEFINED__
typedef interface ApplicationEvents ApplicationEvents;

#endif 	/* __ApplicationEvents_FWD_DEFINED__ */


#ifndef __PropertyPages_FWD_DEFINED__
#define __PropertyPages_FWD_DEFINED__
typedef interface PropertyPages PropertyPages;

#endif 	/* __PropertyPages_FWD_DEFINED__ */


#ifndef __RecurrencePattern_FWD_DEFINED__
#define __RecurrencePattern_FWD_DEFINED__
typedef interface RecurrencePattern RecurrencePattern;

#endif 	/* __RecurrencePattern_FWD_DEFINED__ */


#ifndef __Exceptions_FWD_DEFINED__
#define __Exceptions_FWD_DEFINED__
typedef interface Exceptions Exceptions;

#endif 	/* __Exceptions_FWD_DEFINED__ */


#ifndef __Exception_FWD_DEFINED__
#define __Exception_FWD_DEFINED__
typedef interface Exception Exception;

#endif 	/* __Exception_FWD_DEFINED__ */


#ifndef ___AppointmentItem_FWD_DEFINED__
#define ___AppointmentItem_FWD_DEFINED__
typedef interface _AppointmentItem _AppointmentItem;

#endif 	/* ___AppointmentItem_FWD_DEFINED__ */


#ifndef ___MeetingItem_FWD_DEFINED__
#define ___MeetingItem_FWD_DEFINED__
typedef interface _MeetingItem _MeetingItem;

#endif 	/* ___MeetingItem_FWD_DEFINED__ */


#ifndef __ExplorersEvents_FWD_DEFINED__
#define __ExplorersEvents_FWD_DEFINED__
typedef interface ExplorersEvents ExplorersEvents;

#endif 	/* __ExplorersEvents_FWD_DEFINED__ */


#ifndef __FoldersEvents_FWD_DEFINED__
#define __FoldersEvents_FWD_DEFINED__
typedef interface FoldersEvents FoldersEvents;

#endif 	/* __FoldersEvents_FWD_DEFINED__ */


#ifndef __InspectorsEvents_FWD_DEFINED__
#define __InspectorsEvents_FWD_DEFINED__
typedef interface InspectorsEvents InspectorsEvents;

#endif 	/* __InspectorsEvents_FWD_DEFINED__ */


#ifndef __ItemsEvents_FWD_DEFINED__
#define __ItemsEvents_FWD_DEFINED__
typedef interface ItemsEvents ItemsEvents;

#endif 	/* __ItemsEvents_FWD_DEFINED__ */


#ifndef __NameSpaceEvents_FWD_DEFINED__
#define __NameSpaceEvents_FWD_DEFINED__
typedef interface NameSpaceEvents NameSpaceEvents;

#endif 	/* __NameSpaceEvents_FWD_DEFINED__ */


#ifndef __OutlookBarGroup_FWD_DEFINED__
#define __OutlookBarGroup_FWD_DEFINED__
typedef interface OutlookBarGroup OutlookBarGroup;

#endif 	/* __OutlookBarGroup_FWD_DEFINED__ */


#ifndef ___OutlookBarShortcuts_FWD_DEFINED__
#define ___OutlookBarShortcuts_FWD_DEFINED__
typedef interface _OutlookBarShortcuts _OutlookBarShortcuts;

#endif 	/* ___OutlookBarShortcuts_FWD_DEFINED__ */


#ifndef __OutlookBarShortcut_FWD_DEFINED__
#define __OutlookBarShortcut_FWD_DEFINED__
typedef interface OutlookBarShortcut OutlookBarShortcut;

#endif 	/* __OutlookBarShortcut_FWD_DEFINED__ */


#ifndef ___OutlookBarGroups_FWD_DEFINED__
#define ___OutlookBarGroups_FWD_DEFINED__
typedef interface _OutlookBarGroups _OutlookBarGroups;

#endif 	/* ___OutlookBarGroups_FWD_DEFINED__ */


#ifndef __OutlookBarGroupsEvents_FWD_DEFINED__
#define __OutlookBarGroupsEvents_FWD_DEFINED__
typedef interface OutlookBarGroupsEvents OutlookBarGroupsEvents;

#endif 	/* __OutlookBarGroupsEvents_FWD_DEFINED__ */


#ifndef ___OutlookBarPane_FWD_DEFINED__
#define ___OutlookBarPane_FWD_DEFINED__
typedef interface _OutlookBarPane _OutlookBarPane;

#endif 	/* ___OutlookBarPane_FWD_DEFINED__ */


#ifndef __OutlookBarStorage_FWD_DEFINED__
#define __OutlookBarStorage_FWD_DEFINED__
typedef interface OutlookBarStorage OutlookBarStorage;

#endif 	/* __OutlookBarStorage_FWD_DEFINED__ */


#ifndef __OutlookBarPaneEvents_FWD_DEFINED__
#define __OutlookBarPaneEvents_FWD_DEFINED__
typedef interface OutlookBarPaneEvents OutlookBarPaneEvents;

#endif 	/* __OutlookBarPaneEvents_FWD_DEFINED__ */


#ifndef __OutlookBarShortcutsEvents_FWD_DEFINED__
#define __OutlookBarShortcutsEvents_FWD_DEFINED__
typedef interface OutlookBarShortcutsEvents OutlookBarShortcutsEvents;

#endif 	/* __OutlookBarShortcutsEvents_FWD_DEFINED__ */


#ifndef __PropertyPage_FWD_DEFINED__
#define __PropertyPage_FWD_DEFINED__
typedef interface PropertyPage PropertyPage;

#endif 	/* __PropertyPage_FWD_DEFINED__ */


#ifndef __PropertyPageSite_FWD_DEFINED__
#define __PropertyPageSite_FWD_DEFINED__
typedef interface PropertyPageSite PropertyPageSite;

#endif 	/* __PropertyPageSite_FWD_DEFINED__ */


#ifndef __Pages_FWD_DEFINED__
#define __Pages_FWD_DEFINED__
typedef interface Pages Pages;

#endif 	/* __Pages_FWD_DEFINED__ */


#ifndef __ApplicationEvents_10_FWD_DEFINED__
#define __ApplicationEvents_10_FWD_DEFINED__
typedef interface ApplicationEvents_10 ApplicationEvents_10;

#endif 	/* __ApplicationEvents_10_FWD_DEFINED__ */


#ifndef __ApplicationEvents_11_FWD_DEFINED__
#define __ApplicationEvents_11_FWD_DEFINED__
typedef interface ApplicationEvents_11 ApplicationEvents_11;

#endif 	/* __ApplicationEvents_11_FWD_DEFINED__ */


#ifndef __MAPIFolderEvents_12_FWD_DEFINED__
#define __MAPIFolderEvents_12_FWD_DEFINED__
typedef interface MAPIFolderEvents_12 MAPIFolderEvents_12;

#endif 	/* __MAPIFolderEvents_12_FWD_DEFINED__ */


#ifndef __ResultsEvents_FWD_DEFINED__
#define __ResultsEvents_FWD_DEFINED__
typedef interface ResultsEvents ResultsEvents;

#endif 	/* __ResultsEvents_FWD_DEFINED__ */


#ifndef ___ViewsEvents_FWD_DEFINED__
#define ___ViewsEvents_FWD_DEFINED__
typedef interface _ViewsEvents _ViewsEvents;

#endif 	/* ___ViewsEvents_FWD_DEFINED__ */


#ifndef __ReminderCollectionEvents_FWD_DEFINED__
#define __ReminderCollectionEvents_FWD_DEFINED__
typedef interface ReminderCollectionEvents ReminderCollectionEvents;

#endif 	/* __ReminderCollectionEvents_FWD_DEFINED__ */


#ifndef ___DocumentItem_FWD_DEFINED__
#define ___DocumentItem_FWD_DEFINED__
typedef interface _DocumentItem _DocumentItem;

#endif 	/* ___DocumentItem_FWD_DEFINED__ */


#ifndef ___NoteItem_FWD_DEFINED__
#define ___NoteItem_FWD_DEFINED__
typedef interface _NoteItem _NoteItem;

#endif 	/* ___NoteItem_FWD_DEFINED__ */


#ifndef __FormRegionEvents_FWD_DEFINED__
#define __FormRegionEvents_FWD_DEFINED__
typedef interface FormRegionEvents FormRegionEvents;

#endif 	/* __FormRegionEvents_FWD_DEFINED__ */


#ifndef ___ViewField_FWD_DEFINED__
#define ___ViewField_FWD_DEFINED__
typedef interface _ViewField _ViewField;

#endif 	/* ___ViewField_FWD_DEFINED__ */


#ifndef ___ColumnFormat_FWD_DEFINED__
#define ___ColumnFormat_FWD_DEFINED__
typedef interface _ColumnFormat _ColumnFormat;

#endif 	/* ___ColumnFormat_FWD_DEFINED__ */


#ifndef ___ViewFields_FWD_DEFINED__
#define ___ViewFields_FWD_DEFINED__
typedef interface _ViewFields _ViewFields;

#endif 	/* ___ViewFields_FWD_DEFINED__ */


#ifndef ___IconView_FWD_DEFINED__
#define ___IconView_FWD_DEFINED__
typedef interface _IconView _IconView;

#endif 	/* ___IconView_FWD_DEFINED__ */


#ifndef ___OrderFields_FWD_DEFINED__
#define ___OrderFields_FWD_DEFINED__
typedef interface _OrderFields _OrderFields;

#endif 	/* ___OrderFields_FWD_DEFINED__ */


#ifndef ___OrderField_FWD_DEFINED__
#define ___OrderField_FWD_DEFINED__
typedef interface _OrderField _OrderField;

#endif 	/* ___OrderField_FWD_DEFINED__ */


#ifndef ___CardView_FWD_DEFINED__
#define ___CardView_FWD_DEFINED__
typedef interface _CardView _CardView;

#endif 	/* ___CardView_FWD_DEFINED__ */


#ifndef ___ViewFont_FWD_DEFINED__
#define ___ViewFont_FWD_DEFINED__
typedef interface _ViewFont _ViewFont;

#endif 	/* ___ViewFont_FWD_DEFINED__ */


#ifndef ___AutoFormatRules_FWD_DEFINED__
#define ___AutoFormatRules_FWD_DEFINED__
typedef interface _AutoFormatRules _AutoFormatRules;

#endif 	/* ___AutoFormatRules_FWD_DEFINED__ */


#ifndef ___AutoFormatRule_FWD_DEFINED__
#define ___AutoFormatRule_FWD_DEFINED__
typedef interface _AutoFormatRule _AutoFormatRule;

#endif 	/* ___AutoFormatRule_FWD_DEFINED__ */


#ifndef ___TimelineView_FWD_DEFINED__
#define ___TimelineView_FWD_DEFINED__
typedef interface _TimelineView _TimelineView;

#endif 	/* ___TimelineView_FWD_DEFINED__ */


#ifndef ___MailModule_FWD_DEFINED__
#define ___MailModule_FWD_DEFINED__
typedef interface _MailModule _MailModule;

#endif 	/* ___MailModule_FWD_DEFINED__ */


#ifndef ___NavigationGroups_FWD_DEFINED__
#define ___NavigationGroups_FWD_DEFINED__
typedef interface _NavigationGroups _NavigationGroups;

#endif 	/* ___NavigationGroups_FWD_DEFINED__ */


#ifndef ___NavigationGroup_FWD_DEFINED__
#define ___NavigationGroup_FWD_DEFINED__
typedef interface _NavigationGroup _NavigationGroup;

#endif 	/* ___NavigationGroup_FWD_DEFINED__ */


#ifndef ___NavigationFolders_FWD_DEFINED__
#define ___NavigationFolders_FWD_DEFINED__
typedef interface _NavigationFolders _NavigationFolders;

#endif 	/* ___NavigationFolders_FWD_DEFINED__ */


#ifndef ___NavigationFolder_FWD_DEFINED__
#define ___NavigationFolder_FWD_DEFINED__
typedef interface _NavigationFolder _NavigationFolder;

#endif 	/* ___NavigationFolder_FWD_DEFINED__ */


#ifndef ___CalendarModule_FWD_DEFINED__
#define ___CalendarModule_FWD_DEFINED__
typedef interface _CalendarModule _CalendarModule;

#endif 	/* ___CalendarModule_FWD_DEFINED__ */


#ifndef ___ContactsModule_FWD_DEFINED__
#define ___ContactsModule_FWD_DEFINED__
typedef interface _ContactsModule _ContactsModule;

#endif 	/* ___ContactsModule_FWD_DEFINED__ */


#ifndef ___TasksModule_FWD_DEFINED__
#define ___TasksModule_FWD_DEFINED__
typedef interface _TasksModule _TasksModule;

#endif 	/* ___TasksModule_FWD_DEFINED__ */


#ifndef ___JournalModule_FWD_DEFINED__
#define ___JournalModule_FWD_DEFINED__
typedef interface _JournalModule _JournalModule;

#endif 	/* ___JournalModule_FWD_DEFINED__ */


#ifndef ___NotesModule_FWD_DEFINED__
#define ___NotesModule_FWD_DEFINED__
typedef interface _NotesModule _NotesModule;

#endif 	/* ___NotesModule_FWD_DEFINED__ */


#ifndef __NavigationPaneEvents_12_FWD_DEFINED__
#define __NavigationPaneEvents_12_FWD_DEFINED__
typedef interface NavigationPaneEvents_12 NavigationPaneEvents_12;

#endif 	/* __NavigationPaneEvents_12_FWD_DEFINED__ */


#ifndef __NavigationGroupsEvents_12_FWD_DEFINED__
#define __NavigationGroupsEvents_12_FWD_DEFINED__
typedef interface NavigationGroupsEvents_12 NavigationGroupsEvents_12;

#endif 	/* __NavigationGroupsEvents_12_FWD_DEFINED__ */


#ifndef ___BusinessCardView_FWD_DEFINED__
#define ___BusinessCardView_FWD_DEFINED__
typedef interface _BusinessCardView _BusinessCardView;

#endif 	/* ___BusinessCardView_FWD_DEFINED__ */


#ifndef ___FormRegionStartup_FWD_DEFINED__
#define ___FormRegionStartup_FWD_DEFINED__
typedef interface _FormRegionStartup _FormRegionStartup;

#endif 	/* ___FormRegionStartup_FWD_DEFINED__ */


#ifndef ___FormRegion_FWD_DEFINED__
#define ___FormRegion_FWD_DEFINED__
typedef interface _FormRegion _FormRegion;

#endif 	/* ___FormRegion_FWD_DEFINED__ */


#ifndef ___SolutionsModule_FWD_DEFINED__
#define ___SolutionsModule_FWD_DEFINED__
typedef interface _SolutionsModule _SolutionsModule;

#endif 	/* ___SolutionsModule_FWD_DEFINED__ */


#ifndef ___CalendarView_FWD_DEFINED__
#define ___CalendarView_FWD_DEFINED__
typedef interface _CalendarView _CalendarView;

#endif 	/* ___CalendarView_FWD_DEFINED__ */


#ifndef ___TableView_FWD_DEFINED__
#define ___TableView_FWD_DEFINED__
typedef interface _TableView _TableView;

#endif 	/* ___TableView_FWD_DEFINED__ */


#ifndef ___MobileItem_FWD_DEFINED__
#define ___MobileItem_FWD_DEFINED__
typedef interface _MobileItem _MobileItem;

#endif 	/* ___MobileItem_FWD_DEFINED__ */


#ifndef ___JournalItem_FWD_DEFINED__
#define ___JournalItem_FWD_DEFINED__
typedef interface _JournalItem _JournalItem;

#endif 	/* ___JournalItem_FWD_DEFINED__ */


#ifndef ___PostItem_FWD_DEFINED__
#define ___PostItem_FWD_DEFINED__
typedef interface _PostItem _PostItem;

#endif 	/* ___PostItem_FWD_DEFINED__ */


#ifndef ___TaskItem_FWD_DEFINED__
#define ___TaskItem_FWD_DEFINED__
typedef interface _TaskItem _TaskItem;

#endif 	/* ___TaskItem_FWD_DEFINED__ */


#ifndef __AccountSelectorEvents_FWD_DEFINED__
#define __AccountSelectorEvents_FWD_DEFINED__
typedef interface AccountSelectorEvents AccountSelectorEvents;

#endif 	/* __AccountSelectorEvents_FWD_DEFINED__ */


#ifndef ___DistListItem_FWD_DEFINED__
#define ___DistListItem_FWD_DEFINED__
typedef interface _DistListItem _DistListItem;

#endif 	/* ___DistListItem_FWD_DEFINED__ */


#ifndef ___ReportItem_FWD_DEFINED__
#define ___ReportItem_FWD_DEFINED__
typedef interface _ReportItem _ReportItem;

#endif 	/* ___ReportItem_FWD_DEFINED__ */


#ifndef ___RemoteItem_FWD_DEFINED__
#define ___RemoteItem_FWD_DEFINED__
typedef interface _RemoteItem _RemoteItem;

#endif 	/* ___RemoteItem_FWD_DEFINED__ */


#ifndef ___TaskRequestItem_FWD_DEFINED__
#define ___TaskRequestItem_FWD_DEFINED__
typedef interface _TaskRequestItem _TaskRequestItem;

#endif 	/* ___TaskRequestItem_FWD_DEFINED__ */


#ifndef ___TaskRequestAcceptItem_FWD_DEFINED__
#define ___TaskRequestAcceptItem_FWD_DEFINED__
typedef interface _TaskRequestAcceptItem _TaskRequestAcceptItem;

#endif 	/* ___TaskRequestAcceptItem_FWD_DEFINED__ */


#ifndef ___TaskRequestDeclineItem_FWD_DEFINED__
#define ___TaskRequestDeclineItem_FWD_DEFINED__
typedef interface _TaskRequestDeclineItem _TaskRequestDeclineItem;

#endif 	/* ___TaskRequestDeclineItem_FWD_DEFINED__ */


#ifndef ___TaskRequestUpdateItem_FWD_DEFINED__
#define ___TaskRequestUpdateItem_FWD_DEFINED__
typedef interface _TaskRequestUpdateItem _TaskRequestUpdateItem;

#endif 	/* ___TaskRequestUpdateItem_FWD_DEFINED__ */


#ifndef ___ConversationHeader_FWD_DEFINED__
#define ___ConversationHeader_FWD_DEFINED__
typedef interface _ConversationHeader _ConversationHeader;

#endif 	/* ___ConversationHeader_FWD_DEFINED__ */


#ifndef ___PeopleView_FWD_DEFINED__
#define ___PeopleView_FWD_DEFINED__
typedef interface _PeopleView _PeopleView;

#endif 	/* ___PeopleView_FWD_DEFINED__ */


#ifndef ___RecipientControl_FWD_DEFINED__
#define ___RecipientControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class _RecipientControl _RecipientControl;
#else
typedef struct _RecipientControl _RecipientControl;
#endif /* __cplusplus */

#endif 	/* ___RecipientControl_FWD_DEFINED__ */


#ifndef ___DocSiteControl_FWD_DEFINED__
#define ___DocSiteControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class _DocSiteControl _DocSiteControl;
#else
typedef struct _DocSiteControl _DocSiteControl;
#endif /* __cplusplus */

#endif 	/* ___DocSiteControl_FWD_DEFINED__ */


#ifndef __OlkTextBox_FWD_DEFINED__
#define __OlkTextBox_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkTextBox OlkTextBox;
#else
typedef struct OlkTextBox OlkTextBox;
#endif /* __cplusplus */

#endif 	/* __OlkTextBox_FWD_DEFINED__ */


#ifndef __OlkLabel_FWD_DEFINED__
#define __OlkLabel_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkLabel OlkLabel;
#else
typedef struct OlkLabel OlkLabel;
#endif /* __cplusplus */

#endif 	/* __OlkLabel_FWD_DEFINED__ */


#ifndef __OlkCommandButton_FWD_DEFINED__
#define __OlkCommandButton_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkCommandButton OlkCommandButton;
#else
typedef struct OlkCommandButton OlkCommandButton;
#endif /* __cplusplus */

#endif 	/* __OlkCommandButton_FWD_DEFINED__ */


#ifndef __OlkCheckBox_FWD_DEFINED__
#define __OlkCheckBox_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkCheckBox OlkCheckBox;
#else
typedef struct OlkCheckBox OlkCheckBox;
#endif /* __cplusplus */

#endif 	/* __OlkCheckBox_FWD_DEFINED__ */


#ifndef __OlkOptionButton_FWD_DEFINED__
#define __OlkOptionButton_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkOptionButton OlkOptionButton;
#else
typedef struct OlkOptionButton OlkOptionButton;
#endif /* __cplusplus */

#endif 	/* __OlkOptionButton_FWD_DEFINED__ */


#ifndef __OlkComboBox_FWD_DEFINED__
#define __OlkComboBox_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkComboBox OlkComboBox;
#else
typedef struct OlkComboBox OlkComboBox;
#endif /* __cplusplus */

#endif 	/* __OlkComboBox_FWD_DEFINED__ */


#ifndef __OlkListBox_FWD_DEFINED__
#define __OlkListBox_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkListBox OlkListBox;
#else
typedef struct OlkListBox OlkListBox;
#endif /* __cplusplus */

#endif 	/* __OlkListBox_FWD_DEFINED__ */


#ifndef __OlkInfoBar_FWD_DEFINED__
#define __OlkInfoBar_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkInfoBar OlkInfoBar;
#else
typedef struct OlkInfoBar OlkInfoBar;
#endif /* __cplusplus */

#endif 	/* __OlkInfoBar_FWD_DEFINED__ */


#ifndef __OlkContactPhoto_FWD_DEFINED__
#define __OlkContactPhoto_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkContactPhoto OlkContactPhoto;
#else
typedef struct OlkContactPhoto OlkContactPhoto;
#endif /* __cplusplus */

#endif 	/* __OlkContactPhoto_FWD_DEFINED__ */


#ifndef __OlkBusinessCardControl_FWD_DEFINED__
#define __OlkBusinessCardControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkBusinessCardControl OlkBusinessCardControl;
#else
typedef struct OlkBusinessCardControl OlkBusinessCardControl;
#endif /* __cplusplus */

#endif 	/* __OlkBusinessCardControl_FWD_DEFINED__ */


#ifndef __OlkPageControl_FWD_DEFINED__
#define __OlkPageControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkPageControl OlkPageControl;
#else
typedef struct OlkPageControl OlkPageControl;
#endif /* __cplusplus */

#endif 	/* __OlkPageControl_FWD_DEFINED__ */


#ifndef __OlkDateControl_FWD_DEFINED__
#define __OlkDateControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkDateControl OlkDateControl;
#else
typedef struct OlkDateControl OlkDateControl;
#endif /* __cplusplus */

#endif 	/* __OlkDateControl_FWD_DEFINED__ */


#ifndef __OlkTimeControl_FWD_DEFINED__
#define __OlkTimeControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkTimeControl OlkTimeControl;
#else
typedef struct OlkTimeControl OlkTimeControl;
#endif /* __cplusplus */

#endif 	/* __OlkTimeControl_FWD_DEFINED__ */


#ifndef __OlkCategory_FWD_DEFINED__
#define __OlkCategory_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkCategory OlkCategory;
#else
typedef struct OlkCategory OlkCategory;
#endif /* __cplusplus */

#endif 	/* __OlkCategory_FWD_DEFINED__ */


#ifndef __OlkFrameHeader_FWD_DEFINED__
#define __OlkFrameHeader_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkFrameHeader OlkFrameHeader;
#else
typedef struct OlkFrameHeader OlkFrameHeader;
#endif /* __cplusplus */

#endif 	/* __OlkFrameHeader_FWD_DEFINED__ */


#ifndef __OlkSenderPhoto_FWD_DEFINED__
#define __OlkSenderPhoto_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkSenderPhoto OlkSenderPhoto;
#else
typedef struct OlkSenderPhoto OlkSenderPhoto;
#endif /* __cplusplus */

#endif 	/* __OlkSenderPhoto_FWD_DEFINED__ */


#ifndef __PropertyAccessor_FWD_DEFINED__
#define __PropertyAccessor_FWD_DEFINED__

#ifdef __cplusplus
typedef class PropertyAccessor PropertyAccessor;
#else
typedef struct PropertyAccessor PropertyAccessor;
#endif /* __cplusplus */

#endif 	/* __PropertyAccessor_FWD_DEFINED__ */


#ifndef __NavigationModule_FWD_DEFINED__
#define __NavigationModule_FWD_DEFINED__

#ifdef __cplusplus
typedef class NavigationModule NavigationModule;
#else
typedef struct NavigationModule NavigationModule;
#endif /* __cplusplus */

#endif 	/* __NavigationModule_FWD_DEFINED__ */


#ifndef __NavigationModules_FWD_DEFINED__
#define __NavigationModules_FWD_DEFINED__

#ifdef __cplusplus
typedef class NavigationModules NavigationModules;
#else
typedef struct NavigationModules NavigationModules;
#endif /* __cplusplus */

#endif 	/* __NavigationModules_FWD_DEFINED__ */


#ifndef __Store_FWD_DEFINED__
#define __Store_FWD_DEFINED__

#ifdef __cplusplus
typedef class Store Store;
#else
typedef struct Store Store;
#endif /* __cplusplus */

#endif 	/* __Store_FWD_DEFINED__ */


#ifndef __Rules_FWD_DEFINED__
#define __Rules_FWD_DEFINED__

#ifdef __cplusplus
typedef class Rules Rules;
#else
typedef struct Rules Rules;
#endif /* __cplusplus */

#endif 	/* __Rules_FWD_DEFINED__ */


#ifndef __RuleActions_FWD_DEFINED__
#define __RuleActions_FWD_DEFINED__

#ifdef __cplusplus
typedef class RuleActions RuleActions;
#else
typedef struct RuleActions RuleActions;
#endif /* __cplusplus */

#endif 	/* __RuleActions_FWD_DEFINED__ */


#ifndef __MoveOrCopyRuleAction_FWD_DEFINED__
#define __MoveOrCopyRuleAction_FWD_DEFINED__

#ifdef __cplusplus
typedef class MoveOrCopyRuleAction MoveOrCopyRuleAction;
#else
typedef struct MoveOrCopyRuleAction MoveOrCopyRuleAction;
#endif /* __cplusplus */

#endif 	/* __MoveOrCopyRuleAction_FWD_DEFINED__ */


#ifndef __RuleAction_FWD_DEFINED__
#define __RuleAction_FWD_DEFINED__

#ifdef __cplusplus
typedef class RuleAction RuleAction;
#else
typedef struct RuleAction RuleAction;
#endif /* __cplusplus */

#endif 	/* __RuleAction_FWD_DEFINED__ */


#ifndef __SendRuleAction_FWD_DEFINED__
#define __SendRuleAction_FWD_DEFINED__

#ifdef __cplusplus
typedef class SendRuleAction SendRuleAction;
#else
typedef struct SendRuleAction SendRuleAction;
#endif /* __cplusplus */

#endif 	/* __SendRuleAction_FWD_DEFINED__ */


#ifndef __AssignToCategoryRuleAction_FWD_DEFINED__
#define __AssignToCategoryRuleAction_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssignToCategoryRuleAction AssignToCategoryRuleAction;
#else
typedef struct AssignToCategoryRuleAction AssignToCategoryRuleAction;
#endif /* __cplusplus */

#endif 	/* __AssignToCategoryRuleAction_FWD_DEFINED__ */


#ifndef __PlaySoundRuleAction_FWD_DEFINED__
#define __PlaySoundRuleAction_FWD_DEFINED__

#ifdef __cplusplus
typedef class PlaySoundRuleAction PlaySoundRuleAction;
#else
typedef struct PlaySoundRuleAction PlaySoundRuleAction;
#endif /* __cplusplus */

#endif 	/* __PlaySoundRuleAction_FWD_DEFINED__ */


#ifndef __MarkAsTaskRuleAction_FWD_DEFINED__
#define __MarkAsTaskRuleAction_FWD_DEFINED__

#ifdef __cplusplus
typedef class MarkAsTaskRuleAction MarkAsTaskRuleAction;
#else
typedef struct MarkAsTaskRuleAction MarkAsTaskRuleAction;
#endif /* __cplusplus */

#endif 	/* __MarkAsTaskRuleAction_FWD_DEFINED__ */


#ifndef __NewItemAlertRuleAction_FWD_DEFINED__
#define __NewItemAlertRuleAction_FWD_DEFINED__

#ifdef __cplusplus
typedef class NewItemAlertRuleAction NewItemAlertRuleAction;
#else
typedef struct NewItemAlertRuleAction NewItemAlertRuleAction;
#endif /* __cplusplus */

#endif 	/* __NewItemAlertRuleAction_FWD_DEFINED__ */


#ifndef __RuleConditions_FWD_DEFINED__
#define __RuleConditions_FWD_DEFINED__

#ifdef __cplusplus
typedef class RuleConditions RuleConditions;
#else
typedef struct RuleConditions RuleConditions;
#endif /* __cplusplus */

#endif 	/* __RuleConditions_FWD_DEFINED__ */


#ifndef __RuleCondition_FWD_DEFINED__
#define __RuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class RuleCondition RuleCondition;
#else
typedef struct RuleCondition RuleCondition;
#endif /* __cplusplus */

#endif 	/* __RuleCondition_FWD_DEFINED__ */


#ifndef __ImportanceRuleCondition_FWD_DEFINED__
#define __ImportanceRuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class ImportanceRuleCondition ImportanceRuleCondition;
#else
typedef struct ImportanceRuleCondition ImportanceRuleCondition;
#endif /* __cplusplus */

#endif 	/* __ImportanceRuleCondition_FWD_DEFINED__ */


#ifndef __AccountRuleCondition_FWD_DEFINED__
#define __AccountRuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class AccountRuleCondition AccountRuleCondition;
#else
typedef struct AccountRuleCondition AccountRuleCondition;
#endif /* __cplusplus */

#endif 	/* __AccountRuleCondition_FWD_DEFINED__ */


#ifndef __Account_FWD_DEFINED__
#define __Account_FWD_DEFINED__

#ifdef __cplusplus
typedef class Account Account;
#else
typedef struct Account Account;
#endif /* __cplusplus */

#endif 	/* __Account_FWD_DEFINED__ */


#ifndef __TextRuleCondition_FWD_DEFINED__
#define __TextRuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class TextRuleCondition TextRuleCondition;
#else
typedef struct TextRuleCondition TextRuleCondition;
#endif /* __cplusplus */

#endif 	/* __TextRuleCondition_FWD_DEFINED__ */


#ifndef __CategoryRuleCondition_FWD_DEFINED__
#define __CategoryRuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class CategoryRuleCondition CategoryRuleCondition;
#else
typedef struct CategoryRuleCondition CategoryRuleCondition;
#endif /* __cplusplus */

#endif 	/* __CategoryRuleCondition_FWD_DEFINED__ */


#ifndef __FormNameRuleCondition_FWD_DEFINED__
#define __FormNameRuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class FormNameRuleCondition FormNameRuleCondition;
#else
typedef struct FormNameRuleCondition FormNameRuleCondition;
#endif /* __cplusplus */

#endif 	/* __FormNameRuleCondition_FWD_DEFINED__ */


#ifndef __ToOrFromRuleCondition_FWD_DEFINED__
#define __ToOrFromRuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class ToOrFromRuleCondition ToOrFromRuleCondition;
#else
typedef struct ToOrFromRuleCondition ToOrFromRuleCondition;
#endif /* __cplusplus */

#endif 	/* __ToOrFromRuleCondition_FWD_DEFINED__ */


#ifndef __AddressRuleCondition_FWD_DEFINED__
#define __AddressRuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class AddressRuleCondition AddressRuleCondition;
#else
typedef struct AddressRuleCondition AddressRuleCondition;
#endif /* __cplusplus */

#endif 	/* __AddressRuleCondition_FWD_DEFINED__ */


#ifndef __SenderInAddressListRuleCondition_FWD_DEFINED__
#define __SenderInAddressListRuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class SenderInAddressListRuleCondition SenderInAddressListRuleCondition;
#else
typedef struct SenderInAddressListRuleCondition SenderInAddressListRuleCondition;
#endif /* __cplusplus */

#endif 	/* __SenderInAddressListRuleCondition_FWD_DEFINED__ */


#ifndef __FromRssFeedRuleCondition_FWD_DEFINED__
#define __FromRssFeedRuleCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class FromRssFeedRuleCondition FromRssFeedRuleCondition;
#else
typedef struct FromRssFeedRuleCondition FromRssFeedRuleCondition;
#endif /* __cplusplus */

#endif 	/* __FromRssFeedRuleCondition_FWD_DEFINED__ */


#ifndef __Rule_FWD_DEFINED__
#define __Rule_FWD_DEFINED__

#ifdef __cplusplus
typedef class Rule Rule;
#else
typedef struct Rule Rule;
#endif /* __cplusplus */

#endif 	/* __Rule_FWD_DEFINED__ */


#ifndef __Categories_FWD_DEFINED__
#define __Categories_FWD_DEFINED__

#ifdef __cplusplus
typedef class Categories Categories;
#else
typedef struct Categories Categories;
#endif /* __cplusplus */

#endif 	/* __Categories_FWD_DEFINED__ */


#ifndef __Category_FWD_DEFINED__
#define __Category_FWD_DEFINED__

#ifdef __cplusplus
typedef class Category Category;
#else
typedef struct Category Category;
#endif /* __cplusplus */

#endif 	/* __Category_FWD_DEFINED__ */


#ifndef __Table_FWD_DEFINED__
#define __Table_FWD_DEFINED__

#ifdef __cplusplus
typedef class Table Table;
#else
typedef struct Table Table;
#endif /* __cplusplus */

#endif 	/* __Table_FWD_DEFINED__ */


#ifndef __Row_FWD_DEFINED__
#define __Row_FWD_DEFINED__

#ifdef __cplusplus
typedef class Row Row;
#else
typedef struct Row Row;
#endif /* __cplusplus */

#endif 	/* __Row_FWD_DEFINED__ */


#ifndef __Columns_FWD_DEFINED__
#define __Columns_FWD_DEFINED__

#ifdef __cplusplus
typedef class Columns Columns;
#else
typedef struct Columns Columns;
#endif /* __cplusplus */

#endif 	/* __Columns_FWD_DEFINED__ */


#ifndef __Column_FWD_DEFINED__
#define __Column_FWD_DEFINED__

#ifdef __cplusplus
typedef class Column Column;
#else
typedef struct Column Column;
#endif /* __cplusplus */

#endif 	/* __Column_FWD_DEFINED__ */


#ifndef __CalendarSharing_FWD_DEFINED__
#define __CalendarSharing_FWD_DEFINED__

#ifdef __cplusplus
typedef class CalendarSharing CalendarSharing;
#else
typedef struct CalendarSharing CalendarSharing;
#endif /* __cplusplus */

#endif 	/* __CalendarSharing_FWD_DEFINED__ */


#ifndef __MailItem_FWD_DEFINED__
#define __MailItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class MailItem MailItem;
#else
typedef struct MailItem MailItem;
#endif /* __cplusplus */

#endif 	/* __MailItem_FWD_DEFINED__ */


#ifndef __ContactItem_FWD_DEFINED__
#define __ContactItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class ContactItem ContactItem;
#else
typedef struct ContactItem ContactItem;
#endif /* __cplusplus */

#endif 	/* __ContactItem_FWD_DEFINED__ */


#ifndef __SimpleItems_FWD_DEFINED__
#define __SimpleItems_FWD_DEFINED__

#ifdef __cplusplus
typedef class SimpleItems SimpleItems;
#else
typedef struct SimpleItems SimpleItems;
#endif /* __cplusplus */

#endif 	/* __SimpleItems_FWD_DEFINED__ */


#ifndef __UserDefinedProperties_FWD_DEFINED__
#define __UserDefinedProperties_FWD_DEFINED__

#ifdef __cplusplus
typedef class UserDefinedProperties UserDefinedProperties;
#else
typedef struct UserDefinedProperties UserDefinedProperties;
#endif /* __cplusplus */

#endif 	/* __UserDefinedProperties_FWD_DEFINED__ */


#ifndef __UserDefinedProperty_FWD_DEFINED__
#define __UserDefinedProperty_FWD_DEFINED__

#ifdef __cplusplus
typedef class UserDefinedProperty UserDefinedProperty;
#else
typedef struct UserDefinedProperty UserDefinedProperty;
#endif /* __cplusplus */

#endif 	/* __UserDefinedProperty_FWD_DEFINED__ */


#ifndef __ExchangeUser_FWD_DEFINED__
#define __ExchangeUser_FWD_DEFINED__

#ifdef __cplusplus
typedef class ExchangeUser ExchangeUser;
#else
typedef struct ExchangeUser ExchangeUser;
#endif /* __cplusplus */

#endif 	/* __ExchangeUser_FWD_DEFINED__ */


#ifndef __ExchangeDistributionList_FWD_DEFINED__
#define __ExchangeDistributionList_FWD_DEFINED__

#ifdef __cplusplus
typedef class ExchangeDistributionList ExchangeDistributionList;
#else
typedef struct ExchangeDistributionList ExchangeDistributionList;
#endif /* __cplusplus */

#endif 	/* __ExchangeDistributionList_FWD_DEFINED__ */


#ifndef __SyncObject_FWD_DEFINED__
#define __SyncObject_FWD_DEFINED__

#ifdef __cplusplus
typedef class SyncObject SyncObject;
#else
typedef struct SyncObject SyncObject;
#endif /* __cplusplus */

#endif 	/* __SyncObject_FWD_DEFINED__ */


#ifndef __Accounts_FWD_DEFINED__
#define __Accounts_FWD_DEFINED__

#ifdef __cplusplus
typedef class Accounts Accounts;
#else
typedef struct Accounts Accounts;
#endif /* __cplusplus */

#endif 	/* __Accounts_FWD_DEFINED__ */


#ifndef __Stores_FWD_DEFINED__
#define __Stores_FWD_DEFINED__

#ifdef __cplusplus
typedef class Stores Stores;
#else
typedef struct Stores Stores;
#endif /* __cplusplus */

#endif 	/* __Stores_FWD_DEFINED__ */


#ifndef __SelectNamesDialog_FWD_DEFINED__
#define __SelectNamesDialog_FWD_DEFINED__

#ifdef __cplusplus
typedef class SelectNamesDialog SelectNamesDialog;
#else
typedef struct SelectNamesDialog SelectNamesDialog;
#endif /* __cplusplus */

#endif 	/* __SelectNamesDialog_FWD_DEFINED__ */


#ifndef __SharingItem_FWD_DEFINED__
#define __SharingItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class SharingItem SharingItem;
#else
typedef struct SharingItem SharingItem;
#endif /* __cplusplus */

#endif 	/* __SharingItem_FWD_DEFINED__ */


#ifndef __Explorer_FWD_DEFINED__
#define __Explorer_FWD_DEFINED__

#ifdef __cplusplus
typedef class Explorer Explorer;
#else
typedef struct Explorer Explorer;
#endif /* __cplusplus */

#endif 	/* __Explorer_FWD_DEFINED__ */


#ifndef __Inspector_FWD_DEFINED__
#define __Inspector_FWD_DEFINED__

#ifdef __cplusplus
typedef class Inspector Inspector;
#else
typedef struct Inspector Inspector;
#endif /* __cplusplus */

#endif 	/* __Inspector_FWD_DEFINED__ */


#ifndef __TimeZones_FWD_DEFINED__
#define __TimeZones_FWD_DEFINED__

#ifdef __cplusplus
typedef class TimeZones TimeZones;
#else
typedef struct TimeZones TimeZones;
#endif /* __cplusplus */

#endif 	/* __TimeZones_FWD_DEFINED__ */


#ifndef __OlkTimeZoneControl_FWD_DEFINED__
#define __OlkTimeZoneControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class OlkTimeZoneControl OlkTimeZoneControl;
#else
typedef struct OlkTimeZoneControl OlkTimeZoneControl;
#endif /* __cplusplus */

#endif 	/* __OlkTimeZoneControl_FWD_DEFINED__ */


#ifndef __AppointmentItem_FWD_DEFINED__
#define __AppointmentItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class AppointmentItem AppointmentItem;
#else
typedef struct AppointmentItem AppointmentItem;
#endif /* __cplusplus */

#endif 	/* __AppointmentItem_FWD_DEFINED__ */


#ifndef __MeetingItem_FWD_DEFINED__
#define __MeetingItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class MeetingItem MeetingItem;
#else
typedef struct MeetingItem MeetingItem;
#endif /* __cplusplus */

#endif 	/* __MeetingItem_FWD_DEFINED__ */


#ifndef __AttachmentSelection_FWD_DEFINED__
#define __AttachmentSelection_FWD_DEFINED__

#ifdef __cplusplus
typedef class AttachmentSelection AttachmentSelection;
#else
typedef struct AttachmentSelection AttachmentSelection;
#endif /* __cplusplus */

#endif 	/* __AttachmentSelection_FWD_DEFINED__ */


#ifndef __Folder_FWD_DEFINED__
#define __Folder_FWD_DEFINED__

#ifdef __cplusplus
typedef class Folder Folder;
#else
typedef struct Folder Folder;
#endif /* __cplusplus */

#endif 	/* __Folder_FWD_DEFINED__ */


#ifndef __ColumnFormat_FWD_DEFINED__
#define __ColumnFormat_FWD_DEFINED__

#ifdef __cplusplus
typedef class ColumnFormat ColumnFormat;
#else
typedef struct ColumnFormat ColumnFormat;
#endif /* __cplusplus */

#endif 	/* __ColumnFormat_FWD_DEFINED__ */


#ifndef __ViewField_FWD_DEFINED__
#define __ViewField_FWD_DEFINED__

#ifdef __cplusplus
typedef class ViewField ViewField;
#else
typedef struct ViewField ViewField;
#endif /* __cplusplus */

#endif 	/* __ViewField_FWD_DEFINED__ */


#ifndef __OrderFields_FWD_DEFINED__
#define __OrderFields_FWD_DEFINED__

#ifdef __cplusplus
typedef class OrderFields OrderFields;
#else
typedef struct OrderFields OrderFields;
#endif /* __cplusplus */

#endif 	/* __OrderFields_FWD_DEFINED__ */


#ifndef __OrderField_FWD_DEFINED__
#define __OrderField_FWD_DEFINED__

#ifdef __cplusplus
typedef class OrderField OrderField;
#else
typedef struct OrderField OrderField;
#endif /* __cplusplus */

#endif 	/* __OrderField_FWD_DEFINED__ */


#ifndef __ViewFields_FWD_DEFINED__
#define __ViewFields_FWD_DEFINED__

#ifdef __cplusplus
typedef class ViewFields ViewFields;
#else
typedef struct ViewFields ViewFields;
#endif /* __cplusplus */

#endif 	/* __ViewFields_FWD_DEFINED__ */


#ifndef __ViewFont_FWD_DEFINED__
#define __ViewFont_FWD_DEFINED__

#ifdef __cplusplus
typedef class ViewFont ViewFont;
#else
typedef struct ViewFont ViewFont;
#endif /* __cplusplus */

#endif 	/* __ViewFont_FWD_DEFINED__ */


#ifndef __AutoFormatRules_FWD_DEFINED__
#define __AutoFormatRules_FWD_DEFINED__

#ifdef __cplusplus
typedef class AutoFormatRules AutoFormatRules;
#else
typedef struct AutoFormatRules AutoFormatRules;
#endif /* __cplusplus */

#endif 	/* __AutoFormatRules_FWD_DEFINED__ */


#ifndef __AutoFormatRule_FWD_DEFINED__
#define __AutoFormatRule_FWD_DEFINED__

#ifdef __cplusplus
typedef class AutoFormatRule AutoFormatRule;
#else
typedef struct AutoFormatRule AutoFormatRule;
#endif /* __cplusplus */

#endif 	/* __AutoFormatRule_FWD_DEFINED__ */


#ifndef __NavigationFolders_FWD_DEFINED__
#define __NavigationFolders_FWD_DEFINED__

#ifdef __cplusplus
typedef class NavigationFolders NavigationFolders;
#else
typedef struct NavigationFolders NavigationFolders;
#endif /* __cplusplus */

#endif 	/* __NavigationFolders_FWD_DEFINED__ */


#ifndef __NavigationFolder_FWD_DEFINED__
#define __NavigationFolder_FWD_DEFINED__

#ifdef __cplusplus
typedef class NavigationFolder NavigationFolder;
#else
typedef struct NavigationFolder NavigationFolder;
#endif /* __cplusplus */

#endif 	/* __NavigationFolder_FWD_DEFINED__ */


#ifndef __NavigationGroup_FWD_DEFINED__
#define __NavigationGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class NavigationGroup NavigationGroup;
#else
typedef struct NavigationGroup NavigationGroup;
#endif /* __cplusplus */

#endif 	/* __NavigationGroup_FWD_DEFINED__ */


#ifndef __FormRegion_FWD_DEFINED__
#define __FormRegion_FWD_DEFINED__

#ifdef __cplusplus
typedef class FormRegion FormRegion;
#else
typedef struct FormRegion FormRegion;
#endif /* __cplusplus */

#endif 	/* __FormRegion_FWD_DEFINED__ */


#ifndef __MobileItem_FWD_DEFINED__
#define __MobileItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class MobileItem MobileItem;
#else
typedef struct MobileItem MobileItem;
#endif /* __cplusplus */

#endif 	/* __MobileItem_FWD_DEFINED__ */


#ifndef __TaskItem_FWD_DEFINED__
#define __TaskItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskItem TaskItem;
#else
typedef struct TaskItem TaskItem;
#endif /* __cplusplus */

#endif 	/* __TaskItem_FWD_DEFINED__ */


#ifndef __Application_FWD_DEFINED__
#define __Application_FWD_DEFINED__

#ifdef __cplusplus
typedef class Application Application;
#else
typedef struct Application Application;
#endif /* __cplusplus */

#endif 	/* __Application_FWD_DEFINED__ */


#ifndef __DistListItem_FWD_DEFINED__
#define __DistListItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class DistListItem DistListItem;
#else
typedef struct DistListItem DistListItem;
#endif /* __cplusplus */

#endif 	/* __DistListItem_FWD_DEFINED__ */


#ifndef __DocumentItem_FWD_DEFINED__
#define __DocumentItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class DocumentItem DocumentItem;
#else
typedef struct DocumentItem DocumentItem;
#endif /* __cplusplus */

#endif 	/* __DocumentItem_FWD_DEFINED__ */


#ifndef __Explorers_FWD_DEFINED__
#define __Explorers_FWD_DEFINED__

#ifdef __cplusplus
typedef class Explorers Explorers;
#else
typedef struct Explorers Explorers;
#endif /* __cplusplus */

#endif 	/* __Explorers_FWD_DEFINED__ */


#ifndef __Inspectors_FWD_DEFINED__
#define __Inspectors_FWD_DEFINED__

#ifdef __cplusplus
typedef class Inspectors Inspectors;
#else
typedef struct Inspectors Inspectors;
#endif /* __cplusplus */

#endif 	/* __Inspectors_FWD_DEFINED__ */


#ifndef __Folders_FWD_DEFINED__
#define __Folders_FWD_DEFINED__

#ifdef __cplusplus
typedef class Folders Folders;
#else
typedef struct Folders Folders;
#endif /* __cplusplus */

#endif 	/* __Folders_FWD_DEFINED__ */


#ifndef __Items_FWD_DEFINED__
#define __Items_FWD_DEFINED__

#ifdef __cplusplus
typedef class Items Items;
#else
typedef struct Items Items;
#endif /* __cplusplus */

#endif 	/* __Items_FWD_DEFINED__ */


#ifndef __JournalItem_FWD_DEFINED__
#define __JournalItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class JournalItem JournalItem;
#else
typedef struct JournalItem JournalItem;
#endif /* __cplusplus */

#endif 	/* __JournalItem_FWD_DEFINED__ */


#ifndef __NameSpace_FWD_DEFINED__
#define __NameSpace_FWD_DEFINED__

#ifdef __cplusplus
typedef class NameSpace NameSpace;
#else
typedef struct NameSpace NameSpace;
#endif /* __cplusplus */

#endif 	/* __NameSpace_FWD_DEFINED__ */


#ifndef __NoteItem_FWD_DEFINED__
#define __NoteItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class NoteItem NoteItem;
#else
typedef struct NoteItem NoteItem;
#endif /* __cplusplus */

#endif 	/* __NoteItem_FWD_DEFINED__ */


#ifndef __OutlookBarGroups_FWD_DEFINED__
#define __OutlookBarGroups_FWD_DEFINED__

#ifdef __cplusplus
typedef class OutlookBarGroups OutlookBarGroups;
#else
typedef struct OutlookBarGroups OutlookBarGroups;
#endif /* __cplusplus */

#endif 	/* __OutlookBarGroups_FWD_DEFINED__ */


#ifndef __OutlookBarPane_FWD_DEFINED__
#define __OutlookBarPane_FWD_DEFINED__

#ifdef __cplusplus
typedef class OutlookBarPane OutlookBarPane;
#else
typedef struct OutlookBarPane OutlookBarPane;
#endif /* __cplusplus */

#endif 	/* __OutlookBarPane_FWD_DEFINED__ */


#ifndef __OutlookBarShortcuts_FWD_DEFINED__
#define __OutlookBarShortcuts_FWD_DEFINED__

#ifdef __cplusplus
typedef class OutlookBarShortcuts OutlookBarShortcuts;
#else
typedef struct OutlookBarShortcuts OutlookBarShortcuts;
#endif /* __cplusplus */

#endif 	/* __OutlookBarShortcuts_FWD_DEFINED__ */


#ifndef __PostItem_FWD_DEFINED__
#define __PostItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class PostItem PostItem;
#else
typedef struct PostItem PostItem;
#endif /* __cplusplus */

#endif 	/* __PostItem_FWD_DEFINED__ */


#ifndef __RemoteItem_FWD_DEFINED__
#define __RemoteItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class RemoteItem RemoteItem;
#else
typedef struct RemoteItem RemoteItem;
#endif /* __cplusplus */

#endif 	/* __RemoteItem_FWD_DEFINED__ */


#ifndef __ReportItem_FWD_DEFINED__
#define __ReportItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class ReportItem ReportItem;
#else
typedef struct ReportItem ReportItem;
#endif /* __cplusplus */

#endif 	/* __ReportItem_FWD_DEFINED__ */


#ifndef __TaskRequestAcceptItem_FWD_DEFINED__
#define __TaskRequestAcceptItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskRequestAcceptItem TaskRequestAcceptItem;
#else
typedef struct TaskRequestAcceptItem TaskRequestAcceptItem;
#endif /* __cplusplus */

#endif 	/* __TaskRequestAcceptItem_FWD_DEFINED__ */


#ifndef __TaskRequestDeclineItem_FWD_DEFINED__
#define __TaskRequestDeclineItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskRequestDeclineItem TaskRequestDeclineItem;
#else
typedef struct TaskRequestDeclineItem TaskRequestDeclineItem;
#endif /* __cplusplus */

#endif 	/* __TaskRequestDeclineItem_FWD_DEFINED__ */


#ifndef __TaskRequestItem_FWD_DEFINED__
#define __TaskRequestItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskRequestItem TaskRequestItem;
#else
typedef struct TaskRequestItem TaskRequestItem;
#endif /* __cplusplus */

#endif 	/* __TaskRequestItem_FWD_DEFINED__ */


#ifndef __TaskRequestUpdateItem_FWD_DEFINED__
#define __TaskRequestUpdateItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskRequestUpdateItem TaskRequestUpdateItem;
#else
typedef struct TaskRequestUpdateItem TaskRequestUpdateItem;
#endif /* __cplusplus */

#endif 	/* __TaskRequestUpdateItem_FWD_DEFINED__ */


#ifndef __Results_FWD_DEFINED__
#define __Results_FWD_DEFINED__

#ifdef __cplusplus
typedef class Results Results;
#else
typedef struct Results Results;
#endif /* __cplusplus */

#endif 	/* __Results_FWD_DEFINED__ */


#ifndef __Views_FWD_DEFINED__
#define __Views_FWD_DEFINED__

#ifdef __cplusplus
typedef class Views Views;
#else
typedef struct Views Views;
#endif /* __cplusplus */

#endif 	/* __Views_FWD_DEFINED__ */


#ifndef __Reminder_FWD_DEFINED__
#define __Reminder_FWD_DEFINED__

#ifdef __cplusplus
typedef class Reminder Reminder;
#else
typedef struct Reminder Reminder;
#endif /* __cplusplus */

#endif 	/* __Reminder_FWD_DEFINED__ */


#ifndef __Reminders_FWD_DEFINED__
#define __Reminders_FWD_DEFINED__

#ifdef __cplusplus
typedef class Reminders Reminders;
#else
typedef struct Reminders Reminders;
#endif /* __cplusplus */

#endif 	/* __Reminders_FWD_DEFINED__ */


#ifndef __StorageItem_FWD_DEFINED__
#define __StorageItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class StorageItem StorageItem;
#else
typedef struct StorageItem StorageItem;
#endif /* __cplusplus */

#endif 	/* __StorageItem_FWD_DEFINED__ */


#ifndef __NavigationPane_FWD_DEFINED__
#define __NavigationPane_FWD_DEFINED__

#ifdef __cplusplus
typedef class NavigationPane NavigationPane;
#else
typedef struct NavigationPane NavigationPane;
#endif /* __cplusplus */

#endif 	/* __NavigationPane_FWD_DEFINED__ */


#ifndef __NavigationGroups_FWD_DEFINED__
#define __NavigationGroups_FWD_DEFINED__

#ifdef __cplusplus
typedef class NavigationGroups NavigationGroups;
#else
typedef struct NavigationGroups NavigationGroups;
#endif /* __cplusplus */

#endif 	/* __NavigationGroups_FWD_DEFINED__ */


#ifndef __DoNotUseMeFolder_FWD_DEFINED__
#define __DoNotUseMeFolder_FWD_DEFINED__

#ifdef __cplusplus
typedef class DoNotUseMeFolder DoNotUseMeFolder;
#else
typedef struct DoNotUseMeFolder DoNotUseMeFolder;
#endif /* __cplusplus */

#endif 	/* __DoNotUseMeFolder_FWD_DEFINED__ */


#ifndef __TimelineView_FWD_DEFINED__
#define __TimelineView_FWD_DEFINED__

#ifdef __cplusplus
typedef class TimelineView TimelineView;
#else
typedef struct TimelineView TimelineView;
#endif /* __cplusplus */

#endif 	/* __TimelineView_FWD_DEFINED__ */


#ifndef __MailModule_FWD_DEFINED__
#define __MailModule_FWD_DEFINED__

#ifdef __cplusplus
typedef class MailModule MailModule;
#else
typedef struct MailModule MailModule;
#endif /* __cplusplus */

#endif 	/* __MailModule_FWD_DEFINED__ */


#ifndef __CalendarModule_FWD_DEFINED__
#define __CalendarModule_FWD_DEFINED__

#ifdef __cplusplus
typedef class CalendarModule CalendarModule;
#else
typedef struct CalendarModule CalendarModule;
#endif /* __cplusplus */

#endif 	/* __CalendarModule_FWD_DEFINED__ */


#ifndef __ContactsModule_FWD_DEFINED__
#define __ContactsModule_FWD_DEFINED__

#ifdef __cplusplus
typedef class ContactsModule ContactsModule;
#else
typedef struct ContactsModule ContactsModule;
#endif /* __cplusplus */

#endif 	/* __ContactsModule_FWD_DEFINED__ */


#ifndef __TasksModule_FWD_DEFINED__
#define __TasksModule_FWD_DEFINED__

#ifdef __cplusplus
typedef class TasksModule TasksModule;
#else
typedef struct TasksModule TasksModule;
#endif /* __cplusplus */

#endif 	/* __TasksModule_FWD_DEFINED__ */


#ifndef __JournalModule_FWD_DEFINED__
#define __JournalModule_FWD_DEFINED__

#ifdef __cplusplus
typedef class JournalModule JournalModule;
#else
typedef struct JournalModule JournalModule;
#endif /* __cplusplus */

#endif 	/* __JournalModule_FWD_DEFINED__ */


#ifndef __NotesModule_FWD_DEFINED__
#define __NotesModule_FWD_DEFINED__

#ifdef __cplusplus
typedef class NotesModule NotesModule;
#else
typedef struct NotesModule NotesModule;
#endif /* __cplusplus */

#endif 	/* __NotesModule_FWD_DEFINED__ */


#ifndef __TableView_FWD_DEFINED__
#define __TableView_FWD_DEFINED__

#ifdef __cplusplus
typedef class TableView TableView;
#else
typedef struct TableView TableView;
#endif /* __cplusplus */

#endif 	/* __TableView_FWD_DEFINED__ */


#ifndef __IconView_FWD_DEFINED__
#define __IconView_FWD_DEFINED__

#ifdef __cplusplus
typedef class IconView IconView;
#else
typedef struct IconView IconView;
#endif /* __cplusplus */

#endif 	/* __IconView_FWD_DEFINED__ */


#ifndef __CardView_FWD_DEFINED__
#define __CardView_FWD_DEFINED__

#ifdef __cplusplus
typedef class CardView CardView;
#else
typedef struct CardView CardView;
#endif /* __cplusplus */

#endif 	/* __CardView_FWD_DEFINED__ */


#ifndef __CalendarView_FWD_DEFINED__
#define __CalendarView_FWD_DEFINED__

#ifdef __cplusplus
typedef class CalendarView CalendarView;
#else
typedef struct CalendarView CalendarView;
#endif /* __cplusplus */

#endif 	/* __CalendarView_FWD_DEFINED__ */


#ifndef __BusinessCardView_FWD_DEFINED__
#define __BusinessCardView_FWD_DEFINED__

#ifdef __cplusplus
typedef class BusinessCardView BusinessCardView;
#else
typedef struct BusinessCardView BusinessCardView;
#endif /* __cplusplus */

#endif 	/* __BusinessCardView_FWD_DEFINED__ */


#ifndef __FormRegionStartup_FWD_DEFINED__
#define __FormRegionStartup_FWD_DEFINED__

#ifdef __cplusplus
typedef class FormRegionStartup FormRegionStartup;
#else
typedef struct FormRegionStartup FormRegionStartup;
#endif /* __cplusplus */

#endif 	/* __FormRegionStartup_FWD_DEFINED__ */


#ifndef __TimeZone_FWD_DEFINED__
#define __TimeZone_FWD_DEFINED__

#ifdef __cplusplus
typedef class TimeZone TimeZone;
#else
typedef struct TimeZone TimeZone;
#endif /* __cplusplus */

#endif 	/* __TimeZone_FWD_DEFINED__ */


#ifndef __SolutionsModule_FWD_DEFINED__
#define __SolutionsModule_FWD_DEFINED__

#ifdef __cplusplus
typedef class SolutionsModule SolutionsModule;
#else
typedef struct SolutionsModule SolutionsModule;
#endif /* __cplusplus */

#endif 	/* __SolutionsModule_FWD_DEFINED__ */


#ifndef __Conversation_FWD_DEFINED__
#define __Conversation_FWD_DEFINED__

#ifdef __cplusplus
typedef class Conversation Conversation;
#else
typedef struct Conversation Conversation;
#endif /* __cplusplus */

#endif 	/* __Conversation_FWD_DEFINED__ */


#ifndef __AccountSelector_FWD_DEFINED__
#define __AccountSelector_FWD_DEFINED__

#ifdef __cplusplus
typedef class AccountSelector AccountSelector;
#else
typedef struct AccountSelector AccountSelector;
#endif /* __cplusplus */

#endif 	/* __AccountSelector_FWD_DEFINED__ */


#ifndef __ConversationHeader_FWD_DEFINED__
#define __ConversationHeader_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConversationHeader ConversationHeader;
#else
typedef struct ConversationHeader ConversationHeader;
#endif /* __cplusplus */

#endif 	/* __ConversationHeader_FWD_DEFINED__ */


#ifndef __PeopleView_FWD_DEFINED__
#define __PeopleView_FWD_DEFINED__

#ifdef __cplusplus
typedef class PeopleView PeopleView;
#else
typedef struct PeopleView PeopleView;
#endif /* __cplusplus */

#endif 	/* __PeopleView_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __Outlook_LIBRARY_DEFINED__
#define __Outlook_LIBRARY_DEFINED__

/* library Outlook */
/* [custom][custom][custom][custom][helpcontext][helpfile][helpstring][version][uuid] */ 
























































































































































































































typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("1BA5FCB6-05E9-4721-979D-3CE2C9084479") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0001
    {
        olMousePointerDefault	= 0,
        olMousePointerArrow	= 1,
        olMousePointerCross	= 2,
        olMousePointerIBeam	= 3,
        olMousePointerSizeNESW	= 6,
        olMousePointerSizeNS	= 7,
        olMousePointerSizeNWSE	= 8,
        olMousePointerSizeWE	= 9,
        olMousePointerUpArrow	= 10,
        olMousePointerHourGlass	= 11,
        olMousePointerNoDrop	= 12,
        olMousePointerAppStarting	= 13,
        olMousePointerHelp	= 14,
        olMousePointerSizeAll	= 15,
        olMousePointerCustom	= 99
    } 	OlMousePointer;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("D1788312-EDEE-4673-AE33-B3C3BC0753EA") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0002
    {
        olScrollBarsNone	= 0,
        olScrollBarsHorizontal	= 1,
        olScrollBarsVertical	= 2,
        olScrollBarsBoth	= 3
    } 	OlScrollBars;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("AA3E840F-7079-4AA4-91A9-6F3546DA6A95") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0003
    {
        olBackStyleTransparent	= 0,
        olBackStyleOpaque	= 1
    } 	OlBackStyle;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("0B17239E-C724-444B-ACB1-579893197A3C") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0004
    {
        olBorderStyleNone	= 0,
        olBorderStyleSingle	= 1
    } 	OlBorderStyle;

typedef /* [public][public][public][public][public][public][public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("7E29FD73-540B-4F03-A890-53C6B0AE7DD1") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0005
    {
        olEnterFieldBehaviorSelectAll	= 0,
        olEnterFieldBehaviorRecallSelection	= 1
    } 	OlEnterFieldBehavior;

typedef /* [public][public][public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("25B06F72-02C5-4AF8-8366-28C2C65CB035") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0006
    {
        olDragBehaviorDisabled	= 0,
        olDragBehaviorEnabled	= 1
    } 	OlDragBehavior;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("382F8459-84AD-4CEB-8705-A8F8E2DC15E1") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0007
    {
        olComboBoxStyleCombo	= 0,
        olComboBoxStyleList	= 2
    } 	OlComboBoxStyle;

typedef /* [public][public][public][public][public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("35A805A1-009F-4307-A6D9-3654104862B5") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0008
    {
        olAlignmentLeft	= 0,
        olAlignmentRight	= 1
    } 	OlAlignment;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("5A0FB768-AAF4-4E8C-9C57-89ACA8B6249F") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0009
    {
        olMultiSelectSingle	= 0,
        olMultiSelectMulti	= 1,
        olMultiSelectExtended	= 2
    } 	OlMultiSelect;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("03FADFE8-2527-46C3-9CCD-DBBBCD05156B") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0010
    {
        olTextAlignLeft	= 1,
        olTextAlignCenter	= 2,
        olTextAlignRight	= 3
    } 	OlTextAlign;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("73628D00-B812-419F-8212-3D62079E22DB") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0011
    {
        olMatchEntryFirstLetter	= 0,
        olMatchEntryComplete	= 1,
        olMatchEntryNone	= 2
    } 	OlMatchEntry;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("35D15973-23ED-4504-866B-C0B5C937A058") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0012
    {
        olPageTypePlanner	= 0,
        olPageTypeTracker	= 1
    } 	OlPageType;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("4FD8B708-E730-49B5-BDD3-B807F48E5B83") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0013
    {
        olTimeStyleTimeOnly	= 0,
        olTimeStyleTimeDuration	= 1,
        olTimeStyleShortDuration	= 4
    } 	OlTimeStyle;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("B791AC59-1E79-4007-A6A1-4A4FE62F8D03") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0014
    {
        olShiftStateShiftMask	= 1,
        olShiftStateCtrlMask	= 2,
        olShiftStateAltMask	= 4
    } 	OlShiftState;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("0DCB2F52-1065-4FD4-BC45-1C11E6D1B279") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0015
    {
        olMouseButtonLeft	= 1,
        olMouseButtonRight	= 2,
        olMouseButtonMiddle	= 4
    } 	OlMouseButton;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("0BEAB7D8-3BA8-4960-899B-096FCE2EE60F") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0016
    {
        olPictureAlignmentLeft	= 0,
        olPictureAlignmentTop	= 1
    } 	OlPictureAlignment;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("BA5537F4-8941-4E26-871E-0D53D647B9FC") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0017
    {
        olAppointmentTimeFieldNone	= 1,
        olAppointmentTimeFieldStart	= 2,
        olAppointmentTimeFieldEnd	= 3
    } 	OlAppointmentTimeField;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("634EE3C4-6BCB-4BD6-8997-30C9DB02E223") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0018
    {
        olHorizontalLayoutAlignLeft	= 0,
        olHorizontalLayoutAlignCenter	= 1,
        olHorizontalLayoutAlignRight	= 2,
        olHorizontalLayoutGrow	= 3
    } 	OlHorizontalLayout;

typedef /* [public][public][public][helpcontext][uuid] */  DECLSPEC_UUID("EA33F29D-6159-4E76-8A14-BCEAA808FA91") 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0019
    {
        olVerticalLayoutAlignTop	= 0,
        olVerticalLayoutAlignMiddle	= 1,
        olVerticalLayoutAlignBottom	= 2,
        olVerticalLayoutGrow	= 3
    } 	OlVerticalLayout;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0020
    {
        olApplication	= 0,
        olNamespace	= 1,
        olFolder	= 2,
        olRecipient	= 4,
        olAttachment	= 5,
        olAddressList	= 7,
        olAddressEntry	= 8,
        olFolders	= 15,
        olItems	= 16,
        olRecipients	= 17,
        olAttachments	= 18,
        olAddressLists	= 20,
        olAddressEntries	= 21,
        olAppointment	= 26,
        olMeetingRequest	= 53,
        olMeetingCancellation	= 54,
        olMeetingResponseNegative	= 55,
        olMeetingResponsePositive	= 56,
        olMeetingResponseTentative	= 57,
        olRecurrencePattern	= 28,
        olExceptions	= 29,
        olException	= 30,
        olAction	= 32,
        olActions	= 33,
        olExplorer	= 34,
        olInspector	= 35,
        olPages	= 36,
        olFormDescription	= 37,
        olUserProperties	= 38,
        olUserProperty	= 39,
        olContact	= 40,
        olDocument	= 41,
        olJournal	= 42,
        olMail	= 43,
        olNote	= 44,
        olPost	= 45,
        olReport	= 46,
        olRemote	= 47,
        olTask	= 48,
        olTaskRequest	= 49,
        olTaskRequestUpdate	= 50,
        olTaskRequestAccept	= 51,
        olTaskRequestDecline	= 52,
        olExplorers	= 60,
        olInspectors	= 61,
        olPanes	= 62,
        olOutlookBarPane	= 63,
        olOutlookBarStorage	= 64,
        olOutlookBarGroups	= 65,
        olOutlookBarGroup	= 66,
        olOutlookBarShortcuts	= 67,
        olOutlookBarShortcut	= 68,
        olDistributionList	= 69,
        olPropertyPageSite	= 70,
        olPropertyPages	= 71,
        olSyncObject	= 72,
        olSyncObjects	= 73,
        olSelection	= 74,
        olLink	= 75,
        olLinks	= 76,
        olSearch	= 77,
        olResults	= 78,
        olViews	= 79,
        olView	= 80,
        olItemProperties	= 98,
        olItemProperty	= 99,
        olReminders	= 100,
        olReminder	= 101,
        olConflict	= 102,
        olConflicts	= 103,
        olSharing	= 104,
        olAccount	= 105,
        olAccounts	= 106,
        olStore	= 107,
        olStores	= 108,
        olSelectNamesDialog	= 109,
        olExchangeUser	= 110,
        olExchangeDistributionList	= 111,
        olPropertyAccessor	= 112,
        olStorageItem	= 113,
        olRules	= 114,
        olRule	= 115,
        olRuleActions	= 116,
        olRuleAction	= 117,
        olMoveOrCopyRuleAction	= 118,
        olSendRuleAction	= 119,
        olTable	= 120,
        olRow	= 121,
        olAssignToCategoryRuleAction	= 122,
        olPlaySoundRuleAction	= 123,
        olMarkAsTaskRuleAction	= 124,
        olNewItemAlertRuleAction	= 125,
        olRuleConditions	= 126,
        olRuleCondition	= 127,
        olImportanceRuleCondition	= 128,
        olFormRegion	= 129,
        olCategoryRuleCondition	= 130,
        olFormNameRuleCondition	= 131,
        olFromRuleCondition	= 132,
        olSenderInAddressListRuleCondition	= 133,
        olTextRuleCondition	= 134,
        olAccountRuleCondition	= 135,
        olClassTableView	= 136,
        olClassIconView	= 137,
        olClassCardView	= 138,
        olClassCalendarView	= 139,
        olClassTimeLineView	= 140,
        olViewFields	= 141,
        olViewField	= 142,
        olOrderField	= 144,
        olOrderFields	= 145,
        olViewFont	= 146,
        olAutoFormatRule	= 147,
        olAutoFormatRules	= 148,
        olColumnFormat	= 149,
        olColumns	= 150,
        olCalendarSharing	= 151,
        olCategory	= 152,
        olCategories	= 153,
        olColumn	= 154,
        olClassNavigationPane	= 155,
        olNavigationModules	= 156,
        olNavigationModule	= 157,
        olMailModule	= 158,
        olCalendarModule	= 159,
        olContactsModule	= 160,
        olTasksModule	= 161,
        olJournalModule	= 162,
        olNotesModule	= 163,
        olNavigationGroups	= 164,
        olNavigationGroup	= 165,
        olNavigationFolders	= 166,
        olNavigationFolder	= 167,
        olClassBusinessCardView	= 168,
        olAttachmentSelection	= 169,
        olAddressRuleCondition	= 170,
        olUserDefinedProperty	= 171,
        olUserDefinedProperties	= 172,
        olFromRssFeedRuleCondition	= 173,
        olClassTimeZone	= 174,
        olClassTimeZones	= 175,
        olMobile	= 176,
        olSolutionsModule	= 177,
        olConversation	= 178,
        olSimpleItems	= 179,
        olOutspace	= 180,
        olMeetingForwardNotification	= 181,
        olConversationHeader	= 182,
        olClassPeopleView	= 183
    } 	OlObjectClass;

typedef /* [public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0021
    {
        olUser	= 0,
        olDistList	= 1,
        olForum	= 2,
        olAgent	= 3,
        olOrganization	= 4,
        olPrivateDistList	= 5,
        olRemoteUser	= 6
    } 	OlDisplayType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0022
    {
        olReply	= 0,
        olReplyAll	= 1,
        olForward	= 2,
        olReplyFolder	= 3,
        olRespond	= 4
    } 	OlActionCopyLike;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0023
    {
        olOmitOriginalText	= 0,
        olEmbedOriginalItem	= 1,
        olIncludeOriginalText	= 2,
        olIndentOriginalText	= 3,
        olLinkOriginalItem	= 4,
        olUserPreference	= 5,
        olReplyTickOriginalText	= 1000
    } 	OlActionReplyStyle;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0024
    {
        olOpen	= 0,
        olSend	= 1,
        olPrompt	= 2
    } 	OlActionResponseStyle;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0025
    {
        olDontShow	= 0,
        olMenu	= 1,
        olMenuAndToolbar	= 2
    } 	OlActionShowOn;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0026
    {
        olByValue	= 1,
        olByReference	= 4,
        olEmbeddeditem	= 5,
        olOLE	= 6
    } 	OlAttachmentType;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0027
    {
        olAttachmentBlockLevelNone	= 0,
        olAttachmentBlockLevelOpen	= 1
    } 	OlAttachmentBlockLevel;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0028
    {
        olDefaultRegistry	= 0,
        olPersonalRegistry	= 2,
        olFolderRegistry	= 3,
        olOrganizationRegistry	= 4
    } 	OlFormRegistry;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0029
    {
        olEditorText	= 1,
        olEditorHTML	= 2,
        olEditorRTF	= 3,
        olEditorWord	= 4
    } 	OlEditorType;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0030
    {
        olSave	= 0,
        olDiscard	= 1,
        olPromptForSave	= 2
    } 	OlInspectorClose;

typedef /* [public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0031
    {
        olMaximized	= 0,
        olMinimized	= 1,
        olNormalWindow	= 2
    } 	OlWindowState;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0032
    {
        olViewList	= 0,
        olToDoBarTaskList	= 1,
        olToDoBarAppointmentList	= 2,
        olDailyTaskList	= 3,
        olAttachmentWell	= 4
    } 	OlSelectionLocation;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0033
    {
        olConversationHeaders	= 1
    } 	OlSelectionContents;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0034
    {
        olImportanceLow	= 0,
        olImportanceNormal	= 1,
        olImportanceHigh	= 2
    } 	OlImportance;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0035
    {
        olNormal	= 0,
        olPersonal	= 1,
        olPrivate	= 2,
        olConfidential	= 3
    } 	OlSensitivity;

typedef /* [public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0036
    {
        olOutlookInternal	= 0,
        olText	= 1,
        olNumber	= 3,
        olDateTime	= 5,
        olYesNo	= 6,
        olDuration	= 7,
        olKeywords	= 11,
        olPercent	= 12,
        olCurrency	= 14,
        olFormula	= 18,
        olCombination	= 19,
        olInteger	= 20,
        olEnumeration	= 21,
        olSmartFrom	= 22
    } 	OlUserPropertyType;

typedef /* [public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0037
    {
        olMailItem	= 0,
        olAppointmentItem	= 1,
        olContactItem	= 2,
        olTaskItem	= 3,
        olJournalItem	= 4,
        olNoteItem	= 5,
        olPostItem	= 6,
        olDistributionListItem	= 7,
        olMobileItemSMS	= 11,
        olMobileItemMMS	= 12
    } 	OlItemType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0038
    {
        olOutlookBar	= 1,
        olFolderList	= 2,
        olPreview	= 3,
        olNavigationPane	= 4,
        olToDoBar	= 5
    } 	OlPane;

typedef /* [public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0039
    {
        olModuleMail	= 0,
        olModuleCalendar	= 1,
        olModuleContacts	= 2,
        olModuleTasks	= 3,
        olModuleJournal	= 4,
        olModuleNotes	= 5,
        olModuleFolderList	= 6,
        olModuleShortcuts	= 7,
        olModuleSolutions	= 8
    } 	OlNavigationModuleType;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0040
    {
        olSearchScopeCurrentFolder	= 0,
        olSearchScopeAllFolders	= 1,
        olSearchScopeAllOutlookItems	= 2,
        olSearchScopeSubfolders	= 3,
        olSearchScopeCurrentStore	= 4
    } 	OlSearchScope;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0041
    {
        olExchange	= 0,
        olImap	= 1,
        olPop3	= 2,
        olHttp	= 3,
        olEas	= 4,
        olOtherAccount	= 5
    } 	OlAccountType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0042
    {
        olAutoDiscoverConnectionUnknown	= 0,
        olAutoDiscoverConnectionExternal	= 1,
        olAutoDiscoverConnectionInternal	= 2,
        olAutoDiscoverConnectionInternalDomain	= 3
    } 	OlAutoDiscoverConnectionMode;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0043
    {
        olPrimaryExchangeMailbox	= 0,
        olExchangeMailbox	= 1,
        olExchangePublicFolder	= 2,
        olNotExchange	= 3,
        olAdditionalExchangeMailbox	= 4
    } 	OlExchangeStoreType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0044
    {
        olRuleReceive	= 0,
        olRuleSend	= 1
    } 	OlRuleType;

typedef /* [public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0045
    {
        olRuleActionUnknown	= 0,
        olRuleActionMoveToFolder	= 1,
        olRuleActionAssignToCategory	= 2,
        olRuleActionDelete	= 3,
        olRuleActionDeletePermanently	= 4,
        olRuleActionCopyToFolder	= 5,
        olRuleActionForward	= 6,
        olRuleActionForwardAsAttachment	= 7,
        olRuleActionRedirect	= 8,
        olRuleActionServerReply	= 9,
        olRuleActionTemplate	= 10,
        olRuleActionFlagForActionInDays	= 11,
        olRuleActionFlagColor	= 12,
        olRuleActionFlagClear	= 13,
        olRuleActionImportance	= 14,
        olRuleActionSensitivity	= 15,
        olRuleActionPrint	= 16,
        olRuleActionPlaySound	= 17,
        olRuleActionStartApplication	= 18,
        olRuleActionMarkRead	= 19,
        olRuleActionRunScript	= 20,
        olRuleActionStop	= 21,
        olRuleActionCustomAction	= 22,
        olRuleActionNewItemAlert	= 23,
        olRuleActionDesktopAlert	= 24,
        olRuleActionNotifyRead	= 25,
        olRuleActionNotifyDelivery	= 26,
        olRuleActionCcMessage	= 27,
        olRuleActionDefer	= 28,
        olRuleActionMarkAsTask	= 29,
        olRuleActionClearCategories	= 30
    } 	OlRuleActionType;

typedef /* [public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0046
    {
        olMarkToday	= 0,
        olMarkTomorrow	= 1,
        olMarkThisWeek	= 2,
        olMarkNextWeek	= 3,
        olMarkNoDate	= 4,
        olMarkComplete	= 5
    } 	OlMarkInterval;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0047
    {
        olConditionUnknown	= 0,
        olConditionFrom	= 1,
        olConditionSubject	= 2,
        olConditionAccount	= 3,
        olConditionOnlyToMe	= 4,
        olConditionTo	= 5,
        olConditionImportance	= 6,
        olConditionSensitivity	= 7,
        olConditionFlaggedForAction	= 8,
        olConditionCc	= 9,
        olConditionToOrCc	= 10,
        olConditionNotTo	= 11,
        olConditionSentTo	= 12,
        olConditionBody	= 13,
        olConditionBodyOrSubject	= 14,
        olConditionMessageHeader	= 15,
        olConditionRecipientAddress	= 16,
        olConditionSenderAddress	= 17,
        olConditionCategory	= 18,
        olConditionOOF	= 19,
        olConditionHasAttachment	= 20,
        olConditionSizeRange	= 21,
        olConditionDateRange	= 22,
        olConditionFormName	= 23,
        olConditionProperty	= 24,
        olConditionSenderInAddressBook	= 25,
        olConditionMeetingInviteOrUpdate	= 26,
        olConditionLocalMachineOnly	= 27,
        olConditionOtherMachine	= 28,
        olConditionAnyCategory	= 29,
        olConditionFromRssFeed	= 30,
        olConditionFromAnyRssFeed	= 31
    } 	OlRuleConditionType;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0048
    {
        olExchangeGlobalAddressList	= 0,
        olExchangeContainer	= 1,
        olOutlookAddressList	= 2,
        olOutlookLdapAddressList	= 3,
        olCustomAddressList	= 4
    } 	OlAddressListType;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0049
    {
        olSpecialFolderAllTasks	= 0,
        olSpecialFolderReminders	= 1
    } 	OlSpecialFolders;

typedef /* [public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0050
    {
        olFolderDeletedItems	= 3,
        olFolderOutbox	= 4,
        olFolderSentMail	= 5,
        olFolderInbox	= 6,
        olFolderCalendar	= 9,
        olFolderContacts	= 10,
        olFolderJournal	= 11,
        olFolderNotes	= 12,
        olFolderTasks	= 13,
        olFolderDrafts	= 16,
        olPublicFoldersAllPublicFolders	= 18,
        olFolderConflicts	= 19,
        olFolderSyncIssues	= 20,
        olFolderLocalFailures	= 21,
        olFolderServerFailures	= 22,
        olFolderJunk	= 23,
        olFolderRssFeeds	= 25,
        olFolderToDo	= 28,
        olFolderManagedEmail	= 29,
        olFolderSuggestedContacts	= 30
    } 	OlDefaultFolders;

typedef /* [public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0051
    {
        olCategoryColorNone	= 0,
        olCategoryColorRed	= 1,
        olCategoryColorOrange	= 2,
        olCategoryColorPeach	= 3,
        olCategoryColorYellow	= 4,
        olCategoryColorGreen	= 5,
        olCategoryColorTeal	= 6,
        olCategoryColorOlive	= 7,
        olCategoryColorBlue	= 8,
        olCategoryColorPurple	= 9,
        olCategoryColorMaroon	= 10,
        olCategoryColorSteel	= 11,
        olCategoryColorDarkSteel	= 12,
        olCategoryColorGray	= 13,
        olCategoryColorDarkGray	= 14,
        olCategoryColorBlack	= 15,
        olCategoryColorDarkRed	= 16,
        olCategoryColorDarkOrange	= 17,
        olCategoryColorDarkPeach	= 18,
        olCategoryColorDarkYellow	= 19,
        olCategoryColorDarkGreen	= 20,
        olCategoryColorDarkTeal	= 21,
        olCategoryColorDarkOlive	= 22,
        olCategoryColorDarkBlue	= 23,
        olCategoryColorDarkPurple	= 24,
        olCategoryColorDarkMaroon	= 25
    } 	OlCategoryColor;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0052
    {
        olCategoryShortcutKeyNone	= 0,
        olCategoryShortcutKeyCtrlF2	= 1,
        olCategoryShortcutKeyCtrlF3	= 2,
        olCategoryShortcutKeyCtrlF4	= 3,
        olCategoryShortcutKeyCtrlF5	= 4,
        olCategoryShortcutKeyCtrlF6	= 5,
        olCategoryShortcutKeyCtrlF7	= 6,
        olCategoryShortcutKeyCtrlF8	= 7,
        olCategoryShortcutKeyCtrlF9	= 8,
        olCategoryShortcutKeyCtrlF10	= 9,
        olCategoryShortcutKeyCtrlF11	= 10,
        olCategoryShortcutKeyCtrlF12	= 11
    } 	OlCategoryShortcutKey;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0053
    {
        olNoExchange	= 0,
        olOffline	= 100,
        olCachedOffline	= 200,
        olDisconnected	= 300,
        olCachedDisconnected	= 400,
        olCachedConnectedHeaders	= 500,
        olCachedConnectedDrizzle	= 600,
        olCachedConnectedFull	= 700,
        olOnline	= 800
    } 	OlExchangeConnectionMode;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0054
    {
        olViewSaveOptionThisFolderEveryone	= 0,
        olViewSaveOptionThisFolderOnlyMe	= 1,
        olViewSaveOptionAllFoldersOfType	= 2
    } 	OlViewSaveOption;

typedef /* [public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0055
    {
        olTableView	= 0,
        olCardView	= 1,
        olCalendarView	= 2,
        olIconView	= 3,
        olTimelineView	= 4,
        olBusinessCardView	= 5,
        olDailyTaskListView	= 6,
        olPeopleView	= 7
    } 	OlViewType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0056
    {
        olNoItemCount	= 0,
        olShowUnreadItemCount	= 1,
        olShowTotalItemCount	= 2
    } 	OlShowItemCount;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0057
    {
        olIdentifyBySubject	= 0,
        olIdentifyByEntryID	= 1,
        olIdentifyByMessageClass	= 2
    } 	OlStorageIdentifierType;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0058
    {
        olCalendarMailFormatDailySchedule	= 0,
        olCalendarMailFormatEventList	= 1
    } 	OlCalendarMailFormat;

typedef /* [public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0059
    {
        olNoFlag	= 0,
        olFlagComplete	= 1,
        olFlagMarked	= 2
    } 	OlFlagStatus;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0060
    {
        olRemoteStatusNone	= 0,
        olUnMarked	= 1,
        olMarkedForDownload	= 2,
        olMarkedForCopy	= 3,
        olMarkedForDelete	= 4
    } 	OlRemoteStatus;

typedef /* [public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0061
    {
        olFormatUnspecified	= 0,
        olFormatPlain	= 1,
        olFormatHTML	= 2,
        olFormatRichText	= 3
    } 	OlBodyFormat;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0062
    {
        olHeaderOnly	= 0,
        olFullItem	= 1
    } 	OlDownloadState;

typedef /* [public][public][public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0063
    {
        olNoFlagIcon	= 0,
        olPurpleFlagIcon	= 1,
        olOrangeFlagIcon	= 2,
        olGreenFlagIcon	= 3,
        olYellowFlagIcon	= 4,
        olBlueFlagIcon	= 5,
        olRedFlagIcon	= 6
    } 	OlFlagIcon;

typedef /* [public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0064
    {
        olUnrestricted	= 0,
        olDoNotForward	= 1,
        olPermissionTemplate	= 2
    } 	OlPermission;

typedef /* [public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0065
    {
        olUnknown	= 0,
        olWindows	= 1,
        olPassport	= 2
    } 	OlPermissionService;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0066
    {
        olDoNotDelete	= 0,
        olAlwaysDelete	= 1,
        olAlwaysDeleteUnsupported	= 2
    } 	OlAlwaysDeleteConversation;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0067
    {
        olFreeBusyOnly	= 0,
        olFreeBusyAndSubject	= 1,
        olFullDetails	= 2
    } 	OlCalendarDetail;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0068
    {
        olUnspecified	= 0,
        olFemale	= 1,
        olMale	= 2
    } 	OlGender;

typedef /* [public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0069
    {
        olNone	= 0,
        olHome	= 1,
        olBusiness	= 2,
        olOther	= 3
    } 	OlMailingAddress;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0070
    {
        olContactPhoneAssistant	= 0,
        olContactPhoneBusiness	= 1,
        olContactPhoneBusiness2	= 2,
        olContactPhoneBusinessFax	= 3,
        olContactPhoneCallback	= 4,
        olContactPhoneCar	= 5,
        olContactPhoneCompany	= 6,
        olContactPhoneHome	= 7,
        olContactPhoneHome2	= 8,
        olContactPhoneHomeFax	= 9,
        olContactPhoneISDN	= 10,
        olContactPhoneMobile	= 11,
        olContactPhoneOther	= 12,
        olContactPhoneOtherFax	= 13,
        olContactPhonePager	= 14,
        olContactPhonePrimary	= 15,
        olContactPhoneRadio	= 16,
        olContactPhoneTelex	= 17,
        olContactPhoneTTYTTD	= 18
    } 	OlContactPhoneNumber;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0071
    {
        olBusinessCardTypeOutlook	= 0,
        olBusinessCardTypeInterConnect	= 1
    } 	OlBusinessCardType;

typedef /* [public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0072
    {
        olExchangeUserAddressEntry	= 0,
        olExchangeDistributionListAddressEntry	= 1,
        olExchangePublicFolderAddressEntry	= 2,
        olExchangeAgentAddressEntry	= 3,
        olExchangeOrganizationAddressEntry	= 4,
        olExchangeRemoteUserAddressEntry	= 5,
        olOutlookContactAddressEntry	= 10,
        olOutlookDistributionListAddressEntry	= 11,
        olLdapAddressEntry	= 20,
        olSmtpAddressEntry	= 30,
        olOtherAddressEntry	= 40
    } 	OlAddressEntryUserType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0073
    {
        olResponseNone	= 0,
        olResponseOrganized	= 1,
        olResponseTentative	= 2,
        olResponseAccepted	= 3,
        olResponseDeclined	= 4,
        olResponseNotResponded	= 5
    } 	OlResponseStatus;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0074
    {
        olTrackingNone	= 0,
        olTrackingDelivered	= 1,
        olTrackingNotDelivered	= 2,
        olTrackingNotRead	= 3,
        olTrackingRecallFailure	= 4,
        olTrackingRecallSuccess	= 5,
        olTrackingRead	= 6,
        olTrackingReplied	= 7
    } 	OlTrackingStatus;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0075
    {
        olSyncStopped	= 0,
        olSyncStarted	= 1
    } 	OlSyncState;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0076
    {
        olStoreDefault	= 1,
        olStoreUnicode	= 2,
        olStoreANSI	= 3
    } 	OlStoreType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0077
    {
        olShowNone	= 0,
        olShowTo	= 1,
        olShowToCc	= 2,
        olShowToCcBcc	= 3
    } 	OlRecipientSelectors;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0078
    {
        olDefaultMail	= 1,
        olDefaultMeeting	= 2,
        olDefaultSharingRequest	= 4,
        olDefaultTask	= 3,
        olDefaultMembers	= 5,
        olDefaultDelegates	= 6,
        olDefaultSingleName	= 7,
        olDefaultPickRooms	= 8
    } 	OlDefaultSelectNamesDisplayMode;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0079
    {
        olProviderUnknown	= 0,
        olProviderExchange	= 1,
        olProviderWebCal	= 2,
        olProviderPubCal	= 3,
        olProviderICal	= 4,
        olProviderSharePoint	= 5,
        olProviderRSS	= 6,
        olProviderFederate	= 7
    } 	OlSharingProvider;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0080
    {
        olSharingMsgTypeUnknown	= 0,
        olSharingMsgTypeRequest	= 1,
        olSharingMsgTypeInvite	= 2,
        olSharingMsgTypeInviteAndRequest	= 3,
        olSharingMsgTypeResponseAllow	= 4,
        olSharingMsgTypeResponseDeny	= 5
    } 	OlSharingMsgType;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0081
    {
        olFolderDisplayNormal	= 0,
        olFolderDisplayFolderOnly	= 1,
        olFolderDisplayNoNavigation	= 2
    } 	OlFolderDisplayMode;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0082
    {
        olWeak	= 0,
        olStrong	= 1
    } 	OlReferenceType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0083
    {
        olFree	= 0,
        olTentative	= 1,
        olBusy	= 2,
        olOutOfOffice	= 3,
        olWorkingElsewhere	= 4
    } 	OlBusyStatus;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0084
    {
        olSunday	= 1,
        olMonday	= 2,
        olTuesday	= 4,
        olWednesday	= 8,
        olThursday	= 16,
        olFriday	= 32,
        olSaturday	= 64
    } 	OlDaysOfWeek;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0085
    {
        olAssociatedContact	= 1
    } 	OlJournalRecipientType;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0086
    {
        olOriginator	= 0,
        olTo	= 1,
        olCC	= 2,
        olBCC	= 3
    } 	OlMailRecipientType;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0087
    {
        olOrganizer	= 0,
        olRequired	= 1,
        olOptional	= 2,
        olResource	= 3
    } 	OlMeetingRecipientType;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0088
    {
        olMeetingTentative	= 2,
        olMeetingAccepted	= 3,
        olMeetingDeclined	= 4
    } 	OlMeetingResponse;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0089
    {
        olNonMeeting	= 0,
        olMeeting	= 1,
        olMeetingReceived	= 3,
        olMeetingCanceled	= 5,
        olMeetingReceivedAndCanceled	= 7
    } 	OlMeetingStatus;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0090
    {
        olNetMeeting	= 0,
        olNetShow	= 1,
        olExchangeConferencing	= 2
    } 	OlNetMeetingType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0091
    {
        olBlue	= 0,
        olGreen	= 1,
        olPink	= 2,
        olYellow	= 3,
        olWhite	= 4
    } 	OlNoteColor;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0092
    {
        olLargeIcon	= 0,
        olSmallIcon	= 1
    } 	OlOutlookBarViewType;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0093
    {
        olApptNotRecurring	= 0,
        olApptMaster	= 1,
        olApptOccurrence	= 2,
        olApptException	= 3
    } 	OlRecurrenceState;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0094
    {
        olRecursDaily	= 0,
        olRecursWeekly	= 1,
        olRecursMonthly	= 2,
        olRecursMonthNth	= 3,
        olRecursYearly	= 5,
        olRecursYearNth	= 6
    } 	OlRecurrenceType;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0095
    {
        olTXT	= 0,
        olRTF	= 1,
        olTemplate	= 2,
        olMSG	= 3,
        olDoc	= 4,
        olHTML	= 5,
        olVCard	= 6,
        olVCal	= 7,
        olICal	= 8,
        olMSGUnicode	= 9,
        olMHTML	= 10
    } 	OlSaveAsType;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0096
    {
        olSortNone	= 0,
        olAscending	= 1,
        olDescending	= 2
    } 	OlSortOrder;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0097
    {
        olTaskNotDelegated	= 0,
        olTaskDelegationUnknown	= 1,
        olTaskDelegationAccepted	= 2,
        olTaskDelegationDeclined	= 3
    } 	OlTaskDelegationState;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0098
    {
        olNewTask	= 0,
        olDelegatedTask	= 1,
        olOwnTask	= 2
    } 	OlTaskOwnership;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0099
    {
        olUpdate	= 2,
        olFinalStatus	= 3
    } 	OlTaskRecipientType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0100
    {
        olTaskSimple	= 0,
        olTaskAssign	= 1,
        olTaskAccept	= 2,
        olTaskDecline	= 3
    } 	OlTaskResponse;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0101
    {
        olTaskNotStarted	= 0,
        olTaskInProgress	= 1,
        olTaskComplete	= 2,
        olTaskWaiting	= 3,
        olTaskDeferred	= 4
    } 	OlTaskStatus;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0102
    {
        olExcelWorkSheetItem	= 8,
        olWordDocumentItem	= 9,
        olPowerPointShowItem	= 10
    } 	OlOfficeDocItemsType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0103
    {
        olFormRegionRead	= 0,
        olFormRegionCompose	= 1,
        olFormRegionPreview	= 2
    } 	OlFormRegionMode;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0104
    {
        olFormRegionTypeSeparate	= 0,
        olFormRegionTypeAdjoining	= 1
    } 	OlFormRegionSize;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0105
    {
        olRuleExecuteAllMessages	= 0,
        olRuleExecuteReadMessages	= 1,
        olRuleExecuteUnreadMessages	= 2
    } 	OlRuleExecuteOption;

typedef /* [public][public][public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0106
    {
        olAllExpanded	= 0,
        olAllCollapsed	= 1,
        olLastViewed	= 2
    } 	OlDefaultExpandCollapseSetting;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0107
    {
        olWidthMultiLine	= 0,
        olAlwaysSingleLine	= 1,
        olAlwaysMultiLine	= 2
    } 	OlMultiLine;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0108
    {
        olGridLineNone	= 0,
        olGridLineSmallDots	= 1,
        olGridLineLargeDots	= 2,
        olGridLineDashes	= 3,
        olGridLineSolid	= 4
    } 	OlGridLineStyle;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0109
    {
        olIconViewLarge	= 0,
        olIconViewSmall	= 1,
        olIconViewList	= 2
    } 	OlIconViewType;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0110
    {
        olIconDoNotArrange	= 0,
        olIconLineUp	= 1,
        olIconAutoArrange	= 2,
        olIconSortAndAutoArrange	= 3
    } 	OlIconViewPlacement;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0111
    {
        olCalendarViewDay	= 0,
        olCalendarViewWeek	= 1,
        olCalendarViewMonth	= 2,
        olCalendarViewMultiDay	= 3,
        olCalendarView5DayWeek	= 4
    } 	OlCalendarViewMode;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0112
    {
        olTimeScale5Minutes	= 0,
        olTimeScale6Minutes	= 1,
        olTimeScale10Minutes	= 2,
        olTimeScale15Minutes	= 3,
        olTimeScale30Minutes	= 4,
        olTimeScale60Minutes	= 5
    } 	OlDayWeekTimeScale;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0113
    {
        olTimelineViewDay	= 0,
        olTimelineViewWeek	= 1,
        olTimelineViewMonth	= 2
    } 	OlTimelineViewMode;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0114
    {
        olAutoPreviewAll	= 0,
        olAutoPreviewUnread	= 1,
        olAutoPreviewNone	= 2
    } 	OlAutoPreview;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0115
    {
        olAutoColor	= 0,
        olColorBlack	= 1,
        olColorMaroon	= 2,
        olColorGreen	= 3,
        olColorOlive	= 4,
        olColorNavy	= 5,
        olColorPurple	= 6,
        olColorTeal	= 7,
        olColorGray	= 8,
        olColorSilver	= 9,
        olColorRed	= 10,
        olColorLime	= 11,
        olColorYellow	= 12,
        olColorBlue	= 13,
        olColorFuchsia	= 14,
        olColorAqua	= 15,
        olColorWhite	= 16
    } 	OlColor;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0116
    {
        olAlignLeft	= 0,
        olAlignCenter	= 1,
        olAlignRight	= 2
    } 	OlAlign;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0117
    {
        olFormatCurrencyDecimal	= 1,
        olFormatCurrencyNonDecimal	= 2
    } 	OlFormatCurrency;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0118
    {
        olFormatDateTimeLongDayDateTime	= 1,
        olFormatDateTimeShortDateTime	= 2,
        olFormatDateTimeShortDayDateTime	= 3,
        olFormatDateTimeShortDayMonthDateTime	= 4,
        OlFormatDateTimeLongDayDate	= 5,
        olFormatDateTimeLongDate	= 6,
        olFormatDateTimeLongDateReversed	= 7,
        olFormatDateTimeShortDate	= 8,
        olFormatDateTimeShortDateNumOnly	= 9,
        olFormatDateTimeShortDayMonth	= 10,
        olFormatDateTimeShortMonthYear	= 11,
        olFormatDateTimeShortMonthYearNumOnly	= 12,
        olFormatDateTimeShortDayDate	= 13,
        olFormatDateTimeLongTime	= 15,
        olFormatDateTimeShortTime	= 16,
        olFormatDateTimeBestFit	= 17
    } 	OlFormatDateTime;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0119
    {
        olFormatDurationShort	= 1,
        olFormatDurationLong	= 2,
        olFormatDurationShortBusiness	= 3,
        olFormatDurationLongBusiness	= 4
    } 	OlFormatDuration;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0120
    {
        olFormatIntegerPlain	= 1,
        olFormatIntegerComputer1	= 2,
        olFormatIntegerComputer2	= 3,
        olFormatIntegerComputer3	= 4
    } 	OlFormatInteger;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0121
    {
        olFormatKeywordsText	= 1
    } 	OlFormatKeywords;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0122
    {
        olFormatNumberAllDigits	= 1,
        olFormatNumberTruncated	= 2,
        olFormatNumber1Decimal	= 3,
        olFormatNumber2Decimal	= 4,
        olFormatNumberScientific	= 5,
        olFormatNumberComputer1	= 6,
        olFormatNumberComputer2	= 7,
        olFormatNumberComputer3	= 8,
        olFormatNumberRaw	= 9
    } 	OlFormatNumber;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0123
    {
        olFormatPercentRounded	= 1,
        olFormatPercent1Decimal	= 2,
        olFormatPercent2Decimal	= 3,
        olFormatPercentAllDigits	= 4
    } 	OlFormatPercent;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0124
    {
        olFormatYesNoYesNo	= 1,
        olFormatYesNoOnOff	= 2,
        olFormatYesNoTrueFalse	= 3,
        olFormatYesNoIcon	= 4
    } 	OlFormatYesNo;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0125
    {
        olFormatEnumBitmap	= 1,
        olFormatEnumText	= 2
    } 	OlFormatEnumeration;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0126
    {
        olFormatSmartFromFromTo	= 1,
        olFormatSmartFromFromOnly	= 2
    } 	OlFormatSmartFrom;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0127
    {
        olItemContextMenu	= 0,
        olViewContextMenu	= 1,
        olFolderContextMenu	= 2,
        olAttachmentContextMenu	= 3,
        olStoreContextMenu	= 4,
        olShortcutContextMenu	= 5
    } 	OlContextMenu;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0128
    {
        olFormatTextText	= 1
    } 	OlFormatText;

typedef /* [public][public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0129
    {
        olCustomFoldersGroup	= 0,
        olMyFoldersGroup	= 1,
        olPeopleFoldersGroup	= 2,
        olOtherFoldersGroup	= 3,
        olFavoriteFoldersGroup	= 4,
        olRoomsGroup	= 5,
        olReadOnlyGroup	= 6
    } 	OlGroupType;

typedef /* [public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0130
    {
        olUserItems	= 0,
        olHiddenItems	= 1
    } 	OlTableContents;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0131
    {
        olFormRegionIconDefault	= 1,
        olFormRegionIconUnread	= 2,
        olFormRegionIconRead	= 3,
        olFormRegionIconReplied	= 4,
        olFormRegionIconForwarded	= 5,
        olFormRegionIconUnsent	= 6,
        olFormRegionIconSubmitted	= 7,
        olFormRegionIconSigned	= 8,
        olFormRegionIconEncrypted	= 9,
        olFormRegionIconWindow	= 10,
        olFormRegionIconPage	= 11,
        olFormRegionIconRecurring	= 12
    } 	OlFormRegionIcon;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0132
    {
        olHideInDefaultModules	= 0,
        olShowInDefaultModules	= 1
    } 	OlSolutionScope;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0133
    {
        olSMS	= 0,
        olMMS	= 1
    } 	OlMobileFormat;

typedef /* [public][public][helpcontext] */ 
enum __MIDL___MIDL_itf_msoutl_temp_0000_0000_0134
    {
        olPromptUser	= 0,
        olCreateAppointment	= 1,
        olCopyAsAccept	= 2
    } 	OlAppointmentCopyOptions;


EXTERN_C const IID LIBID_Outlook;

#ifndef ___IRecipientControl_INTERFACE_DEFINED__
#define ___IRecipientControl_INTERFACE_DEFINED__

/* interface _IRecipientControl */
/* [object][helpcontext][uuid] */ 


EXTERN_C const IID IID__IRecipientControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D87E7E16-6897-11CE-A6C0-00AA00608FAA")
    _IRecipientControl : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Enabled( 
            /* [retval][out] */ unsigned char *Enabled) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Enabled( 
            /* [in] */ unsigned char Enabled) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_BackColor( 
            /* [retval][out] */ long *BackColor) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_BackColor( 
            /* [in] */ long BackColor) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ForeColor( 
            /* [retval][out] */ long *ForeColor) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ForeColor( 
            /* [in] */ long ForeColor) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ReadOnly( 
            /* [retval][out] */ unsigned char *ReadOnly) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ReadOnly( 
            /* [in] */ unsigned char ReadOnly) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Font( 
            /* [retval][out] */ IDispatch **Font) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Font( 
            /* [in] */ IDispatch *Font) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_SpecialEffect( 
            /* [retval][out] */ long *Effect) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_SpecialEffect( 
            /* [in] */ long Effect) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _IRecipientControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IRecipientControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IRecipientControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IRecipientControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IRecipientControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IRecipientControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IRecipientControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IRecipientControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Enabled )( 
            _IRecipientControl * This,
            /* [retval][out] */ unsigned char *Enabled);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Enabled )( 
            _IRecipientControl * This,
            /* [in] */ unsigned char Enabled);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_BackColor )( 
            _IRecipientControl * This,
            /* [retval][out] */ long *BackColor);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_BackColor )( 
            _IRecipientControl * This,
            /* [in] */ long BackColor);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ForeColor )( 
            _IRecipientControl * This,
            /* [retval][out] */ long *ForeColor);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ForeColor )( 
            _IRecipientControl * This,
            /* [in] */ long ForeColor);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ReadOnly )( 
            _IRecipientControl * This,
            /* [retval][out] */ unsigned char *ReadOnly);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ReadOnly )( 
            _IRecipientControl * This,
            /* [in] */ unsigned char ReadOnly);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Font )( 
            _IRecipientControl * This,
            /* [retval][out] */ IDispatch **Font);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Font )( 
            _IRecipientControl * This,
            /* [in] */ IDispatch *Font);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_SpecialEffect )( 
            _IRecipientControl * This,
            /* [retval][out] */ long *Effect);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_SpecialEffect )( 
            _IRecipientControl * This,
            /* [in] */ long Effect);
        
        END_INTERFACE
    } _IRecipientControlVtbl;

    interface _IRecipientControl
    {
        CONST_VTBL struct _IRecipientControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IRecipientControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IRecipientControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IRecipientControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IRecipientControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IRecipientControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IRecipientControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IRecipientControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _IRecipientControl_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _IRecipientControl_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _IRecipientControl_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _IRecipientControl_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _IRecipientControl_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _IRecipientControl_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _IRecipientControl_get_ReadOnly(This,ReadOnly)	\
    ( (This)->lpVtbl -> get_ReadOnly(This,ReadOnly) ) 

#define _IRecipientControl_put_ReadOnly(This,ReadOnly)	\
    ( (This)->lpVtbl -> put_ReadOnly(This,ReadOnly) ) 

#define _IRecipientControl_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _IRecipientControl_put_Font(This,Font)	\
    ( (This)->lpVtbl -> put_Font(This,Font) ) 

#define _IRecipientControl_get_SpecialEffect(This,Effect)	\
    ( (This)->lpVtbl -> get_SpecialEffect(This,Effect) ) 

#define _IRecipientControl_put_SpecialEffect(This,Effect)	\
    ( (This)->lpVtbl -> put_SpecialEffect(This,Effect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IRecipientControl_INTERFACE_DEFINED__ */


#ifndef ___DRecipientControl_DISPINTERFACE_DEFINED__
#define ___DRecipientControl_DISPINTERFACE_DEFINED__

/* dispinterface _DRecipientControl */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID__DRecipientControl;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006F025-0000-0000-C000-000000000046")
    _DRecipientControl : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _DRecipientControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DRecipientControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DRecipientControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DRecipientControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DRecipientControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DRecipientControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DRecipientControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DRecipientControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DRecipientControlVtbl;

    interface _DRecipientControl
    {
        CONST_VTBL struct _DRecipientControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DRecipientControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DRecipientControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DRecipientControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DRecipientControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DRecipientControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DRecipientControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DRecipientControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___DRecipientControl_DISPINTERFACE_DEFINED__ */


#ifndef ___DRecipientControlEvents_DISPINTERFACE_DEFINED__
#define ___DRecipientControlEvents_DISPINTERFACE_DEFINED__

/* dispinterface _DRecipientControlEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID__DRecipientControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("D87E7E17-6897-11CE-A6C0-00AA00608FAA")
    _DRecipientControlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _DRecipientControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DRecipientControlEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DRecipientControlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DRecipientControlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DRecipientControlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DRecipientControlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DRecipientControlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DRecipientControlEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DRecipientControlEventsVtbl;

    interface _DRecipientControlEvents
    {
        CONST_VTBL struct _DRecipientControlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DRecipientControlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DRecipientControlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DRecipientControlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DRecipientControlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DRecipientControlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DRecipientControlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DRecipientControlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___DRecipientControlEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___IDocSiteControl_INTERFACE_DEFINED__
#define ___IDocSiteControl_INTERFACE_DEFINED__

/* interface _IDocSiteControl */
/* [object][helpcontext][uuid] */ 


EXTERN_C const IID IID__IDocSiteControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43507DD0-811D-11CE-B565-00AA00608FAA")
    _IDocSiteControl : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ReadOnly( 
            /* [retval][out] */ unsigned char *ReadOnly) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ReadOnly( 
            /* [in] */ unsigned char ReadOnly) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_SuppressAttachments( 
            /* [retval][out] */ unsigned char *SuppressAttachments) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_SuppressAttachments( 
            /* [in] */ unsigned char SuppressAttachments) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _IDocSiteControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IDocSiteControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IDocSiteControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IDocSiteControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IDocSiteControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IDocSiteControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IDocSiteControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IDocSiteControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ReadOnly )( 
            _IDocSiteControl * This,
            /* [retval][out] */ unsigned char *ReadOnly);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ReadOnly )( 
            _IDocSiteControl * This,
            /* [in] */ unsigned char ReadOnly);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_SuppressAttachments )( 
            _IDocSiteControl * This,
            /* [retval][out] */ unsigned char *SuppressAttachments);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_SuppressAttachments )( 
            _IDocSiteControl * This,
            /* [in] */ unsigned char SuppressAttachments);
        
        END_INTERFACE
    } _IDocSiteControlVtbl;

    interface _IDocSiteControl
    {
        CONST_VTBL struct _IDocSiteControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IDocSiteControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IDocSiteControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IDocSiteControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IDocSiteControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IDocSiteControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IDocSiteControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IDocSiteControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _IDocSiteControl_get_ReadOnly(This,ReadOnly)	\
    ( (This)->lpVtbl -> get_ReadOnly(This,ReadOnly) ) 

#define _IDocSiteControl_put_ReadOnly(This,ReadOnly)	\
    ( (This)->lpVtbl -> put_ReadOnly(This,ReadOnly) ) 

#define _IDocSiteControl_get_SuppressAttachments(This,SuppressAttachments)	\
    ( (This)->lpVtbl -> get_SuppressAttachments(This,SuppressAttachments) ) 

#define _IDocSiteControl_put_SuppressAttachments(This,SuppressAttachments)	\
    ( (This)->lpVtbl -> put_SuppressAttachments(This,SuppressAttachments) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IDocSiteControl_INTERFACE_DEFINED__ */


#ifndef ___DDocSiteControl_DISPINTERFACE_DEFINED__
#define ___DDocSiteControl_DISPINTERFACE_DEFINED__

/* dispinterface _DDocSiteControl */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID__DDocSiteControl;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006F026-0000-0000-C000-000000000046")
    _DDocSiteControl : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _DDocSiteControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DDocSiteControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DDocSiteControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DDocSiteControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DDocSiteControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DDocSiteControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DDocSiteControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DDocSiteControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DDocSiteControlVtbl;

    interface _DDocSiteControl
    {
        CONST_VTBL struct _DDocSiteControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DDocSiteControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DDocSiteControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DDocSiteControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DDocSiteControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DDocSiteControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DDocSiteControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DDocSiteControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___DDocSiteControl_DISPINTERFACE_DEFINED__ */


#ifndef ___DDocSiteControlEvents_DISPINTERFACE_DEFINED__
#define ___DDocSiteControlEvents_DISPINTERFACE_DEFINED__

/* dispinterface _DDocSiteControlEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID__DDocSiteControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("50BB9B50-811D-11CE-B565-00AA00608FAA")
    _DDocSiteControlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _DDocSiteControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DDocSiteControlEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DDocSiteControlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DDocSiteControlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DDocSiteControlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DDocSiteControlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DDocSiteControlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DDocSiteControlEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DDocSiteControlEventsVtbl;

    interface _DDocSiteControlEvents
    {
        CONST_VTBL struct _DDocSiteControlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DDocSiteControlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DDocSiteControlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DDocSiteControlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DDocSiteControlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DDocSiteControlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DDocSiteControlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DDocSiteControlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___DDocSiteControlEvents_DISPINTERFACE_DEFINED__ */


#ifndef __OlkControl_INTERFACE_DEFINED__
#define __OlkControl_INTERFACE_DEFINED__

/* interface OlkControl */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_OlkControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00067366-0000-0000-C000-000000000046")
    OlkControl : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperty( 
            /* [retval][out] */ BSTR *ItemProperty) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ItemProperty( 
            /* [in] */ BSTR ItemProperty) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ControlProperty( 
            /* [retval][out] */ BSTR *ControlProperty) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ControlProperty( 
            /* [in] */ BSTR ControlProperty) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PossibleValues( 
            /* [retval][out] */ BSTR *PossibleValues) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PossibleValues( 
            /* [in] */ BSTR PossibleValues) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Format( 
            /* [retval][out] */ long *Format) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Format( 
            /* [in] */ long Format) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableAutoLayout( 
            /* [retval][out] */ VARIANT_BOOL *EnableAutoLayout) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableAutoLayout( 
            /* [in] */ VARIANT_BOOL EnableAutoLayout) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MinimumWidth( 
            /* [retval][out] */ long *MinimumWidth) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MinimumWidth( 
            /* [in] */ long MinimumWidth) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MinimumHeight( 
            /* [retval][out] */ long *MinimumHeight) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MinimumHeight( 
            /* [in] */ long MinimumHeight) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HorizontalLayout( 
            /* [retval][out] */ OlHorizontalLayout *HorizontalLayout) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HorizontalLayout( 
            /* [in] */ OlHorizontalLayout HorizontalLayout) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VerticalLayout( 
            /* [retval][out] */ OlVerticalLayout *VerticalLayout) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_VerticalLayout( 
            /* [in] */ OlVerticalLayout VerticalLayout) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct OlkControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperty )( 
            OlkControl * This,
            /* [retval][out] */ BSTR *ItemProperty);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ItemProperty )( 
            OlkControl * This,
            /* [in] */ BSTR ItemProperty);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ControlProperty )( 
            OlkControl * This,
            /* [retval][out] */ BSTR *ControlProperty);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ControlProperty )( 
            OlkControl * This,
            /* [in] */ BSTR ControlProperty);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PossibleValues )( 
            OlkControl * This,
            /* [retval][out] */ BSTR *PossibleValues);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PossibleValues )( 
            OlkControl * This,
            /* [in] */ BSTR PossibleValues);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Format )( 
            OlkControl * This,
            /* [retval][out] */ long *Format);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Format )( 
            OlkControl * This,
            /* [in] */ long Format);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableAutoLayout )( 
            OlkControl * This,
            /* [retval][out] */ VARIANT_BOOL *EnableAutoLayout);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableAutoLayout )( 
            OlkControl * This,
            /* [in] */ VARIANT_BOOL EnableAutoLayout);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MinimumWidth )( 
            OlkControl * This,
            /* [retval][out] */ long *MinimumWidth);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MinimumWidth )( 
            OlkControl * This,
            /* [in] */ long MinimumWidth);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MinimumHeight )( 
            OlkControl * This,
            /* [retval][out] */ long *MinimumHeight);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MinimumHeight )( 
            OlkControl * This,
            /* [in] */ long MinimumHeight);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalLayout )( 
            OlkControl * This,
            /* [retval][out] */ OlHorizontalLayout *HorizontalLayout);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalLayout )( 
            OlkControl * This,
            /* [in] */ OlHorizontalLayout HorizontalLayout);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalLayout )( 
            OlkControl * This,
            /* [retval][out] */ OlVerticalLayout *VerticalLayout);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalLayout )( 
            OlkControl * This,
            /* [in] */ OlVerticalLayout VerticalLayout);
        
        END_INTERFACE
    } OlkControlVtbl;

    interface OlkControl
    {
        CONST_VTBL struct OlkControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OlkControl_get_ItemProperty(This,ItemProperty)	\
    ( (This)->lpVtbl -> get_ItemProperty(This,ItemProperty) ) 

#define OlkControl_put_ItemProperty(This,ItemProperty)	\
    ( (This)->lpVtbl -> put_ItemProperty(This,ItemProperty) ) 

#define OlkControl_get_ControlProperty(This,ControlProperty)	\
    ( (This)->lpVtbl -> get_ControlProperty(This,ControlProperty) ) 

#define OlkControl_put_ControlProperty(This,ControlProperty)	\
    ( (This)->lpVtbl -> put_ControlProperty(This,ControlProperty) ) 

#define OlkControl_get_PossibleValues(This,PossibleValues)	\
    ( (This)->lpVtbl -> get_PossibleValues(This,PossibleValues) ) 

#define OlkControl_put_PossibleValues(This,PossibleValues)	\
    ( (This)->lpVtbl -> put_PossibleValues(This,PossibleValues) ) 

#define OlkControl_get_Format(This,Format)	\
    ( (This)->lpVtbl -> get_Format(This,Format) ) 

#define OlkControl_put_Format(This,Format)	\
    ( (This)->lpVtbl -> put_Format(This,Format) ) 

#define OlkControl_get_EnableAutoLayout(This,EnableAutoLayout)	\
    ( (This)->lpVtbl -> get_EnableAutoLayout(This,EnableAutoLayout) ) 

#define OlkControl_put_EnableAutoLayout(This,EnableAutoLayout)	\
    ( (This)->lpVtbl -> put_EnableAutoLayout(This,EnableAutoLayout) ) 

#define OlkControl_get_MinimumWidth(This,MinimumWidth)	\
    ( (This)->lpVtbl -> get_MinimumWidth(This,MinimumWidth) ) 

#define OlkControl_put_MinimumWidth(This,MinimumWidth)	\
    ( (This)->lpVtbl -> put_MinimumWidth(This,MinimumWidth) ) 

#define OlkControl_get_MinimumHeight(This,MinimumHeight)	\
    ( (This)->lpVtbl -> get_MinimumHeight(This,MinimumHeight) ) 

#define OlkControl_put_MinimumHeight(This,MinimumHeight)	\
    ( (This)->lpVtbl -> put_MinimumHeight(This,MinimumHeight) ) 

#define OlkControl_get_HorizontalLayout(This,HorizontalLayout)	\
    ( (This)->lpVtbl -> get_HorizontalLayout(This,HorizontalLayout) ) 

#define OlkControl_put_HorizontalLayout(This,HorizontalLayout)	\
    ( (This)->lpVtbl -> put_HorizontalLayout(This,HorizontalLayout) ) 

#define OlkControl_get_VerticalLayout(This,VerticalLayout)	\
    ( (This)->lpVtbl -> get_VerticalLayout(This,VerticalLayout) ) 

#define OlkControl_put_VerticalLayout(This,VerticalLayout)	\
    ( (This)->lpVtbl -> put_VerticalLayout(This,VerticalLayout) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OlkControl_INTERFACE_DEFINED__ */


#ifndef ___OlkTextBox_INTERFACE_DEFINED__
#define ___OlkTextBox_INTERFACE_DEFINED__

/* interface _OlkTextBox */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkTextBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672DA-0000-0000-C000-000000000046")
    _OlkTextBox : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *AutoSize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL AutoSize) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoTab( 
            /* [retval][out] */ VARIANT_BOOL *AutoTab) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoTab( 
            /* [in] */ VARIANT_BOOL AutoTab) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoWordSelect( 
            /* [retval][out] */ VARIANT_BOOL *AutoWordSelect) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoWordSelect( 
            /* [in] */ VARIANT_BOOL AutoWordSelect) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BorderStyle( 
            /* [retval][out] */ OlBorderStyle *BorderStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BorderStyle( 
            /* [in] */ OlBorderStyle BorderStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DragBehavior( 
            /* [retval][out] */ OlDragBehavior *DragBehavior) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DragBehavior( 
            /* [in] */ OlDragBehavior DragBehavior) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnterFieldBehavior( 
            /* [retval][out] */ OlEnterFieldBehavior *EnterFieldBehavior) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnterFieldBehavior( 
            /* [in] */ OlEnterFieldBehavior EnterFieldBehavior) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnterKeyBehavior( 
            /* [retval][out] */ VARIANT_BOOL *EnterKeyBehavior) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnterKeyBehavior( 
            /* [in] */ VARIANT_BOOL EnterKeyBehavior) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HideSelection( 
            /* [retval][out] */ VARIANT_BOOL *HideSelection) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HideSelection( 
            /* [in] */ VARIANT_BOOL HideSelection) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IntegralHeight( 
            /* [retval][out] */ VARIANT_BOOL *IntegralHeight) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IntegralHeight( 
            /* [in] */ VARIANT_BOOL IntegralHeight) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Locked( 
            /* [retval][out] */ VARIANT_BOOL *Locked) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Locked( 
            /* [in] */ VARIANT_BOOL Locked) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MaxLength( 
            /* [retval][out] */ long *MaxLength) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MaxLength( 
            /* [in] */ long MaxLength) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MultiLine( 
            /* [retval][out] */ VARIANT_BOOL *MultiLine) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MultiLine( 
            /* [in] */ VARIANT_BOOL MultiLine) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PasswordChar( 
            /* [retval][out] */ BSTR *PasswordChar) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PasswordChar( 
            /* [in] */ BSTR PasswordChar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Scrollbars( 
            /* [retval][out] */ OlScrollBars *Scrollbars) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Scrollbars( 
            /* [in] */ OlScrollBars Scrollbars) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectionMargin( 
            /* [retval][out] */ VARIANT_BOOL *SelectionMargin) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SelectionMargin( 
            /* [in] */ VARIANT_BOOL SelectionMargin) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TabKeyBehavior( 
            /* [retval][out] */ VARIANT_BOOL *TabKeyBehavior) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TabKeyBehavior( 
            /* [in] */ VARIANT_BOOL TabKeyBehavior) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *Text) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlign( 
            /* [retval][out] */ OlTextAlign *TextAlign) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlign( 
            /* [in] */ OlTextAlign TextAlign) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WordWrap( 
            /* [retval][out] */ VARIANT_BOOL *WordWrap) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WordWrap( 
            /* [in] */ VARIANT_BOOL WordWrap) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelStart( 
            /* [retval][out] */ long *SelStart) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SelStart( 
            /* [in] */ long SelStart) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelLength( 
            /* [retval][out] */ long *SelLength) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SelLength( 
            /* [in] */ long SelLength) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelText( 
            /* [retval][out] */ BSTR *SelText) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Cut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Paste( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableRichText( 
            /* [retval][out] */ VARIANT_BOOL *EnableRichText) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableRichText( 
            /* [in] */ VARIANT_BOOL EnableRichText) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkTextBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkTextBox * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkTextBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkTextBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkTextBox * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkTextBox * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkTextBox * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkTextBox * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *AutoSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL AutoSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoTab )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *AutoTab);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoTab )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL AutoTab);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoWordSelect )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *AutoWordSelect);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoWordSelect )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL AutoWordSelect);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            _OlkTextBox * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            _OlkTextBox * This,
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            _OlkTextBox * This,
            /* [retval][out] */ OlBorderStyle *BorderStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            _OlkTextBox * This,
            /* [in] */ OlBorderStyle BorderStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DragBehavior )( 
            _OlkTextBox * This,
            /* [retval][out] */ OlDragBehavior *DragBehavior);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DragBehavior )( 
            _OlkTextBox * This,
            /* [in] */ OlDragBehavior DragBehavior);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnterFieldBehavior )( 
            _OlkTextBox * This,
            /* [retval][out] */ OlEnterFieldBehavior *EnterFieldBehavior);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnterFieldBehavior )( 
            _OlkTextBox * This,
            /* [in] */ OlEnterFieldBehavior EnterFieldBehavior);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnterKeyBehavior )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *EnterKeyBehavior);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnterKeyBehavior )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL EnterKeyBehavior);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkTextBox * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkTextBox * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkTextBox * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HideSelection )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *HideSelection);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HideSelection )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL HideSelection);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IntegralHeight )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *IntegralHeight);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IntegralHeight )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL IntegralHeight);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Locked )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *Locked);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Locked )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL Locked);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLength )( 
            _OlkTextBox * This,
            /* [retval][out] */ long *MaxLength);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxLength )( 
            _OlkTextBox * This,
            /* [in] */ long MaxLength);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkTextBox * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkTextBox * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkTextBox * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkTextBox * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MultiLine )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *MultiLine);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MultiLine )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL MultiLine);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PasswordChar )( 
            _OlkTextBox * This,
            /* [retval][out] */ BSTR *PasswordChar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PasswordChar )( 
            _OlkTextBox * This,
            /* [in] */ BSTR PasswordChar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Scrollbars )( 
            _OlkTextBox * This,
            /* [retval][out] */ OlScrollBars *Scrollbars);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Scrollbars )( 
            _OlkTextBox * This,
            /* [in] */ OlScrollBars Scrollbars);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionMargin )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *SelectionMargin);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionMargin )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL SelectionMargin);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TabKeyBehavior )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *TabKeyBehavior);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TabKeyBehavior )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL TabKeyBehavior);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            _OlkTextBox * This,
            /* [retval][out] */ BSTR *Text);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            _OlkTextBox * This,
            /* [in] */ BSTR Text);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlign )( 
            _OlkTextBox * This,
            /* [retval][out] */ OlTextAlign *TextAlign);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlign )( 
            _OlkTextBox * This,
            /* [in] */ OlTextAlign TextAlign);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WordWrap )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *WordWrap);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WordWrap )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL WordWrap);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelStart )( 
            _OlkTextBox * This,
            /* [retval][out] */ long *SelStart);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SelStart )( 
            _OlkTextBox * This,
            /* [in] */ long SelStart);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelLength )( 
            _OlkTextBox * This,
            /* [retval][out] */ long *SelLength);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SelLength )( 
            _OlkTextBox * This,
            /* [in] */ long SelLength);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelText )( 
            _OlkTextBox * This,
            /* [retval][out] */ BSTR *SelText);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Cut )( 
            _OlkTextBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _OlkTextBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Paste )( 
            _OlkTextBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            _OlkTextBox * This);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableRichText )( 
            _OlkTextBox * This,
            /* [retval][out] */ VARIANT_BOOL *EnableRichText);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableRichText )( 
            _OlkTextBox * This,
            /* [in] */ VARIANT_BOOL EnableRichText);
        
        END_INTERFACE
    } _OlkTextBoxVtbl;

    interface _OlkTextBox
    {
        CONST_VTBL struct _OlkTextBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkTextBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkTextBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkTextBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkTextBox_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkTextBox_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkTextBox_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkTextBox_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkTextBox_get_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> get_AutoSize(This,AutoSize) ) 

#define _OlkTextBox_put_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> put_AutoSize(This,AutoSize) ) 

#define _OlkTextBox_get_AutoTab(This,AutoTab)	\
    ( (This)->lpVtbl -> get_AutoTab(This,AutoTab) ) 

#define _OlkTextBox_put_AutoTab(This,AutoTab)	\
    ( (This)->lpVtbl -> put_AutoTab(This,AutoTab) ) 

#define _OlkTextBox_get_AutoWordSelect(This,AutoWordSelect)	\
    ( (This)->lpVtbl -> get_AutoWordSelect(This,AutoWordSelect) ) 

#define _OlkTextBox_put_AutoWordSelect(This,AutoWordSelect)	\
    ( (This)->lpVtbl -> put_AutoWordSelect(This,AutoWordSelect) ) 

#define _OlkTextBox_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _OlkTextBox_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _OlkTextBox_get_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,BorderStyle) ) 

#define _OlkTextBox_put_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,BorderStyle) ) 

#define _OlkTextBox_get_DragBehavior(This,DragBehavior)	\
    ( (This)->lpVtbl -> get_DragBehavior(This,DragBehavior) ) 

#define _OlkTextBox_put_DragBehavior(This,DragBehavior)	\
    ( (This)->lpVtbl -> put_DragBehavior(This,DragBehavior) ) 

#define _OlkTextBox_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkTextBox_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkTextBox_get_EnterFieldBehavior(This,EnterFieldBehavior)	\
    ( (This)->lpVtbl -> get_EnterFieldBehavior(This,EnterFieldBehavior) ) 

#define _OlkTextBox_put_EnterFieldBehavior(This,EnterFieldBehavior)	\
    ( (This)->lpVtbl -> put_EnterFieldBehavior(This,EnterFieldBehavior) ) 

#define _OlkTextBox_get_EnterKeyBehavior(This,EnterKeyBehavior)	\
    ( (This)->lpVtbl -> get_EnterKeyBehavior(This,EnterKeyBehavior) ) 

#define _OlkTextBox_put_EnterKeyBehavior(This,EnterKeyBehavior)	\
    ( (This)->lpVtbl -> put_EnterKeyBehavior(This,EnterKeyBehavior) ) 

#define _OlkTextBox_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkTextBox_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkTextBox_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkTextBox_get_HideSelection(This,HideSelection)	\
    ( (This)->lpVtbl -> get_HideSelection(This,HideSelection) ) 

#define _OlkTextBox_put_HideSelection(This,HideSelection)	\
    ( (This)->lpVtbl -> put_HideSelection(This,HideSelection) ) 

#define _OlkTextBox_get_IntegralHeight(This,IntegralHeight)	\
    ( (This)->lpVtbl -> get_IntegralHeight(This,IntegralHeight) ) 

#define _OlkTextBox_put_IntegralHeight(This,IntegralHeight)	\
    ( (This)->lpVtbl -> put_IntegralHeight(This,IntegralHeight) ) 

#define _OlkTextBox_get_Locked(This,Locked)	\
    ( (This)->lpVtbl -> get_Locked(This,Locked) ) 

#define _OlkTextBox_put_Locked(This,Locked)	\
    ( (This)->lpVtbl -> put_Locked(This,Locked) ) 

#define _OlkTextBox_get_MaxLength(This,MaxLength)	\
    ( (This)->lpVtbl -> get_MaxLength(This,MaxLength) ) 

#define _OlkTextBox_put_MaxLength(This,MaxLength)	\
    ( (This)->lpVtbl -> put_MaxLength(This,MaxLength) ) 

#define _OlkTextBox_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkTextBox_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkTextBox_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkTextBox_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkTextBox_get_MultiLine(This,MultiLine)	\
    ( (This)->lpVtbl -> get_MultiLine(This,MultiLine) ) 

#define _OlkTextBox_put_MultiLine(This,MultiLine)	\
    ( (This)->lpVtbl -> put_MultiLine(This,MultiLine) ) 

#define _OlkTextBox_get_PasswordChar(This,PasswordChar)	\
    ( (This)->lpVtbl -> get_PasswordChar(This,PasswordChar) ) 

#define _OlkTextBox_put_PasswordChar(This,PasswordChar)	\
    ( (This)->lpVtbl -> put_PasswordChar(This,PasswordChar) ) 

#define _OlkTextBox_get_Scrollbars(This,Scrollbars)	\
    ( (This)->lpVtbl -> get_Scrollbars(This,Scrollbars) ) 

#define _OlkTextBox_put_Scrollbars(This,Scrollbars)	\
    ( (This)->lpVtbl -> put_Scrollbars(This,Scrollbars) ) 

#define _OlkTextBox_get_SelectionMargin(This,SelectionMargin)	\
    ( (This)->lpVtbl -> get_SelectionMargin(This,SelectionMargin) ) 

#define _OlkTextBox_put_SelectionMargin(This,SelectionMargin)	\
    ( (This)->lpVtbl -> put_SelectionMargin(This,SelectionMargin) ) 

#define _OlkTextBox_get_TabKeyBehavior(This,TabKeyBehavior)	\
    ( (This)->lpVtbl -> get_TabKeyBehavior(This,TabKeyBehavior) ) 

#define _OlkTextBox_put_TabKeyBehavior(This,TabKeyBehavior)	\
    ( (This)->lpVtbl -> put_TabKeyBehavior(This,TabKeyBehavior) ) 

#define _OlkTextBox_get_Text(This,Text)	\
    ( (This)->lpVtbl -> get_Text(This,Text) ) 

#define _OlkTextBox_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#define _OlkTextBox_get_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> get_TextAlign(This,TextAlign) ) 

#define _OlkTextBox_put_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> put_TextAlign(This,TextAlign) ) 

#define _OlkTextBox_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define _OlkTextBox_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define _OlkTextBox_get_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> get_WordWrap(This,WordWrap) ) 

#define _OlkTextBox_put_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> put_WordWrap(This,WordWrap) ) 

#define _OlkTextBox_get_SelStart(This,SelStart)	\
    ( (This)->lpVtbl -> get_SelStart(This,SelStart) ) 

#define _OlkTextBox_put_SelStart(This,SelStart)	\
    ( (This)->lpVtbl -> put_SelStart(This,SelStart) ) 

#define _OlkTextBox_get_SelLength(This,SelLength)	\
    ( (This)->lpVtbl -> get_SelLength(This,SelLength) ) 

#define _OlkTextBox_put_SelLength(This,SelLength)	\
    ( (This)->lpVtbl -> put_SelLength(This,SelLength) ) 

#define _OlkTextBox_get_SelText(This,SelText)	\
    ( (This)->lpVtbl -> get_SelText(This,SelText) ) 

#define _OlkTextBox_Cut(This)	\
    ( (This)->lpVtbl -> Cut(This) ) 

#define _OlkTextBox_Copy(This)	\
    ( (This)->lpVtbl -> Copy(This) ) 

#define _OlkTextBox_Paste(This)	\
    ( (This)->lpVtbl -> Paste(This) ) 

#define _OlkTextBox_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define _OlkTextBox_get_EnableRichText(This,EnableRichText)	\
    ( (This)->lpVtbl -> get_EnableRichText(This,EnableRichText) ) 

#define _OlkTextBox_put_EnableRichText(This,EnableRichText)	\
    ( (This)->lpVtbl -> put_EnableRichText(This,EnableRichText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkTextBox_INTERFACE_DEFINED__ */


#ifndef __OlkTextBoxEvents_DISPINTERFACE_DEFINED__
#define __OlkTextBoxEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkTextBoxEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkTextBoxEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672E6-0000-0000-C000-000000000046")
    OlkTextBoxEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkTextBoxEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkTextBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkTextBoxEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkTextBoxEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkTextBoxEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkTextBoxEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkTextBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkTextBoxEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkTextBoxEventsVtbl;

    interface OlkTextBoxEvents
    {
        CONST_VTBL struct OlkTextBoxEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkTextBoxEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkTextBoxEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkTextBoxEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkTextBoxEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkTextBoxEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkTextBoxEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkTextBoxEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkTextBoxEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkLabel_INTERFACE_DEFINED__
#define ___OlkLabel_INTERFACE_DEFINED__

/* interface _OlkLabel */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkLabel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672D9-0000-0000-C000-000000000046")
    _OlkLabel : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Accelerator( 
            /* [retval][out] */ BSTR *AcceleratorChar) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Accelerator( 
            /* [in] */ BSTR AcceleratorChar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *AutoSize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL AutoSize) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackStyle( 
            /* [retval][out] */ OlBackStyle *BackStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackStyle( 
            /* [in] */ OlBackStyle BackStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BorderStyle( 
            /* [retval][out] */ OlBorderStyle *BorderStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BorderStyle( 
            /* [in] */ OlBorderStyle BorderStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *Caption) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlign( 
            /* [retval][out] */ OlTextAlign *TextAlign) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlign( 
            /* [in] */ OlTextAlign TextAlign) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WordWrap( 
            /* [retval][out] */ VARIANT_BOOL *WordWrap) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WordWrap( 
            /* [in] */ VARIANT_BOOL WordWrap) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UseHeaderColor( 
            /* [retval][out] */ VARIANT_BOOL *UseHeaderColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UseHeaderColor( 
            /* [in] */ VARIANT_BOOL UseHeaderColor) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkLabelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkLabel * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkLabel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkLabel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkLabel * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkLabel * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkLabel * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkLabel * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Accelerator )( 
            _OlkLabel * This,
            /* [retval][out] */ BSTR *AcceleratorChar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Accelerator )( 
            _OlkLabel * This,
            /* [in] */ BSTR AcceleratorChar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            _OlkLabel * This,
            /* [retval][out] */ VARIANT_BOOL *AutoSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            _OlkLabel * This,
            /* [in] */ VARIANT_BOOL AutoSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            _OlkLabel * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            _OlkLabel * This,
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackStyle )( 
            _OlkLabel * This,
            /* [retval][out] */ OlBackStyle *BackStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackStyle )( 
            _OlkLabel * This,
            /* [in] */ OlBackStyle BackStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            _OlkLabel * This,
            /* [retval][out] */ OlBorderStyle *BorderStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            _OlkLabel * This,
            /* [in] */ OlBorderStyle BorderStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _OlkLabel * This,
            /* [retval][out] */ BSTR *Caption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _OlkLabel * This,
            /* [in] */ BSTR Caption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkLabel * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkLabel * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkLabel * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkLabel * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkLabel * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkLabel * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkLabel * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkLabel * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkLabel * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlign )( 
            _OlkLabel * This,
            /* [retval][out] */ OlTextAlign *TextAlign);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlign )( 
            _OlkLabel * This,
            /* [in] */ OlTextAlign TextAlign);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WordWrap )( 
            _OlkLabel * This,
            /* [retval][out] */ VARIANT_BOOL *WordWrap);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WordWrap )( 
            _OlkLabel * This,
            /* [in] */ VARIANT_BOOL WordWrap);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _OlkLabel * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _OlkLabel * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseHeaderColor )( 
            _OlkLabel * This,
            /* [retval][out] */ VARIANT_BOOL *UseHeaderColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseHeaderColor )( 
            _OlkLabel * This,
            /* [in] */ VARIANT_BOOL UseHeaderColor);
        
        END_INTERFACE
    } _OlkLabelVtbl;

    interface _OlkLabel
    {
        CONST_VTBL struct _OlkLabelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkLabel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkLabel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkLabel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkLabel_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkLabel_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkLabel_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkLabel_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkLabel_get_Accelerator(This,AcceleratorChar)	\
    ( (This)->lpVtbl -> get_Accelerator(This,AcceleratorChar) ) 

#define _OlkLabel_put_Accelerator(This,AcceleratorChar)	\
    ( (This)->lpVtbl -> put_Accelerator(This,AcceleratorChar) ) 

#define _OlkLabel_get_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> get_AutoSize(This,AutoSize) ) 

#define _OlkLabel_put_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> put_AutoSize(This,AutoSize) ) 

#define _OlkLabel_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _OlkLabel_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _OlkLabel_get_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> get_BackStyle(This,BackStyle) ) 

#define _OlkLabel_put_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> put_BackStyle(This,BackStyle) ) 

#define _OlkLabel_get_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,BorderStyle) ) 

#define _OlkLabel_put_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,BorderStyle) ) 

#define _OlkLabel_get_Caption(This,Caption)	\
    ( (This)->lpVtbl -> get_Caption(This,Caption) ) 

#define _OlkLabel_put_Caption(This,Caption)	\
    ( (This)->lpVtbl -> put_Caption(This,Caption) ) 

#define _OlkLabel_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkLabel_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkLabel_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkLabel_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkLabel_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkLabel_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkLabel_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkLabel_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkLabel_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkLabel_get_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> get_TextAlign(This,TextAlign) ) 

#define _OlkLabel_put_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> put_TextAlign(This,TextAlign) ) 

#define _OlkLabel_get_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> get_WordWrap(This,WordWrap) ) 

#define _OlkLabel_put_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> put_WordWrap(This,WordWrap) ) 

#define _OlkLabel_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define _OlkLabel_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define _OlkLabel_get_UseHeaderColor(This,UseHeaderColor)	\
    ( (This)->lpVtbl -> get_UseHeaderColor(This,UseHeaderColor) ) 

#define _OlkLabel_put_UseHeaderColor(This,UseHeaderColor)	\
    ( (This)->lpVtbl -> put_UseHeaderColor(This,UseHeaderColor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkLabel_INTERFACE_DEFINED__ */


#ifndef __OlkLabelEvents_DISPINTERFACE_DEFINED__
#define __OlkLabelEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkLabelEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkLabelEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672E5-0000-0000-C000-000000000046")
    OlkLabelEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkLabelEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkLabelEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkLabelEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkLabelEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkLabelEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkLabelEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkLabelEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkLabelEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkLabelEventsVtbl;

    interface OlkLabelEvents
    {
        CONST_VTBL struct OlkLabelEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkLabelEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkLabelEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkLabelEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkLabelEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkLabelEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkLabelEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkLabelEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkLabelEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkCommandButton_INTERFACE_DEFINED__
#define ___OlkCommandButton_INTERFACE_DEFINED__

/* interface _OlkCommandButton */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkCommandButton;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672DB-0000-0000-C000-000000000046")
    _OlkCommandButton : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Accelerator( 
            /* [retval][out] */ BSTR *AcceleratorChar) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Accelerator( 
            /* [in] */ BSTR AcceleratorChar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *AutoSize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL AutoSize) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *Caption) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WordWrap( 
            /* [retval][out] */ VARIANT_BOOL *WordWrap) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WordWrap( 
            /* [in] */ VARIANT_BOOL WordWrap) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlign( 
            /* [retval][out] */ OlTextAlign *TextAlign) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlign( 
            /* [in] */ OlTextAlign TextAlign) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Picture( 
            /* [retval][out] */ /* external definition not present */ void **Picture) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Picture( 
            /* [in] */ /* external definition not present */ void *Picture) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PictureAlignment( 
            /* [retval][out] */ OlPictureAlignment *PictureAlignment) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PictureAlignment( 
            /* [in] */ OlPictureAlignment PictureAlignment) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayDropArrow( 
            /* [retval][out] */ VARIANT_BOOL *DisplayDropArrow) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayDropArrow( 
            /* [in] */ VARIANT_BOOL DisplayDropArrow) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkCommandButtonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkCommandButton * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkCommandButton * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkCommandButton * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkCommandButton * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkCommandButton * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkCommandButton * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkCommandButton * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Accelerator )( 
            _OlkCommandButton * This,
            /* [retval][out] */ BSTR *AcceleratorChar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Accelerator )( 
            _OlkCommandButton * This,
            /* [in] */ BSTR AcceleratorChar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            _OlkCommandButton * This,
            /* [retval][out] */ VARIANT_BOOL *AutoSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            _OlkCommandButton * This,
            /* [in] */ VARIANT_BOOL AutoSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _OlkCommandButton * This,
            /* [retval][out] */ BSTR *Caption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _OlkCommandButton * This,
            /* [in] */ BSTR Caption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkCommandButton * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkCommandButton * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkCommandButton * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkCommandButton * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkCommandButton * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkCommandButton * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkCommandButton * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WordWrap )( 
            _OlkCommandButton * This,
            /* [retval][out] */ VARIANT_BOOL *WordWrap);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WordWrap )( 
            _OlkCommandButton * This,
            /* [in] */ VARIANT_BOOL WordWrap);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlign )( 
            _OlkCommandButton * This,
            /* [retval][out] */ OlTextAlign *TextAlign);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlign )( 
            _OlkCommandButton * This,
            /* [in] */ OlTextAlign TextAlign);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Picture )( 
            _OlkCommandButton * This,
            /* [retval][out] */ /* external definition not present */ void **Picture);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Picture )( 
            _OlkCommandButton * This,
            /* [in] */ /* external definition not present */ void *Picture);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PictureAlignment )( 
            _OlkCommandButton * This,
            /* [retval][out] */ OlPictureAlignment *PictureAlignment);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PictureAlignment )( 
            _OlkCommandButton * This,
            /* [in] */ OlPictureAlignment PictureAlignment);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayDropArrow )( 
            _OlkCommandButton * This,
            /* [retval][out] */ VARIANT_BOOL *DisplayDropArrow);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayDropArrow )( 
            _OlkCommandButton * This,
            /* [in] */ VARIANT_BOOL DisplayDropArrow);
        
        END_INTERFACE
    } _OlkCommandButtonVtbl;

    interface _OlkCommandButton
    {
        CONST_VTBL struct _OlkCommandButtonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkCommandButton_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkCommandButton_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkCommandButton_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkCommandButton_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkCommandButton_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkCommandButton_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkCommandButton_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkCommandButton_get_Accelerator(This,AcceleratorChar)	\
    ( (This)->lpVtbl -> get_Accelerator(This,AcceleratorChar) ) 

#define _OlkCommandButton_put_Accelerator(This,AcceleratorChar)	\
    ( (This)->lpVtbl -> put_Accelerator(This,AcceleratorChar) ) 

#define _OlkCommandButton_get_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> get_AutoSize(This,AutoSize) ) 

#define _OlkCommandButton_put_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> put_AutoSize(This,AutoSize) ) 

#define _OlkCommandButton_get_Caption(This,Caption)	\
    ( (This)->lpVtbl -> get_Caption(This,Caption) ) 

#define _OlkCommandButton_put_Caption(This,Caption)	\
    ( (This)->lpVtbl -> put_Caption(This,Caption) ) 

#define _OlkCommandButton_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkCommandButton_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkCommandButton_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkCommandButton_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkCommandButton_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkCommandButton_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkCommandButton_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkCommandButton_get_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> get_WordWrap(This,WordWrap) ) 

#define _OlkCommandButton_put_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> put_WordWrap(This,WordWrap) ) 

#define _OlkCommandButton_get_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> get_TextAlign(This,TextAlign) ) 

#define _OlkCommandButton_put_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> put_TextAlign(This,TextAlign) ) 

#define _OlkCommandButton_get_Picture(This,Picture)	\
    ( (This)->lpVtbl -> get_Picture(This,Picture) ) 

#define _OlkCommandButton_put_Picture(This,Picture)	\
    ( (This)->lpVtbl -> put_Picture(This,Picture) ) 

#define _OlkCommandButton_get_PictureAlignment(This,PictureAlignment)	\
    ( (This)->lpVtbl -> get_PictureAlignment(This,PictureAlignment) ) 

#define _OlkCommandButton_put_PictureAlignment(This,PictureAlignment)	\
    ( (This)->lpVtbl -> put_PictureAlignment(This,PictureAlignment) ) 

#define _OlkCommandButton_get_DisplayDropArrow(This,DisplayDropArrow)	\
    ( (This)->lpVtbl -> get_DisplayDropArrow(This,DisplayDropArrow) ) 

#define _OlkCommandButton_put_DisplayDropArrow(This,DisplayDropArrow)	\
    ( (This)->lpVtbl -> put_DisplayDropArrow(This,DisplayDropArrow) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkCommandButton_INTERFACE_DEFINED__ */


#ifndef __OlkCommandButtonEvents_DISPINTERFACE_DEFINED__
#define __OlkCommandButtonEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkCommandButtonEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkCommandButtonEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672E0-0000-0000-C000-000000000046")
    OlkCommandButtonEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkCommandButtonEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkCommandButtonEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkCommandButtonEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkCommandButtonEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkCommandButtonEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkCommandButtonEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkCommandButtonEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkCommandButtonEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkCommandButtonEventsVtbl;

    interface OlkCommandButtonEvents
    {
        CONST_VTBL struct OlkCommandButtonEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkCommandButtonEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkCommandButtonEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkCommandButtonEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkCommandButtonEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkCommandButtonEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkCommandButtonEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkCommandButtonEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkCommandButtonEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkCheckBox_INTERFACE_DEFINED__
#define ___OlkCheckBox_INTERFACE_DEFINED__

/* interface _OlkCheckBox */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkCheckBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672DD-0000-0000-C000-000000000046")
    _OlkCheckBox : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Accelerator( 
            /* [retval][out] */ BSTR *AcceleratorChar) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Accelerator( 
            /* [in] */ BSTR AcceleratorChar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ OlAlignment *Alignment) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ OlAlignment Alignment) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackStyle( 
            /* [retval][out] */ OlBackStyle *BackStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackStyle( 
            /* [in] */ OlBackStyle BackStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *Caption) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TripleState( 
            /* [retval][out] */ VARIANT_BOOL *TripleState) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TripleState( 
            /* [in] */ VARIANT_BOOL TripleState) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WordWrap( 
            /* [retval][out] */ VARIANT_BOOL *WordWrap) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WordWrap( 
            /* [in] */ VARIANT_BOOL WordWrap) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkCheckBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkCheckBox * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkCheckBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkCheckBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkCheckBox * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkCheckBox * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkCheckBox * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkCheckBox * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Accelerator )( 
            _OlkCheckBox * This,
            /* [retval][out] */ BSTR *AcceleratorChar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Accelerator )( 
            _OlkCheckBox * This,
            /* [in] */ BSTR AcceleratorChar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            _OlkCheckBox * This,
            /* [retval][out] */ OlAlignment *Alignment);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            _OlkCheckBox * This,
            /* [in] */ OlAlignment Alignment);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            _OlkCheckBox * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            _OlkCheckBox * This,
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackStyle )( 
            _OlkCheckBox * This,
            /* [retval][out] */ OlBackStyle *BackStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackStyle )( 
            _OlkCheckBox * This,
            /* [in] */ OlBackStyle BackStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _OlkCheckBox * This,
            /* [retval][out] */ BSTR *Caption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _OlkCheckBox * This,
            /* [in] */ BSTR Caption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkCheckBox * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkCheckBox * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkCheckBox * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkCheckBox * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkCheckBox * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkCheckBox * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkCheckBox * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkCheckBox * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkCheckBox * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TripleState )( 
            _OlkCheckBox * This,
            /* [retval][out] */ VARIANT_BOOL *TripleState);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TripleState )( 
            _OlkCheckBox * This,
            /* [in] */ VARIANT_BOOL TripleState);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _OlkCheckBox * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _OlkCheckBox * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WordWrap )( 
            _OlkCheckBox * This,
            /* [retval][out] */ VARIANT_BOOL *WordWrap);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WordWrap )( 
            _OlkCheckBox * This,
            /* [in] */ VARIANT_BOOL WordWrap);
        
        END_INTERFACE
    } _OlkCheckBoxVtbl;

    interface _OlkCheckBox
    {
        CONST_VTBL struct _OlkCheckBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkCheckBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkCheckBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkCheckBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkCheckBox_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkCheckBox_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkCheckBox_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkCheckBox_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkCheckBox_get_Accelerator(This,AcceleratorChar)	\
    ( (This)->lpVtbl -> get_Accelerator(This,AcceleratorChar) ) 

#define _OlkCheckBox_put_Accelerator(This,AcceleratorChar)	\
    ( (This)->lpVtbl -> put_Accelerator(This,AcceleratorChar) ) 

#define _OlkCheckBox_get_Alignment(This,Alignment)	\
    ( (This)->lpVtbl -> get_Alignment(This,Alignment) ) 

#define _OlkCheckBox_put_Alignment(This,Alignment)	\
    ( (This)->lpVtbl -> put_Alignment(This,Alignment) ) 

#define _OlkCheckBox_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _OlkCheckBox_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _OlkCheckBox_get_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> get_BackStyle(This,BackStyle) ) 

#define _OlkCheckBox_put_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> put_BackStyle(This,BackStyle) ) 

#define _OlkCheckBox_get_Caption(This,Caption)	\
    ( (This)->lpVtbl -> get_Caption(This,Caption) ) 

#define _OlkCheckBox_put_Caption(This,Caption)	\
    ( (This)->lpVtbl -> put_Caption(This,Caption) ) 

#define _OlkCheckBox_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkCheckBox_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkCheckBox_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkCheckBox_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkCheckBox_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkCheckBox_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkCheckBox_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkCheckBox_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkCheckBox_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkCheckBox_get_TripleState(This,TripleState)	\
    ( (This)->lpVtbl -> get_TripleState(This,TripleState) ) 

#define _OlkCheckBox_put_TripleState(This,TripleState)	\
    ( (This)->lpVtbl -> put_TripleState(This,TripleState) ) 

#define _OlkCheckBox_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define _OlkCheckBox_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define _OlkCheckBox_get_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> get_WordWrap(This,WordWrap) ) 

#define _OlkCheckBox_put_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> put_WordWrap(This,WordWrap) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkCheckBox_INTERFACE_DEFINED__ */


#ifndef __OlkCheckBoxEvents_DISPINTERFACE_DEFINED__
#define __OlkCheckBoxEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkCheckBoxEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkCheckBoxEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672E2-0000-0000-C000-000000000046")
    OlkCheckBoxEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkCheckBoxEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkCheckBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkCheckBoxEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkCheckBoxEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkCheckBoxEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkCheckBoxEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkCheckBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkCheckBoxEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkCheckBoxEventsVtbl;

    interface OlkCheckBoxEvents
    {
        CONST_VTBL struct OlkCheckBoxEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkCheckBoxEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkCheckBoxEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkCheckBoxEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkCheckBoxEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkCheckBoxEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkCheckBoxEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkCheckBoxEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkCheckBoxEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkOptionButton_INTERFACE_DEFINED__
#define ___OlkOptionButton_INTERFACE_DEFINED__

/* interface _OlkOptionButton */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkOptionButton;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672DC-0000-0000-C000-000000000046")
    _OlkOptionButton : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Accelerator( 
            /* [retval][out] */ BSTR *AcceleratorChar) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Accelerator( 
            /* [in] */ BSTR AcceleratorChar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ OlAlignment *Alignment) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ OlAlignment Alignment) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackStyle( 
            /* [retval][out] */ OlBackStyle *BackStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackStyle( 
            /* [in] */ OlBackStyle BackStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *Caption) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GroupName( 
            /* [retval][out] */ BSTR *GroupName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_GroupName( 
            /* [in] */ BSTR GroupName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WordWrap( 
            /* [retval][out] */ VARIANT_BOOL *WordWrap) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WordWrap( 
            /* [in] */ VARIANT_BOOL WordWrap) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkOptionButtonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkOptionButton * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkOptionButton * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkOptionButton * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkOptionButton * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkOptionButton * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkOptionButton * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkOptionButton * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Accelerator )( 
            _OlkOptionButton * This,
            /* [retval][out] */ BSTR *AcceleratorChar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Accelerator )( 
            _OlkOptionButton * This,
            /* [in] */ BSTR AcceleratorChar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            _OlkOptionButton * This,
            /* [retval][out] */ OlAlignment *Alignment);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            _OlkOptionButton * This,
            /* [in] */ OlAlignment Alignment);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            _OlkOptionButton * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            _OlkOptionButton * This,
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackStyle )( 
            _OlkOptionButton * This,
            /* [retval][out] */ OlBackStyle *BackStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackStyle )( 
            _OlkOptionButton * This,
            /* [in] */ OlBackStyle BackStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _OlkOptionButton * This,
            /* [retval][out] */ BSTR *Caption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _OlkOptionButton * This,
            /* [in] */ BSTR Caption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkOptionButton * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkOptionButton * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkOptionButton * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkOptionButton * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkOptionButton * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GroupName )( 
            _OlkOptionButton * This,
            /* [retval][out] */ BSTR *GroupName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GroupName )( 
            _OlkOptionButton * This,
            /* [in] */ BSTR GroupName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkOptionButton * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkOptionButton * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkOptionButton * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkOptionButton * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _OlkOptionButton * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _OlkOptionButton * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WordWrap )( 
            _OlkOptionButton * This,
            /* [retval][out] */ VARIANT_BOOL *WordWrap);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WordWrap )( 
            _OlkOptionButton * This,
            /* [in] */ VARIANT_BOOL WordWrap);
        
        END_INTERFACE
    } _OlkOptionButtonVtbl;

    interface _OlkOptionButton
    {
        CONST_VTBL struct _OlkOptionButtonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkOptionButton_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkOptionButton_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkOptionButton_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkOptionButton_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkOptionButton_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkOptionButton_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkOptionButton_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkOptionButton_get_Accelerator(This,AcceleratorChar)	\
    ( (This)->lpVtbl -> get_Accelerator(This,AcceleratorChar) ) 

#define _OlkOptionButton_put_Accelerator(This,AcceleratorChar)	\
    ( (This)->lpVtbl -> put_Accelerator(This,AcceleratorChar) ) 

#define _OlkOptionButton_get_Alignment(This,Alignment)	\
    ( (This)->lpVtbl -> get_Alignment(This,Alignment) ) 

#define _OlkOptionButton_put_Alignment(This,Alignment)	\
    ( (This)->lpVtbl -> put_Alignment(This,Alignment) ) 

#define _OlkOptionButton_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _OlkOptionButton_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _OlkOptionButton_get_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> get_BackStyle(This,BackStyle) ) 

#define _OlkOptionButton_put_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> put_BackStyle(This,BackStyle) ) 

#define _OlkOptionButton_get_Caption(This,Caption)	\
    ( (This)->lpVtbl -> get_Caption(This,Caption) ) 

#define _OlkOptionButton_put_Caption(This,Caption)	\
    ( (This)->lpVtbl -> put_Caption(This,Caption) ) 

#define _OlkOptionButton_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkOptionButton_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkOptionButton_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkOptionButton_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkOptionButton_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkOptionButton_get_GroupName(This,GroupName)	\
    ( (This)->lpVtbl -> get_GroupName(This,GroupName) ) 

#define _OlkOptionButton_put_GroupName(This,GroupName)	\
    ( (This)->lpVtbl -> put_GroupName(This,GroupName) ) 

#define _OlkOptionButton_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkOptionButton_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkOptionButton_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkOptionButton_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkOptionButton_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define _OlkOptionButton_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define _OlkOptionButton_get_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> get_WordWrap(This,WordWrap) ) 

#define _OlkOptionButton_put_WordWrap(This,WordWrap)	\
    ( (This)->lpVtbl -> put_WordWrap(This,WordWrap) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkOptionButton_INTERFACE_DEFINED__ */


#ifndef __OlkOptionButtonEvents_DISPINTERFACE_DEFINED__
#define __OlkOptionButtonEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkOptionButtonEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkOptionButtonEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672E1-0000-0000-C000-000000000046")
    OlkOptionButtonEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkOptionButtonEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkOptionButtonEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkOptionButtonEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkOptionButtonEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkOptionButtonEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkOptionButtonEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkOptionButtonEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkOptionButtonEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkOptionButtonEventsVtbl;

    interface OlkOptionButtonEvents
    {
        CONST_VTBL struct OlkOptionButtonEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkOptionButtonEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkOptionButtonEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkOptionButtonEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkOptionButtonEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkOptionButtonEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkOptionButtonEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkOptionButtonEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkOptionButtonEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkComboBox_INTERFACE_DEFINED__
#define ___OlkComboBox_INTERFACE_DEFINED__

/* interface _OlkComboBox */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkComboBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672DE-0000-0000-C000-000000000046")
    _OlkComboBox : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *AutoSize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL AutoSize) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoTab( 
            /* [retval][out] */ VARIANT_BOOL *AutoTab) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoTab( 
            /* [in] */ VARIANT_BOOL AutoTab) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoWordSelect( 
            /* [retval][out] */ VARIANT_BOOL *AutoWordSelect) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoWordSelect( 
            /* [in] */ VARIANT_BOOL AutoWordSelect) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BorderStyle( 
            /* [retval][out] */ OlBorderStyle *BorderStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BorderStyle( 
            /* [in] */ OlBorderStyle BorderStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DragBehavior( 
            /* [retval][out] */ OlDragBehavior *DragBehavior) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DragBehavior( 
            /* [in] */ OlDragBehavior DragBehavior) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnterFieldBehavior( 
            /* [retval][out] */ OlEnterFieldBehavior *EnterFieldBehavior) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnterFieldBehavior( 
            /* [in] */ OlEnterFieldBehavior EnterFieldBehavior) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HideSelection( 
            /* [retval][out] */ VARIANT_BOOL *HideSelection) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HideSelection( 
            /* [in] */ VARIANT_BOOL HideSelection) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Locked( 
            /* [retval][out] */ VARIANT_BOOL *Locked) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Locked( 
            /* [in] */ VARIANT_BOOL Locked) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MaxLength( 
            /* [retval][out] */ long *MaxLength) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MaxLength( 
            /* [in] */ long MaxLength) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectionMargin( 
            /* [retval][out] */ VARIANT_BOOL *SelectionMargin) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SelectionMargin( 
            /* [in] */ VARIANT_BOOL SelectionMargin) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Style( 
            /* [retval][out] */ OlComboBoxStyle *Style) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Style( 
            /* [in] */ OlComboBoxStyle Style) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *Text) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlign( 
            /* [retval][out] */ OlTextAlign *TextAlign) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlign( 
            /* [in] */ OlTextAlign TextAlign) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TopIndex( 
            /* [retval][out] */ long *TopIndex) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TopIndex( 
            /* [in] */ long TopIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListIndex( 
            /* [retval][out] */ long *ListIndex) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ListIndex( 
            /* [in] */ long ListIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListCount( 
            /* [retval][out] */ long *ListCount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelStart( 
            /* [retval][out] */ long *SelStart) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SelStart( 
            /* [in] */ long SelStart) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelLength( 
            /* [retval][out] */ long *SelLength) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SelLength( 
            /* [in] */ long SelLength) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelText( 
            /* [retval][out] */ BSTR *SelText) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetItem( 
            /* [in] */ long Index,
            /* [retval][out] */ BSTR *Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetItem( 
            /* [in] */ long Index,
            /* [in] */ BSTR Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Cut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Paste( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddItem( 
            /* [in] */ BSTR ItemText,
            /* [optional][in] */ VARIANT Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveItem( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DropDown( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkComboBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkComboBox * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkComboBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkComboBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkComboBox * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkComboBox * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkComboBox * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkComboBox * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            _OlkComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *AutoSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            _OlkComboBox * This,
            /* [in] */ VARIANT_BOOL AutoSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoTab )( 
            _OlkComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *AutoTab);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoTab )( 
            _OlkComboBox * This,
            /* [in] */ VARIANT_BOOL AutoTab);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoWordSelect )( 
            _OlkComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *AutoWordSelect);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoWordSelect )( 
            _OlkComboBox * This,
            /* [in] */ VARIANT_BOOL AutoWordSelect);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            _OlkComboBox * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            _OlkComboBox * This,
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            _OlkComboBox * This,
            /* [retval][out] */ OlBorderStyle *BorderStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            _OlkComboBox * This,
            /* [in] */ OlBorderStyle BorderStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DragBehavior )( 
            _OlkComboBox * This,
            /* [retval][out] */ OlDragBehavior *DragBehavior);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DragBehavior )( 
            _OlkComboBox * This,
            /* [in] */ OlDragBehavior DragBehavior);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkComboBox * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnterFieldBehavior )( 
            _OlkComboBox * This,
            /* [retval][out] */ OlEnterFieldBehavior *EnterFieldBehavior);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnterFieldBehavior )( 
            _OlkComboBox * This,
            /* [in] */ OlEnterFieldBehavior EnterFieldBehavior);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkComboBox * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkComboBox * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkComboBox * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HideSelection )( 
            _OlkComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *HideSelection);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HideSelection )( 
            _OlkComboBox * This,
            /* [in] */ VARIANT_BOOL HideSelection);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Locked )( 
            _OlkComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *Locked);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Locked )( 
            _OlkComboBox * This,
            /* [in] */ VARIANT_BOOL Locked);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLength )( 
            _OlkComboBox * This,
            /* [retval][out] */ long *MaxLength);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxLength )( 
            _OlkComboBox * This,
            /* [in] */ long MaxLength);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkComboBox * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkComboBox * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkComboBox * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkComboBox * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionMargin )( 
            _OlkComboBox * This,
            /* [retval][out] */ VARIANT_BOOL *SelectionMargin);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionMargin )( 
            _OlkComboBox * This,
            /* [in] */ VARIANT_BOOL SelectionMargin);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Style )( 
            _OlkComboBox * This,
            /* [retval][out] */ OlComboBoxStyle *Style);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Style )( 
            _OlkComboBox * This,
            /* [in] */ OlComboBoxStyle Style);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            _OlkComboBox * This,
            /* [retval][out] */ BSTR *Text);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            _OlkComboBox * This,
            /* [in] */ BSTR Text);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlign )( 
            _OlkComboBox * This,
            /* [retval][out] */ OlTextAlign *TextAlign);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlign )( 
            _OlkComboBox * This,
            /* [in] */ OlTextAlign TextAlign);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TopIndex )( 
            _OlkComboBox * This,
            /* [retval][out] */ long *TopIndex);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TopIndex )( 
            _OlkComboBox * This,
            /* [in] */ long TopIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _OlkComboBox * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _OlkComboBox * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListIndex )( 
            _OlkComboBox * This,
            /* [retval][out] */ long *ListIndex);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ListIndex )( 
            _OlkComboBox * This,
            /* [in] */ long ListIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListCount )( 
            _OlkComboBox * This,
            /* [retval][out] */ long *ListCount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelStart )( 
            _OlkComboBox * This,
            /* [retval][out] */ long *SelStart);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SelStart )( 
            _OlkComboBox * This,
            /* [in] */ long SelStart);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelLength )( 
            _OlkComboBox * This,
            /* [retval][out] */ long *SelLength);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SelLength )( 
            _OlkComboBox * This,
            /* [in] */ long SelLength);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelText )( 
            _OlkComboBox * This,
            /* [retval][out] */ BSTR *SelText);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            _OlkComboBox * This,
            /* [in] */ long Index,
            /* [retval][out] */ BSTR *Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            _OlkComboBox * This,
            /* [in] */ long Index,
            /* [in] */ BSTR Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Cut )( 
            _OlkComboBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _OlkComboBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Paste )( 
            _OlkComboBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            _OlkComboBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddItem )( 
            _OlkComboBox * This,
            /* [in] */ BSTR ItemText,
            /* [optional][in] */ VARIANT Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveItem )( 
            _OlkComboBox * This,
            /* [in] */ long Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DropDown )( 
            _OlkComboBox * This);
        
        END_INTERFACE
    } _OlkComboBoxVtbl;

    interface _OlkComboBox
    {
        CONST_VTBL struct _OlkComboBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkComboBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkComboBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkComboBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkComboBox_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkComboBox_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkComboBox_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkComboBox_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkComboBox_get_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> get_AutoSize(This,AutoSize) ) 

#define _OlkComboBox_put_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> put_AutoSize(This,AutoSize) ) 

#define _OlkComboBox_get_AutoTab(This,AutoTab)	\
    ( (This)->lpVtbl -> get_AutoTab(This,AutoTab) ) 

#define _OlkComboBox_put_AutoTab(This,AutoTab)	\
    ( (This)->lpVtbl -> put_AutoTab(This,AutoTab) ) 

#define _OlkComboBox_get_AutoWordSelect(This,AutoWordSelect)	\
    ( (This)->lpVtbl -> get_AutoWordSelect(This,AutoWordSelect) ) 

#define _OlkComboBox_put_AutoWordSelect(This,AutoWordSelect)	\
    ( (This)->lpVtbl -> put_AutoWordSelect(This,AutoWordSelect) ) 

#define _OlkComboBox_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _OlkComboBox_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _OlkComboBox_get_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,BorderStyle) ) 

#define _OlkComboBox_put_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,BorderStyle) ) 

#define _OlkComboBox_get_DragBehavior(This,DragBehavior)	\
    ( (This)->lpVtbl -> get_DragBehavior(This,DragBehavior) ) 

#define _OlkComboBox_put_DragBehavior(This,DragBehavior)	\
    ( (This)->lpVtbl -> put_DragBehavior(This,DragBehavior) ) 

#define _OlkComboBox_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkComboBox_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkComboBox_get_EnterFieldBehavior(This,EnterFieldBehavior)	\
    ( (This)->lpVtbl -> get_EnterFieldBehavior(This,EnterFieldBehavior) ) 

#define _OlkComboBox_put_EnterFieldBehavior(This,EnterFieldBehavior)	\
    ( (This)->lpVtbl -> put_EnterFieldBehavior(This,EnterFieldBehavior) ) 

#define _OlkComboBox_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkComboBox_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkComboBox_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkComboBox_get_HideSelection(This,HideSelection)	\
    ( (This)->lpVtbl -> get_HideSelection(This,HideSelection) ) 

#define _OlkComboBox_put_HideSelection(This,HideSelection)	\
    ( (This)->lpVtbl -> put_HideSelection(This,HideSelection) ) 

#define _OlkComboBox_get_Locked(This,Locked)	\
    ( (This)->lpVtbl -> get_Locked(This,Locked) ) 

#define _OlkComboBox_put_Locked(This,Locked)	\
    ( (This)->lpVtbl -> put_Locked(This,Locked) ) 

#define _OlkComboBox_get_MaxLength(This,MaxLength)	\
    ( (This)->lpVtbl -> get_MaxLength(This,MaxLength) ) 

#define _OlkComboBox_put_MaxLength(This,MaxLength)	\
    ( (This)->lpVtbl -> put_MaxLength(This,MaxLength) ) 

#define _OlkComboBox_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkComboBox_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkComboBox_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkComboBox_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkComboBox_get_SelectionMargin(This,SelectionMargin)	\
    ( (This)->lpVtbl -> get_SelectionMargin(This,SelectionMargin) ) 

#define _OlkComboBox_put_SelectionMargin(This,SelectionMargin)	\
    ( (This)->lpVtbl -> put_SelectionMargin(This,SelectionMargin) ) 

#define _OlkComboBox_get_Style(This,Style)	\
    ( (This)->lpVtbl -> get_Style(This,Style) ) 

#define _OlkComboBox_put_Style(This,Style)	\
    ( (This)->lpVtbl -> put_Style(This,Style) ) 

#define _OlkComboBox_get_Text(This,Text)	\
    ( (This)->lpVtbl -> get_Text(This,Text) ) 

#define _OlkComboBox_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#define _OlkComboBox_get_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> get_TextAlign(This,TextAlign) ) 

#define _OlkComboBox_put_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> put_TextAlign(This,TextAlign) ) 

#define _OlkComboBox_get_TopIndex(This,TopIndex)	\
    ( (This)->lpVtbl -> get_TopIndex(This,TopIndex) ) 

#define _OlkComboBox_put_TopIndex(This,TopIndex)	\
    ( (This)->lpVtbl -> put_TopIndex(This,TopIndex) ) 

#define _OlkComboBox_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define _OlkComboBox_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define _OlkComboBox_get_ListIndex(This,ListIndex)	\
    ( (This)->lpVtbl -> get_ListIndex(This,ListIndex) ) 

#define _OlkComboBox_put_ListIndex(This,ListIndex)	\
    ( (This)->lpVtbl -> put_ListIndex(This,ListIndex) ) 

#define _OlkComboBox_get_ListCount(This,ListCount)	\
    ( (This)->lpVtbl -> get_ListCount(This,ListCount) ) 

#define _OlkComboBox_get_SelStart(This,SelStart)	\
    ( (This)->lpVtbl -> get_SelStart(This,SelStart) ) 

#define _OlkComboBox_put_SelStart(This,SelStart)	\
    ( (This)->lpVtbl -> put_SelStart(This,SelStart) ) 

#define _OlkComboBox_get_SelLength(This,SelLength)	\
    ( (This)->lpVtbl -> get_SelLength(This,SelLength) ) 

#define _OlkComboBox_put_SelLength(This,SelLength)	\
    ( (This)->lpVtbl -> put_SelLength(This,SelLength) ) 

#define _OlkComboBox_get_SelText(This,SelText)	\
    ( (This)->lpVtbl -> get_SelText(This,SelText) ) 

#define _OlkComboBox_GetItem(This,Index,Item)	\
    ( (This)->lpVtbl -> GetItem(This,Index,Item) ) 

#define _OlkComboBox_SetItem(This,Index,Item)	\
    ( (This)->lpVtbl -> SetItem(This,Index,Item) ) 

#define _OlkComboBox_Cut(This)	\
    ( (This)->lpVtbl -> Cut(This) ) 

#define _OlkComboBox_Copy(This)	\
    ( (This)->lpVtbl -> Copy(This) ) 

#define _OlkComboBox_Paste(This)	\
    ( (This)->lpVtbl -> Paste(This) ) 

#define _OlkComboBox_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define _OlkComboBox_AddItem(This,ItemText,Index)	\
    ( (This)->lpVtbl -> AddItem(This,ItemText,Index) ) 

#define _OlkComboBox_RemoveItem(This,Index)	\
    ( (This)->lpVtbl -> RemoveItem(This,Index) ) 

#define _OlkComboBox_DropDown(This)	\
    ( (This)->lpVtbl -> DropDown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkComboBox_INTERFACE_DEFINED__ */


#ifndef __OlkComboBoxEvents_DISPINTERFACE_DEFINED__
#define __OlkComboBoxEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkComboBoxEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkComboBoxEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672E3-0000-0000-C000-000000000046")
    OlkComboBoxEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkComboBoxEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkComboBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkComboBoxEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkComboBoxEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkComboBoxEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkComboBoxEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkComboBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkComboBoxEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkComboBoxEventsVtbl;

    interface OlkComboBoxEvents
    {
        CONST_VTBL struct OlkComboBoxEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkComboBoxEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkComboBoxEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkComboBoxEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkComboBoxEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkComboBoxEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkComboBoxEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkComboBoxEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkComboBoxEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkListBox_INTERFACE_DEFINED__
#define ___OlkListBox_INTERFACE_DEFINED__

/* interface _OlkListBox */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkListBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672DF-0000-0000-C000-000000000046")
    _OlkListBox : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BorderStyle( 
            /* [retval][out] */ OlBorderStyle *BorderStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BorderStyle( 
            /* [in] */ OlBorderStyle BorderStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Locked( 
            /* [retval][out] */ VARIANT_BOOL *Locked) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Locked( 
            /* [in] */ VARIANT_BOOL Locked) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MatchEntry( 
            /* [retval][out] */ OlMatchEntry *MatchEntry) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MatchEntry( 
            /* [in] */ OlMatchEntry MatchEntry) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MultiSelect( 
            /* [retval][out] */ OlMultiSelect *MultiSelect) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MultiSelect( 
            /* [in] */ OlMultiSelect MultiSelect) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *Text) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlign( 
            /* [retval][out] */ OlTextAlign *TextAlign) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlign( 
            /* [in] */ OlTextAlign TextAlign) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TopIndex( 
            /* [retval][out] */ long *TopIndex) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TopIndex( 
            /* [in] */ long TopIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListIndex( 
            /* [retval][out] */ long *ListIndex) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ListIndex( 
            /* [in] */ long ListIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListCount( 
            /* [retval][out] */ long *ListCount) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetItem( 
            /* [in] */ long Index,
            /* [retval][out] */ BSTR *Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetItem( 
            /* [in] */ long Index,
            /* [in] */ BSTR Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSelected( 
            /* [in] */ long Index,
            /* [retval][out] */ VARIANT_BOOL *Selected) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetSelected( 
            /* [in] */ long Index,
            /* [in] */ VARIANT_BOOL Selected) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddItem( 
            /* [in] */ BSTR ItemText,
            /* [optional][in] */ VARIANT Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveItem( 
            /* [in] */ long Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkListBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkListBox * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkListBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkListBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkListBox * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkListBox * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkListBox * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkListBox * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            _OlkListBox * This,
            /* [retval][out] */ OlBorderStyle *BorderStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            _OlkListBox * This,
            /* [in] */ OlBorderStyle BorderStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            _OlkListBox * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            _OlkListBox * This,
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkListBox * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkListBox * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkListBox * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkListBox * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkListBox * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Locked )( 
            _OlkListBox * This,
            /* [retval][out] */ VARIANT_BOOL *Locked);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Locked )( 
            _OlkListBox * This,
            /* [in] */ VARIANT_BOOL Locked);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MatchEntry )( 
            _OlkListBox * This,
            /* [retval][out] */ OlMatchEntry *MatchEntry);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MatchEntry )( 
            _OlkListBox * This,
            /* [in] */ OlMatchEntry MatchEntry);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkListBox * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkListBox * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkListBox * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkListBox * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MultiSelect )( 
            _OlkListBox * This,
            /* [retval][out] */ OlMultiSelect *MultiSelect);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MultiSelect )( 
            _OlkListBox * This,
            /* [in] */ OlMultiSelect MultiSelect);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            _OlkListBox * This,
            /* [retval][out] */ BSTR *Text);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            _OlkListBox * This,
            /* [in] */ BSTR Text);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlign )( 
            _OlkListBox * This,
            /* [retval][out] */ OlTextAlign *TextAlign);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlign )( 
            _OlkListBox * This,
            /* [in] */ OlTextAlign TextAlign);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TopIndex )( 
            _OlkListBox * This,
            /* [retval][out] */ long *TopIndex);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TopIndex )( 
            _OlkListBox * This,
            /* [in] */ long TopIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _OlkListBox * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _OlkListBox * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListIndex )( 
            _OlkListBox * This,
            /* [retval][out] */ long *ListIndex);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ListIndex )( 
            _OlkListBox * This,
            /* [in] */ long ListIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListCount )( 
            _OlkListBox * This,
            /* [retval][out] */ long *ListCount);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            _OlkListBox * This,
            /* [in] */ long Index,
            /* [retval][out] */ BSTR *Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            _OlkListBox * This,
            /* [in] */ long Index,
            /* [in] */ BSTR Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSelected )( 
            _OlkListBox * This,
            /* [in] */ long Index,
            /* [retval][out] */ VARIANT_BOOL *Selected);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetSelected )( 
            _OlkListBox * This,
            /* [in] */ long Index,
            /* [in] */ VARIANT_BOOL Selected);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _OlkListBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            _OlkListBox * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddItem )( 
            _OlkListBox * This,
            /* [in] */ BSTR ItemText,
            /* [optional][in] */ VARIANT Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveItem )( 
            _OlkListBox * This,
            /* [in] */ long Index);
        
        END_INTERFACE
    } _OlkListBoxVtbl;

    interface _OlkListBox
    {
        CONST_VTBL struct _OlkListBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkListBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkListBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkListBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkListBox_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkListBox_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkListBox_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkListBox_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkListBox_get_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,BorderStyle) ) 

#define _OlkListBox_put_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,BorderStyle) ) 

#define _OlkListBox_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _OlkListBox_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _OlkListBox_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkListBox_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkListBox_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkListBox_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkListBox_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkListBox_get_Locked(This,Locked)	\
    ( (This)->lpVtbl -> get_Locked(This,Locked) ) 

#define _OlkListBox_put_Locked(This,Locked)	\
    ( (This)->lpVtbl -> put_Locked(This,Locked) ) 

#define _OlkListBox_get_MatchEntry(This,MatchEntry)	\
    ( (This)->lpVtbl -> get_MatchEntry(This,MatchEntry) ) 

#define _OlkListBox_put_MatchEntry(This,MatchEntry)	\
    ( (This)->lpVtbl -> put_MatchEntry(This,MatchEntry) ) 

#define _OlkListBox_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkListBox_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkListBox_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkListBox_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkListBox_get_MultiSelect(This,MultiSelect)	\
    ( (This)->lpVtbl -> get_MultiSelect(This,MultiSelect) ) 

#define _OlkListBox_put_MultiSelect(This,MultiSelect)	\
    ( (This)->lpVtbl -> put_MultiSelect(This,MultiSelect) ) 

#define _OlkListBox_get_Text(This,Text)	\
    ( (This)->lpVtbl -> get_Text(This,Text) ) 

#define _OlkListBox_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#define _OlkListBox_get_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> get_TextAlign(This,TextAlign) ) 

#define _OlkListBox_put_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> put_TextAlign(This,TextAlign) ) 

#define _OlkListBox_get_TopIndex(This,TopIndex)	\
    ( (This)->lpVtbl -> get_TopIndex(This,TopIndex) ) 

#define _OlkListBox_put_TopIndex(This,TopIndex)	\
    ( (This)->lpVtbl -> put_TopIndex(This,TopIndex) ) 

#define _OlkListBox_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define _OlkListBox_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define _OlkListBox_get_ListIndex(This,ListIndex)	\
    ( (This)->lpVtbl -> get_ListIndex(This,ListIndex) ) 

#define _OlkListBox_put_ListIndex(This,ListIndex)	\
    ( (This)->lpVtbl -> put_ListIndex(This,ListIndex) ) 

#define _OlkListBox_get_ListCount(This,ListCount)	\
    ( (This)->lpVtbl -> get_ListCount(This,ListCount) ) 

#define _OlkListBox_GetItem(This,Index,Item)	\
    ( (This)->lpVtbl -> GetItem(This,Index,Item) ) 

#define _OlkListBox_SetItem(This,Index,Item)	\
    ( (This)->lpVtbl -> SetItem(This,Index,Item) ) 

#define _OlkListBox_GetSelected(This,Index,Selected)	\
    ( (This)->lpVtbl -> GetSelected(This,Index,Selected) ) 

#define _OlkListBox_SetSelected(This,Index,Selected)	\
    ( (This)->lpVtbl -> SetSelected(This,Index,Selected) ) 

#define _OlkListBox_Copy(This)	\
    ( (This)->lpVtbl -> Copy(This) ) 

#define _OlkListBox_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define _OlkListBox_AddItem(This,ItemText,Index)	\
    ( (This)->lpVtbl -> AddItem(This,ItemText,Index) ) 

#define _OlkListBox_RemoveItem(This,Index)	\
    ( (This)->lpVtbl -> RemoveItem(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkListBox_INTERFACE_DEFINED__ */


#ifndef __OlkListBoxEvents_DISPINTERFACE_DEFINED__
#define __OlkListBoxEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkListBoxEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkListBoxEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672E4-0000-0000-C000-000000000046")
    OlkListBoxEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkListBoxEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkListBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkListBoxEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkListBoxEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkListBoxEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkListBoxEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkListBoxEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkListBoxEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkListBoxEventsVtbl;

    interface OlkListBoxEvents
    {
        CONST_VTBL struct OlkListBoxEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkListBoxEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkListBoxEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkListBoxEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkListBoxEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkListBoxEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkListBoxEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkListBoxEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkListBoxEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkInfoBar_INTERFACE_DEFINED__
#define ___OlkInfoBar_INTERFACE_DEFINED__

/* interface _OlkInfoBar */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkInfoBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672F6-0000-0000-C000-000000000046")
    _OlkInfoBar : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkInfoBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkInfoBar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkInfoBar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkInfoBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkInfoBar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkInfoBar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkInfoBar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkInfoBar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkInfoBar * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkInfoBar * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkInfoBar * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkInfoBar * This,
            /* [in] */ OlMousePointer MousePointer);
        
        END_INTERFACE
    } _OlkInfoBarVtbl;

    interface _OlkInfoBar
    {
        CONST_VTBL struct _OlkInfoBarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkInfoBar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkInfoBar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkInfoBar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkInfoBar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkInfoBar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkInfoBar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkInfoBar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkInfoBar_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkInfoBar_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkInfoBar_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkInfoBar_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkInfoBar_INTERFACE_DEFINED__ */


#ifndef __OlkInfoBarEvents_DISPINTERFACE_DEFINED__
#define __OlkInfoBarEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkInfoBarEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkInfoBarEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672F7-0000-0000-C000-000000000046")
    OlkInfoBarEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkInfoBarEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkInfoBarEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkInfoBarEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkInfoBarEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkInfoBarEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkInfoBarEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkInfoBarEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkInfoBarEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkInfoBarEventsVtbl;

    interface OlkInfoBarEvents
    {
        CONST_VTBL struct OlkInfoBarEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkInfoBarEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkInfoBarEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkInfoBarEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkInfoBarEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkInfoBarEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkInfoBarEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkInfoBarEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkInfoBarEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkContactPhoto_INTERFACE_DEFINED__
#define ___OlkContactPhoto_INTERFACE_DEFINED__

/* interface _OlkContactPhoto */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkContactPhoto;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672EB-0000-0000-C000-000000000046")
    _OlkContactPhoto : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkContactPhotoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkContactPhoto * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkContactPhoto * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkContactPhoto * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkContactPhoto * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkContactPhoto * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkContactPhoto * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkContactPhoto * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkContactPhoto * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkContactPhoto * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkContactPhoto * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkContactPhoto * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkContactPhoto * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkContactPhoto * This,
            /* [in] */ OlMousePointer MousePointer);
        
        END_INTERFACE
    } _OlkContactPhotoVtbl;

    interface _OlkContactPhoto
    {
        CONST_VTBL struct _OlkContactPhotoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkContactPhoto_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkContactPhoto_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkContactPhoto_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkContactPhoto_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkContactPhoto_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkContactPhoto_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkContactPhoto_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkContactPhoto_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkContactPhoto_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkContactPhoto_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkContactPhoto_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkContactPhoto_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkContactPhoto_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkContactPhoto_INTERFACE_DEFINED__ */


#ifndef __OlkContactPhotoEvents_DISPINTERFACE_DEFINED__
#define __OlkContactPhotoEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkContactPhotoEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkContactPhotoEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672EC-0000-0000-C000-000000000046")
    OlkContactPhotoEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkContactPhotoEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkContactPhotoEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkContactPhotoEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkContactPhotoEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkContactPhotoEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkContactPhotoEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkContactPhotoEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkContactPhotoEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkContactPhotoEventsVtbl;

    interface OlkContactPhotoEvents
    {
        CONST_VTBL struct OlkContactPhotoEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkContactPhotoEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkContactPhotoEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkContactPhotoEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkContactPhotoEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkContactPhotoEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkContactPhotoEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkContactPhotoEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkContactPhotoEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkBusinessCardControl_INTERFACE_DEFINED__
#define ___OlkBusinessCardControl_INTERFACE_DEFINED__

/* interface _OlkBusinessCardControl */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkBusinessCardControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672ED-0000-0000-C000-000000000046")
    _OlkBusinessCardControl : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkBusinessCardControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkBusinessCardControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkBusinessCardControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkBusinessCardControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkBusinessCardControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkBusinessCardControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkBusinessCardControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkBusinessCardControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkBusinessCardControl * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkBusinessCardControl * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkBusinessCardControl * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkBusinessCardControl * This,
            /* [in] */ OlMousePointer MousePointer);
        
        END_INTERFACE
    } _OlkBusinessCardControlVtbl;

    interface _OlkBusinessCardControl
    {
        CONST_VTBL struct _OlkBusinessCardControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkBusinessCardControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkBusinessCardControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkBusinessCardControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkBusinessCardControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkBusinessCardControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkBusinessCardControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkBusinessCardControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkBusinessCardControl_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkBusinessCardControl_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkBusinessCardControl_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkBusinessCardControl_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkBusinessCardControl_INTERFACE_DEFINED__ */


#ifndef __OlkBusinessCardControlEvents_DISPINTERFACE_DEFINED__
#define __OlkBusinessCardControlEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkBusinessCardControlEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkBusinessCardControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672EE-0000-0000-C000-000000000046")
    OlkBusinessCardControlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkBusinessCardControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkBusinessCardControlEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkBusinessCardControlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkBusinessCardControlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkBusinessCardControlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkBusinessCardControlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkBusinessCardControlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkBusinessCardControlEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkBusinessCardControlEventsVtbl;

    interface OlkBusinessCardControlEvents
    {
        CONST_VTBL struct OlkBusinessCardControlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkBusinessCardControlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkBusinessCardControlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkBusinessCardControlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkBusinessCardControlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkBusinessCardControlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkBusinessCardControlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkBusinessCardControlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkBusinessCardControlEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkPageControl_INTERFACE_DEFINED__
#define ___OlkPageControl_INTERFACE_DEFINED__

/* interface _OlkPageControl */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkPageControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672F8-0000-0000-C000-000000000046")
    _OlkPageControl : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Page( 
            /* [retval][out] */ OlPageType *PageID) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Page( 
            /* [in] */ OlPageType PageID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkPageControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkPageControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkPageControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkPageControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkPageControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkPageControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkPageControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkPageControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Page )( 
            _OlkPageControl * This,
            /* [retval][out] */ OlPageType *PageID);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Page )( 
            _OlkPageControl * This,
            /* [in] */ OlPageType PageID);
        
        END_INTERFACE
    } _OlkPageControlVtbl;

    interface _OlkPageControl
    {
        CONST_VTBL struct _OlkPageControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkPageControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkPageControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkPageControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkPageControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkPageControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkPageControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkPageControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkPageControl_get_Page(This,PageID)	\
    ( (This)->lpVtbl -> get_Page(This,PageID) ) 

#define _OlkPageControl_put_Page(This,PageID)	\
    ( (This)->lpVtbl -> put_Page(This,PageID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkPageControl_INTERFACE_DEFINED__ */


#ifndef __OlkPageControlEvents_DISPINTERFACE_DEFINED__
#define __OlkPageControlEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkPageControlEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkPageControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672F9-0000-0000-C000-000000000046")
    OlkPageControlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkPageControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkPageControlEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkPageControlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkPageControlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkPageControlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkPageControlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkPageControlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkPageControlEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkPageControlEventsVtbl;

    interface OlkPageControlEvents
    {
        CONST_VTBL struct OlkPageControlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkPageControlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkPageControlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkPageControlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkPageControlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkPageControlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkPageControlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkPageControlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkPageControlEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkDateControl_INTERFACE_DEFINED__
#define ___OlkDateControl_INTERFACE_DEFINED__

/* interface _OlkDateControl */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkDateControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672FA-0000-0000-C000-000000000046")
    _OlkDateControl : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *AutoSize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL AutoSize) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoWordSelect( 
            /* [retval][out] */ VARIANT_BOOL *AutoWordSelect) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoWordSelect( 
            /* [in] */ VARIANT_BOOL AutoWordSelect) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackStyle( 
            /* [retval][out] */ OlBackStyle *BackStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackStyle( 
            /* [in] */ OlBackStyle BackStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Date( 
            /* [retval][out] */ DATE *Date) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Date( 
            /* [in] */ DATE Date) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnterFieldBehavior( 
            /* [retval][out] */ OlEnterFieldBehavior *EnterFieldBehavior) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnterFieldBehavior( 
            /* [in] */ OlEnterFieldBehavior EnterFieldBehavior) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HideSelection( 
            /* [retval][out] */ VARIANT_BOOL *HideSelection) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HideSelection( 
            /* [in] */ VARIANT_BOOL HideSelection) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Locked( 
            /* [retval][out] */ VARIANT_BOOL *Locked) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Locked( 
            /* [in] */ VARIANT_BOOL Locked) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowNoneButton( 
            /* [retval][out] */ VARIANT_BOOL *ShowNoneButton) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowNoneButton( 
            /* [in] */ VARIANT_BOOL ShowNoneButton) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *Text) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlign( 
            /* [retval][out] */ OlTextAlign *TextAlign) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlign( 
            /* [in] */ OlTextAlign TextAlign) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DropDown( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkDateControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkDateControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkDateControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkDateControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkDateControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkDateControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkDateControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkDateControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            _OlkDateControl * This,
            /* [retval][out] */ VARIANT_BOOL *AutoSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            _OlkDateControl * This,
            /* [in] */ VARIANT_BOOL AutoSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoWordSelect )( 
            _OlkDateControl * This,
            /* [retval][out] */ VARIANT_BOOL *AutoWordSelect);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoWordSelect )( 
            _OlkDateControl * This,
            /* [in] */ VARIANT_BOOL AutoWordSelect);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            _OlkDateControl * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            _OlkDateControl * This,
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackStyle )( 
            _OlkDateControl * This,
            /* [retval][out] */ OlBackStyle *BackStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackStyle )( 
            _OlkDateControl * This,
            /* [in] */ OlBackStyle BackStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Date )( 
            _OlkDateControl * This,
            /* [retval][out] */ DATE *Date);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Date )( 
            _OlkDateControl * This,
            /* [in] */ DATE Date);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkDateControl * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkDateControl * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnterFieldBehavior )( 
            _OlkDateControl * This,
            /* [retval][out] */ OlEnterFieldBehavior *EnterFieldBehavior);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnterFieldBehavior )( 
            _OlkDateControl * This,
            /* [in] */ OlEnterFieldBehavior EnterFieldBehavior);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkDateControl * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkDateControl * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkDateControl * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HideSelection )( 
            _OlkDateControl * This,
            /* [retval][out] */ VARIANT_BOOL *HideSelection);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HideSelection )( 
            _OlkDateControl * This,
            /* [in] */ VARIANT_BOOL HideSelection);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Locked )( 
            _OlkDateControl * This,
            /* [retval][out] */ VARIANT_BOOL *Locked);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Locked )( 
            _OlkDateControl * This,
            /* [in] */ VARIANT_BOOL Locked);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkDateControl * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkDateControl * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkDateControl * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkDateControl * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowNoneButton )( 
            _OlkDateControl * This,
            /* [retval][out] */ VARIANT_BOOL *ShowNoneButton);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowNoneButton )( 
            _OlkDateControl * This,
            /* [in] */ VARIANT_BOOL ShowNoneButton);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            _OlkDateControl * This,
            /* [retval][out] */ BSTR *Text);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            _OlkDateControl * This,
            /* [in] */ BSTR Text);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlign )( 
            _OlkDateControl * This,
            /* [retval][out] */ OlTextAlign *TextAlign);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlign )( 
            _OlkDateControl * This,
            /* [in] */ OlTextAlign TextAlign);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _OlkDateControl * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _OlkDateControl * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DropDown )( 
            _OlkDateControl * This);
        
        END_INTERFACE
    } _OlkDateControlVtbl;

    interface _OlkDateControl
    {
        CONST_VTBL struct _OlkDateControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkDateControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkDateControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkDateControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkDateControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkDateControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkDateControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkDateControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkDateControl_get_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> get_AutoSize(This,AutoSize) ) 

#define _OlkDateControl_put_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> put_AutoSize(This,AutoSize) ) 

#define _OlkDateControl_get_AutoWordSelect(This,AutoWordSelect)	\
    ( (This)->lpVtbl -> get_AutoWordSelect(This,AutoWordSelect) ) 

#define _OlkDateControl_put_AutoWordSelect(This,AutoWordSelect)	\
    ( (This)->lpVtbl -> put_AutoWordSelect(This,AutoWordSelect) ) 

#define _OlkDateControl_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _OlkDateControl_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _OlkDateControl_get_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> get_BackStyle(This,BackStyle) ) 

#define _OlkDateControl_put_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> put_BackStyle(This,BackStyle) ) 

#define _OlkDateControl_get_Date(This,Date)	\
    ( (This)->lpVtbl -> get_Date(This,Date) ) 

#define _OlkDateControl_put_Date(This,Date)	\
    ( (This)->lpVtbl -> put_Date(This,Date) ) 

#define _OlkDateControl_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkDateControl_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkDateControl_get_EnterFieldBehavior(This,EnterFieldBehavior)	\
    ( (This)->lpVtbl -> get_EnterFieldBehavior(This,EnterFieldBehavior) ) 

#define _OlkDateControl_put_EnterFieldBehavior(This,EnterFieldBehavior)	\
    ( (This)->lpVtbl -> put_EnterFieldBehavior(This,EnterFieldBehavior) ) 

#define _OlkDateControl_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkDateControl_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkDateControl_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkDateControl_get_HideSelection(This,HideSelection)	\
    ( (This)->lpVtbl -> get_HideSelection(This,HideSelection) ) 

#define _OlkDateControl_put_HideSelection(This,HideSelection)	\
    ( (This)->lpVtbl -> put_HideSelection(This,HideSelection) ) 

#define _OlkDateControl_get_Locked(This,Locked)	\
    ( (This)->lpVtbl -> get_Locked(This,Locked) ) 

#define _OlkDateControl_put_Locked(This,Locked)	\
    ( (This)->lpVtbl -> put_Locked(This,Locked) ) 

#define _OlkDateControl_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkDateControl_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkDateControl_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkDateControl_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkDateControl_get_ShowNoneButton(This,ShowNoneButton)	\
    ( (This)->lpVtbl -> get_ShowNoneButton(This,ShowNoneButton) ) 

#define _OlkDateControl_put_ShowNoneButton(This,ShowNoneButton)	\
    ( (This)->lpVtbl -> put_ShowNoneButton(This,ShowNoneButton) ) 

#define _OlkDateControl_get_Text(This,Text)	\
    ( (This)->lpVtbl -> get_Text(This,Text) ) 

#define _OlkDateControl_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#define _OlkDateControl_get_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> get_TextAlign(This,TextAlign) ) 

#define _OlkDateControl_put_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> put_TextAlign(This,TextAlign) ) 

#define _OlkDateControl_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define _OlkDateControl_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define _OlkDateControl_DropDown(This)	\
    ( (This)->lpVtbl -> DropDown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkDateControl_INTERFACE_DEFINED__ */


#ifndef __OlkDateControlEvents_DISPINTERFACE_DEFINED__
#define __OlkDateControlEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkDateControlEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkDateControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672FB-0000-0000-C000-000000000046")
    OlkDateControlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkDateControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkDateControlEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkDateControlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkDateControlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkDateControlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkDateControlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkDateControlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkDateControlEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkDateControlEventsVtbl;

    interface OlkDateControlEvents
    {
        CONST_VTBL struct OlkDateControlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkDateControlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkDateControlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkDateControlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkDateControlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkDateControlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkDateControlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkDateControlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkDateControlEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkTimeControl_INTERFACE_DEFINED__
#define ___OlkTimeControl_INTERFACE_DEFINED__

/* interface _OlkTimeControl */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkTimeControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672EF-0000-0000-C000-000000000046")
    _OlkTimeControl : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *AutoSize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL AutoSize) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoWordSelect( 
            /* [retval][out] */ VARIANT_BOOL *AutoWordSelect) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoWordSelect( 
            /* [in] */ VARIANT_BOOL AutoWordSelect) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackStyle( 
            /* [retval][out] */ OlBackStyle *BackStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackStyle( 
            /* [in] */ OlBackStyle BackStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnterFieldBehavior( 
            /* [retval][out] */ OlEnterFieldBehavior *EnterFieldBehavior) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnterFieldBehavior( 
            /* [in] */ OlEnterFieldBehavior EnterFieldBehavior) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HideSelection( 
            /* [retval][out] */ VARIANT_BOOL *HideSelection) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HideSelection( 
            /* [in] */ VARIANT_BOOL HideSelection) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Locked( 
            /* [retval][out] */ VARIANT_BOOL *Locked) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Locked( 
            /* [in] */ VARIANT_BOOL Locked) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReferenceTime( 
            /* [retval][out] */ DATE *ReferenceTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReferenceTime( 
            /* [in] */ DATE ReferenceTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Style( 
            /* [retval][out] */ OlTimeStyle *TimeStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Style( 
            /* [in] */ OlTimeStyle TimeStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Time( 
            /* [retval][out] */ DATE *Time) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Time( 
            /* [in] */ DATE Time) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *Text) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR Text) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextAlign( 
            /* [retval][out] */ OlTextAlign *TextAlign) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextAlign( 
            /* [in] */ OlTextAlign TextAlign) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IntervalTime( 
            /* [retval][out] */ DATE *IntervalTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IntervalTime( 
            /* [in] */ DATE IntervalTime) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DropDown( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkTimeControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkTimeControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkTimeControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkTimeControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkTimeControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkTimeControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkTimeControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkTimeControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            _OlkTimeControl * This,
            /* [retval][out] */ VARIANT_BOOL *AutoSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            _OlkTimeControl * This,
            /* [in] */ VARIANT_BOOL AutoSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoWordSelect )( 
            _OlkTimeControl * This,
            /* [retval][out] */ VARIANT_BOOL *AutoWordSelect);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoWordSelect )( 
            _OlkTimeControl * This,
            /* [in] */ VARIANT_BOOL AutoWordSelect);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            _OlkTimeControl * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            _OlkTimeControl * This,
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackStyle )( 
            _OlkTimeControl * This,
            /* [retval][out] */ OlBackStyle *BackStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackStyle )( 
            _OlkTimeControl * This,
            /* [in] */ OlBackStyle BackStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkTimeControl * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkTimeControl * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnterFieldBehavior )( 
            _OlkTimeControl * This,
            /* [retval][out] */ OlEnterFieldBehavior *EnterFieldBehavior);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnterFieldBehavior )( 
            _OlkTimeControl * This,
            /* [in] */ OlEnterFieldBehavior EnterFieldBehavior);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkTimeControl * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkTimeControl * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkTimeControl * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HideSelection )( 
            _OlkTimeControl * This,
            /* [retval][out] */ VARIANT_BOOL *HideSelection);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HideSelection )( 
            _OlkTimeControl * This,
            /* [in] */ VARIANT_BOOL HideSelection);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Locked )( 
            _OlkTimeControl * This,
            /* [retval][out] */ VARIANT_BOOL *Locked);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Locked )( 
            _OlkTimeControl * This,
            /* [in] */ VARIANT_BOOL Locked);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkTimeControl * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkTimeControl * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkTimeControl * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkTimeControl * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReferenceTime )( 
            _OlkTimeControl * This,
            /* [retval][out] */ DATE *ReferenceTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReferenceTime )( 
            _OlkTimeControl * This,
            /* [in] */ DATE ReferenceTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Style )( 
            _OlkTimeControl * This,
            /* [retval][out] */ OlTimeStyle *TimeStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Style )( 
            _OlkTimeControl * This,
            /* [in] */ OlTimeStyle TimeStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Time )( 
            _OlkTimeControl * This,
            /* [retval][out] */ DATE *Time);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Time )( 
            _OlkTimeControl * This,
            /* [in] */ DATE Time);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            _OlkTimeControl * This,
            /* [retval][out] */ BSTR *Text);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            _OlkTimeControl * This,
            /* [in] */ BSTR Text);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlign )( 
            _OlkTimeControl * This,
            /* [retval][out] */ OlTextAlign *TextAlign);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlign )( 
            _OlkTimeControl * This,
            /* [in] */ OlTextAlign TextAlign);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _OlkTimeControl * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _OlkTimeControl * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IntervalTime )( 
            _OlkTimeControl * This,
            /* [retval][out] */ DATE *IntervalTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IntervalTime )( 
            _OlkTimeControl * This,
            /* [in] */ DATE IntervalTime);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DropDown )( 
            _OlkTimeControl * This);
        
        END_INTERFACE
    } _OlkTimeControlVtbl;

    interface _OlkTimeControl
    {
        CONST_VTBL struct _OlkTimeControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkTimeControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkTimeControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkTimeControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkTimeControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkTimeControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkTimeControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkTimeControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkTimeControl_get_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> get_AutoSize(This,AutoSize) ) 

#define _OlkTimeControl_put_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> put_AutoSize(This,AutoSize) ) 

#define _OlkTimeControl_get_AutoWordSelect(This,AutoWordSelect)	\
    ( (This)->lpVtbl -> get_AutoWordSelect(This,AutoWordSelect) ) 

#define _OlkTimeControl_put_AutoWordSelect(This,AutoWordSelect)	\
    ( (This)->lpVtbl -> put_AutoWordSelect(This,AutoWordSelect) ) 

#define _OlkTimeControl_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _OlkTimeControl_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _OlkTimeControl_get_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> get_BackStyle(This,BackStyle) ) 

#define _OlkTimeControl_put_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> put_BackStyle(This,BackStyle) ) 

#define _OlkTimeControl_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkTimeControl_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkTimeControl_get_EnterFieldBehavior(This,EnterFieldBehavior)	\
    ( (This)->lpVtbl -> get_EnterFieldBehavior(This,EnterFieldBehavior) ) 

#define _OlkTimeControl_put_EnterFieldBehavior(This,EnterFieldBehavior)	\
    ( (This)->lpVtbl -> put_EnterFieldBehavior(This,EnterFieldBehavior) ) 

#define _OlkTimeControl_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkTimeControl_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkTimeControl_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkTimeControl_get_HideSelection(This,HideSelection)	\
    ( (This)->lpVtbl -> get_HideSelection(This,HideSelection) ) 

#define _OlkTimeControl_put_HideSelection(This,HideSelection)	\
    ( (This)->lpVtbl -> put_HideSelection(This,HideSelection) ) 

#define _OlkTimeControl_get_Locked(This,Locked)	\
    ( (This)->lpVtbl -> get_Locked(This,Locked) ) 

#define _OlkTimeControl_put_Locked(This,Locked)	\
    ( (This)->lpVtbl -> put_Locked(This,Locked) ) 

#define _OlkTimeControl_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkTimeControl_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkTimeControl_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkTimeControl_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkTimeControl_get_ReferenceTime(This,ReferenceTime)	\
    ( (This)->lpVtbl -> get_ReferenceTime(This,ReferenceTime) ) 

#define _OlkTimeControl_put_ReferenceTime(This,ReferenceTime)	\
    ( (This)->lpVtbl -> put_ReferenceTime(This,ReferenceTime) ) 

#define _OlkTimeControl_get_Style(This,TimeStyle)	\
    ( (This)->lpVtbl -> get_Style(This,TimeStyle) ) 

#define _OlkTimeControl_put_Style(This,TimeStyle)	\
    ( (This)->lpVtbl -> put_Style(This,TimeStyle) ) 

#define _OlkTimeControl_get_Time(This,Time)	\
    ( (This)->lpVtbl -> get_Time(This,Time) ) 

#define _OlkTimeControl_put_Time(This,Time)	\
    ( (This)->lpVtbl -> put_Time(This,Time) ) 

#define _OlkTimeControl_get_Text(This,Text)	\
    ( (This)->lpVtbl -> get_Text(This,Text) ) 

#define _OlkTimeControl_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#define _OlkTimeControl_get_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> get_TextAlign(This,TextAlign) ) 

#define _OlkTimeControl_put_TextAlign(This,TextAlign)	\
    ( (This)->lpVtbl -> put_TextAlign(This,TextAlign) ) 

#define _OlkTimeControl_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define _OlkTimeControl_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define _OlkTimeControl_get_IntervalTime(This,IntervalTime)	\
    ( (This)->lpVtbl -> get_IntervalTime(This,IntervalTime) ) 

#define _OlkTimeControl_put_IntervalTime(This,IntervalTime)	\
    ( (This)->lpVtbl -> put_IntervalTime(This,IntervalTime) ) 

#define _OlkTimeControl_DropDown(This)	\
    ( (This)->lpVtbl -> DropDown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkTimeControl_INTERFACE_DEFINED__ */


#ifndef __OlkTimeControlEvents_DISPINTERFACE_DEFINED__
#define __OlkTimeControlEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkTimeControlEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkTimeControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672F0-0000-0000-C000-000000000046")
    OlkTimeControlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkTimeControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkTimeControlEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkTimeControlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkTimeControlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkTimeControlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkTimeControlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkTimeControlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkTimeControlEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkTimeControlEventsVtbl;

    interface OlkTimeControlEvents
    {
        CONST_VTBL struct OlkTimeControlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkTimeControlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkTimeControlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkTimeControlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkTimeControlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkTimeControlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkTimeControlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkTimeControlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkTimeControlEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkCategory_INTERFACE_DEFINED__
#define ___OlkCategory_INTERFACE_DEFINED__

/* interface _OlkCategory */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkCategory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000672F4-0000-0000-C000-000000000046")
    _OlkCategory : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *AutoSize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL AutoSize) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BackStyle( 
            /* [retval][out] */ OlBackStyle *BackStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BackStyle( 
            /* [in] */ OlBackStyle BackStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkCategoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkCategory * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkCategory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkCategory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkCategory * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkCategory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkCategory * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkCategory * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            _OlkCategory * This,
            /* [retval][out] */ VARIANT_BOOL *AutoSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            _OlkCategory * This,
            /* [in] */ VARIANT_BOOL AutoSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            _OlkCategory * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *BackColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            _OlkCategory * This,
            /* [in] */ /* external definition not present */ OLE_COLOR BackColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BackStyle )( 
            _OlkCategory * This,
            /* [retval][out] */ OlBackStyle *BackStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BackStyle )( 
            _OlkCategory * This,
            /* [in] */ OlBackStyle BackStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkCategory * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkCategory * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkCategory * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkCategory * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkCategory * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkCategory * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkCategory * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkCategory * This,
            /* [in] */ OlMousePointer MousePointer);
        
        END_INTERFACE
    } _OlkCategoryVtbl;

    interface _OlkCategory
    {
        CONST_VTBL struct _OlkCategoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkCategory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkCategory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkCategory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkCategory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkCategory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkCategory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkCategory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkCategory_get_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> get_AutoSize(This,AutoSize) ) 

#define _OlkCategory_put_AutoSize(This,AutoSize)	\
    ( (This)->lpVtbl -> put_AutoSize(This,AutoSize) ) 

#define _OlkCategory_get_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> get_BackColor(This,BackColor) ) 

#define _OlkCategory_put_BackColor(This,BackColor)	\
    ( (This)->lpVtbl -> put_BackColor(This,BackColor) ) 

#define _OlkCategory_get_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> get_BackStyle(This,BackStyle) ) 

#define _OlkCategory_put_BackStyle(This,BackStyle)	\
    ( (This)->lpVtbl -> put_BackStyle(This,BackStyle) ) 

#define _OlkCategory_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkCategory_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkCategory_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkCategory_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkCategory_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkCategory_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkCategory_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkCategory_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkCategory_INTERFACE_DEFINED__ */


#ifndef __OlkCategoryEvents_DISPINTERFACE_DEFINED__
#define __OlkCategoryEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkCategoryEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkCategoryEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000672F5-0000-0000-C000-000000000046")
    OlkCategoryEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkCategoryEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkCategoryEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkCategoryEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkCategoryEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkCategoryEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkCategoryEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkCategoryEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkCategoryEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkCategoryEventsVtbl;

    interface OlkCategoryEvents
    {
        CONST_VTBL struct OlkCategoryEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkCategoryEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkCategoryEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkCategoryEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkCategoryEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkCategoryEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkCategoryEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkCategoryEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkCategoryEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkFrameHeader_INTERFACE_DEFINED__
#define ___OlkFrameHeader_INTERFACE_DEFINED__

/* interface _OlkFrameHeader */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkFrameHeader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00067352-0000-0000-C000-000000000046")
    _OlkFrameHeader : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Alignment( 
            /* [retval][out] */ OlAlignment *Alignment) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Alignment( 
            /* [in] */ OlAlignment Alignment) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *Caption) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ /* external definition not present */ void **Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForeColor( 
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkFrameHeaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkFrameHeader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkFrameHeader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkFrameHeader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkFrameHeader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkFrameHeader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkFrameHeader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkFrameHeader * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alignment )( 
            _OlkFrameHeader * This,
            /* [retval][out] */ OlAlignment *Alignment);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Alignment )( 
            _OlkFrameHeader * This,
            /* [in] */ OlAlignment Alignment);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _OlkFrameHeader * This,
            /* [retval][out] */ BSTR *Caption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _OlkFrameHeader * This,
            /* [in] */ BSTR Caption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _OlkFrameHeader * This,
            /* [retval][out] */ /* external definition not present */ void **Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForeColor )( 
            _OlkFrameHeader * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *ForeColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForeColor )( 
            _OlkFrameHeader * This,
            /* [in] */ /* external definition not present */ OLE_COLOR ForeColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkFrameHeader * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkFrameHeader * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkFrameHeader * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkFrameHeader * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkFrameHeader * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkFrameHeader * This,
            /* [in] */ OlMousePointer MousePointer);
        
        END_INTERFACE
    } _OlkFrameHeaderVtbl;

    interface _OlkFrameHeader
    {
        CONST_VTBL struct _OlkFrameHeaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkFrameHeader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkFrameHeader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkFrameHeader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkFrameHeader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkFrameHeader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkFrameHeader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkFrameHeader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkFrameHeader_get_Alignment(This,Alignment)	\
    ( (This)->lpVtbl -> get_Alignment(This,Alignment) ) 

#define _OlkFrameHeader_put_Alignment(This,Alignment)	\
    ( (This)->lpVtbl -> put_Alignment(This,Alignment) ) 

#define _OlkFrameHeader_get_Caption(This,Caption)	\
    ( (This)->lpVtbl -> get_Caption(This,Caption) ) 

#define _OlkFrameHeader_put_Caption(This,Caption)	\
    ( (This)->lpVtbl -> put_Caption(This,Caption) ) 

#define _OlkFrameHeader_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _OlkFrameHeader_get_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> get_ForeColor(This,ForeColor) ) 

#define _OlkFrameHeader_put_ForeColor(This,ForeColor)	\
    ( (This)->lpVtbl -> put_ForeColor(This,ForeColor) ) 

#define _OlkFrameHeader_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkFrameHeader_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkFrameHeader_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkFrameHeader_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkFrameHeader_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkFrameHeader_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkFrameHeader_INTERFACE_DEFINED__ */


#ifndef __OlkFrameHeaderEvents_DISPINTERFACE_DEFINED__
#define __OlkFrameHeaderEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkFrameHeaderEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkFrameHeaderEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00067353-0000-0000-C000-000000000046")
    OlkFrameHeaderEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkFrameHeaderEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkFrameHeaderEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkFrameHeaderEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkFrameHeaderEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkFrameHeaderEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkFrameHeaderEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkFrameHeaderEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkFrameHeaderEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkFrameHeaderEventsVtbl;

    interface OlkFrameHeaderEvents
    {
        CONST_VTBL struct OlkFrameHeaderEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkFrameHeaderEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkFrameHeaderEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkFrameHeaderEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkFrameHeaderEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkFrameHeaderEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkFrameHeaderEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkFrameHeaderEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkFrameHeaderEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OlkSenderPhoto_INTERFACE_DEFINED__
#define ___OlkSenderPhoto_INTERFACE_DEFINED__

/* interface _OlkSenderPhoto */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkSenderPhoto;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00067355-0000-0000-C000-000000000046")
    _OlkSenderPhoto : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PreferredWidth( 
            /* [retval][out] */ long *PreferredWidth) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PreferredHeight( 
            /* [retval][out] */ long *PreferredHeight) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkSenderPhotoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkSenderPhoto * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkSenderPhoto * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkSenderPhoto * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkSenderPhoto * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkSenderPhoto * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkSenderPhoto * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkSenderPhoto * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkSenderPhoto * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkSenderPhoto * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkSenderPhoto * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkSenderPhoto * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkSenderPhoto * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkSenderPhoto * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredWidth )( 
            _OlkSenderPhoto * This,
            /* [retval][out] */ long *PreferredWidth);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredHeight )( 
            _OlkSenderPhoto * This,
            /* [retval][out] */ long *PreferredHeight);
        
        END_INTERFACE
    } _OlkSenderPhotoVtbl;

    interface _OlkSenderPhoto
    {
        CONST_VTBL struct _OlkSenderPhotoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkSenderPhoto_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkSenderPhoto_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkSenderPhoto_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkSenderPhoto_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkSenderPhoto_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkSenderPhoto_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkSenderPhoto_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkSenderPhoto_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkSenderPhoto_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkSenderPhoto_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkSenderPhoto_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkSenderPhoto_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkSenderPhoto_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkSenderPhoto_get_PreferredWidth(This,PreferredWidth)	\
    ( (This)->lpVtbl -> get_PreferredWidth(This,PreferredWidth) ) 

#define _OlkSenderPhoto_get_PreferredHeight(This,PreferredHeight)	\
    ( (This)->lpVtbl -> get_PreferredHeight(This,PreferredHeight) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkSenderPhoto_INTERFACE_DEFINED__ */


#ifndef __OlkSenderPhotoEvents_DISPINTERFACE_DEFINED__
#define __OlkSenderPhotoEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkSenderPhotoEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkSenderPhotoEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00067356-0000-0000-C000-000000000046")
    OlkSenderPhotoEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkSenderPhotoEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkSenderPhotoEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkSenderPhotoEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkSenderPhotoEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkSenderPhotoEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkSenderPhotoEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkSenderPhotoEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkSenderPhotoEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkSenderPhotoEventsVtbl;

    interface OlkSenderPhotoEvents
    {
        CONST_VTBL struct OlkSenderPhotoEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkSenderPhotoEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkSenderPhotoEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkSenderPhotoEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkSenderPhotoEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkSenderPhotoEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkSenderPhotoEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkSenderPhotoEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkSenderPhotoEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___TimeZone_INTERFACE_DEFINED__
#define ___TimeZone_INTERFACE_DEFINED__

/* interface _TimeZone */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TimeZone;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630FD-0000-0000-C000-000000000046")
    _TimeZone : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DaylightDesignation( 
            /* [retval][out] */ BSTR *DaylightDesignation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StandardDesignation( 
            /* [retval][out] */ BSTR *StandardDesignation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Bias( 
            /* [retval][out] */ long *Bias) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StandardBias( 
            /* [retval][out] */ long *StandardBias) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DaylightBias( 
            /* [retval][out] */ long *DaylightBias) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StandardDate( 
            /* [retval][out] */ DATE *StandardDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DaylightDate( 
            /* [retval][out] */ DATE *DaylightDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ BSTR *ID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TimeZoneVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TimeZone * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TimeZone * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TimeZone * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TimeZone * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TimeZone * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TimeZone * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TimeZone * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TimeZone * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TimeZone * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TimeZone * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TimeZone * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _TimeZone * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DaylightDesignation )( 
            _TimeZone * This,
            /* [retval][out] */ BSTR *DaylightDesignation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardDesignation )( 
            _TimeZone * This,
            /* [retval][out] */ BSTR *StandardDesignation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bias )( 
            _TimeZone * This,
            /* [retval][out] */ long *Bias);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardBias )( 
            _TimeZone * This,
            /* [retval][out] */ long *StandardBias);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DaylightBias )( 
            _TimeZone * This,
            /* [retval][out] */ long *DaylightBias);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardDate )( 
            _TimeZone * This,
            /* [retval][out] */ DATE *StandardDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DaylightDate )( 
            _TimeZone * This,
            /* [retval][out] */ DATE *DaylightDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            _TimeZone * This,
            /* [retval][out] */ BSTR *ID);
        
        END_INTERFACE
    } _TimeZoneVtbl;

    interface _TimeZone
    {
        CONST_VTBL struct _TimeZoneVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TimeZone_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TimeZone_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TimeZone_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TimeZone_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TimeZone_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TimeZone_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TimeZone_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TimeZone_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TimeZone_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TimeZone_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TimeZone_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TimeZone_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _TimeZone_get_DaylightDesignation(This,DaylightDesignation)	\
    ( (This)->lpVtbl -> get_DaylightDesignation(This,DaylightDesignation) ) 

#define _TimeZone_get_StandardDesignation(This,StandardDesignation)	\
    ( (This)->lpVtbl -> get_StandardDesignation(This,StandardDesignation) ) 

#define _TimeZone_get_Bias(This,Bias)	\
    ( (This)->lpVtbl -> get_Bias(This,Bias) ) 

#define _TimeZone_get_StandardBias(This,StandardBias)	\
    ( (This)->lpVtbl -> get_StandardBias(This,StandardBias) ) 

#define _TimeZone_get_DaylightBias(This,DaylightBias)	\
    ( (This)->lpVtbl -> get_DaylightBias(This,DaylightBias) ) 

#define _TimeZone_get_StandardDate(This,StandardDate)	\
    ( (This)->lpVtbl -> get_StandardDate(This,StandardDate) ) 

#define _TimeZone_get_DaylightDate(This,DaylightDate)	\
    ( (This)->lpVtbl -> get_DaylightDate(This,DaylightDate) ) 

#define _TimeZone_get_ID(This,ID)	\
    ( (This)->lpVtbl -> get_ID(This,ID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TimeZone_INTERFACE_DEFINED__ */


#ifndef ___Application_INTERFACE_DEFINED__
#define ___Application_INTERFACE_DEFINED__

/* interface _Application */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Application;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063001-0000-0000-C000-000000000046")
    _Application : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Assistant( 
            /* [retval][out] */ /* external definition not present */ Assistant **Assistant) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR *Version) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ActiveExplorer( 
            /* [retval][out] */ _Explorer **ActiveExplorer) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ActiveInspector( 
            /* [retval][out] */ _Inspector **ActiveInspector) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateItem( 
            /* [in] */ OlItemType ItemType,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateItemFromTemplate( 
            /* [in] */ BSTR TemplatePath,
            /* [optional][in] */ VARIANT InFolder,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateObject( 
            /* [in] */ BSTR ObjectName,
            /* [retval][out] */ IDispatch **Object) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetNamespace( 
            /* [in] */ BSTR Type,
            /* [retval][out] */ _NameSpace **NameSpace) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Quit( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_COMAddIns( 
            /* [retval][out] */ /* external definition not present */ COMAddIns **COMAddIns) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Explorers( 
            /* [retval][out] */ _Explorers **Explorers) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Inspectors( 
            /* [retval][out] */ _Inspectors **Inspectors) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageSettings( 
            /* [retval][out] */ /* external definition not present */ LanguageSettings **LanguageSettings) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProductCode( 
            /* [retval][out] */ BSTR *ProductCode) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_AnswerWizard( 
            /* [retval][out] */ /* external definition not present */ AnswerWizard **AnswerWizard) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FeatureInstall( 
            /* [retval][out] */ /* external definition not present */ MsoFeatureInstall *FeatureInstall) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FeatureInstall( 
            /* [in] */ /* external definition not present */ MsoFeatureInstall FeatureInstall) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ActiveWindow( 
            /* [retval][out] */ IDispatch **ActiveWindow) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CopyFile( 
            /* [in] */ BSTR FilePath,
            /* [in] */ BSTR DestFolderPath,
            /* [retval][out] */ IDispatch **DocItem) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AdvancedSearch( 
            /* [in] */ BSTR Scope,
            /* [optional][in] */ VARIANT Filter,
            /* [optional][in] */ VARIANT SearchSubFolders,
            /* [optional][in] */ VARIANT Tag,
            /* [retval][out] */ Search **AdvancedSearch) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsSearchSynchronous( 
            /* [in] */ BSTR LookInFolders,
            /* [retval][out] */ VARIANT_BOOL *IsSearchSynchronous) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE GetNewNickNames( 
            /* [in] */ VARIANT *pvar) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Reminders( 
            /* [retval][out] */ _Reminders **Reminders) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultProfileName( 
            /* [retval][out] */ BSTR *DefaultProfileName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsTrusted( 
            /* [retval][out] */ VARIANT_BOOL *IsTrusted) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetObjectReference( 
            /* [in] */ IDispatch *Item,
            /* [in] */ OlReferenceType ReferenceType,
            /* [retval][out] */ IDispatch **NewObject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Assistance( 
            /* [retval][out] */ /* external definition not present */ IAssistance **Assistance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TimeZones( 
            /* [retval][out] */ _TimeZones **TimeZones) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PickerDialog( 
            /* [retval][out] */ /* external definition not present */ PickerDialog **PickerDialog) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RefreshFormRegionDefinition( 
            /* [in] */ BSTR RegionName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Application * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Application * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Application * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Application * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Application * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Application * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Application * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Application * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Application * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Application * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Application * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Assistant )( 
            _Application * This,
            /* [retval][out] */ /* external definition not present */ Assistant **Assistant);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _Application * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            _Application * This,
            /* [retval][out] */ BSTR *Version);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ActiveExplorer )( 
            _Application * This,
            /* [retval][out] */ _Explorer **ActiveExplorer);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ActiveInspector )( 
            _Application * This,
            /* [retval][out] */ _Inspector **ActiveInspector);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateItem )( 
            _Application * This,
            /* [in] */ OlItemType ItemType,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateItemFromTemplate )( 
            _Application * This,
            /* [in] */ BSTR TemplatePath,
            /* [optional][in] */ VARIANT InFolder,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateObject )( 
            _Application * This,
            /* [in] */ BSTR ObjectName,
            /* [retval][out] */ IDispatch **Object);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetNamespace )( 
            _Application * This,
            /* [in] */ BSTR Type,
            /* [retval][out] */ _NameSpace **NameSpace);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Quit )( 
            _Application * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_COMAddIns )( 
            _Application * This,
            /* [retval][out] */ /* external definition not present */ COMAddIns **COMAddIns);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Explorers )( 
            _Application * This,
            /* [retval][out] */ _Explorers **Explorers);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Inspectors )( 
            _Application * This,
            /* [retval][out] */ _Inspectors **Inspectors);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageSettings )( 
            _Application * This,
            /* [retval][out] */ /* external definition not present */ LanguageSettings **LanguageSettings);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            _Application * This,
            /* [retval][out] */ BSTR *ProductCode);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AnswerWizard )( 
            _Application * This,
            /* [retval][out] */ /* external definition not present */ AnswerWizard **AnswerWizard);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FeatureInstall )( 
            _Application * This,
            /* [retval][out] */ /* external definition not present */ MsoFeatureInstall *FeatureInstall);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FeatureInstall )( 
            _Application * This,
            /* [in] */ /* external definition not present */ MsoFeatureInstall FeatureInstall);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ActiveWindow )( 
            _Application * This,
            /* [retval][out] */ IDispatch **ActiveWindow);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyFile )( 
            _Application * This,
            /* [in] */ BSTR FilePath,
            /* [in] */ BSTR DestFolderPath,
            /* [retval][out] */ IDispatch **DocItem);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AdvancedSearch )( 
            _Application * This,
            /* [in] */ BSTR Scope,
            /* [optional][in] */ VARIANT Filter,
            /* [optional][in] */ VARIANT SearchSubFolders,
            /* [optional][in] */ VARIANT Tag,
            /* [retval][out] */ Search **AdvancedSearch);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsSearchSynchronous )( 
            _Application * This,
            /* [in] */ BSTR LookInFolders,
            /* [retval][out] */ VARIANT_BOOL *IsSearchSynchronous);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *GetNewNickNames )( 
            _Application * This,
            /* [in] */ VARIANT *pvar);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Reminders )( 
            _Application * This,
            /* [retval][out] */ _Reminders **Reminders);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultProfileName )( 
            _Application * This,
            /* [retval][out] */ BSTR *DefaultProfileName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsTrusted )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *IsTrusted);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetObjectReference )( 
            _Application * This,
            /* [in] */ IDispatch *Item,
            /* [in] */ OlReferenceType ReferenceType,
            /* [retval][out] */ IDispatch **NewObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Assistance )( 
            _Application * This,
            /* [retval][out] */ /* external definition not present */ IAssistance **Assistance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TimeZones )( 
            _Application * This,
            /* [retval][out] */ _TimeZones **TimeZones);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PickerDialog )( 
            _Application * This,
            /* [retval][out] */ /* external definition not present */ PickerDialog **PickerDialog);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshFormRegionDefinition )( 
            _Application * This,
            /* [in] */ BSTR RegionName);
        
        END_INTERFACE
    } _ApplicationVtbl;

    interface _Application
    {
        CONST_VTBL struct _ApplicationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Application_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Application_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Application_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Application_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Application_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Application_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Application_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Application_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Application_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Application_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Application_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Application_get_Assistant(This,Assistant)	\
    ( (This)->lpVtbl -> get_Assistant(This,Assistant) ) 

#define _Application_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _Application_get_Version(This,Version)	\
    ( (This)->lpVtbl -> get_Version(This,Version) ) 

#define _Application_ActiveExplorer(This,ActiveExplorer)	\
    ( (This)->lpVtbl -> ActiveExplorer(This,ActiveExplorer) ) 

#define _Application_ActiveInspector(This,ActiveInspector)	\
    ( (This)->lpVtbl -> ActiveInspector(This,ActiveInspector) ) 

#define _Application_CreateItem(This,ItemType,Item)	\
    ( (This)->lpVtbl -> CreateItem(This,ItemType,Item) ) 

#define _Application_CreateItemFromTemplate(This,TemplatePath,InFolder,Item)	\
    ( (This)->lpVtbl -> CreateItemFromTemplate(This,TemplatePath,InFolder,Item) ) 

#define _Application_CreateObject(This,ObjectName,Object)	\
    ( (This)->lpVtbl -> CreateObject(This,ObjectName,Object) ) 

#define _Application_GetNamespace(This,Type,NameSpace)	\
    ( (This)->lpVtbl -> GetNamespace(This,Type,NameSpace) ) 

#define _Application_Quit(This)	\
    ( (This)->lpVtbl -> Quit(This) ) 

#define _Application_get_COMAddIns(This,COMAddIns)	\
    ( (This)->lpVtbl -> get_COMAddIns(This,COMAddIns) ) 

#define _Application_get_Explorers(This,Explorers)	\
    ( (This)->lpVtbl -> get_Explorers(This,Explorers) ) 

#define _Application_get_Inspectors(This,Inspectors)	\
    ( (This)->lpVtbl -> get_Inspectors(This,Inspectors) ) 

#define _Application_get_LanguageSettings(This,LanguageSettings)	\
    ( (This)->lpVtbl -> get_LanguageSettings(This,LanguageSettings) ) 

#define _Application_get_ProductCode(This,ProductCode)	\
    ( (This)->lpVtbl -> get_ProductCode(This,ProductCode) ) 

#define _Application_get_AnswerWizard(This,AnswerWizard)	\
    ( (This)->lpVtbl -> get_AnswerWizard(This,AnswerWizard) ) 

#define _Application_get_FeatureInstall(This,FeatureInstall)	\
    ( (This)->lpVtbl -> get_FeatureInstall(This,FeatureInstall) ) 

#define _Application_put_FeatureInstall(This,FeatureInstall)	\
    ( (This)->lpVtbl -> put_FeatureInstall(This,FeatureInstall) ) 

#define _Application_ActiveWindow(This,ActiveWindow)	\
    ( (This)->lpVtbl -> ActiveWindow(This,ActiveWindow) ) 

#define _Application_CopyFile(This,FilePath,DestFolderPath,DocItem)	\
    ( (This)->lpVtbl -> CopyFile(This,FilePath,DestFolderPath,DocItem) ) 

#define _Application_AdvancedSearch(This,Scope,Filter,SearchSubFolders,Tag,AdvancedSearch)	\
    ( (This)->lpVtbl -> AdvancedSearch(This,Scope,Filter,SearchSubFolders,Tag,AdvancedSearch) ) 

#define _Application_IsSearchSynchronous(This,LookInFolders,IsSearchSynchronous)	\
    ( (This)->lpVtbl -> IsSearchSynchronous(This,LookInFolders,IsSearchSynchronous) ) 

#define _Application_GetNewNickNames(This,pvar)	\
    ( (This)->lpVtbl -> GetNewNickNames(This,pvar) ) 

#define _Application_get_Reminders(This,Reminders)	\
    ( (This)->lpVtbl -> get_Reminders(This,Reminders) ) 

#define _Application_get_DefaultProfileName(This,DefaultProfileName)	\
    ( (This)->lpVtbl -> get_DefaultProfileName(This,DefaultProfileName) ) 

#define _Application_get_IsTrusted(This,IsTrusted)	\
    ( (This)->lpVtbl -> get_IsTrusted(This,IsTrusted) ) 

#define _Application_GetObjectReference(This,Item,ReferenceType,NewObject)	\
    ( (This)->lpVtbl -> GetObjectReference(This,Item,ReferenceType,NewObject) ) 

#define _Application_get_Assistance(This,Assistance)	\
    ( (This)->lpVtbl -> get_Assistance(This,Assistance) ) 

#define _Application_get_TimeZones(This,TimeZones)	\
    ( (This)->lpVtbl -> get_TimeZones(This,TimeZones) ) 

#define _Application_get_PickerDialog(This,PickerDialog)	\
    ( (This)->lpVtbl -> get_PickerDialog(This,PickerDialog) ) 

#define _Application_RefreshFormRegionDefinition(This,RegionName)	\
    ( (This)->lpVtbl -> RefreshFormRegionDefinition(This,RegionName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Application_INTERFACE_DEFINED__ */


#ifndef ___NameSpace_INTERFACE_DEFINED__
#define ___NameSpace_INTERFACE_DEFINED__

/* interface _NameSpace */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NameSpace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063002-0000-0000-C000-000000000046")
    _NameSpace : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentUser( 
            /* [retval][out] */ Recipient **CurrentUser) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Folders( 
            /* [retval][out] */ _Folders **Folders) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR *Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressLists( 
            /* [retval][out] */ AddressLists **AddressLists) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateRecipient( 
            /* [in] */ BSTR RecipientName,
            /* [retval][out] */ Recipient **Recipient) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetDefaultFolder( 
            /* [in] */ OlDefaultFolders FolderType,
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFolderFromID( 
            /* [in] */ BSTR EntryIDFolder,
            /* [optional][in] */ VARIANT EntryIDStore,
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetItemFromID( 
            /* [in] */ BSTR EntryIDItem,
            /* [optional][in] */ VARIANT EntryIDStore,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRecipientFromID( 
            /* [in] */ BSTR EntryID,
            /* [retval][out] */ Recipient **Recipient) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSharedDefaultFolder( 
            /* [in] */ Recipient *Recipient,
            /* [in] */ OlDefaultFolders FolderType,
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Logoff( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Logon( 
            /* [optional][in] */ VARIANT Profile,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT ShowDialog,
            /* [optional][in] */ VARIANT NewSession) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PickFolder( 
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE RefreshRemoteHeaders( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SyncObjects( 
            /* [retval][out] */ SyncObjects **SyncObjects) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddStore( 
            /* [in] */ VARIANT Store) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveStore( 
            /* [in] */ MAPIFolder *Folder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Offline( 
            /* [retval][out] */ VARIANT_BOOL *Offline) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Dial( 
            /* [optional][in] */ VARIANT ContactItem) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExchangeConnectionMode( 
            /* [retval][out] */ OlExchangeConnectionMode *ExchangeConnectionMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddStoreEx( 
            /* [in] */ VARIANT Store,
            /* [in] */ OlStoreType Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Accounts( 
            /* [retval][out] */ _Accounts **Accounts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentProfileName( 
            /* [retval][out] */ BSTR *CurrentProfileName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Stores( 
            /* [retval][out] */ _Stores **Stores) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSelectNamesDialog( 
            /* [retval][out] */ _SelectNamesDialog **SelectNamesDialog) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SendAndReceive( 
            /* [in] */ VARIANT_BOOL showProgressDialog) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultStore( 
            /* [retval][out] */ _Store **DefaultStore) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAddressEntryFromID( 
            /* [in] */ BSTR ID,
            /* [retval][out] */ AddressEntry **AddressEntry) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetGlobalAddressList( 
            /* [retval][out] */ AddressList **globalAddressList) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStoreFromID( 
            /* [in] */ BSTR ID,
            /* [retval][out] */ _Store **Store) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ _Categories **Categories) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenSharedFolder( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT DownloadAttachments,
            /* [optional][in] */ VARIANT UseTTL,
            /* [retval][out] */ MAPIFolder **ret) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenSharedItem( 
            /* [in] */ BSTR Path,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateSharingItem( 
            /* [in] */ VARIANT Context,
            /* [optional][in] */ VARIANT Provider,
            /* [retval][out] */ _SharingItem **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExchangeMailboxServerName( 
            /* [retval][out] */ BSTR *ExchangeMailboxServerName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExchangeMailboxServerVersion( 
            /* [retval][out] */ BSTR *ExchangeMailboxServerVersion) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CompareEntryIDs( 
            /* [in] */ BSTR FirstEntryID,
            /* [in] */ BSTR SecondEntryID,
            /* [retval][out] */ VARIANT_BOOL *Result) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoDiscoverXml( 
            /* [retval][out] */ BSTR *AutoDiscoverXml) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoDiscoverConnectionMode( 
            /* [retval][out] */ OlAutoDiscoverConnectionMode *AutoDiscoverConnectionMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateContactCard( 
            /* [in] */ AddressEntry *AddressEntry,
            /* [retval][out] */ /* external definition not present */ ContactCard **Card) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NameSpaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NameSpace * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NameSpace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NameSpace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NameSpace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NameSpace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NameSpace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NameSpace * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NameSpace * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NameSpace * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NameSpace * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NameSpace * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentUser )( 
            _NameSpace * This,
            /* [retval][out] */ Recipient **CurrentUser);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Folders )( 
            _NameSpace * This,
            /* [retval][out] */ _Folders **Folders);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _NameSpace * This,
            /* [retval][out] */ BSTR *Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressLists )( 
            _NameSpace * This,
            /* [retval][out] */ AddressLists **AddressLists);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateRecipient )( 
            _NameSpace * This,
            /* [in] */ BSTR RecipientName,
            /* [retval][out] */ Recipient **Recipient);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetDefaultFolder )( 
            _NameSpace * This,
            /* [in] */ OlDefaultFolders FolderType,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFolderFromID )( 
            _NameSpace * This,
            /* [in] */ BSTR EntryIDFolder,
            /* [optional][in] */ VARIANT EntryIDStore,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetItemFromID )( 
            _NameSpace * This,
            /* [in] */ BSTR EntryIDItem,
            /* [optional][in] */ VARIANT EntryIDStore,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRecipientFromID )( 
            _NameSpace * This,
            /* [in] */ BSTR EntryID,
            /* [retval][out] */ Recipient **Recipient);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSharedDefaultFolder )( 
            _NameSpace * This,
            /* [in] */ Recipient *Recipient,
            /* [in] */ OlDefaultFolders FolderType,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Logoff )( 
            _NameSpace * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Logon )( 
            _NameSpace * This,
            /* [optional][in] */ VARIANT Profile,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT ShowDialog,
            /* [optional][in] */ VARIANT NewSession);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PickFolder )( 
            _NameSpace * This,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshRemoteHeaders )( 
            _NameSpace * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SyncObjects )( 
            _NameSpace * This,
            /* [retval][out] */ SyncObjects **SyncObjects);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddStore )( 
            _NameSpace * This,
            /* [in] */ VARIANT Store);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveStore )( 
            _NameSpace * This,
            /* [in] */ MAPIFolder *Folder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Offline )( 
            _NameSpace * This,
            /* [retval][out] */ VARIANT_BOOL *Offline);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Dial )( 
            _NameSpace * This,
            /* [optional][in] */ VARIANT ContactItem);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _NameSpace * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExchangeConnectionMode )( 
            _NameSpace * This,
            /* [retval][out] */ OlExchangeConnectionMode *ExchangeConnectionMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddStoreEx )( 
            _NameSpace * This,
            /* [in] */ VARIANT Store,
            /* [in] */ OlStoreType Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Accounts )( 
            _NameSpace * This,
            /* [retval][out] */ _Accounts **Accounts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentProfileName )( 
            _NameSpace * This,
            /* [retval][out] */ BSTR *CurrentProfileName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Stores )( 
            _NameSpace * This,
            /* [retval][out] */ _Stores **Stores);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSelectNamesDialog )( 
            _NameSpace * This,
            /* [retval][out] */ _SelectNamesDialog **SelectNamesDialog);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SendAndReceive )( 
            _NameSpace * This,
            /* [in] */ VARIANT_BOOL showProgressDialog);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultStore )( 
            _NameSpace * This,
            /* [retval][out] */ _Store **DefaultStore);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAddressEntryFromID )( 
            _NameSpace * This,
            /* [in] */ BSTR ID,
            /* [retval][out] */ AddressEntry **AddressEntry);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetGlobalAddressList )( 
            _NameSpace * This,
            /* [retval][out] */ AddressList **globalAddressList);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStoreFromID )( 
            _NameSpace * This,
            /* [in] */ BSTR ID,
            /* [retval][out] */ _Store **Store);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _NameSpace * This,
            /* [retval][out] */ _Categories **Categories);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenSharedFolder )( 
            _NameSpace * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT DownloadAttachments,
            /* [optional][in] */ VARIANT UseTTL,
            /* [retval][out] */ MAPIFolder **ret);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenSharedItem )( 
            _NameSpace * This,
            /* [in] */ BSTR Path,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateSharingItem )( 
            _NameSpace * This,
            /* [in] */ VARIANT Context,
            /* [optional][in] */ VARIANT Provider,
            /* [retval][out] */ _SharingItem **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExchangeMailboxServerName )( 
            _NameSpace * This,
            /* [retval][out] */ BSTR *ExchangeMailboxServerName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExchangeMailboxServerVersion )( 
            _NameSpace * This,
            /* [retval][out] */ BSTR *ExchangeMailboxServerVersion);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CompareEntryIDs )( 
            _NameSpace * This,
            /* [in] */ BSTR FirstEntryID,
            /* [in] */ BSTR SecondEntryID,
            /* [retval][out] */ VARIANT_BOOL *Result);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoDiscoverXml )( 
            _NameSpace * This,
            /* [retval][out] */ BSTR *AutoDiscoverXml);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoDiscoverConnectionMode )( 
            _NameSpace * This,
            /* [retval][out] */ OlAutoDiscoverConnectionMode *AutoDiscoverConnectionMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateContactCard )( 
            _NameSpace * This,
            /* [in] */ AddressEntry *AddressEntry,
            /* [retval][out] */ /* external definition not present */ ContactCard **Card);
        
        END_INTERFACE
    } _NameSpaceVtbl;

    interface _NameSpace
    {
        CONST_VTBL struct _NameSpaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NameSpace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NameSpace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NameSpace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NameSpace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NameSpace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NameSpace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NameSpace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NameSpace_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NameSpace_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NameSpace_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NameSpace_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NameSpace_get_CurrentUser(This,CurrentUser)	\
    ( (This)->lpVtbl -> get_CurrentUser(This,CurrentUser) ) 

#define _NameSpace_get_Folders(This,Folders)	\
    ( (This)->lpVtbl -> get_Folders(This,Folders) ) 

#define _NameSpace_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define _NameSpace_get_AddressLists(This,AddressLists)	\
    ( (This)->lpVtbl -> get_AddressLists(This,AddressLists) ) 

#define _NameSpace_CreateRecipient(This,RecipientName,Recipient)	\
    ( (This)->lpVtbl -> CreateRecipient(This,RecipientName,Recipient) ) 

#define _NameSpace_GetDefaultFolder(This,FolderType,Folder)	\
    ( (This)->lpVtbl -> GetDefaultFolder(This,FolderType,Folder) ) 

#define _NameSpace_GetFolderFromID(This,EntryIDFolder,EntryIDStore,Folder)	\
    ( (This)->lpVtbl -> GetFolderFromID(This,EntryIDFolder,EntryIDStore,Folder) ) 

#define _NameSpace_GetItemFromID(This,EntryIDItem,EntryIDStore,Item)	\
    ( (This)->lpVtbl -> GetItemFromID(This,EntryIDItem,EntryIDStore,Item) ) 

#define _NameSpace_GetRecipientFromID(This,EntryID,Recipient)	\
    ( (This)->lpVtbl -> GetRecipientFromID(This,EntryID,Recipient) ) 

#define _NameSpace_GetSharedDefaultFolder(This,Recipient,FolderType,Folder)	\
    ( (This)->lpVtbl -> GetSharedDefaultFolder(This,Recipient,FolderType,Folder) ) 

#define _NameSpace_Logoff(This)	\
    ( (This)->lpVtbl -> Logoff(This) ) 

#define _NameSpace_Logon(This,Profile,Password,ShowDialog,NewSession)	\
    ( (This)->lpVtbl -> Logon(This,Profile,Password,ShowDialog,NewSession) ) 

#define _NameSpace_PickFolder(This,Folder)	\
    ( (This)->lpVtbl -> PickFolder(This,Folder) ) 

#define _NameSpace_RefreshRemoteHeaders(This)	\
    ( (This)->lpVtbl -> RefreshRemoteHeaders(This) ) 

#define _NameSpace_get_SyncObjects(This,SyncObjects)	\
    ( (This)->lpVtbl -> get_SyncObjects(This,SyncObjects) ) 

#define _NameSpace_AddStore(This,Store)	\
    ( (This)->lpVtbl -> AddStore(This,Store) ) 

#define _NameSpace_RemoveStore(This,Folder)	\
    ( (This)->lpVtbl -> RemoveStore(This,Folder) ) 

#define _NameSpace_get_Offline(This,Offline)	\
    ( (This)->lpVtbl -> get_Offline(This,Offline) ) 

#define _NameSpace_Dial(This,ContactItem)	\
    ( (This)->lpVtbl -> Dial(This,ContactItem) ) 

#define _NameSpace_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _NameSpace_get_ExchangeConnectionMode(This,ExchangeConnectionMode)	\
    ( (This)->lpVtbl -> get_ExchangeConnectionMode(This,ExchangeConnectionMode) ) 

#define _NameSpace_AddStoreEx(This,Store,Type)	\
    ( (This)->lpVtbl -> AddStoreEx(This,Store,Type) ) 

#define _NameSpace_get_Accounts(This,Accounts)	\
    ( (This)->lpVtbl -> get_Accounts(This,Accounts) ) 

#define _NameSpace_get_CurrentProfileName(This,CurrentProfileName)	\
    ( (This)->lpVtbl -> get_CurrentProfileName(This,CurrentProfileName) ) 

#define _NameSpace_get_Stores(This,Stores)	\
    ( (This)->lpVtbl -> get_Stores(This,Stores) ) 

#define _NameSpace_GetSelectNamesDialog(This,SelectNamesDialog)	\
    ( (This)->lpVtbl -> GetSelectNamesDialog(This,SelectNamesDialog) ) 

#define _NameSpace_SendAndReceive(This,showProgressDialog)	\
    ( (This)->lpVtbl -> SendAndReceive(This,showProgressDialog) ) 

#define _NameSpace_get_DefaultStore(This,DefaultStore)	\
    ( (This)->lpVtbl -> get_DefaultStore(This,DefaultStore) ) 

#define _NameSpace_GetAddressEntryFromID(This,ID,AddressEntry)	\
    ( (This)->lpVtbl -> GetAddressEntryFromID(This,ID,AddressEntry) ) 

#define _NameSpace_GetGlobalAddressList(This,globalAddressList)	\
    ( (This)->lpVtbl -> GetGlobalAddressList(This,globalAddressList) ) 

#define _NameSpace_GetStoreFromID(This,ID,Store)	\
    ( (This)->lpVtbl -> GetStoreFromID(This,ID,Store) ) 

#define _NameSpace_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _NameSpace_OpenSharedFolder(This,Path,Name,DownloadAttachments,UseTTL,ret)	\
    ( (This)->lpVtbl -> OpenSharedFolder(This,Path,Name,DownloadAttachments,UseTTL,ret) ) 

#define _NameSpace_OpenSharedItem(This,Path,Item)	\
    ( (This)->lpVtbl -> OpenSharedItem(This,Path,Item) ) 

#define _NameSpace_CreateSharingItem(This,Context,Provider,Item)	\
    ( (This)->lpVtbl -> CreateSharingItem(This,Context,Provider,Item) ) 

#define _NameSpace_get_ExchangeMailboxServerName(This,ExchangeMailboxServerName)	\
    ( (This)->lpVtbl -> get_ExchangeMailboxServerName(This,ExchangeMailboxServerName) ) 

#define _NameSpace_get_ExchangeMailboxServerVersion(This,ExchangeMailboxServerVersion)	\
    ( (This)->lpVtbl -> get_ExchangeMailboxServerVersion(This,ExchangeMailboxServerVersion) ) 

#define _NameSpace_CompareEntryIDs(This,FirstEntryID,SecondEntryID,Result)	\
    ( (This)->lpVtbl -> CompareEntryIDs(This,FirstEntryID,SecondEntryID,Result) ) 

#define _NameSpace_get_AutoDiscoverXml(This,AutoDiscoverXml)	\
    ( (This)->lpVtbl -> get_AutoDiscoverXml(This,AutoDiscoverXml) ) 

#define _NameSpace_get_AutoDiscoverConnectionMode(This,AutoDiscoverConnectionMode)	\
    ( (This)->lpVtbl -> get_AutoDiscoverConnectionMode(This,AutoDiscoverConnectionMode) ) 

#define _NameSpace_CreateContactCard(This,AddressEntry,Card)	\
    ( (This)->lpVtbl -> CreateContactCard(This,AddressEntry,Card) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NameSpace_INTERFACE_DEFINED__ */


#ifndef __Recipient_INTERFACE_DEFINED__
#define __Recipient_INTERFACE_DEFINED__

/* interface Recipient */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Recipient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063045-0000-0000-C000-000000000046")
    Recipient : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Address( 
            /* [retval][out] */ BSTR *Address) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressEntry( 
            /* [retval][out] */ AddressEntry **AddressEntry) = 0;
        
        virtual /* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_AddressEntry( 
            /* [in] */ AddressEntry *AddressEntry) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResponse( 
            /* [retval][out] */ BSTR *AutoResponse) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoResponse( 
            /* [in] */ BSTR AutoResponse) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayType( 
            /* [retval][out] */ OlDisplayType *DisplayType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MeetingResponseStatus( 
            /* [retval][out] */ OlResponseStatus *MeetingResponseStatus) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Resolved( 
            /* [retval][out] */ VARIANT_BOOL *Resolved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TrackingStatus( 
            /* [retval][out] */ OlTrackingStatus *TrackingStatus) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TrackingStatus( 
            /* [in] */ OlTrackingStatus TrackingStatus) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TrackingStatusTime( 
            /* [retval][out] */ DATE *TrackingStatusTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TrackingStatusTime( 
            /* [in] */ DATE TrackingStatusTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ long *Type) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ long Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FreeBusy( 
            /* [in] */ DATE Start,
            /* [in] */ long MinPerChar,
            /* [optional][in] */ VARIANT CompleteFormat,
            /* [retval][out] */ BSTR *FreeBusyInfo) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Resolve( 
            /* [retval][out] */ VARIANT_BOOL *Success) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sendable( 
            /* [retval][out] */ VARIANT_BOOL *Sendable) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sendable( 
            /* [in] */ VARIANT_BOOL Sendable) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct RecipientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Recipient * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Recipient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Recipient * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Recipient * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Recipient * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Recipient * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Recipient * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Recipient * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Recipient * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Recipient * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Recipient * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Address )( 
            Recipient * This,
            /* [retval][out] */ BSTR *Address);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressEntry )( 
            Recipient * This,
            /* [retval][out] */ AddressEntry **AddressEntry);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_AddressEntry )( 
            Recipient * This,
            /* [in] */ AddressEntry *AddressEntry);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResponse )( 
            Recipient * This,
            /* [retval][out] */ BSTR *AutoResponse);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoResponse )( 
            Recipient * This,
            /* [in] */ BSTR AutoResponse);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayType )( 
            Recipient * This,
            /* [retval][out] */ OlDisplayType *DisplayType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            Recipient * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            Recipient * This,
            /* [retval][out] */ long *Index);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MeetingResponseStatus )( 
            Recipient * This,
            /* [retval][out] */ OlResponseStatus *MeetingResponseStatus);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Recipient * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Resolved )( 
            Recipient * This,
            /* [retval][out] */ VARIANT_BOOL *Resolved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingStatus )( 
            Recipient * This,
            /* [retval][out] */ OlTrackingStatus *TrackingStatus);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrackingStatus )( 
            Recipient * This,
            /* [in] */ OlTrackingStatus TrackingStatus);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingStatusTime )( 
            Recipient * This,
            /* [retval][out] */ DATE *TrackingStatusTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrackingStatusTime )( 
            Recipient * This,
            /* [in] */ DATE TrackingStatusTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Recipient * This,
            /* [retval][out] */ long *Type);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            Recipient * This,
            /* [in] */ long Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Recipient * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FreeBusy )( 
            Recipient * This,
            /* [in] */ DATE Start,
            /* [in] */ long MinPerChar,
            /* [optional][in] */ VARIANT CompleteFormat,
            /* [retval][out] */ BSTR *FreeBusyInfo);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Resolve )( 
            Recipient * This,
            /* [retval][out] */ VARIANT_BOOL *Success);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            Recipient * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sendable )( 
            Recipient * This,
            /* [retval][out] */ VARIANT_BOOL *Sendable);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sendable )( 
            Recipient * This,
            /* [in] */ VARIANT_BOOL Sendable);
        
        END_INTERFACE
    } RecipientVtbl;

    interface Recipient
    {
        CONST_VTBL struct RecipientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Recipient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Recipient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Recipient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Recipient_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Recipient_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Recipient_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Recipient_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Recipient_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Recipient_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Recipient_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Recipient_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Recipient_get_Address(This,Address)	\
    ( (This)->lpVtbl -> get_Address(This,Address) ) 

#define Recipient_get_AddressEntry(This,AddressEntry)	\
    ( (This)->lpVtbl -> get_AddressEntry(This,AddressEntry) ) 

#define Recipient_putref_AddressEntry(This,AddressEntry)	\
    ( (This)->lpVtbl -> putref_AddressEntry(This,AddressEntry) ) 

#define Recipient_get_AutoResponse(This,AutoResponse)	\
    ( (This)->lpVtbl -> get_AutoResponse(This,AutoResponse) ) 

#define Recipient_put_AutoResponse(This,AutoResponse)	\
    ( (This)->lpVtbl -> put_AutoResponse(This,AutoResponse) ) 

#define Recipient_get_DisplayType(This,DisplayType)	\
    ( (This)->lpVtbl -> get_DisplayType(This,DisplayType) ) 

#define Recipient_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define Recipient_get_Index(This,Index)	\
    ( (This)->lpVtbl -> get_Index(This,Index) ) 

#define Recipient_get_MeetingResponseStatus(This,MeetingResponseStatus)	\
    ( (This)->lpVtbl -> get_MeetingResponseStatus(This,MeetingResponseStatus) ) 

#define Recipient_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Recipient_get_Resolved(This,Resolved)	\
    ( (This)->lpVtbl -> get_Resolved(This,Resolved) ) 

#define Recipient_get_TrackingStatus(This,TrackingStatus)	\
    ( (This)->lpVtbl -> get_TrackingStatus(This,TrackingStatus) ) 

#define Recipient_put_TrackingStatus(This,TrackingStatus)	\
    ( (This)->lpVtbl -> put_TrackingStatus(This,TrackingStatus) ) 

#define Recipient_get_TrackingStatusTime(This,TrackingStatusTime)	\
    ( (This)->lpVtbl -> get_TrackingStatusTime(This,TrackingStatusTime) ) 

#define Recipient_put_TrackingStatusTime(This,TrackingStatusTime)	\
    ( (This)->lpVtbl -> put_TrackingStatusTime(This,TrackingStatusTime) ) 

#define Recipient_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define Recipient_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define Recipient_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define Recipient_FreeBusy(This,Start,MinPerChar,CompleteFormat,FreeBusyInfo)	\
    ( (This)->lpVtbl -> FreeBusy(This,Start,MinPerChar,CompleteFormat,FreeBusyInfo) ) 

#define Recipient_Resolve(This,Success)	\
    ( (This)->lpVtbl -> Resolve(This,Success) ) 

#define Recipient_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define Recipient_get_Sendable(This,Sendable)	\
    ( (This)->lpVtbl -> get_Sendable(This,Sendable) ) 

#define Recipient_put_Sendable(This,Sendable)	\
    ( (This)->lpVtbl -> put_Sendable(This,Sendable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Recipient_INTERFACE_DEFINED__ */


#ifndef __AddressEntry_INTERFACE_DEFINED__
#define __AddressEntry_INTERFACE_DEFINED__

/* interface AddressEntry */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_AddressEntry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006304B-0000-0000-C000-000000000046")
    AddressEntry : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Address( 
            /* [retval][out] */ BSTR *Address) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Address( 
            /* [in] */ BSTR Address) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayType( 
            /* [retval][out] */ OlDisplayType *DisplayType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ BSTR *ID) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Manager( 
            /* [retval][out] */ AddressEntry **Manager) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_MAPIOBJECT( 
            /* [in] */ IUnknown *MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ AddressEntries **Members) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR *Type) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ BSTR Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Details( 
            /* [optional][in] */ VARIANT HWnd) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFreeBusy( 
            /* [in] */ DATE Start,
            /* [in] */ long MinPerChar,
            /* [optional][in] */ VARIANT CompleteFormat,
            /* [retval][out] */ BSTR *FreeBusyInfo) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Update( 
            /* [optional][in] */ VARIANT MakePermanent,
            /* [optional][in] */ VARIANT Refresh) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE UpdateFreeBusy( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetContact( 
            /* [retval][out] */ _ContactItem **ret) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExchangeUser( 
            /* [retval][out] */ _ExchangeUser **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressEntryUserType( 
            /* [retval][out] */ OlAddressEntryUserType *AddressEntryUserType) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExchangeDistributionList( 
            /* [retval][out] */ _ExchangeDistributionList **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct AddressEntryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AddressEntry * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AddressEntry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AddressEntry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AddressEntry * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AddressEntry * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AddressEntry * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AddressEntry * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            AddressEntry * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            AddressEntry * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            AddressEntry * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            AddressEntry * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Address )( 
            AddressEntry * This,
            /* [retval][out] */ BSTR *Address);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Address )( 
            AddressEntry * This,
            /* [in] */ BSTR Address);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayType )( 
            AddressEntry * This,
            /* [retval][out] */ OlDisplayType *DisplayType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            AddressEntry * This,
            /* [retval][out] */ BSTR *ID);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Manager )( 
            AddressEntry * This,
            /* [retval][out] */ AddressEntry **Manager);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            AddressEntry * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MAPIOBJECT )( 
            AddressEntry * This,
            /* [in] */ IUnknown *MAPIOBJECT);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            AddressEntry * This,
            /* [retval][out] */ AddressEntries **Members);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            AddressEntry * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            AddressEntry * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            AddressEntry * This,
            /* [retval][out] */ BSTR *Type);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            AddressEntry * This,
            /* [in] */ BSTR Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            AddressEntry * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Details )( 
            AddressEntry * This,
            /* [optional][in] */ VARIANT HWnd);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFreeBusy )( 
            AddressEntry * This,
            /* [in] */ DATE Start,
            /* [in] */ long MinPerChar,
            /* [optional][in] */ VARIANT CompleteFormat,
            /* [retval][out] */ BSTR *FreeBusyInfo);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            AddressEntry * This,
            /* [optional][in] */ VARIANT MakePermanent,
            /* [optional][in] */ VARIANT Refresh);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateFreeBusy )( 
            AddressEntry * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetContact )( 
            AddressEntry * This,
            /* [retval][out] */ _ContactItem **ret);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExchangeUser )( 
            AddressEntry * This,
            /* [retval][out] */ _ExchangeUser **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressEntryUserType )( 
            AddressEntry * This,
            /* [retval][out] */ OlAddressEntryUserType *AddressEntryUserType);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExchangeDistributionList )( 
            AddressEntry * This,
            /* [retval][out] */ _ExchangeDistributionList **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            AddressEntry * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        END_INTERFACE
    } AddressEntryVtbl;

    interface AddressEntry
    {
        CONST_VTBL struct AddressEntryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AddressEntry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AddressEntry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AddressEntry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AddressEntry_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AddressEntry_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AddressEntry_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AddressEntry_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define AddressEntry_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define AddressEntry_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define AddressEntry_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define AddressEntry_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define AddressEntry_get_Address(This,Address)	\
    ( (This)->lpVtbl -> get_Address(This,Address) ) 

#define AddressEntry_put_Address(This,Address)	\
    ( (This)->lpVtbl -> put_Address(This,Address) ) 

#define AddressEntry_get_DisplayType(This,DisplayType)	\
    ( (This)->lpVtbl -> get_DisplayType(This,DisplayType) ) 

#define AddressEntry_get_ID(This,ID)	\
    ( (This)->lpVtbl -> get_ID(This,ID) ) 

#define AddressEntry_get_Manager(This,Manager)	\
    ( (This)->lpVtbl -> get_Manager(This,Manager) ) 

#define AddressEntry_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define AddressEntry_put_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> put_MAPIOBJECT(This,MAPIOBJECT) ) 

#define AddressEntry_get_Members(This,Members)	\
    ( (This)->lpVtbl -> get_Members(This,Members) ) 

#define AddressEntry_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define AddressEntry_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define AddressEntry_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define AddressEntry_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define AddressEntry_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define AddressEntry_Details(This,HWnd)	\
    ( (This)->lpVtbl -> Details(This,HWnd) ) 

#define AddressEntry_GetFreeBusy(This,Start,MinPerChar,CompleteFormat,FreeBusyInfo)	\
    ( (This)->lpVtbl -> GetFreeBusy(This,Start,MinPerChar,CompleteFormat,FreeBusyInfo) ) 

#define AddressEntry_Update(This,MakePermanent,Refresh)	\
    ( (This)->lpVtbl -> Update(This,MakePermanent,Refresh) ) 

#define AddressEntry_UpdateFreeBusy(This)	\
    ( (This)->lpVtbl -> UpdateFreeBusy(This) ) 

#define AddressEntry_GetContact(This,ret)	\
    ( (This)->lpVtbl -> GetContact(This,ret) ) 

#define AddressEntry_GetExchangeUser(This,ret)	\
    ( (This)->lpVtbl -> GetExchangeUser(This,ret) ) 

#define AddressEntry_get_AddressEntryUserType(This,AddressEntryUserType)	\
    ( (This)->lpVtbl -> get_AddressEntryUserType(This,AddressEntryUserType) ) 

#define AddressEntry_GetExchangeDistributionList(This,ret)	\
    ( (This)->lpVtbl -> GetExchangeDistributionList(This,ret) ) 

#define AddressEntry_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __AddressEntry_INTERFACE_DEFINED__ */


#ifndef __AddressEntries_INTERFACE_DEFINED__
#define __AddressEntries_INTERFACE_DEFINED__

/* interface AddressEntries */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_AddressEntries;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006304A-0000-0000-C000-000000000046")
    AddressEntries : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ AddressEntry **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_RawTable( 
            /* [retval][out] */ IUnknown **RawTable) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Type,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Address,
            /* [retval][out] */ AddressEntry **Entry) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFirst( 
            /* [retval][out] */ AddressEntry **AddressEntry) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetLast( 
            /* [retval][out] */ AddressEntry **AddressEntry) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetNext( 
            /* [retval][out] */ AddressEntry **AddressEntry) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetPrevious( 
            /* [retval][out] */ AddressEntry **AddressEntry) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Sort( 
            /* [optional][in] */ VARIANT Property,
            /* [optional][in] */ VARIANT Order) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct AddressEntriesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AddressEntries * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AddressEntries * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AddressEntries * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AddressEntries * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AddressEntries * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AddressEntries * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AddressEntries * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            AddressEntries * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            AddressEntries * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            AddressEntries * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            AddressEntries * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            AddressEntries * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            AddressEntries * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ AddressEntry **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RawTable )( 
            AddressEntries * This,
            /* [retval][out] */ IUnknown **RawTable);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            AddressEntries * This,
            /* [in] */ BSTR Type,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Address,
            /* [retval][out] */ AddressEntry **Entry);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFirst )( 
            AddressEntries * This,
            /* [retval][out] */ AddressEntry **AddressEntry);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetLast )( 
            AddressEntries * This,
            /* [retval][out] */ AddressEntry **AddressEntry);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetNext )( 
            AddressEntries * This,
            /* [retval][out] */ AddressEntry **AddressEntry);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetPrevious )( 
            AddressEntries * This,
            /* [retval][out] */ AddressEntry **AddressEntry);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Sort )( 
            AddressEntries * This,
            /* [optional][in] */ VARIANT Property,
            /* [optional][in] */ VARIANT Order);
        
        END_INTERFACE
    } AddressEntriesVtbl;

    interface AddressEntries
    {
        CONST_VTBL struct AddressEntriesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AddressEntries_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AddressEntries_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AddressEntries_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AddressEntries_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AddressEntries_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AddressEntries_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AddressEntries_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define AddressEntries_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define AddressEntries_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define AddressEntries_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define AddressEntries_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define AddressEntries_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define AddressEntries_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define AddressEntries_get_RawTable(This,RawTable)	\
    ( (This)->lpVtbl -> get_RawTable(This,RawTable) ) 

#define AddressEntries_Add(This,Type,Name,Address,Entry)	\
    ( (This)->lpVtbl -> Add(This,Type,Name,Address,Entry) ) 

#define AddressEntries_GetFirst(This,AddressEntry)	\
    ( (This)->lpVtbl -> GetFirst(This,AddressEntry) ) 

#define AddressEntries_GetLast(This,AddressEntry)	\
    ( (This)->lpVtbl -> GetLast(This,AddressEntry) ) 

#define AddressEntries_GetNext(This,AddressEntry)	\
    ( (This)->lpVtbl -> GetNext(This,AddressEntry) ) 

#define AddressEntries_GetPrevious(This,AddressEntry)	\
    ( (This)->lpVtbl -> GetPrevious(This,AddressEntry) ) 

#define AddressEntries_Sort(This,Property,Order)	\
    ( (This)->lpVtbl -> Sort(This,Property,Order) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __AddressEntries_INTERFACE_DEFINED__ */


#ifndef ___ContactItem_INTERFACE_DEFINED__
#define ___ContactItem_INTERFACE_DEFINED__

/* interface _ContactItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ContactItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063021-0000-0000-C000-000000000046")
    _ContactItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Account( 
            /* [retval][out] */ BSTR *Account) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Account( 
            /* [in] */ BSTR Account) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Anniversary( 
            /* [retval][out] */ DATE *Anniversary) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Anniversary( 
            /* [in] */ DATE Anniversary) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AssistantName( 
            /* [retval][out] */ BSTR *AssistantName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AssistantName( 
            /* [in] */ BSTR AssistantName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AssistantTelephoneNumber( 
            /* [retval][out] */ BSTR *AssistantTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AssistantTelephoneNumber( 
            /* [in] */ BSTR AssistantTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Birthday( 
            /* [retval][out] */ DATE *Birthday) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Birthday( 
            /* [in] */ DATE Birthday) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Business2TelephoneNumber( 
            /* [retval][out] */ BSTR *Business2TelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Business2TelephoneNumber( 
            /* [in] */ BSTR Business2TelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessAddress( 
            /* [retval][out] */ BSTR *BusinessAddress) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessAddress( 
            /* [in] */ BSTR BusinessAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessAddressCity( 
            /* [retval][out] */ BSTR *BusinessAddressCity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessAddressCity( 
            /* [in] */ BSTR BusinessAddressCity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessAddressCountry( 
            /* [retval][out] */ BSTR *BusinessAddressCountry) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessAddressCountry( 
            /* [in] */ BSTR BusinessAddressCountry) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessAddressPostalCode( 
            /* [retval][out] */ BSTR *BusinessAddressPostalCode) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessAddressPostalCode( 
            /* [in] */ BSTR BusinessAddressPostalCode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessAddressPostOfficeBox( 
            /* [retval][out] */ BSTR *BusinessAddressPostOfficeBox) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessAddressPostOfficeBox( 
            /* [in] */ BSTR BusinessAddressPostOfficeBox) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessAddressState( 
            /* [retval][out] */ BSTR *BusinessAddressState) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessAddressState( 
            /* [in] */ BSTR BusinessAddressState) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessAddressStreet( 
            /* [retval][out] */ BSTR *BusinessAddressStreet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessAddressStreet( 
            /* [in] */ BSTR BusinessAddressStreet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessFaxNumber( 
            /* [retval][out] */ BSTR *BusinessFaxNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessFaxNumber( 
            /* [in] */ BSTR BusinessFaxNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessHomePage( 
            /* [retval][out] */ BSTR *BusinessHomePage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessHomePage( 
            /* [in] */ BSTR BusinessHomePage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessTelephoneNumber( 
            /* [retval][out] */ BSTR *BusinessTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessTelephoneNumber( 
            /* [in] */ BSTR BusinessTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CallbackTelephoneNumber( 
            /* [retval][out] */ BSTR *CallbackTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CallbackTelephoneNumber( 
            /* [in] */ BSTR CallbackTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CarTelephoneNumber( 
            /* [retval][out] */ BSTR *CarTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CarTelephoneNumber( 
            /* [in] */ BSTR CarTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Children( 
            /* [retval][out] */ BSTR *Children) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Children( 
            /* [in] */ BSTR Children) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CompanyAndFullName( 
            /* [retval][out] */ BSTR *CompanyAndFullName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CompanyLastFirstNoSpace( 
            /* [retval][out] */ BSTR *CompanyLastFirstNoSpace) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CompanyLastFirstSpaceOnly( 
            /* [retval][out] */ BSTR *CompanyLastFirstSpaceOnly) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CompanyMainTelephoneNumber( 
            /* [retval][out] */ BSTR *CompanyMainTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CompanyMainTelephoneNumber( 
            /* [in] */ BSTR CompanyMainTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CompanyName( 
            /* [retval][out] */ BSTR *CompanyName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CompanyName( 
            /* [in] */ BSTR CompanyName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ComputerNetworkName( 
            /* [retval][out] */ BSTR *ComputerNetworkName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ComputerNetworkName( 
            /* [in] */ BSTR ComputerNetworkName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomerID( 
            /* [retval][out] */ BSTR *CustomerID) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CustomerID( 
            /* [in] */ BSTR CustomerID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Department( 
            /* [retval][out] */ BSTR *Department) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Department( 
            /* [in] */ BSTR Department) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email1Address( 
            /* [retval][out] */ BSTR *Email1Address) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Email1Address( 
            /* [in] */ BSTR Email1Address) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email1AddressType( 
            /* [retval][out] */ BSTR *Email1AddressType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Email1AddressType( 
            /* [in] */ BSTR Email1AddressType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email1DisplayName( 
            /* [retval][out] */ BSTR *Email1DisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email1EntryID( 
            /* [retval][out] */ BSTR *Email1EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email2Address( 
            /* [retval][out] */ BSTR *Email2Address) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Email2Address( 
            /* [in] */ BSTR Email2Address) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email2AddressType( 
            /* [retval][out] */ BSTR *Email2AddressType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Email2AddressType( 
            /* [in] */ BSTR Email2AddressType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email2DisplayName( 
            /* [retval][out] */ BSTR *Email2DisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email2EntryID( 
            /* [retval][out] */ BSTR *Email2EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email3Address( 
            /* [retval][out] */ BSTR *Email3Address) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Email3Address( 
            /* [in] */ BSTR Email3Address) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email3AddressType( 
            /* [retval][out] */ BSTR *Email3AddressType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Email3AddressType( 
            /* [in] */ BSTR Email3AddressType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email3DisplayName( 
            /* [retval][out] */ BSTR *Email3DisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Email3EntryID( 
            /* [retval][out] */ BSTR *Email3EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileAs( 
            /* [retval][out] */ BSTR *FileAs) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FileAs( 
            /* [in] */ BSTR FileAs) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FirstName( 
            /* [retval][out] */ BSTR *FirstName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FirstName( 
            /* [in] */ BSTR FirstName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FTPSite( 
            /* [retval][out] */ BSTR *FTPSite) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FTPSite( 
            /* [in] */ BSTR FTPSite) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ BSTR *FullName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FullName( 
            /* [in] */ BSTR FullName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullNameAndCompany( 
            /* [retval][out] */ BSTR *FullNameAndCompany) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Gender( 
            /* [retval][out] */ OlGender *Gender) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Gender( 
            /* [in] */ OlGender Gender) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GovernmentIDNumber( 
            /* [retval][out] */ BSTR *GovernmentIDNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_GovernmentIDNumber( 
            /* [in] */ BSTR GovernmentIDNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Hobby( 
            /* [retval][out] */ BSTR *Hobby) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Hobby( 
            /* [in] */ BSTR Hobby) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Home2TelephoneNumber( 
            /* [retval][out] */ BSTR *Home2TelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Home2TelephoneNumber( 
            /* [in] */ BSTR Home2TelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HomeAddress( 
            /* [retval][out] */ BSTR *HomeAddress) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HomeAddress( 
            /* [in] */ BSTR HomeAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HomeAddressCity( 
            /* [retval][out] */ BSTR *HomeAddressCity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HomeAddressCity( 
            /* [in] */ BSTR HomeAddressCity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HomeAddressCountry( 
            /* [retval][out] */ BSTR *HomeAddressCountry) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HomeAddressCountry( 
            /* [in] */ BSTR HomeAddressCountry) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HomeAddressPostalCode( 
            /* [retval][out] */ BSTR *HomeAddressPostalCode) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HomeAddressPostalCode( 
            /* [in] */ BSTR HomeAddressPostalCode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HomeAddressPostOfficeBox( 
            /* [retval][out] */ BSTR *HomeAddressPostOfficeBox) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HomeAddressPostOfficeBox( 
            /* [in] */ BSTR HomeAddressPostOfficeBox) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HomeAddressState( 
            /* [retval][out] */ BSTR *HomeAddressState) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HomeAddressState( 
            /* [in] */ BSTR HomeAddressState) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HomeAddressStreet( 
            /* [retval][out] */ BSTR *HomeAddressStreet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HomeAddressStreet( 
            /* [in] */ BSTR HomeAddressStreet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HomeFaxNumber( 
            /* [retval][out] */ BSTR *HomeFaxNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HomeFaxNumber( 
            /* [in] */ BSTR HomeFaxNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HomeTelephoneNumber( 
            /* [retval][out] */ BSTR *HomeTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HomeTelephoneNumber( 
            /* [in] */ BSTR HomeTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Initials( 
            /* [retval][out] */ BSTR *Initials) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Initials( 
            /* [in] */ BSTR Initials) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InternetFreeBusyAddress( 
            /* [retval][out] */ BSTR *InternetFreeBusyAddress) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InternetFreeBusyAddress( 
            /* [in] */ BSTR InternetFreeBusyAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ISDNNumber( 
            /* [retval][out] */ BSTR *ISDNNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ISDNNumber( 
            /* [in] */ BSTR ISDNNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_JobTitle( 
            /* [retval][out] */ BSTR *JobTitle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_JobTitle( 
            /* [in] */ BSTR JobTitle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Journal( 
            /* [retval][out] */ VARIANT_BOOL *Journal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Journal( 
            /* [in] */ VARIANT_BOOL Journal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ BSTR Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastFirstAndSuffix( 
            /* [retval][out] */ BSTR *LastFirstAndSuffix) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastFirstNoSpace( 
            /* [retval][out] */ BSTR *LastFirstNoSpace) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastFirstNoSpaceCompany( 
            /* [retval][out] */ BSTR *LastFirstNoSpaceCompany) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastFirstSpaceOnly( 
            /* [retval][out] */ BSTR *LastFirstSpaceOnly) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastFirstSpaceOnlyCompany( 
            /* [retval][out] */ BSTR *LastFirstSpaceOnlyCompany) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastName( 
            /* [retval][out] */ BSTR *LastName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LastName( 
            /* [in] */ BSTR LastName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastNameAndFirstName( 
            /* [retval][out] */ BSTR *LastNameAndFirstName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailingAddress( 
            /* [retval][out] */ BSTR *MailingAddress) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MailingAddress( 
            /* [in] */ BSTR MailingAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailingAddressCity( 
            /* [retval][out] */ BSTR *MailingAddressCity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MailingAddressCity( 
            /* [in] */ BSTR MailingAddressCity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailingAddressCountry( 
            /* [retval][out] */ BSTR *MailingAddressCountry) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MailingAddressCountry( 
            /* [in] */ BSTR MailingAddressCountry) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailingAddressPostalCode( 
            /* [retval][out] */ BSTR *MailingAddressPostalCode) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MailingAddressPostalCode( 
            /* [in] */ BSTR MailingAddressPostalCode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailingAddressPostOfficeBox( 
            /* [retval][out] */ BSTR *MailingAddressPostOfficeBox) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MailingAddressPostOfficeBox( 
            /* [in] */ BSTR MailingAddressPostOfficeBox) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailingAddressState( 
            /* [retval][out] */ BSTR *MailingAddressState) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MailingAddressState( 
            /* [in] */ BSTR MailingAddressState) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailingAddressStreet( 
            /* [retval][out] */ BSTR *MailingAddressStreet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MailingAddressStreet( 
            /* [in] */ BSTR MailingAddressStreet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ManagerName( 
            /* [retval][out] */ BSTR *ManagerName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ManagerName( 
            /* [in] */ BSTR ManagerName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MiddleName( 
            /* [retval][out] */ BSTR *MiddleName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MiddleName( 
            /* [in] */ BSTR MiddleName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MobileTelephoneNumber( 
            /* [retval][out] */ BSTR *MobileTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MobileTelephoneNumber( 
            /* [in] */ BSTR MobileTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NetMeetingAlias( 
            /* [retval][out] */ BSTR *NetMeetingAlias) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NetMeetingAlias( 
            /* [in] */ BSTR NetMeetingAlias) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NetMeetingServer( 
            /* [retval][out] */ BSTR *NetMeetingServer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NetMeetingServer( 
            /* [in] */ BSTR NetMeetingServer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NickName( 
            /* [retval][out] */ BSTR *NickName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NickName( 
            /* [in] */ BSTR NickName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OfficeLocation( 
            /* [retval][out] */ BSTR *OfficeLocation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OfficeLocation( 
            /* [in] */ BSTR OfficeLocation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OrganizationalIDNumber( 
            /* [retval][out] */ BSTR *OrganizationalIDNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OrganizationalIDNumber( 
            /* [in] */ BSTR OrganizationalIDNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OtherAddress( 
            /* [retval][out] */ BSTR *OtherAddress) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OtherAddress( 
            /* [in] */ BSTR OtherAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OtherAddressCity( 
            /* [retval][out] */ BSTR *OtherAddressCity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OtherAddressCity( 
            /* [in] */ BSTR OtherAddressCity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OtherAddressCountry( 
            /* [retval][out] */ BSTR *OtherAddressCountry) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OtherAddressCountry( 
            /* [in] */ BSTR OtherAddressCountry) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OtherAddressPostalCode( 
            /* [retval][out] */ BSTR *OtherAddressPostalCode) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OtherAddressPostalCode( 
            /* [in] */ BSTR OtherAddressPostalCode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OtherAddressPostOfficeBox( 
            /* [retval][out] */ BSTR *OtherAddressPostOfficeBox) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OtherAddressPostOfficeBox( 
            /* [in] */ BSTR OtherAddressPostOfficeBox) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OtherAddressState( 
            /* [retval][out] */ BSTR *OtherAddressState) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OtherAddressState( 
            /* [in] */ BSTR OtherAddressState) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OtherAddressStreet( 
            /* [retval][out] */ BSTR *OtherAddressStreet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OtherAddressStreet( 
            /* [in] */ BSTR OtherAddressStreet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OtherFaxNumber( 
            /* [retval][out] */ BSTR *OtherFaxNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OtherFaxNumber( 
            /* [in] */ BSTR OtherFaxNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OtherTelephoneNumber( 
            /* [retval][out] */ BSTR *OtherTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OtherTelephoneNumber( 
            /* [in] */ BSTR OtherTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PagerNumber( 
            /* [retval][out] */ BSTR *PagerNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PagerNumber( 
            /* [in] */ BSTR PagerNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PersonalHomePage( 
            /* [retval][out] */ BSTR *PersonalHomePage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PersonalHomePage( 
            /* [in] */ BSTR PersonalHomePage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrimaryTelephoneNumber( 
            /* [retval][out] */ BSTR *PrimaryTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PrimaryTelephoneNumber( 
            /* [in] */ BSTR PrimaryTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Profession( 
            /* [retval][out] */ BSTR *Profession) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Profession( 
            /* [in] */ BSTR Profession) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RadioTelephoneNumber( 
            /* [retval][out] */ BSTR *RadioTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RadioTelephoneNumber( 
            /* [in] */ BSTR RadioTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReferredBy( 
            /* [retval][out] */ BSTR *ReferredBy) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReferredBy( 
            /* [in] */ BSTR ReferredBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedMailingAddress( 
            /* [retval][out] */ OlMailingAddress *SelectedMailingAddress) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SelectedMailingAddress( 
            /* [in] */ OlMailingAddress SelectedMailingAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Spouse( 
            /* [retval][out] */ BSTR *Spouse) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Spouse( 
            /* [in] */ BSTR Spouse) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Suffix( 
            /* [retval][out] */ BSTR *Suffix) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Suffix( 
            /* [in] */ BSTR Suffix) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TelexNumber( 
            /* [retval][out] */ BSTR *TelexNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TelexNumber( 
            /* [in] */ BSTR TelexNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *Title) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Title( 
            /* [in] */ BSTR Title) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TTYTDDTelephoneNumber( 
            /* [retval][out] */ BSTR *TTYTDDTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TTYTDDTelephoneNumber( 
            /* [in] */ BSTR TTYTDDTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_User1( 
            /* [retval][out] */ BSTR *User1) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_User1( 
            /* [in] */ BSTR User1) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_User2( 
            /* [retval][out] */ BSTR *User2) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_User2( 
            /* [in] */ BSTR User2) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_User3( 
            /* [retval][out] */ BSTR *User3) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_User3( 
            /* [in] */ BSTR User3) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_User4( 
            /* [retval][out] */ BSTR *User4) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_User4( 
            /* [in] */ BSTR User4) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserCertificate( 
            /* [retval][out] */ BSTR *UserCertificate) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_UserCertificate( 
            /* [in] */ BSTR UserCertificate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WebPage( 
            /* [retval][out] */ BSTR *WebPage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WebPage( 
            /* [in] */ BSTR WebPage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_YomiCompanyName( 
            /* [retval][out] */ BSTR *YomiCompanyName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_YomiCompanyName( 
            /* [in] */ BSTR YomiCompanyName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_YomiFirstName( 
            /* [retval][out] */ BSTR *YomiFirstName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_YomiFirstName( 
            /* [in] */ BSTR YomiFirstName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_YomiLastName( 
            /* [retval][out] */ BSTR *YomiLastName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_YomiLastName( 
            /* [in] */ BSTR YomiLastName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ForwardAsVcard( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastFirstNoSpaceAndSuffix( 
            /* [retval][out] */ BSTR *LastFirstNoSpaceAndSuffix) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IMAddress( 
            /* [retval][out] */ BSTR *IMAddress) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IMAddress( 
            /* [in] */ BSTR IMAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Email1DisplayName( 
            /* [in] */ BSTR Email1DisplayName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Email2DisplayName( 
            /* [in] */ BSTR Email2DisplayName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Email3DisplayName( 
            /* [in] */ BSTR Email3DisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddPicture( 
            /* [in] */ BSTR Path) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemovePicture( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasPicture( 
            /* [retval][out] */ VARIANT_BOOL *HasPicture) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ForwardAsBusinessCard( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowBusinessCardEditor( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveBusinessCardImage( 
            /* [in] */ BSTR Path) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCheckPhoneDialog( 
            /* [in] */ OlContactPhoneNumber PhoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskSubject( 
            /* [retval][out] */ BSTR *TaskSubject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskSubject( 
            /* [in] */ BSTR TaskSubject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskDueDate( 
            /* [retval][out] */ DATE *TaskDueDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskDueDate( 
            /* [in] */ DATE TaskDueDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskStartDate( 
            /* [retval][out] */ DATE *TaskStartDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskStartDate( 
            /* [in] */ DATE TaskStartDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskCompletedDate( 
            /* [retval][out] */ DATE *TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskCompletedDate( 
            /* [in] */ DATE TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToDoTaskOrdinal( 
            /* [retval][out] */ DATE *ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToDoTaskOrdinal( 
            /* [in] */ DATE ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault( 
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderOverrideDefault( 
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderPlaySound( 
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderPlaySound( 
            /* [in] */ VARIANT_BOOL ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSet( 
            /* [retval][out] */ VARIANT_BOOL *ReminderSet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSet( 
            /* [in] */ VARIANT_BOOL ReminderSet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSoundFile( 
            /* [retval][out] */ BSTR *ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSoundFile( 
            /* [in] */ BSTR ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderTime( 
            /* [retval][out] */ DATE *ReminderTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderTime( 
            /* [in] */ DATE ReminderTime) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkAsTask( 
            /* [in] */ OlMarkInterval MarkInterval) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearTaskFlag( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsMarkedAsTask( 
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessCardLayoutXml( 
            /* [retval][out] */ BSTR *BusinessCardLayoutXml) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessCardLayoutXml( 
            /* [in] */ BSTR BusinessCardLayoutXml) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetBusinessCard( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddBusinessCardLogoPicture( 
            /* [in] */ BSTR Path) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessCardType( 
            /* [retval][out] */ OlBusinessCardType *BusinessCardType) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCheckFullNameDialog( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCheckAddressDialog( 
            /* [in] */ OlMailingAddress MailingAddress) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ContactItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ContactItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ContactItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ContactItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ContactItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ContactItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ContactItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ContactItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ContactItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ContactItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ContactItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ContactItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _ContactItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _ContactItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _ContactItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _ContactItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _ContactItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _ContactItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _ContactItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _ContactItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _ContactItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _ContactItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _ContactItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _ContactItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _ContactItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _ContactItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _ContactItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _ContactItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _ContactItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _ContactItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _ContactItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _ContactItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _ContactItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _ContactItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _ContactItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _ContactItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _ContactItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _ContactItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _ContactItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _ContactItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _ContactItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _ContactItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _ContactItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Account )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Account);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Account )( 
            _ContactItem * This,
            /* [in] */ BSTR Account);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Anniversary )( 
            _ContactItem * This,
            /* [retval][out] */ DATE *Anniversary);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Anniversary )( 
            _ContactItem * This,
            /* [in] */ DATE Anniversary);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AssistantName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *AssistantName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AssistantName )( 
            _ContactItem * This,
            /* [in] */ BSTR AssistantName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AssistantTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *AssistantTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AssistantTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR AssistantTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Birthday )( 
            _ContactItem * This,
            /* [retval][out] */ DATE *Birthday);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Birthday )( 
            _ContactItem * This,
            /* [in] */ DATE Birthday);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Business2TelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Business2TelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Business2TelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR Business2TelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessAddress )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessAddress);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessAddress )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessAddressCity )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessAddressCity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessAddressCity )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessAddressCity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessAddressCountry )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessAddressCountry);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessAddressCountry )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessAddressCountry);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessAddressPostalCode )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessAddressPostalCode);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessAddressPostalCode )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessAddressPostalCode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessAddressPostOfficeBox )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessAddressPostOfficeBox);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessAddressPostOfficeBox )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessAddressPostOfficeBox);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessAddressState )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessAddressState);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessAddressState )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessAddressState);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessAddressStreet )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessAddressStreet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessAddressStreet )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessAddressStreet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessFaxNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessFaxNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessFaxNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessFaxNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessHomePage )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessHomePage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessHomePage )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessHomePage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CallbackTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *CallbackTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CallbackTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR CallbackTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CarTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *CarTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CarTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR CarTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Children);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Children )( 
            _ContactItem * This,
            /* [in] */ BSTR Children);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CompanyAndFullName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *CompanyAndFullName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CompanyLastFirstNoSpace )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *CompanyLastFirstNoSpace);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CompanyLastFirstSpaceOnly )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *CompanyLastFirstSpaceOnly);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CompanyMainTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *CompanyMainTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CompanyMainTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR CompanyMainTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CompanyName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *CompanyName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CompanyName )( 
            _ContactItem * This,
            /* [in] */ BSTR CompanyName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ComputerNetworkName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *ComputerNetworkName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ComputerNetworkName )( 
            _ContactItem * This,
            /* [in] */ BSTR ComputerNetworkName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomerID )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *CustomerID);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CustomerID )( 
            _ContactItem * This,
            /* [in] */ BSTR CustomerID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Department )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Department);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Department )( 
            _ContactItem * This,
            /* [in] */ BSTR Department);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email1Address )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email1Address);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Email1Address )( 
            _ContactItem * This,
            /* [in] */ BSTR Email1Address);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email1AddressType )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email1AddressType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Email1AddressType )( 
            _ContactItem * This,
            /* [in] */ BSTR Email1AddressType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email1DisplayName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email1DisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email1EntryID )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email1EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email2Address )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email2Address);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Email2Address )( 
            _ContactItem * This,
            /* [in] */ BSTR Email2Address);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email2AddressType )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email2AddressType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Email2AddressType )( 
            _ContactItem * This,
            /* [in] */ BSTR Email2AddressType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email2DisplayName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email2DisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email2EntryID )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email2EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email3Address )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email3Address);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Email3Address )( 
            _ContactItem * This,
            /* [in] */ BSTR Email3Address);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email3AddressType )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email3AddressType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Email3AddressType )( 
            _ContactItem * This,
            /* [in] */ BSTR Email3AddressType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email3DisplayName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email3DisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Email3EntryID )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Email3EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileAs )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *FileAs);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FileAs )( 
            _ContactItem * This,
            /* [in] */ BSTR FileAs);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FirstName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *FirstName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FirstName )( 
            _ContactItem * This,
            /* [in] */ BSTR FirstName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FTPSite )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *FTPSite);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FTPSite )( 
            _ContactItem * This,
            /* [in] */ BSTR FTPSite);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *FullName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FullName )( 
            _ContactItem * This,
            /* [in] */ BSTR FullName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullNameAndCompany )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *FullNameAndCompany);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Gender )( 
            _ContactItem * This,
            /* [retval][out] */ OlGender *Gender);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Gender )( 
            _ContactItem * This,
            /* [in] */ OlGender Gender);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GovernmentIDNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *GovernmentIDNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GovernmentIDNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR GovernmentIDNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hobby )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Hobby);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Hobby )( 
            _ContactItem * This,
            /* [in] */ BSTR Hobby);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Home2TelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Home2TelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Home2TelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR Home2TelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HomeAddress )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *HomeAddress);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HomeAddress )( 
            _ContactItem * This,
            /* [in] */ BSTR HomeAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HomeAddressCity )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *HomeAddressCity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HomeAddressCity )( 
            _ContactItem * This,
            /* [in] */ BSTR HomeAddressCity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HomeAddressCountry )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *HomeAddressCountry);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HomeAddressCountry )( 
            _ContactItem * This,
            /* [in] */ BSTR HomeAddressCountry);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HomeAddressPostalCode )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *HomeAddressPostalCode);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HomeAddressPostalCode )( 
            _ContactItem * This,
            /* [in] */ BSTR HomeAddressPostalCode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HomeAddressPostOfficeBox )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *HomeAddressPostOfficeBox);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HomeAddressPostOfficeBox )( 
            _ContactItem * This,
            /* [in] */ BSTR HomeAddressPostOfficeBox);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HomeAddressState )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *HomeAddressState);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HomeAddressState )( 
            _ContactItem * This,
            /* [in] */ BSTR HomeAddressState);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HomeAddressStreet )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *HomeAddressStreet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HomeAddressStreet )( 
            _ContactItem * This,
            /* [in] */ BSTR HomeAddressStreet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HomeFaxNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *HomeFaxNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HomeFaxNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR HomeFaxNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HomeTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *HomeTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HomeTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR HomeTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Initials )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Initials);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Initials )( 
            _ContactItem * This,
            /* [in] */ BSTR Initials);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InternetFreeBusyAddress )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *InternetFreeBusyAddress);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InternetFreeBusyAddress )( 
            _ContactItem * This,
            /* [in] */ BSTR InternetFreeBusyAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ISDNNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *ISDNNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ISDNNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR ISDNNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_JobTitle )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *JobTitle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_JobTitle )( 
            _ContactItem * This,
            /* [in] */ BSTR JobTitle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Journal )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *Journal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Journal )( 
            _ContactItem * This,
            /* [in] */ VARIANT_BOOL Journal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            _ContactItem * This,
            /* [in] */ BSTR Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastFirstAndSuffix )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *LastFirstAndSuffix);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastFirstNoSpace )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *LastFirstNoSpace);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastFirstNoSpaceCompany )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *LastFirstNoSpaceCompany);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastFirstSpaceOnly )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *LastFirstSpaceOnly);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastFirstSpaceOnlyCompany )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *LastFirstSpaceOnlyCompany);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *LastName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastName )( 
            _ContactItem * This,
            /* [in] */ BSTR LastName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastNameAndFirstName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *LastNameAndFirstName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailingAddress )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MailingAddress);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MailingAddress )( 
            _ContactItem * This,
            /* [in] */ BSTR MailingAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailingAddressCity )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MailingAddressCity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MailingAddressCity )( 
            _ContactItem * This,
            /* [in] */ BSTR MailingAddressCity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailingAddressCountry )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MailingAddressCountry);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MailingAddressCountry )( 
            _ContactItem * This,
            /* [in] */ BSTR MailingAddressCountry);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailingAddressPostalCode )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MailingAddressPostalCode);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MailingAddressPostalCode )( 
            _ContactItem * This,
            /* [in] */ BSTR MailingAddressPostalCode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailingAddressPostOfficeBox )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MailingAddressPostOfficeBox);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MailingAddressPostOfficeBox )( 
            _ContactItem * This,
            /* [in] */ BSTR MailingAddressPostOfficeBox);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailingAddressState )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MailingAddressState);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MailingAddressState )( 
            _ContactItem * This,
            /* [in] */ BSTR MailingAddressState);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailingAddressStreet )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MailingAddressStreet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MailingAddressStreet )( 
            _ContactItem * This,
            /* [in] */ BSTR MailingAddressStreet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ManagerName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *ManagerName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ManagerName )( 
            _ContactItem * This,
            /* [in] */ BSTR ManagerName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MiddleName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MiddleName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MiddleName )( 
            _ContactItem * This,
            /* [in] */ BSTR MiddleName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MobileTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *MobileTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MobileTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR MobileTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NetMeetingAlias )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *NetMeetingAlias);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NetMeetingAlias )( 
            _ContactItem * This,
            /* [in] */ BSTR NetMeetingAlias);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NetMeetingServer )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *NetMeetingServer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NetMeetingServer )( 
            _ContactItem * This,
            /* [in] */ BSTR NetMeetingServer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NickName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *NickName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NickName )( 
            _ContactItem * This,
            /* [in] */ BSTR NickName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfficeLocation )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OfficeLocation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfficeLocation )( 
            _ContactItem * This,
            /* [in] */ BSTR OfficeLocation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OrganizationalIDNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OrganizationalIDNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OrganizationalIDNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR OrganizationalIDNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OtherAddress )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OtherAddress);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OtherAddress )( 
            _ContactItem * This,
            /* [in] */ BSTR OtherAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OtherAddressCity )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OtherAddressCity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OtherAddressCity )( 
            _ContactItem * This,
            /* [in] */ BSTR OtherAddressCity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OtherAddressCountry )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OtherAddressCountry);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OtherAddressCountry )( 
            _ContactItem * This,
            /* [in] */ BSTR OtherAddressCountry);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OtherAddressPostalCode )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OtherAddressPostalCode);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OtherAddressPostalCode )( 
            _ContactItem * This,
            /* [in] */ BSTR OtherAddressPostalCode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OtherAddressPostOfficeBox )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OtherAddressPostOfficeBox);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OtherAddressPostOfficeBox )( 
            _ContactItem * This,
            /* [in] */ BSTR OtherAddressPostOfficeBox);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OtherAddressState )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OtherAddressState);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OtherAddressState )( 
            _ContactItem * This,
            /* [in] */ BSTR OtherAddressState);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OtherAddressStreet )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OtherAddressStreet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OtherAddressStreet )( 
            _ContactItem * This,
            /* [in] */ BSTR OtherAddressStreet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OtherFaxNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OtherFaxNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OtherFaxNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR OtherFaxNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OtherTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *OtherTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OtherTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR OtherTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PagerNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *PagerNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PagerNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR PagerNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PersonalHomePage )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *PersonalHomePage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PersonalHomePage )( 
            _ContactItem * This,
            /* [in] */ BSTR PersonalHomePage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *PrimaryTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PrimaryTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR PrimaryTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Profession )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Profession);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Profession )( 
            _ContactItem * This,
            /* [in] */ BSTR Profession);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RadioTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *RadioTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RadioTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR RadioTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReferredBy )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *ReferredBy);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReferredBy )( 
            _ContactItem * This,
            /* [in] */ BSTR ReferredBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedMailingAddress )( 
            _ContactItem * This,
            /* [retval][out] */ OlMailingAddress *SelectedMailingAddress);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SelectedMailingAddress )( 
            _ContactItem * This,
            /* [in] */ OlMailingAddress SelectedMailingAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Spouse )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Spouse);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Spouse )( 
            _ContactItem * This,
            /* [in] */ BSTR Spouse);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Suffix )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Suffix);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Suffix )( 
            _ContactItem * This,
            /* [in] */ BSTR Suffix);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TelexNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *TelexNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TelexNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR TelexNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *Title);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Title )( 
            _ContactItem * This,
            /* [in] */ BSTR Title);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TTYTDDTelephoneNumber )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *TTYTDDTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TTYTDDTelephoneNumber )( 
            _ContactItem * This,
            /* [in] */ BSTR TTYTDDTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_User1 )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *User1);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_User1 )( 
            _ContactItem * This,
            /* [in] */ BSTR User1);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_User2 )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *User2);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_User2 )( 
            _ContactItem * This,
            /* [in] */ BSTR User2);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_User3 )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *User3);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_User3 )( 
            _ContactItem * This,
            /* [in] */ BSTR User3);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_User4 )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *User4);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_User4 )( 
            _ContactItem * This,
            /* [in] */ BSTR User4);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserCertificate )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *UserCertificate);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserCertificate )( 
            _ContactItem * This,
            /* [in] */ BSTR UserCertificate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WebPage )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *WebPage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WebPage )( 
            _ContactItem * This,
            /* [in] */ BSTR WebPage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YomiCompanyName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *YomiCompanyName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YomiCompanyName )( 
            _ContactItem * This,
            /* [in] */ BSTR YomiCompanyName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YomiFirstName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *YomiFirstName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YomiFirstName )( 
            _ContactItem * This,
            /* [in] */ BSTR YomiFirstName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YomiLastName )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *YomiLastName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YomiLastName )( 
            _ContactItem * This,
            /* [in] */ BSTR YomiLastName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ForwardAsVcard )( 
            _ContactItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _ContactItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _ContactItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastFirstNoSpaceAndSuffix )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *LastFirstNoSpaceAndSuffix);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _ContactItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _ContactItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IMAddress )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *IMAddress);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IMAddress )( 
            _ContactItem * This,
            /* [in] */ BSTR IMAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _ContactItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _ContactItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Email1DisplayName )( 
            _ContactItem * This,
            /* [in] */ BSTR Email1DisplayName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Email2DisplayName )( 
            _ContactItem * This,
            /* [in] */ BSTR Email2DisplayName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Email3DisplayName )( 
            _ContactItem * This,
            /* [in] */ BSTR Email3DisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _ContactItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddPicture )( 
            _ContactItem * This,
            /* [in] */ BSTR Path);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemovePicture )( 
            _ContactItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasPicture )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *HasPicture);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _ContactItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ForwardAsBusinessCard )( 
            _ContactItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowBusinessCardEditor )( 
            _ContactItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveBusinessCardImage )( 
            _ContactItem * This,
            /* [in] */ BSTR Path);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCheckPhoneDialog )( 
            _ContactItem * This,
            /* [in] */ OlContactPhoneNumber PhoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskSubject )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *TaskSubject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskSubject )( 
            _ContactItem * This,
            /* [in] */ BSTR TaskSubject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskDueDate )( 
            _ContactItem * This,
            /* [retval][out] */ DATE *TaskDueDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskDueDate )( 
            _ContactItem * This,
            /* [in] */ DATE TaskDueDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskStartDate )( 
            _ContactItem * This,
            /* [retval][out] */ DATE *TaskStartDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskStartDate )( 
            _ContactItem * This,
            /* [in] */ DATE TaskStartDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskCompletedDate )( 
            _ContactItem * This,
            /* [retval][out] */ DATE *TaskCompletedDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskCompletedDate )( 
            _ContactItem * This,
            /* [in] */ DATE TaskCompletedDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToDoTaskOrdinal )( 
            _ContactItem * This,
            /* [retval][out] */ DATE *ToDoTaskOrdinal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToDoTaskOrdinal )( 
            _ContactItem * This,
            /* [in] */ DATE ToDoTaskOrdinal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderOverrideDefault )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderOverrideDefault )( 
            _ContactItem * This,
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderPlaySound )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderPlaySound )( 
            _ContactItem * This,
            /* [in] */ VARIANT_BOOL ReminderPlaySound);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSet )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderSet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSet )( 
            _ContactItem * This,
            /* [in] */ VARIANT_BOOL ReminderSet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSoundFile )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *ReminderSoundFile);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSoundFile )( 
            _ContactItem * This,
            /* [in] */ BSTR ReminderSoundFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderTime )( 
            _ContactItem * This,
            /* [retval][out] */ DATE *ReminderTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderTime )( 
            _ContactItem * This,
            /* [in] */ DATE ReminderTime);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkAsTask )( 
            _ContactItem * This,
            /* [in] */ OlMarkInterval MarkInterval);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearTaskFlag )( 
            _ContactItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsMarkedAsTask )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessCardLayoutXml )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *BusinessCardLayoutXml);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessCardLayoutXml )( 
            _ContactItem * This,
            /* [in] */ BSTR BusinessCardLayoutXml);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetBusinessCard )( 
            _ContactItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddBusinessCardLogoPicture )( 
            _ContactItem * This,
            /* [in] */ BSTR Path);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessCardType )( 
            _ContactItem * This,
            /* [retval][out] */ OlBusinessCardType *BusinessCardType);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _ContactItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _ContactItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _ContactItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _ContactItem * This,
            /* [in] */ VARIANT RTFBody);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCheckFullNameDialog )( 
            _ContactItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCheckAddressDialog )( 
            _ContactItem * This,
            /* [in] */ OlMailingAddress MailingAddress);
        
        END_INTERFACE
    } _ContactItemVtbl;

    interface _ContactItem
    {
        CONST_VTBL struct _ContactItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ContactItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ContactItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ContactItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ContactItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ContactItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ContactItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ContactItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ContactItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ContactItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ContactItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ContactItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ContactItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _ContactItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _ContactItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _ContactItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _ContactItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _ContactItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _ContactItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _ContactItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _ContactItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _ContactItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _ContactItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _ContactItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _ContactItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _ContactItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _ContactItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _ContactItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _ContactItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _ContactItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _ContactItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _ContactItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _ContactItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _ContactItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _ContactItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _ContactItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _ContactItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _ContactItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _ContactItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _ContactItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _ContactItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _ContactItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _ContactItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _ContactItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _ContactItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _ContactItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _ContactItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _ContactItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _ContactItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _ContactItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _ContactItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _ContactItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _ContactItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _ContactItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _ContactItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _ContactItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _ContactItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _ContactItem_get_Account(This,Account)	\
    ( (This)->lpVtbl -> get_Account(This,Account) ) 

#define _ContactItem_put_Account(This,Account)	\
    ( (This)->lpVtbl -> put_Account(This,Account) ) 

#define _ContactItem_get_Anniversary(This,Anniversary)	\
    ( (This)->lpVtbl -> get_Anniversary(This,Anniversary) ) 

#define _ContactItem_put_Anniversary(This,Anniversary)	\
    ( (This)->lpVtbl -> put_Anniversary(This,Anniversary) ) 

#define _ContactItem_get_AssistantName(This,AssistantName)	\
    ( (This)->lpVtbl -> get_AssistantName(This,AssistantName) ) 

#define _ContactItem_put_AssistantName(This,AssistantName)	\
    ( (This)->lpVtbl -> put_AssistantName(This,AssistantName) ) 

#define _ContactItem_get_AssistantTelephoneNumber(This,AssistantTelephoneNumber)	\
    ( (This)->lpVtbl -> get_AssistantTelephoneNumber(This,AssistantTelephoneNumber) ) 

#define _ContactItem_put_AssistantTelephoneNumber(This,AssistantTelephoneNumber)	\
    ( (This)->lpVtbl -> put_AssistantTelephoneNumber(This,AssistantTelephoneNumber) ) 

#define _ContactItem_get_Birthday(This,Birthday)	\
    ( (This)->lpVtbl -> get_Birthday(This,Birthday) ) 

#define _ContactItem_put_Birthday(This,Birthday)	\
    ( (This)->lpVtbl -> put_Birthday(This,Birthday) ) 

#define _ContactItem_get_Business2TelephoneNumber(This,Business2TelephoneNumber)	\
    ( (This)->lpVtbl -> get_Business2TelephoneNumber(This,Business2TelephoneNumber) ) 

#define _ContactItem_put_Business2TelephoneNumber(This,Business2TelephoneNumber)	\
    ( (This)->lpVtbl -> put_Business2TelephoneNumber(This,Business2TelephoneNumber) ) 

#define _ContactItem_get_BusinessAddress(This,BusinessAddress)	\
    ( (This)->lpVtbl -> get_BusinessAddress(This,BusinessAddress) ) 

#define _ContactItem_put_BusinessAddress(This,BusinessAddress)	\
    ( (This)->lpVtbl -> put_BusinessAddress(This,BusinessAddress) ) 

#define _ContactItem_get_BusinessAddressCity(This,BusinessAddressCity)	\
    ( (This)->lpVtbl -> get_BusinessAddressCity(This,BusinessAddressCity) ) 

#define _ContactItem_put_BusinessAddressCity(This,BusinessAddressCity)	\
    ( (This)->lpVtbl -> put_BusinessAddressCity(This,BusinessAddressCity) ) 

#define _ContactItem_get_BusinessAddressCountry(This,BusinessAddressCountry)	\
    ( (This)->lpVtbl -> get_BusinessAddressCountry(This,BusinessAddressCountry) ) 

#define _ContactItem_put_BusinessAddressCountry(This,BusinessAddressCountry)	\
    ( (This)->lpVtbl -> put_BusinessAddressCountry(This,BusinessAddressCountry) ) 

#define _ContactItem_get_BusinessAddressPostalCode(This,BusinessAddressPostalCode)	\
    ( (This)->lpVtbl -> get_BusinessAddressPostalCode(This,BusinessAddressPostalCode) ) 

#define _ContactItem_put_BusinessAddressPostalCode(This,BusinessAddressPostalCode)	\
    ( (This)->lpVtbl -> put_BusinessAddressPostalCode(This,BusinessAddressPostalCode) ) 

#define _ContactItem_get_BusinessAddressPostOfficeBox(This,BusinessAddressPostOfficeBox)	\
    ( (This)->lpVtbl -> get_BusinessAddressPostOfficeBox(This,BusinessAddressPostOfficeBox) ) 

#define _ContactItem_put_BusinessAddressPostOfficeBox(This,BusinessAddressPostOfficeBox)	\
    ( (This)->lpVtbl -> put_BusinessAddressPostOfficeBox(This,BusinessAddressPostOfficeBox) ) 

#define _ContactItem_get_BusinessAddressState(This,BusinessAddressState)	\
    ( (This)->lpVtbl -> get_BusinessAddressState(This,BusinessAddressState) ) 

#define _ContactItem_put_BusinessAddressState(This,BusinessAddressState)	\
    ( (This)->lpVtbl -> put_BusinessAddressState(This,BusinessAddressState) ) 

#define _ContactItem_get_BusinessAddressStreet(This,BusinessAddressStreet)	\
    ( (This)->lpVtbl -> get_BusinessAddressStreet(This,BusinessAddressStreet) ) 

#define _ContactItem_put_BusinessAddressStreet(This,BusinessAddressStreet)	\
    ( (This)->lpVtbl -> put_BusinessAddressStreet(This,BusinessAddressStreet) ) 

#define _ContactItem_get_BusinessFaxNumber(This,BusinessFaxNumber)	\
    ( (This)->lpVtbl -> get_BusinessFaxNumber(This,BusinessFaxNumber) ) 

#define _ContactItem_put_BusinessFaxNumber(This,BusinessFaxNumber)	\
    ( (This)->lpVtbl -> put_BusinessFaxNumber(This,BusinessFaxNumber) ) 

#define _ContactItem_get_BusinessHomePage(This,BusinessHomePage)	\
    ( (This)->lpVtbl -> get_BusinessHomePage(This,BusinessHomePage) ) 

#define _ContactItem_put_BusinessHomePage(This,BusinessHomePage)	\
    ( (This)->lpVtbl -> put_BusinessHomePage(This,BusinessHomePage) ) 

#define _ContactItem_get_BusinessTelephoneNumber(This,BusinessTelephoneNumber)	\
    ( (This)->lpVtbl -> get_BusinessTelephoneNumber(This,BusinessTelephoneNumber) ) 

#define _ContactItem_put_BusinessTelephoneNumber(This,BusinessTelephoneNumber)	\
    ( (This)->lpVtbl -> put_BusinessTelephoneNumber(This,BusinessTelephoneNumber) ) 

#define _ContactItem_get_CallbackTelephoneNumber(This,CallbackTelephoneNumber)	\
    ( (This)->lpVtbl -> get_CallbackTelephoneNumber(This,CallbackTelephoneNumber) ) 

#define _ContactItem_put_CallbackTelephoneNumber(This,CallbackTelephoneNumber)	\
    ( (This)->lpVtbl -> put_CallbackTelephoneNumber(This,CallbackTelephoneNumber) ) 

#define _ContactItem_get_CarTelephoneNumber(This,CarTelephoneNumber)	\
    ( (This)->lpVtbl -> get_CarTelephoneNumber(This,CarTelephoneNumber) ) 

#define _ContactItem_put_CarTelephoneNumber(This,CarTelephoneNumber)	\
    ( (This)->lpVtbl -> put_CarTelephoneNumber(This,CarTelephoneNumber) ) 

#define _ContactItem_get_Children(This,Children)	\
    ( (This)->lpVtbl -> get_Children(This,Children) ) 

#define _ContactItem_put_Children(This,Children)	\
    ( (This)->lpVtbl -> put_Children(This,Children) ) 

#define _ContactItem_get_CompanyAndFullName(This,CompanyAndFullName)	\
    ( (This)->lpVtbl -> get_CompanyAndFullName(This,CompanyAndFullName) ) 

#define _ContactItem_get_CompanyLastFirstNoSpace(This,CompanyLastFirstNoSpace)	\
    ( (This)->lpVtbl -> get_CompanyLastFirstNoSpace(This,CompanyLastFirstNoSpace) ) 

#define _ContactItem_get_CompanyLastFirstSpaceOnly(This,CompanyLastFirstSpaceOnly)	\
    ( (This)->lpVtbl -> get_CompanyLastFirstSpaceOnly(This,CompanyLastFirstSpaceOnly) ) 

#define _ContactItem_get_CompanyMainTelephoneNumber(This,CompanyMainTelephoneNumber)	\
    ( (This)->lpVtbl -> get_CompanyMainTelephoneNumber(This,CompanyMainTelephoneNumber) ) 

#define _ContactItem_put_CompanyMainTelephoneNumber(This,CompanyMainTelephoneNumber)	\
    ( (This)->lpVtbl -> put_CompanyMainTelephoneNumber(This,CompanyMainTelephoneNumber) ) 

#define _ContactItem_get_CompanyName(This,CompanyName)	\
    ( (This)->lpVtbl -> get_CompanyName(This,CompanyName) ) 

#define _ContactItem_put_CompanyName(This,CompanyName)	\
    ( (This)->lpVtbl -> put_CompanyName(This,CompanyName) ) 

#define _ContactItem_get_ComputerNetworkName(This,ComputerNetworkName)	\
    ( (This)->lpVtbl -> get_ComputerNetworkName(This,ComputerNetworkName) ) 

#define _ContactItem_put_ComputerNetworkName(This,ComputerNetworkName)	\
    ( (This)->lpVtbl -> put_ComputerNetworkName(This,ComputerNetworkName) ) 

#define _ContactItem_get_CustomerID(This,CustomerID)	\
    ( (This)->lpVtbl -> get_CustomerID(This,CustomerID) ) 

#define _ContactItem_put_CustomerID(This,CustomerID)	\
    ( (This)->lpVtbl -> put_CustomerID(This,CustomerID) ) 

#define _ContactItem_get_Department(This,Department)	\
    ( (This)->lpVtbl -> get_Department(This,Department) ) 

#define _ContactItem_put_Department(This,Department)	\
    ( (This)->lpVtbl -> put_Department(This,Department) ) 

#define _ContactItem_get_Email1Address(This,Email1Address)	\
    ( (This)->lpVtbl -> get_Email1Address(This,Email1Address) ) 

#define _ContactItem_put_Email1Address(This,Email1Address)	\
    ( (This)->lpVtbl -> put_Email1Address(This,Email1Address) ) 

#define _ContactItem_get_Email1AddressType(This,Email1AddressType)	\
    ( (This)->lpVtbl -> get_Email1AddressType(This,Email1AddressType) ) 

#define _ContactItem_put_Email1AddressType(This,Email1AddressType)	\
    ( (This)->lpVtbl -> put_Email1AddressType(This,Email1AddressType) ) 

#define _ContactItem_get_Email1DisplayName(This,Email1DisplayName)	\
    ( (This)->lpVtbl -> get_Email1DisplayName(This,Email1DisplayName) ) 

#define _ContactItem_get_Email1EntryID(This,Email1EntryID)	\
    ( (This)->lpVtbl -> get_Email1EntryID(This,Email1EntryID) ) 

#define _ContactItem_get_Email2Address(This,Email2Address)	\
    ( (This)->lpVtbl -> get_Email2Address(This,Email2Address) ) 

#define _ContactItem_put_Email2Address(This,Email2Address)	\
    ( (This)->lpVtbl -> put_Email2Address(This,Email2Address) ) 

#define _ContactItem_get_Email2AddressType(This,Email2AddressType)	\
    ( (This)->lpVtbl -> get_Email2AddressType(This,Email2AddressType) ) 

#define _ContactItem_put_Email2AddressType(This,Email2AddressType)	\
    ( (This)->lpVtbl -> put_Email2AddressType(This,Email2AddressType) ) 

#define _ContactItem_get_Email2DisplayName(This,Email2DisplayName)	\
    ( (This)->lpVtbl -> get_Email2DisplayName(This,Email2DisplayName) ) 

#define _ContactItem_get_Email2EntryID(This,Email2EntryID)	\
    ( (This)->lpVtbl -> get_Email2EntryID(This,Email2EntryID) ) 

#define _ContactItem_get_Email3Address(This,Email3Address)	\
    ( (This)->lpVtbl -> get_Email3Address(This,Email3Address) ) 

#define _ContactItem_put_Email3Address(This,Email3Address)	\
    ( (This)->lpVtbl -> put_Email3Address(This,Email3Address) ) 

#define _ContactItem_get_Email3AddressType(This,Email3AddressType)	\
    ( (This)->lpVtbl -> get_Email3AddressType(This,Email3AddressType) ) 

#define _ContactItem_put_Email3AddressType(This,Email3AddressType)	\
    ( (This)->lpVtbl -> put_Email3AddressType(This,Email3AddressType) ) 

#define _ContactItem_get_Email3DisplayName(This,Email3DisplayName)	\
    ( (This)->lpVtbl -> get_Email3DisplayName(This,Email3DisplayName) ) 

#define _ContactItem_get_Email3EntryID(This,Email3EntryID)	\
    ( (This)->lpVtbl -> get_Email3EntryID(This,Email3EntryID) ) 

#define _ContactItem_get_FileAs(This,FileAs)	\
    ( (This)->lpVtbl -> get_FileAs(This,FileAs) ) 

#define _ContactItem_put_FileAs(This,FileAs)	\
    ( (This)->lpVtbl -> put_FileAs(This,FileAs) ) 

#define _ContactItem_get_FirstName(This,FirstName)	\
    ( (This)->lpVtbl -> get_FirstName(This,FirstName) ) 

#define _ContactItem_put_FirstName(This,FirstName)	\
    ( (This)->lpVtbl -> put_FirstName(This,FirstName) ) 

#define _ContactItem_get_FTPSite(This,FTPSite)	\
    ( (This)->lpVtbl -> get_FTPSite(This,FTPSite) ) 

#define _ContactItem_put_FTPSite(This,FTPSite)	\
    ( (This)->lpVtbl -> put_FTPSite(This,FTPSite) ) 

#define _ContactItem_get_FullName(This,FullName)	\
    ( (This)->lpVtbl -> get_FullName(This,FullName) ) 

#define _ContactItem_put_FullName(This,FullName)	\
    ( (This)->lpVtbl -> put_FullName(This,FullName) ) 

#define _ContactItem_get_FullNameAndCompany(This,FullNameAndCompany)	\
    ( (This)->lpVtbl -> get_FullNameAndCompany(This,FullNameAndCompany) ) 

#define _ContactItem_get_Gender(This,Gender)	\
    ( (This)->lpVtbl -> get_Gender(This,Gender) ) 

#define _ContactItem_put_Gender(This,Gender)	\
    ( (This)->lpVtbl -> put_Gender(This,Gender) ) 

#define _ContactItem_get_GovernmentIDNumber(This,GovernmentIDNumber)	\
    ( (This)->lpVtbl -> get_GovernmentIDNumber(This,GovernmentIDNumber) ) 

#define _ContactItem_put_GovernmentIDNumber(This,GovernmentIDNumber)	\
    ( (This)->lpVtbl -> put_GovernmentIDNumber(This,GovernmentIDNumber) ) 

#define _ContactItem_get_Hobby(This,Hobby)	\
    ( (This)->lpVtbl -> get_Hobby(This,Hobby) ) 

#define _ContactItem_put_Hobby(This,Hobby)	\
    ( (This)->lpVtbl -> put_Hobby(This,Hobby) ) 

#define _ContactItem_get_Home2TelephoneNumber(This,Home2TelephoneNumber)	\
    ( (This)->lpVtbl -> get_Home2TelephoneNumber(This,Home2TelephoneNumber) ) 

#define _ContactItem_put_Home2TelephoneNumber(This,Home2TelephoneNumber)	\
    ( (This)->lpVtbl -> put_Home2TelephoneNumber(This,Home2TelephoneNumber) ) 

#define _ContactItem_get_HomeAddress(This,HomeAddress)	\
    ( (This)->lpVtbl -> get_HomeAddress(This,HomeAddress) ) 

#define _ContactItem_put_HomeAddress(This,HomeAddress)	\
    ( (This)->lpVtbl -> put_HomeAddress(This,HomeAddress) ) 

#define _ContactItem_get_HomeAddressCity(This,HomeAddressCity)	\
    ( (This)->lpVtbl -> get_HomeAddressCity(This,HomeAddressCity) ) 

#define _ContactItem_put_HomeAddressCity(This,HomeAddressCity)	\
    ( (This)->lpVtbl -> put_HomeAddressCity(This,HomeAddressCity) ) 

#define _ContactItem_get_HomeAddressCountry(This,HomeAddressCountry)	\
    ( (This)->lpVtbl -> get_HomeAddressCountry(This,HomeAddressCountry) ) 

#define _ContactItem_put_HomeAddressCountry(This,HomeAddressCountry)	\
    ( (This)->lpVtbl -> put_HomeAddressCountry(This,HomeAddressCountry) ) 

#define _ContactItem_get_HomeAddressPostalCode(This,HomeAddressPostalCode)	\
    ( (This)->lpVtbl -> get_HomeAddressPostalCode(This,HomeAddressPostalCode) ) 

#define _ContactItem_put_HomeAddressPostalCode(This,HomeAddressPostalCode)	\
    ( (This)->lpVtbl -> put_HomeAddressPostalCode(This,HomeAddressPostalCode) ) 

#define _ContactItem_get_HomeAddressPostOfficeBox(This,HomeAddressPostOfficeBox)	\
    ( (This)->lpVtbl -> get_HomeAddressPostOfficeBox(This,HomeAddressPostOfficeBox) ) 

#define _ContactItem_put_HomeAddressPostOfficeBox(This,HomeAddressPostOfficeBox)	\
    ( (This)->lpVtbl -> put_HomeAddressPostOfficeBox(This,HomeAddressPostOfficeBox) ) 

#define _ContactItem_get_HomeAddressState(This,HomeAddressState)	\
    ( (This)->lpVtbl -> get_HomeAddressState(This,HomeAddressState) ) 

#define _ContactItem_put_HomeAddressState(This,HomeAddressState)	\
    ( (This)->lpVtbl -> put_HomeAddressState(This,HomeAddressState) ) 

#define _ContactItem_get_HomeAddressStreet(This,HomeAddressStreet)	\
    ( (This)->lpVtbl -> get_HomeAddressStreet(This,HomeAddressStreet) ) 

#define _ContactItem_put_HomeAddressStreet(This,HomeAddressStreet)	\
    ( (This)->lpVtbl -> put_HomeAddressStreet(This,HomeAddressStreet) ) 

#define _ContactItem_get_HomeFaxNumber(This,HomeFaxNumber)	\
    ( (This)->lpVtbl -> get_HomeFaxNumber(This,HomeFaxNumber) ) 

#define _ContactItem_put_HomeFaxNumber(This,HomeFaxNumber)	\
    ( (This)->lpVtbl -> put_HomeFaxNumber(This,HomeFaxNumber) ) 

#define _ContactItem_get_HomeTelephoneNumber(This,HomeTelephoneNumber)	\
    ( (This)->lpVtbl -> get_HomeTelephoneNumber(This,HomeTelephoneNumber) ) 

#define _ContactItem_put_HomeTelephoneNumber(This,HomeTelephoneNumber)	\
    ( (This)->lpVtbl -> put_HomeTelephoneNumber(This,HomeTelephoneNumber) ) 

#define _ContactItem_get_Initials(This,Initials)	\
    ( (This)->lpVtbl -> get_Initials(This,Initials) ) 

#define _ContactItem_put_Initials(This,Initials)	\
    ( (This)->lpVtbl -> put_Initials(This,Initials) ) 

#define _ContactItem_get_InternetFreeBusyAddress(This,InternetFreeBusyAddress)	\
    ( (This)->lpVtbl -> get_InternetFreeBusyAddress(This,InternetFreeBusyAddress) ) 

#define _ContactItem_put_InternetFreeBusyAddress(This,InternetFreeBusyAddress)	\
    ( (This)->lpVtbl -> put_InternetFreeBusyAddress(This,InternetFreeBusyAddress) ) 

#define _ContactItem_get_ISDNNumber(This,ISDNNumber)	\
    ( (This)->lpVtbl -> get_ISDNNumber(This,ISDNNumber) ) 

#define _ContactItem_put_ISDNNumber(This,ISDNNumber)	\
    ( (This)->lpVtbl -> put_ISDNNumber(This,ISDNNumber) ) 

#define _ContactItem_get_JobTitle(This,JobTitle)	\
    ( (This)->lpVtbl -> get_JobTitle(This,JobTitle) ) 

#define _ContactItem_put_JobTitle(This,JobTitle)	\
    ( (This)->lpVtbl -> put_JobTitle(This,JobTitle) ) 

#define _ContactItem_get_Journal(This,Journal)	\
    ( (This)->lpVtbl -> get_Journal(This,Journal) ) 

#define _ContactItem_put_Journal(This,Journal)	\
    ( (This)->lpVtbl -> put_Journal(This,Journal) ) 

#define _ContactItem_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define _ContactItem_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define _ContactItem_get_LastFirstAndSuffix(This,LastFirstAndSuffix)	\
    ( (This)->lpVtbl -> get_LastFirstAndSuffix(This,LastFirstAndSuffix) ) 

#define _ContactItem_get_LastFirstNoSpace(This,LastFirstNoSpace)	\
    ( (This)->lpVtbl -> get_LastFirstNoSpace(This,LastFirstNoSpace) ) 

#define _ContactItem_get_LastFirstNoSpaceCompany(This,LastFirstNoSpaceCompany)	\
    ( (This)->lpVtbl -> get_LastFirstNoSpaceCompany(This,LastFirstNoSpaceCompany) ) 

#define _ContactItem_get_LastFirstSpaceOnly(This,LastFirstSpaceOnly)	\
    ( (This)->lpVtbl -> get_LastFirstSpaceOnly(This,LastFirstSpaceOnly) ) 

#define _ContactItem_get_LastFirstSpaceOnlyCompany(This,LastFirstSpaceOnlyCompany)	\
    ( (This)->lpVtbl -> get_LastFirstSpaceOnlyCompany(This,LastFirstSpaceOnlyCompany) ) 

#define _ContactItem_get_LastName(This,LastName)	\
    ( (This)->lpVtbl -> get_LastName(This,LastName) ) 

#define _ContactItem_put_LastName(This,LastName)	\
    ( (This)->lpVtbl -> put_LastName(This,LastName) ) 

#define _ContactItem_get_LastNameAndFirstName(This,LastNameAndFirstName)	\
    ( (This)->lpVtbl -> get_LastNameAndFirstName(This,LastNameAndFirstName) ) 

#define _ContactItem_get_MailingAddress(This,MailingAddress)	\
    ( (This)->lpVtbl -> get_MailingAddress(This,MailingAddress) ) 

#define _ContactItem_put_MailingAddress(This,MailingAddress)	\
    ( (This)->lpVtbl -> put_MailingAddress(This,MailingAddress) ) 

#define _ContactItem_get_MailingAddressCity(This,MailingAddressCity)	\
    ( (This)->lpVtbl -> get_MailingAddressCity(This,MailingAddressCity) ) 

#define _ContactItem_put_MailingAddressCity(This,MailingAddressCity)	\
    ( (This)->lpVtbl -> put_MailingAddressCity(This,MailingAddressCity) ) 

#define _ContactItem_get_MailingAddressCountry(This,MailingAddressCountry)	\
    ( (This)->lpVtbl -> get_MailingAddressCountry(This,MailingAddressCountry) ) 

#define _ContactItem_put_MailingAddressCountry(This,MailingAddressCountry)	\
    ( (This)->lpVtbl -> put_MailingAddressCountry(This,MailingAddressCountry) ) 

#define _ContactItem_get_MailingAddressPostalCode(This,MailingAddressPostalCode)	\
    ( (This)->lpVtbl -> get_MailingAddressPostalCode(This,MailingAddressPostalCode) ) 

#define _ContactItem_put_MailingAddressPostalCode(This,MailingAddressPostalCode)	\
    ( (This)->lpVtbl -> put_MailingAddressPostalCode(This,MailingAddressPostalCode) ) 

#define _ContactItem_get_MailingAddressPostOfficeBox(This,MailingAddressPostOfficeBox)	\
    ( (This)->lpVtbl -> get_MailingAddressPostOfficeBox(This,MailingAddressPostOfficeBox) ) 

#define _ContactItem_put_MailingAddressPostOfficeBox(This,MailingAddressPostOfficeBox)	\
    ( (This)->lpVtbl -> put_MailingAddressPostOfficeBox(This,MailingAddressPostOfficeBox) ) 

#define _ContactItem_get_MailingAddressState(This,MailingAddressState)	\
    ( (This)->lpVtbl -> get_MailingAddressState(This,MailingAddressState) ) 

#define _ContactItem_put_MailingAddressState(This,MailingAddressState)	\
    ( (This)->lpVtbl -> put_MailingAddressState(This,MailingAddressState) ) 

#define _ContactItem_get_MailingAddressStreet(This,MailingAddressStreet)	\
    ( (This)->lpVtbl -> get_MailingAddressStreet(This,MailingAddressStreet) ) 

#define _ContactItem_put_MailingAddressStreet(This,MailingAddressStreet)	\
    ( (This)->lpVtbl -> put_MailingAddressStreet(This,MailingAddressStreet) ) 

#define _ContactItem_get_ManagerName(This,ManagerName)	\
    ( (This)->lpVtbl -> get_ManagerName(This,ManagerName) ) 

#define _ContactItem_put_ManagerName(This,ManagerName)	\
    ( (This)->lpVtbl -> put_ManagerName(This,ManagerName) ) 

#define _ContactItem_get_MiddleName(This,MiddleName)	\
    ( (This)->lpVtbl -> get_MiddleName(This,MiddleName) ) 

#define _ContactItem_put_MiddleName(This,MiddleName)	\
    ( (This)->lpVtbl -> put_MiddleName(This,MiddleName) ) 

#define _ContactItem_get_MobileTelephoneNumber(This,MobileTelephoneNumber)	\
    ( (This)->lpVtbl -> get_MobileTelephoneNumber(This,MobileTelephoneNumber) ) 

#define _ContactItem_put_MobileTelephoneNumber(This,MobileTelephoneNumber)	\
    ( (This)->lpVtbl -> put_MobileTelephoneNumber(This,MobileTelephoneNumber) ) 

#define _ContactItem_get_NetMeetingAlias(This,NetMeetingAlias)	\
    ( (This)->lpVtbl -> get_NetMeetingAlias(This,NetMeetingAlias) ) 

#define _ContactItem_put_NetMeetingAlias(This,NetMeetingAlias)	\
    ( (This)->lpVtbl -> put_NetMeetingAlias(This,NetMeetingAlias) ) 

#define _ContactItem_get_NetMeetingServer(This,NetMeetingServer)	\
    ( (This)->lpVtbl -> get_NetMeetingServer(This,NetMeetingServer) ) 

#define _ContactItem_put_NetMeetingServer(This,NetMeetingServer)	\
    ( (This)->lpVtbl -> put_NetMeetingServer(This,NetMeetingServer) ) 

#define _ContactItem_get_NickName(This,NickName)	\
    ( (This)->lpVtbl -> get_NickName(This,NickName) ) 

#define _ContactItem_put_NickName(This,NickName)	\
    ( (This)->lpVtbl -> put_NickName(This,NickName) ) 

#define _ContactItem_get_OfficeLocation(This,OfficeLocation)	\
    ( (This)->lpVtbl -> get_OfficeLocation(This,OfficeLocation) ) 

#define _ContactItem_put_OfficeLocation(This,OfficeLocation)	\
    ( (This)->lpVtbl -> put_OfficeLocation(This,OfficeLocation) ) 

#define _ContactItem_get_OrganizationalIDNumber(This,OrganizationalIDNumber)	\
    ( (This)->lpVtbl -> get_OrganizationalIDNumber(This,OrganizationalIDNumber) ) 

#define _ContactItem_put_OrganizationalIDNumber(This,OrganizationalIDNumber)	\
    ( (This)->lpVtbl -> put_OrganizationalIDNumber(This,OrganizationalIDNumber) ) 

#define _ContactItem_get_OtherAddress(This,OtherAddress)	\
    ( (This)->lpVtbl -> get_OtherAddress(This,OtherAddress) ) 

#define _ContactItem_put_OtherAddress(This,OtherAddress)	\
    ( (This)->lpVtbl -> put_OtherAddress(This,OtherAddress) ) 

#define _ContactItem_get_OtherAddressCity(This,OtherAddressCity)	\
    ( (This)->lpVtbl -> get_OtherAddressCity(This,OtherAddressCity) ) 

#define _ContactItem_put_OtherAddressCity(This,OtherAddressCity)	\
    ( (This)->lpVtbl -> put_OtherAddressCity(This,OtherAddressCity) ) 

#define _ContactItem_get_OtherAddressCountry(This,OtherAddressCountry)	\
    ( (This)->lpVtbl -> get_OtherAddressCountry(This,OtherAddressCountry) ) 

#define _ContactItem_put_OtherAddressCountry(This,OtherAddressCountry)	\
    ( (This)->lpVtbl -> put_OtherAddressCountry(This,OtherAddressCountry) ) 

#define _ContactItem_get_OtherAddressPostalCode(This,OtherAddressPostalCode)	\
    ( (This)->lpVtbl -> get_OtherAddressPostalCode(This,OtherAddressPostalCode) ) 

#define _ContactItem_put_OtherAddressPostalCode(This,OtherAddressPostalCode)	\
    ( (This)->lpVtbl -> put_OtherAddressPostalCode(This,OtherAddressPostalCode) ) 

#define _ContactItem_get_OtherAddressPostOfficeBox(This,OtherAddressPostOfficeBox)	\
    ( (This)->lpVtbl -> get_OtherAddressPostOfficeBox(This,OtherAddressPostOfficeBox) ) 

#define _ContactItem_put_OtherAddressPostOfficeBox(This,OtherAddressPostOfficeBox)	\
    ( (This)->lpVtbl -> put_OtherAddressPostOfficeBox(This,OtherAddressPostOfficeBox) ) 

#define _ContactItem_get_OtherAddressState(This,OtherAddressState)	\
    ( (This)->lpVtbl -> get_OtherAddressState(This,OtherAddressState) ) 

#define _ContactItem_put_OtherAddressState(This,OtherAddressState)	\
    ( (This)->lpVtbl -> put_OtherAddressState(This,OtherAddressState) ) 

#define _ContactItem_get_OtherAddressStreet(This,OtherAddressStreet)	\
    ( (This)->lpVtbl -> get_OtherAddressStreet(This,OtherAddressStreet) ) 

#define _ContactItem_put_OtherAddressStreet(This,OtherAddressStreet)	\
    ( (This)->lpVtbl -> put_OtherAddressStreet(This,OtherAddressStreet) ) 

#define _ContactItem_get_OtherFaxNumber(This,OtherFaxNumber)	\
    ( (This)->lpVtbl -> get_OtherFaxNumber(This,OtherFaxNumber) ) 

#define _ContactItem_put_OtherFaxNumber(This,OtherFaxNumber)	\
    ( (This)->lpVtbl -> put_OtherFaxNumber(This,OtherFaxNumber) ) 

#define _ContactItem_get_OtherTelephoneNumber(This,OtherTelephoneNumber)	\
    ( (This)->lpVtbl -> get_OtherTelephoneNumber(This,OtherTelephoneNumber) ) 

#define _ContactItem_put_OtherTelephoneNumber(This,OtherTelephoneNumber)	\
    ( (This)->lpVtbl -> put_OtherTelephoneNumber(This,OtherTelephoneNumber) ) 

#define _ContactItem_get_PagerNumber(This,PagerNumber)	\
    ( (This)->lpVtbl -> get_PagerNumber(This,PagerNumber) ) 

#define _ContactItem_put_PagerNumber(This,PagerNumber)	\
    ( (This)->lpVtbl -> put_PagerNumber(This,PagerNumber) ) 

#define _ContactItem_get_PersonalHomePage(This,PersonalHomePage)	\
    ( (This)->lpVtbl -> get_PersonalHomePage(This,PersonalHomePage) ) 

#define _ContactItem_put_PersonalHomePage(This,PersonalHomePage)	\
    ( (This)->lpVtbl -> put_PersonalHomePage(This,PersonalHomePage) ) 

#define _ContactItem_get_PrimaryTelephoneNumber(This,PrimaryTelephoneNumber)	\
    ( (This)->lpVtbl -> get_PrimaryTelephoneNumber(This,PrimaryTelephoneNumber) ) 

#define _ContactItem_put_PrimaryTelephoneNumber(This,PrimaryTelephoneNumber)	\
    ( (This)->lpVtbl -> put_PrimaryTelephoneNumber(This,PrimaryTelephoneNumber) ) 

#define _ContactItem_get_Profession(This,Profession)	\
    ( (This)->lpVtbl -> get_Profession(This,Profession) ) 

#define _ContactItem_put_Profession(This,Profession)	\
    ( (This)->lpVtbl -> put_Profession(This,Profession) ) 

#define _ContactItem_get_RadioTelephoneNumber(This,RadioTelephoneNumber)	\
    ( (This)->lpVtbl -> get_RadioTelephoneNumber(This,RadioTelephoneNumber) ) 

#define _ContactItem_put_RadioTelephoneNumber(This,RadioTelephoneNumber)	\
    ( (This)->lpVtbl -> put_RadioTelephoneNumber(This,RadioTelephoneNumber) ) 

#define _ContactItem_get_ReferredBy(This,ReferredBy)	\
    ( (This)->lpVtbl -> get_ReferredBy(This,ReferredBy) ) 

#define _ContactItem_put_ReferredBy(This,ReferredBy)	\
    ( (This)->lpVtbl -> put_ReferredBy(This,ReferredBy) ) 

#define _ContactItem_get_SelectedMailingAddress(This,SelectedMailingAddress)	\
    ( (This)->lpVtbl -> get_SelectedMailingAddress(This,SelectedMailingAddress) ) 

#define _ContactItem_put_SelectedMailingAddress(This,SelectedMailingAddress)	\
    ( (This)->lpVtbl -> put_SelectedMailingAddress(This,SelectedMailingAddress) ) 

#define _ContactItem_get_Spouse(This,Spouse)	\
    ( (This)->lpVtbl -> get_Spouse(This,Spouse) ) 

#define _ContactItem_put_Spouse(This,Spouse)	\
    ( (This)->lpVtbl -> put_Spouse(This,Spouse) ) 

#define _ContactItem_get_Suffix(This,Suffix)	\
    ( (This)->lpVtbl -> get_Suffix(This,Suffix) ) 

#define _ContactItem_put_Suffix(This,Suffix)	\
    ( (This)->lpVtbl -> put_Suffix(This,Suffix) ) 

#define _ContactItem_get_TelexNumber(This,TelexNumber)	\
    ( (This)->lpVtbl -> get_TelexNumber(This,TelexNumber) ) 

#define _ContactItem_put_TelexNumber(This,TelexNumber)	\
    ( (This)->lpVtbl -> put_TelexNumber(This,TelexNumber) ) 

#define _ContactItem_get_Title(This,Title)	\
    ( (This)->lpVtbl -> get_Title(This,Title) ) 

#define _ContactItem_put_Title(This,Title)	\
    ( (This)->lpVtbl -> put_Title(This,Title) ) 

#define _ContactItem_get_TTYTDDTelephoneNumber(This,TTYTDDTelephoneNumber)	\
    ( (This)->lpVtbl -> get_TTYTDDTelephoneNumber(This,TTYTDDTelephoneNumber) ) 

#define _ContactItem_put_TTYTDDTelephoneNumber(This,TTYTDDTelephoneNumber)	\
    ( (This)->lpVtbl -> put_TTYTDDTelephoneNumber(This,TTYTDDTelephoneNumber) ) 

#define _ContactItem_get_User1(This,User1)	\
    ( (This)->lpVtbl -> get_User1(This,User1) ) 

#define _ContactItem_put_User1(This,User1)	\
    ( (This)->lpVtbl -> put_User1(This,User1) ) 

#define _ContactItem_get_User2(This,User2)	\
    ( (This)->lpVtbl -> get_User2(This,User2) ) 

#define _ContactItem_put_User2(This,User2)	\
    ( (This)->lpVtbl -> put_User2(This,User2) ) 

#define _ContactItem_get_User3(This,User3)	\
    ( (This)->lpVtbl -> get_User3(This,User3) ) 

#define _ContactItem_put_User3(This,User3)	\
    ( (This)->lpVtbl -> put_User3(This,User3) ) 

#define _ContactItem_get_User4(This,User4)	\
    ( (This)->lpVtbl -> get_User4(This,User4) ) 

#define _ContactItem_put_User4(This,User4)	\
    ( (This)->lpVtbl -> put_User4(This,User4) ) 

#define _ContactItem_get_UserCertificate(This,UserCertificate)	\
    ( (This)->lpVtbl -> get_UserCertificate(This,UserCertificate) ) 

#define _ContactItem_put_UserCertificate(This,UserCertificate)	\
    ( (This)->lpVtbl -> put_UserCertificate(This,UserCertificate) ) 

#define _ContactItem_get_WebPage(This,WebPage)	\
    ( (This)->lpVtbl -> get_WebPage(This,WebPage) ) 

#define _ContactItem_put_WebPage(This,WebPage)	\
    ( (This)->lpVtbl -> put_WebPage(This,WebPage) ) 

#define _ContactItem_get_YomiCompanyName(This,YomiCompanyName)	\
    ( (This)->lpVtbl -> get_YomiCompanyName(This,YomiCompanyName) ) 

#define _ContactItem_put_YomiCompanyName(This,YomiCompanyName)	\
    ( (This)->lpVtbl -> put_YomiCompanyName(This,YomiCompanyName) ) 

#define _ContactItem_get_YomiFirstName(This,YomiFirstName)	\
    ( (This)->lpVtbl -> get_YomiFirstName(This,YomiFirstName) ) 

#define _ContactItem_put_YomiFirstName(This,YomiFirstName)	\
    ( (This)->lpVtbl -> put_YomiFirstName(This,YomiFirstName) ) 

#define _ContactItem_get_YomiLastName(This,YomiLastName)	\
    ( (This)->lpVtbl -> get_YomiLastName(This,YomiLastName) ) 

#define _ContactItem_put_YomiLastName(This,YomiLastName)	\
    ( (This)->lpVtbl -> put_YomiLastName(This,YomiLastName) ) 

#define _ContactItem_ForwardAsVcard(This,Item)	\
    ( (This)->lpVtbl -> ForwardAsVcard(This,Item) ) 

#define _ContactItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _ContactItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _ContactItem_get_LastFirstNoSpaceAndSuffix(This,LastFirstNoSpaceAndSuffix)	\
    ( (This)->lpVtbl -> get_LastFirstNoSpaceAndSuffix(This,LastFirstNoSpaceAndSuffix) ) 

#define _ContactItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _ContactItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _ContactItem_get_IMAddress(This,IMAddress)	\
    ( (This)->lpVtbl -> get_IMAddress(This,IMAddress) ) 

#define _ContactItem_put_IMAddress(This,IMAddress)	\
    ( (This)->lpVtbl -> put_IMAddress(This,IMAddress) ) 

#define _ContactItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _ContactItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _ContactItem_put_Email1DisplayName(This,Email1DisplayName)	\
    ( (This)->lpVtbl -> put_Email1DisplayName(This,Email1DisplayName) ) 

#define _ContactItem_put_Email2DisplayName(This,Email2DisplayName)	\
    ( (This)->lpVtbl -> put_Email2DisplayName(This,Email2DisplayName) ) 

#define _ContactItem_put_Email3DisplayName(This,Email3DisplayName)	\
    ( (This)->lpVtbl -> put_Email3DisplayName(This,Email3DisplayName) ) 

#define _ContactItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _ContactItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _ContactItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _ContactItem_AddPicture(This,Path)	\
    ( (This)->lpVtbl -> AddPicture(This,Path) ) 

#define _ContactItem_RemovePicture(This)	\
    ( (This)->lpVtbl -> RemovePicture(This) ) 

#define _ContactItem_get_HasPicture(This,HasPicture)	\
    ( (This)->lpVtbl -> get_HasPicture(This,HasPicture) ) 

#define _ContactItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _ContactItem_ForwardAsBusinessCard(This,Item)	\
    ( (This)->lpVtbl -> ForwardAsBusinessCard(This,Item) ) 

#define _ContactItem_ShowBusinessCardEditor(This)	\
    ( (This)->lpVtbl -> ShowBusinessCardEditor(This) ) 

#define _ContactItem_SaveBusinessCardImage(This,Path)	\
    ( (This)->lpVtbl -> SaveBusinessCardImage(This,Path) ) 

#define _ContactItem_ShowCheckPhoneDialog(This,PhoneNumber)	\
    ( (This)->lpVtbl -> ShowCheckPhoneDialog(This,PhoneNumber) ) 

#define _ContactItem_get_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> get_TaskSubject(This,TaskSubject) ) 

#define _ContactItem_put_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> put_TaskSubject(This,TaskSubject) ) 

#define _ContactItem_get_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> get_TaskDueDate(This,TaskDueDate) ) 

#define _ContactItem_put_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> put_TaskDueDate(This,TaskDueDate) ) 

#define _ContactItem_get_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> get_TaskStartDate(This,TaskStartDate) ) 

#define _ContactItem_put_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> put_TaskStartDate(This,TaskStartDate) ) 

#define _ContactItem_get_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> get_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _ContactItem_put_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> put_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _ContactItem_get_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> get_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _ContactItem_put_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> put_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _ContactItem_get_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> get_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _ContactItem_put_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> put_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _ContactItem_get_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> get_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _ContactItem_put_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> put_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _ContactItem_get_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> get_ReminderSet(This,ReminderSet) ) 

#define _ContactItem_put_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> put_ReminderSet(This,ReminderSet) ) 

#define _ContactItem_get_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> get_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _ContactItem_put_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> put_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _ContactItem_get_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> get_ReminderTime(This,ReminderTime) ) 

#define _ContactItem_put_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> put_ReminderTime(This,ReminderTime) ) 

#define _ContactItem_MarkAsTask(This,MarkInterval)	\
    ( (This)->lpVtbl -> MarkAsTask(This,MarkInterval) ) 

#define _ContactItem_ClearTaskFlag(This)	\
    ( (This)->lpVtbl -> ClearTaskFlag(This) ) 

#define _ContactItem_get_IsMarkedAsTask(This,IsMarkedAsTask)	\
    ( (This)->lpVtbl -> get_IsMarkedAsTask(This,IsMarkedAsTask) ) 

#define _ContactItem_get_BusinessCardLayoutXml(This,BusinessCardLayoutXml)	\
    ( (This)->lpVtbl -> get_BusinessCardLayoutXml(This,BusinessCardLayoutXml) ) 

#define _ContactItem_put_BusinessCardLayoutXml(This,BusinessCardLayoutXml)	\
    ( (This)->lpVtbl -> put_BusinessCardLayoutXml(This,BusinessCardLayoutXml) ) 

#define _ContactItem_ResetBusinessCard(This)	\
    ( (This)->lpVtbl -> ResetBusinessCard(This) ) 

#define _ContactItem_AddBusinessCardLogoPicture(This,Path)	\
    ( (This)->lpVtbl -> AddBusinessCardLogoPicture(This,Path) ) 

#define _ContactItem_get_BusinessCardType(This,BusinessCardType)	\
    ( (This)->lpVtbl -> get_BusinessCardType(This,BusinessCardType) ) 

#define _ContactItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _ContactItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _ContactItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _ContactItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#define _ContactItem_ShowCheckFullNameDialog(This)	\
    ( (This)->lpVtbl -> ShowCheckFullNameDialog(This) ) 

#define _ContactItem_ShowCheckAddressDialog(This,MailingAddress)	\
    ( (This)->lpVtbl -> ShowCheckAddressDialog(This,MailingAddress) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_FirstName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR FirstName);


void __RPC_STUB _ContactItem_put_FirstName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_FTPSite_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *FTPSite);


void __RPC_STUB _ContactItem_get_FTPSite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_FTPSite_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR FTPSite);


void __RPC_STUB _ContactItem_put_FTPSite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_FullName_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *FullName);


void __RPC_STUB _ContactItem_get_FullName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_FullName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR FullName);


void __RPC_STUB _ContactItem_put_FullName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_FullNameAndCompany_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *FullNameAndCompany);


void __RPC_STUB _ContactItem_get_FullNameAndCompany_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Gender_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ OlGender *Gender);


void __RPC_STUB _ContactItem_get_Gender_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Gender_Proxy( 
    _ContactItem * This,
    /* [in] */ OlGender Gender);


void __RPC_STUB _ContactItem_put_Gender_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_GovernmentIDNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *GovernmentIDNumber);


void __RPC_STUB _ContactItem_get_GovernmentIDNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_GovernmentIDNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR GovernmentIDNumber);


void __RPC_STUB _ContactItem_put_GovernmentIDNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Hobby_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *Hobby);


void __RPC_STUB _ContactItem_get_Hobby_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Hobby_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Hobby);


void __RPC_STUB _ContactItem_put_Hobby_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Home2TelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *Home2TelephoneNumber);


void __RPC_STUB _ContactItem_get_Home2TelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Home2TelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Home2TelephoneNumber);


void __RPC_STUB _ContactItem_put_Home2TelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HomeAddress_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *HomeAddress);


void __RPC_STUB _ContactItem_get_HomeAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_HomeAddress_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR HomeAddress);


void __RPC_STUB _ContactItem_put_HomeAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HomeAddressCity_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *HomeAddressCity);


void __RPC_STUB _ContactItem_get_HomeAddressCity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_HomeAddressCity_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR HomeAddressCity);


void __RPC_STUB _ContactItem_put_HomeAddressCity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HomeAddressCountry_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *HomeAddressCountry);


void __RPC_STUB _ContactItem_get_HomeAddressCountry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_HomeAddressCountry_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR HomeAddressCountry);


void __RPC_STUB _ContactItem_put_HomeAddressCountry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HomeAddressPostalCode_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *HomeAddressPostalCode);


void __RPC_STUB _ContactItem_get_HomeAddressPostalCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_HomeAddressPostalCode_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR HomeAddressPostalCode);


void __RPC_STUB _ContactItem_put_HomeAddressPostalCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HomeAddressPostOfficeBox_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *HomeAddressPostOfficeBox);


void __RPC_STUB _ContactItem_get_HomeAddressPostOfficeBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_HomeAddressPostOfficeBox_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR HomeAddressPostOfficeBox);


void __RPC_STUB _ContactItem_put_HomeAddressPostOfficeBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HomeAddressState_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *HomeAddressState);


void __RPC_STUB _ContactItem_get_HomeAddressState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_HomeAddressState_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR HomeAddressState);


void __RPC_STUB _ContactItem_put_HomeAddressState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HomeAddressStreet_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *HomeAddressStreet);


void __RPC_STUB _ContactItem_get_HomeAddressStreet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_HomeAddressStreet_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR HomeAddressStreet);


void __RPC_STUB _ContactItem_put_HomeAddressStreet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HomeFaxNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *HomeFaxNumber);


void __RPC_STUB _ContactItem_get_HomeFaxNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_HomeFaxNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR HomeFaxNumber);


void __RPC_STUB _ContactItem_put_HomeFaxNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HomeTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *HomeTelephoneNumber);


void __RPC_STUB _ContactItem_get_HomeTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_HomeTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR HomeTelephoneNumber);


void __RPC_STUB _ContactItem_put_HomeTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Initials_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *Initials);


void __RPC_STUB _ContactItem_get_Initials_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Initials_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Initials);


void __RPC_STUB _ContactItem_put_Initials_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_InternetFreeBusyAddress_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *InternetFreeBusyAddress);


void __RPC_STUB _ContactItem_get_InternetFreeBusyAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_InternetFreeBusyAddress_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR InternetFreeBusyAddress);


void __RPC_STUB _ContactItem_put_InternetFreeBusyAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ISDNNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *ISDNNumber);


void __RPC_STUB _ContactItem_get_ISDNNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_ISDNNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR ISDNNumber);


void __RPC_STUB _ContactItem_put_ISDNNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_JobTitle_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *JobTitle);


void __RPC_STUB _ContactItem_get_JobTitle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_JobTitle_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR JobTitle);


void __RPC_STUB _ContactItem_put_JobTitle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Journal_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ VARIANT_BOOL *Journal);


void __RPC_STUB _ContactItem_get_Journal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Journal_Proxy( 
    _ContactItem * This,
    /* [in] */ VARIANT_BOOL Journal);


void __RPC_STUB _ContactItem_put_Journal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Language_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *Language);


void __RPC_STUB _ContactItem_get_Language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Language_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Language);


void __RPC_STUB _ContactItem_put_Language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_LastFirstAndSuffix_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *LastFirstAndSuffix);


void __RPC_STUB _ContactItem_get_LastFirstAndSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_LastFirstNoSpace_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *LastFirstNoSpace);


void __RPC_STUB _ContactItem_get_LastFirstNoSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_LastFirstNoSpaceCompany_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *LastFirstNoSpaceCompany);


void __RPC_STUB _ContactItem_get_LastFirstNoSpaceCompany_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_LastFirstSpaceOnly_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *LastFirstSpaceOnly);


void __RPC_STUB _ContactItem_get_LastFirstSpaceOnly_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_LastFirstSpaceOnlyCompany_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *LastFirstSpaceOnlyCompany);


void __RPC_STUB _ContactItem_get_LastFirstSpaceOnlyCompany_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_LastName_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *LastName);


void __RPC_STUB _ContactItem_get_LastName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_LastName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR LastName);


void __RPC_STUB _ContactItem_put_LastName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_LastNameAndFirstName_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *LastNameAndFirstName);


void __RPC_STUB _ContactItem_get_LastNameAndFirstName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MailingAddress_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *MailingAddress);


void __RPC_STUB _ContactItem_get_MailingAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MailingAddress_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR MailingAddress);


void __RPC_STUB _ContactItem_put_MailingAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MailingAddressCity_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *MailingAddressCity);


void __RPC_STUB _ContactItem_get_MailingAddressCity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MailingAddressCity_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR MailingAddressCity);


void __RPC_STUB _ContactItem_put_MailingAddressCity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MailingAddressCountry_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *MailingAddressCountry);


void __RPC_STUB _ContactItem_get_MailingAddressCountry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MailingAddressCountry_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR MailingAddressCountry);


void __RPC_STUB _ContactItem_put_MailingAddressCountry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MailingAddressPostalCode_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *MailingAddressPostalCode);


void __RPC_STUB _ContactItem_get_MailingAddressPostalCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MailingAddressPostalCode_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR MailingAddressPostalCode);


void __RPC_STUB _ContactItem_put_MailingAddressPostalCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MailingAddressPostOfficeBox_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *MailingAddressPostOfficeBox);


void __RPC_STUB _ContactItem_get_MailingAddressPostOfficeBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MailingAddressPostOfficeBox_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR MailingAddressPostOfficeBox);


void __RPC_STUB _ContactItem_put_MailingAddressPostOfficeBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MailingAddressState_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *MailingAddressState);


void __RPC_STUB _ContactItem_get_MailingAddressState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MailingAddressState_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR MailingAddressState);


void __RPC_STUB _ContactItem_put_MailingAddressState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MailingAddressStreet_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *MailingAddressStreet);


void __RPC_STUB _ContactItem_get_MailingAddressStreet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MailingAddressStreet_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR MailingAddressStreet);


void __RPC_STUB _ContactItem_put_MailingAddressStreet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ManagerName_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *ManagerName);


void __RPC_STUB _ContactItem_get_ManagerName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_ManagerName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR ManagerName);


void __RPC_STUB _ContactItem_put_ManagerName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MiddleName_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *MiddleName);


void __RPC_STUB _ContactItem_get_MiddleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MiddleName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR MiddleName);


void __RPC_STUB _ContactItem_put_MiddleName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MobileTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *MobileTelephoneNumber);


void __RPC_STUB _ContactItem_get_MobileTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MobileTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR MobileTelephoneNumber);


void __RPC_STUB _ContactItem_put_MobileTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_NetMeetingAlias_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *NetMeetingAlias);


void __RPC_STUB _ContactItem_get_NetMeetingAlias_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_NetMeetingAlias_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR NetMeetingAlias);


void __RPC_STUB _ContactItem_put_NetMeetingAlias_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_NetMeetingServer_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *NetMeetingServer);


void __RPC_STUB _ContactItem_get_NetMeetingServer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_NetMeetingServer_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR NetMeetingServer);


void __RPC_STUB _ContactItem_put_NetMeetingServer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_NickName_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *NickName);


void __RPC_STUB _ContactItem_get_NickName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_NickName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR NickName);


void __RPC_STUB _ContactItem_put_NickName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OfficeLocation_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OfficeLocation);


void __RPC_STUB _ContactItem_get_OfficeLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OfficeLocation_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OfficeLocation);


void __RPC_STUB _ContactItem_put_OfficeLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OrganizationalIDNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OrganizationalIDNumber);


void __RPC_STUB _ContactItem_get_OrganizationalIDNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OrganizationalIDNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OrganizationalIDNumber);


void __RPC_STUB _ContactItem_put_OrganizationalIDNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OtherAddress_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OtherAddress);


void __RPC_STUB _ContactItem_get_OtherAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OtherAddress_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OtherAddress);


void __RPC_STUB _ContactItem_put_OtherAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OtherAddressCity_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OtherAddressCity);


void __RPC_STUB _ContactItem_get_OtherAddressCity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OtherAddressCity_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OtherAddressCity);


void __RPC_STUB _ContactItem_put_OtherAddressCity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OtherAddressCountry_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OtherAddressCountry);


void __RPC_STUB _ContactItem_get_OtherAddressCountry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OtherAddressCountry_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OtherAddressCountry);


void __RPC_STUB _ContactItem_put_OtherAddressCountry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OtherAddressPostalCode_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OtherAddressPostalCode);


void __RPC_STUB _ContactItem_get_OtherAddressPostalCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OtherAddressPostalCode_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OtherAddressPostalCode);


void __RPC_STUB _ContactItem_put_OtherAddressPostalCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OtherAddressPostOfficeBox_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OtherAddressPostOfficeBox);


void __RPC_STUB _ContactItem_get_OtherAddressPostOfficeBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OtherAddressPostOfficeBox_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OtherAddressPostOfficeBox);


void __RPC_STUB _ContactItem_put_OtherAddressPostOfficeBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OtherAddressState_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OtherAddressState);


void __RPC_STUB _ContactItem_get_OtherAddressState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OtherAddressState_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OtherAddressState);


void __RPC_STUB _ContactItem_put_OtherAddressState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OtherAddressStreet_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OtherAddressStreet);


void __RPC_STUB _ContactItem_get_OtherAddressStreet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OtherAddressStreet_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OtherAddressStreet);


void __RPC_STUB _ContactItem_put_OtherAddressStreet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OtherFaxNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OtherFaxNumber);


void __RPC_STUB _ContactItem_get_OtherFaxNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OtherFaxNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OtherFaxNumber);


void __RPC_STUB _ContactItem_put_OtherFaxNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_OtherTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *OtherTelephoneNumber);


void __RPC_STUB _ContactItem_get_OtherTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_OtherTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR OtherTelephoneNumber);


void __RPC_STUB _ContactItem_put_OtherTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_PagerNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *PagerNumber);


void __RPC_STUB _ContactItem_get_PagerNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_PagerNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR PagerNumber);


void __RPC_STUB _ContactItem_put_PagerNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_PersonalHomePage_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *PersonalHomePage);


void __RPC_STUB _ContactItem_get_PersonalHomePage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_PersonalHomePage_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR PersonalHomePage);


void __RPC_STUB _ContactItem_put_PersonalHomePage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_PrimaryTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *PrimaryTelephoneNumber);


void __RPC_STUB _ContactItem_get_PrimaryTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_PrimaryTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR PrimaryTelephoneNumber);


void __RPC_STUB _ContactItem_put_PrimaryTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Profession_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *Profession);


void __RPC_STUB _ContactItem_get_Profession_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Profession_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Profession);


void __RPC_STUB _ContactItem_put_Profession_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_RadioTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *RadioTelephoneNumber);


void __RPC_STUB _ContactItem_get_RadioTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_RadioTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR RadioTelephoneNumber);


void __RPC_STUB _ContactItem_put_RadioTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ReferredBy_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *ReferredBy);


void __RPC_STUB _ContactItem_get_ReferredBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_ReferredBy_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR ReferredBy);


void __RPC_STUB _ContactItem_put_ReferredBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_SelectedMailingAddress_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ OlMailingAddress *SelectedMailingAddress);


void __RPC_STUB _ContactItem_get_SelectedMailingAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_SelectedMailingAddress_Proxy( 
    _ContactItem * This,
    /* [in] */ OlMailingAddress SelectedMailingAddress);


void __RPC_STUB _ContactItem_put_SelectedMailingAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Spouse_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *Spouse);


void __RPC_STUB _ContactItem_get_Spouse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Spouse_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Spouse);


void __RPC_STUB _ContactItem_put_Spouse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Suffix_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *Suffix);


void __RPC_STUB _ContactItem_get_Suffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Suffix_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Suffix);


void __RPC_STUB _ContactItem_put_Suffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_TelexNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *TelexNumber);


void __RPC_STUB _ContactItem_get_TelexNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_TelexNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR TelexNumber);


void __RPC_STUB _ContactItem_put_TelexNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Title_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *Title);


void __RPC_STUB _ContactItem_get_Title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Title_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Title);


void __RPC_STUB _ContactItem_put_Title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_TTYTDDTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *TTYTDDTelephoneNumber);


void __RPC_STUB _ContactItem_get_TTYTDDTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_TTYTDDTelephoneNumber_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR TTYTDDTelephoneNumber);


void __RPC_STUB _ContactItem_put_TTYTDDTelephoneNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_User1_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *User1);


void __RPC_STUB _ContactItem_get_User1_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_User1_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR User1);


void __RPC_STUB _ContactItem_put_User1_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_User2_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *User2);


void __RPC_STUB _ContactItem_get_User2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_User2_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR User2);


void __RPC_STUB _ContactItem_put_User2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_User3_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *User3);


void __RPC_STUB _ContactItem_get_User3_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_User3_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR User3);


void __RPC_STUB _ContactItem_put_User3_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_User4_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *User4);


void __RPC_STUB _ContactItem_get_User4_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_User4_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR User4);


void __RPC_STUB _ContactItem_put_User4_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_UserCertificate_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *UserCertificate);


void __RPC_STUB _ContactItem_get_UserCertificate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_UserCertificate_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR UserCertificate);


void __RPC_STUB _ContactItem_put_UserCertificate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_WebPage_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *WebPage);


void __RPC_STUB _ContactItem_get_WebPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_WebPage_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR WebPage);


void __RPC_STUB _ContactItem_put_WebPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_YomiCompanyName_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *YomiCompanyName);


void __RPC_STUB _ContactItem_get_YomiCompanyName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_YomiCompanyName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR YomiCompanyName);


void __RPC_STUB _ContactItem_put_YomiCompanyName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_YomiFirstName_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *YomiFirstName);


void __RPC_STUB _ContactItem_get_YomiFirstName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_YomiFirstName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR YomiFirstName);


void __RPC_STUB _ContactItem_put_YomiFirstName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_YomiLastName_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *YomiLastName);


void __RPC_STUB _ContactItem_get_YomiLastName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_YomiLastName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR YomiLastName);


void __RPC_STUB _ContactItem_put_YomiLastName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_ForwardAsVcard_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ _MailItem **Item);


void __RPC_STUB _ContactItem_ForwardAsVcard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Links_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ Links **Links);


void __RPC_STUB _ContactItem_get_Links_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ItemProperties_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ ItemProperties **ItemProperties);


void __RPC_STUB _ContactItem_get_ItemProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_LastFirstNoSpaceAndSuffix_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *LastFirstNoSpaceAndSuffix);


void __RPC_STUB _ContactItem_get_LastFirstNoSpaceAndSuffix_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_DownloadState_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ OlDownloadState *DownloadState);


void __RPC_STUB _ContactItem_get_DownloadState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_ShowCategoriesDialog_Proxy( 
    _ContactItem * This);


void __RPC_STUB _ContactItem_ShowCategoriesDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_IMAddress_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *IMAddress);


void __RPC_STUB _ContactItem_get_IMAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_IMAddress_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR IMAddress);


void __RPC_STUB _ContactItem_put_IMAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_MarkForDownload_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ OlRemoteStatus *MarkForDownload);


void __RPC_STUB _ContactItem_get_MarkForDownload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_MarkForDownload_Proxy( 
    _ContactItem * This,
    /* [in] */ OlRemoteStatus MarkForDownload);


void __RPC_STUB _ContactItem_put_MarkForDownload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Email1DisplayName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Email1DisplayName);


void __RPC_STUB _ContactItem_put_Email1DisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Email2DisplayName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Email2DisplayName);


void __RPC_STUB _ContactItem_put_Email2DisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_Email3DisplayName_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Email3DisplayName);


void __RPC_STUB _ContactItem_put_Email3DisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_IsConflict_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ VARIANT_BOOL *IsConflict);


void __RPC_STUB _ContactItem_get_IsConflict_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_AutoResolvedWinner_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);


void __RPC_STUB _ContactItem_get_AutoResolvedWinner_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_Conflicts_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ Conflicts **Conflicts);


void __RPC_STUB _ContactItem_get_Conflicts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_AddPicture_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Path);


void __RPC_STUB _ContactItem_AddPicture_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_RemovePicture_Proxy( 
    _ContactItem * This);


void __RPC_STUB _ContactItem_RemovePicture_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_HasPicture_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ VARIANT_BOOL *HasPicture);


void __RPC_STUB _ContactItem_get_HasPicture_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_PropertyAccessor_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ _PropertyAccessor **PropertyAccessor);


void __RPC_STUB _ContactItem_get_PropertyAccessor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_ForwardAsBusinessCard_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ _MailItem **Item);


void __RPC_STUB _ContactItem_ForwardAsBusinessCard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_ShowBusinessCardEditor_Proxy( 
    _ContactItem * This);


void __RPC_STUB _ContactItem_ShowBusinessCardEditor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_SaveBusinessCardImage_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Path);


void __RPC_STUB _ContactItem_SaveBusinessCardImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_ShowCheckPhoneDialog_Proxy( 
    _ContactItem * This,
    /* [in] */ OlContactPhoneNumber PhoneNumber);


void __RPC_STUB _ContactItem_ShowCheckPhoneDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_TaskSubject_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *TaskSubject);


void __RPC_STUB _ContactItem_get_TaskSubject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_TaskSubject_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR TaskSubject);


void __RPC_STUB _ContactItem_put_TaskSubject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_TaskDueDate_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ DATE *TaskDueDate);


void __RPC_STUB _ContactItem_get_TaskDueDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_TaskDueDate_Proxy( 
    _ContactItem * This,
    /* [in] */ DATE TaskDueDate);


void __RPC_STUB _ContactItem_put_TaskDueDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_TaskStartDate_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ DATE *TaskStartDate);


void __RPC_STUB _ContactItem_get_TaskStartDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_TaskStartDate_Proxy( 
    _ContactItem * This,
    /* [in] */ DATE TaskStartDate);


void __RPC_STUB _ContactItem_put_TaskStartDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_TaskCompletedDate_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ DATE *TaskCompletedDate);


void __RPC_STUB _ContactItem_get_TaskCompletedDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_TaskCompletedDate_Proxy( 
    _ContactItem * This,
    /* [in] */ DATE TaskCompletedDate);


void __RPC_STUB _ContactItem_put_TaskCompletedDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ToDoTaskOrdinal_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ DATE *ToDoTaskOrdinal);


void __RPC_STUB _ContactItem_get_ToDoTaskOrdinal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_ToDoTaskOrdinal_Proxy( 
    _ContactItem * This,
    /* [in] */ DATE ToDoTaskOrdinal);


void __RPC_STUB _ContactItem_put_ToDoTaskOrdinal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ReminderOverrideDefault_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault);


void __RPC_STUB _ContactItem_get_ReminderOverrideDefault_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_ReminderOverrideDefault_Proxy( 
    _ContactItem * This,
    /* [in] */ VARIANT_BOOL ReminderOverrideDefault);


void __RPC_STUB _ContactItem_put_ReminderOverrideDefault_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ReminderPlaySound_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound);


void __RPC_STUB _ContactItem_get_ReminderPlaySound_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_ReminderPlaySound_Proxy( 
    _ContactItem * This,
    /* [in] */ VARIANT_BOOL ReminderPlaySound);


void __RPC_STUB _ContactItem_put_ReminderPlaySound_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ReminderSet_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ VARIANT_BOOL *ReminderSet);


void __RPC_STUB _ContactItem_get_ReminderSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_ReminderSet_Proxy( 
    _ContactItem * This,
    /* [in] */ VARIANT_BOOL ReminderSet);


void __RPC_STUB _ContactItem_put_ReminderSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ReminderSoundFile_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *ReminderSoundFile);


void __RPC_STUB _ContactItem_get_ReminderSoundFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_ReminderSoundFile_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR ReminderSoundFile);


void __RPC_STUB _ContactItem_put_ReminderSoundFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ReminderTime_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ DATE *ReminderTime);


void __RPC_STUB _ContactItem_get_ReminderTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_ReminderTime_Proxy( 
    _ContactItem * This,
    /* [in] */ DATE ReminderTime);


void __RPC_STUB _ContactItem_put_ReminderTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_MarkAsTask_Proxy( 
    _ContactItem * This,
    /* [in] */ OlMarkInterval MarkInterval);


void __RPC_STUB _ContactItem_MarkAsTask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_ClearTaskFlag_Proxy( 
    _ContactItem * This);


void __RPC_STUB _ContactItem_ClearTaskFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_IsMarkedAsTask_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask);


void __RPC_STUB _ContactItem_get_IsMarkedAsTask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_BusinessCardLayoutXml_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *BusinessCardLayoutXml);


void __RPC_STUB _ContactItem_get_BusinessCardLayoutXml_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_BusinessCardLayoutXml_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR BusinessCardLayoutXml);


void __RPC_STUB _ContactItem_put_BusinessCardLayoutXml_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_ResetBusinessCard_Proxy( 
    _ContactItem * This);


void __RPC_STUB _ContactItem_ResetBusinessCard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_AddBusinessCardLogoPicture_Proxy( 
    _ContactItem * This,
    /* [in] */ BSTR Path);


void __RPC_STUB _ContactItem_AddBusinessCardLogoPicture_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_BusinessCardType_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ OlBusinessCardType *BusinessCardType);


void __RPC_STUB _ContactItem_get_BusinessCardType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_GetConversation_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ _Conversation **Conversation);


void __RPC_STUB _ContactItem_GetConversation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_ConversationID_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ BSTR *ConversationID);


void __RPC_STUB _ContactItem_get_ConversationID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_get_RTFBody_Proxy( 
    _ContactItem * This,
    /* [retval][out] */ VARIANT *RTFBody);


void __RPC_STUB _ContactItem_get_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_put_RTFBody_Proxy( 
    _ContactItem * This,
    /* [in] */ VARIANT RTFBody);


void __RPC_STUB _ContactItem_put_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_ShowCheckFullNameDialog_Proxy( 
    _ContactItem * This);


void __RPC_STUB _ContactItem_ShowCheckFullNameDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _ContactItem_ShowCheckAddressDialog_Proxy( 
    _ContactItem * This,
    /* [in] */ OlMailingAddress MailingAddress);


void __RPC_STUB _ContactItem_ShowCheckAddressDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* ___ContactItem_INTERFACE_DEFINED__ */


#ifndef __Actions_INTERFACE_DEFINED__
#define __Actions_INTERFACE_DEFINED__

/* interface Actions */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Actions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006303E-0000-0000-C000-000000000046")
    Actions : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Action **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [retval][out] */ Action **Action) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ActionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Actions * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Actions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Actions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Actions * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Actions * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Actions * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Actions * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Actions * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Actions * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Actions * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Actions * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Actions * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Actions * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Action **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Actions * This,
            /* [retval][out] */ Action **Action);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            Actions * This,
            /* [in] */ long Index);
        
        END_INTERFACE
    } ActionsVtbl;

    interface Actions
    {
        CONST_VTBL struct ActionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Actions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Actions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Actions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Actions_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Actions_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Actions_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Actions_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Actions_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Actions_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Actions_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Actions_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Actions_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Actions_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define Actions_Add(This,Action)	\
    ( (This)->lpVtbl -> Add(This,Action) ) 

#define Actions_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Actions_INTERFACE_DEFINED__ */


#ifndef __Action_INTERFACE_DEFINED__
#define __Action_INTERFACE_DEFINED__

/* interface Action */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Action;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063043-0000-0000-C000-000000000046")
    Action : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CopyLike( 
            /* [retval][out] */ OlActionCopyLike *CopyLike) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CopyLike( 
            /* [in] */ OlActionCopyLike CopyLike) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Prefix( 
            /* [retval][out] */ BSTR *Prefix) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Prefix( 
            /* [in] */ BSTR Prefix) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyStyle( 
            /* [retval][out] */ OlActionReplyStyle *ReplyStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReplyStyle( 
            /* [in] */ OlActionReplyStyle ReplyStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ResponseStyle( 
            /* [retval][out] */ OlActionResponseStyle *ResponseStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ResponseStyle( 
            /* [in] */ OlActionResponseStyle ResponseStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowOn( 
            /* [retval][out] */ OlActionShowOn *ShowOn) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowOn( 
            /* [in] */ OlActionShowOn ShowOn) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Action * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Action * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Action * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Action * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Action * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Action * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Action * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Action * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Action * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Action * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Action * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CopyLike )( 
            Action * This,
            /* [retval][out] */ OlActionCopyLike *CopyLike);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CopyLike )( 
            Action * This,
            /* [in] */ OlActionCopyLike CopyLike);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            Action * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            Action * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            Action * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            Action * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Action * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            Action * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Prefix )( 
            Action * This,
            /* [retval][out] */ BSTR *Prefix);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Prefix )( 
            Action * This,
            /* [in] */ BSTR Prefix);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyStyle )( 
            Action * This,
            /* [retval][out] */ OlActionReplyStyle *ReplyStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReplyStyle )( 
            Action * This,
            /* [in] */ OlActionReplyStyle ReplyStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ResponseStyle )( 
            Action * This,
            /* [retval][out] */ OlActionResponseStyle *ResponseStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ResponseStyle )( 
            Action * This,
            /* [in] */ OlActionResponseStyle ResponseStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowOn )( 
            Action * This,
            /* [retval][out] */ OlActionShowOn *ShowOn);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowOn )( 
            Action * This,
            /* [in] */ OlActionShowOn ShowOn);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Action * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            Action * This,
            /* [retval][out] */ IDispatch **Item);
        
        END_INTERFACE
    } ActionVtbl;

    interface Action
    {
        CONST_VTBL struct ActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Action_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Action_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Action_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Action_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Action_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Action_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Action_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Action_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Action_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Action_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Action_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Action_get_CopyLike(This,CopyLike)	\
    ( (This)->lpVtbl -> get_CopyLike(This,CopyLike) ) 

#define Action_put_CopyLike(This,CopyLike)	\
    ( (This)->lpVtbl -> put_CopyLike(This,CopyLike) ) 

#define Action_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define Action_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define Action_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define Action_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define Action_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Action_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define Action_get_Prefix(This,Prefix)	\
    ( (This)->lpVtbl -> get_Prefix(This,Prefix) ) 

#define Action_put_Prefix(This,Prefix)	\
    ( (This)->lpVtbl -> put_Prefix(This,Prefix) ) 

#define Action_get_ReplyStyle(This,ReplyStyle)	\
    ( (This)->lpVtbl -> get_ReplyStyle(This,ReplyStyle) ) 

#define Action_put_ReplyStyle(This,ReplyStyle)	\
    ( (This)->lpVtbl -> put_ReplyStyle(This,ReplyStyle) ) 

#define Action_get_ResponseStyle(This,ResponseStyle)	\
    ( (This)->lpVtbl -> get_ResponseStyle(This,ResponseStyle) ) 

#define Action_put_ResponseStyle(This,ResponseStyle)	\
    ( (This)->lpVtbl -> put_ResponseStyle(This,ResponseStyle) ) 

#define Action_get_ShowOn(This,ShowOn)	\
    ( (This)->lpVtbl -> get_ShowOn(This,ShowOn) ) 

#define Action_put_ShowOn(This,ShowOn)	\
    ( (This)->lpVtbl -> put_ShowOn(This,ShowOn) ) 

#define Action_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define Action_Execute(This,Item)	\
    ( (This)->lpVtbl -> Execute(This,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Action_INTERFACE_DEFINED__ */


#ifndef __Attachments_INTERFACE_DEFINED__
#define __Attachments_INTERFACE_DEFINED__

/* interface Attachments */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Attachments;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006303C-0000-0000-C000-000000000046")
    Attachments : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Attachment **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT Source,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Position,
            /* [optional][in] */ VARIANT DisplayName,
            /* [retval][out] */ Attachment **Attachment) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct AttachmentsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Attachments * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Attachments * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Attachments * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Attachments * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Attachments * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Attachments * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Attachments * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Attachments * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Attachments * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Attachments * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Attachments * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Attachments * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Attachments * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Attachment **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Attachments * This,
            /* [in] */ VARIANT Source,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Position,
            /* [optional][in] */ VARIANT DisplayName,
            /* [retval][out] */ Attachment **Attachment);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            Attachments * This,
            /* [in] */ long Index);
        
        END_INTERFACE
    } AttachmentsVtbl;

    interface Attachments
    {
        CONST_VTBL struct AttachmentsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Attachments_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Attachments_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Attachments_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Attachments_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Attachments_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Attachments_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Attachments_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Attachments_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Attachments_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Attachments_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Attachments_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Attachments_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Attachments_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define Attachments_Add(This,Source,Type,Position,DisplayName,Attachment)	\
    ( (This)->lpVtbl -> Add(This,Source,Type,Position,DisplayName,Attachment) ) 

#define Attachments_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Attachments_INTERFACE_DEFINED__ */


#ifndef __Attachment_INTERFACE_DEFINED__
#define __Attachment_INTERFACE_DEFINED__

/* interface Attachment */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Attachment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063007-0000-0000-C000-000000000046")
    Attachment : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ BSTR *DisplayName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayName( 
            /* [in] */ BSTR DisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *FileName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PathName( 
            /* [retval][out] */ BSTR *PathName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ OlAttachmentType *Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAsFile( 
            /* [in] */ BSTR Path) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BlockLevel( 
            /* [retval][out] */ OlAttachmentBlockLevel *BlockLevel) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetTemporaryFilePath( 
            /* [retval][out] */ BSTR *ptRet) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct AttachmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Attachment * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Attachment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Attachment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Attachment * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Attachment * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Attachment * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Attachment * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Attachment * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Attachment * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Attachment * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Attachment * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )( 
            Attachment * This,
            /* [retval][out] */ BSTR *DisplayName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayName )( 
            Attachment * This,
            /* [in] */ BSTR DisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            Attachment * This,
            /* [retval][out] */ BSTR *FileName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            Attachment * This,
            /* [retval][out] */ long *Index);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            Attachment * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PathName )( 
            Attachment * This,
            /* [retval][out] */ BSTR *PathName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            Attachment * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            Attachment * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Attachment * This,
            /* [retval][out] */ OlAttachmentType *Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Attachment * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAsFile )( 
            Attachment * This,
            /* [in] */ BSTR Path);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            Attachment * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            Attachment * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BlockLevel )( 
            Attachment * This,
            /* [retval][out] */ OlAttachmentBlockLevel *BlockLevel);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetTemporaryFilePath )( 
            Attachment * This,
            /* [retval][out] */ BSTR *ptRet);
        
        END_INTERFACE
    } AttachmentVtbl;

    interface Attachment
    {
        CONST_VTBL struct AttachmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Attachment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Attachment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Attachment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Attachment_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Attachment_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Attachment_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Attachment_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Attachment_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Attachment_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Attachment_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Attachment_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Attachment_get_DisplayName(This,DisplayName)	\
    ( (This)->lpVtbl -> get_DisplayName(This,DisplayName) ) 

#define Attachment_put_DisplayName(This,DisplayName)	\
    ( (This)->lpVtbl -> put_DisplayName(This,DisplayName) ) 

#define Attachment_get_FileName(This,FileName)	\
    ( (This)->lpVtbl -> get_FileName(This,FileName) ) 

#define Attachment_get_Index(This,Index)	\
    ( (This)->lpVtbl -> get_Index(This,Index) ) 

#define Attachment_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define Attachment_get_PathName(This,PathName)	\
    ( (This)->lpVtbl -> get_PathName(This,PathName) ) 

#define Attachment_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define Attachment_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define Attachment_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define Attachment_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define Attachment_SaveAsFile(This,Path)	\
    ( (This)->lpVtbl -> SaveAsFile(This,Path) ) 

#define Attachment_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define Attachment_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define Attachment_get_BlockLevel(This,BlockLevel)	\
    ( (This)->lpVtbl -> get_BlockLevel(This,BlockLevel) ) 

#define Attachment_GetTemporaryFilePath(This,ptRet)	\
    ( (This)->lpVtbl -> GetTemporaryFilePath(This,ptRet) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Attachment_INTERFACE_DEFINED__ */


#ifndef ___PropertyAccessor_INTERFACE_DEFINED__
#define ___PropertyAccessor_INTERFACE_DEFINED__

/* interface _PropertyAccessor */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__PropertyAccessor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006302D-0000-0000-C000-000000000046")
    _PropertyAccessor : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ BSTR SchemaName,
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ BSTR SchemaName,
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetProperties( 
            /* [in] */ VARIANT SchemaNames,
            /* [retval][out] */ VARIANT *Values) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetProperties( 
            /* [in] */ VARIANT SchemaNames,
            /* [in] */ VARIANT Values,
            /* [retval][out] */ VARIANT *ErrorResults) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE UTCToLocalTime( 
            /* [in] */ DATE Value,
            /* [retval][out] */ DATE *ReturnValue) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE LocalTimeToUTC( 
            /* [in] */ DATE Value,
            /* [retval][out] */ DATE *ReturnValue) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE StringToBinary( 
            /* [in] */ BSTR Value,
            /* [retval][out] */ VARIANT *ReturnValue) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE BinaryToString( 
            /* [in] */ VARIANT Value,
            /* [retval][out] */ BSTR *ReturnValue) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteProperty( 
            /* [in] */ BSTR SchemaName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteProperties( 
            /* [in] */ VARIANT *SchemaNames,
            /* [retval][out] */ VARIANT *ErrorResults) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _PropertyAccessorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PropertyAccessor * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PropertyAccessor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PropertyAccessor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PropertyAccessor * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PropertyAccessor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PropertyAccessor * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PropertyAccessor * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _PropertyAccessor * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _PropertyAccessor * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _PropertyAccessor * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _PropertyAccessor * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            _PropertyAccessor * This,
            /* [in] */ BSTR SchemaName,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            _PropertyAccessor * This,
            /* [in] */ BSTR SchemaName,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetProperties )( 
            _PropertyAccessor * This,
            /* [in] */ VARIANT SchemaNames,
            /* [retval][out] */ VARIANT *Values);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetProperties )( 
            _PropertyAccessor * This,
            /* [in] */ VARIANT SchemaNames,
            /* [in] */ VARIANT Values,
            /* [retval][out] */ VARIANT *ErrorResults);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UTCToLocalTime )( 
            _PropertyAccessor * This,
            /* [in] */ DATE Value,
            /* [retval][out] */ DATE *ReturnValue);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LocalTimeToUTC )( 
            _PropertyAccessor * This,
            /* [in] */ DATE Value,
            /* [retval][out] */ DATE *ReturnValue);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StringToBinary )( 
            _PropertyAccessor * This,
            /* [in] */ BSTR Value,
            /* [retval][out] */ VARIANT *ReturnValue);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *BinaryToString )( 
            _PropertyAccessor * This,
            /* [in] */ VARIANT Value,
            /* [retval][out] */ BSTR *ReturnValue);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteProperty )( 
            _PropertyAccessor * This,
            /* [in] */ BSTR SchemaName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteProperties )( 
            _PropertyAccessor * This,
            /* [in] */ VARIANT *SchemaNames,
            /* [retval][out] */ VARIANT *ErrorResults);
        
        END_INTERFACE
    } _PropertyAccessorVtbl;

    interface _PropertyAccessor
    {
        CONST_VTBL struct _PropertyAccessorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PropertyAccessor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PropertyAccessor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PropertyAccessor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PropertyAccessor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PropertyAccessor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PropertyAccessor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PropertyAccessor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _PropertyAccessor_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _PropertyAccessor_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _PropertyAccessor_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _PropertyAccessor_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _PropertyAccessor_GetProperty(This,SchemaName,Value)	\
    ( (This)->lpVtbl -> GetProperty(This,SchemaName,Value) ) 

#define _PropertyAccessor_SetProperty(This,SchemaName,Value)	\
    ( (This)->lpVtbl -> SetProperty(This,SchemaName,Value) ) 

#define _PropertyAccessor_GetProperties(This,SchemaNames,Values)	\
    ( (This)->lpVtbl -> GetProperties(This,SchemaNames,Values) ) 

#define _PropertyAccessor_SetProperties(This,SchemaNames,Values,ErrorResults)	\
    ( (This)->lpVtbl -> SetProperties(This,SchemaNames,Values,ErrorResults) ) 

#define _PropertyAccessor_UTCToLocalTime(This,Value,ReturnValue)	\
    ( (This)->lpVtbl -> UTCToLocalTime(This,Value,ReturnValue) ) 

#define _PropertyAccessor_LocalTimeToUTC(This,Value,ReturnValue)	\
    ( (This)->lpVtbl -> LocalTimeToUTC(This,Value,ReturnValue) ) 

#define _PropertyAccessor_StringToBinary(This,Value,ReturnValue)	\
    ( (This)->lpVtbl -> StringToBinary(This,Value,ReturnValue) ) 

#define _PropertyAccessor_BinaryToString(This,Value,ReturnValue)	\
    ( (This)->lpVtbl -> BinaryToString(This,Value,ReturnValue) ) 

#define _PropertyAccessor_DeleteProperty(This,SchemaName)	\
    ( (This)->lpVtbl -> DeleteProperty(This,SchemaName) ) 

#define _PropertyAccessor_DeleteProperties(This,SchemaNames,ErrorResults)	\
    ( (This)->lpVtbl -> DeleteProperties(This,SchemaNames,ErrorResults) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PropertyAccessor_INTERFACE_DEFINED__ */


#ifndef __FormDescription_INTERFACE_DEFINED__
#define __FormDescription_INTERFACE_DEFINED__

/* interface FormDescription */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_FormDescription;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063046-0000-0000-C000-000000000046")
    FormDescription : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Category( 
            /* [retval][out] */ BSTR *Category) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Category( 
            /* [in] */ BSTR Category) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CategorySub( 
            /* [retval][out] */ BSTR *CategorySub) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CategorySub( 
            /* [in] */ BSTR CategorySub) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ BSTR *Comment) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            /* [in] */ BSTR Comment) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContactName( 
            /* [retval][out] */ BSTR *ContactName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContactName( 
            /* [in] */ BSTR ContactName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ BSTR *DisplayName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayName( 
            /* [in] */ BSTR DisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Hidden( 
            /* [retval][out] */ VARIANT_BOOL *Hidden) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Hidden( 
            /* [in] */ VARIANT_BOOL Hidden) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Icon( 
            /* [retval][out] */ BSTR *Icon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Icon( 
            /* [in] */ BSTR Icon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Locked( 
            /* [retval][out] */ VARIANT_BOOL *Locked) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Locked( 
            /* [in] */ VARIANT_BOOL Locked) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MiniIcon( 
            /* [retval][out] */ BSTR *MiniIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MiniIcon( 
            /* [in] */ BSTR MiniIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Number( 
            /* [retval][out] */ BSTR *Number) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Number( 
            /* [in] */ BSTR Number) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OneOff( 
            /* [retval][out] */ VARIANT_BOOL *OneOff) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OneOff( 
            /* [in] */ VARIANT_BOOL OneOff) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Password( 
            /* [retval][out] */ BSTR *Password) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Password( 
            /* [in] */ BSTR Password) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScriptText( 
            /* [retval][out] */ BSTR *ScriptText) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Template( 
            /* [retval][out] */ BSTR *Template) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Template( 
            /* [in] */ BSTR Template) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UseWordMail( 
            /* [retval][out] */ VARIANT_BOOL *UseWordMail) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UseWordMail( 
            /* [in] */ VARIANT_BOOL UseWordMail) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR *Version) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Version( 
            /* [in] */ BSTR Version) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PublishForm( 
            /* [in] */ OlFormRegistry Registry,
            /* [optional][in] */ VARIANT Folder) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct FormDescriptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FormDescription * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FormDescription * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FormDescription * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FormDescription * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FormDescription * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FormDescription * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FormDescription * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FormDescription * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            FormDescription * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            FormDescription * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FormDescription * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Category )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *Category);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Category )( 
            FormDescription * This,
            /* [in] */ BSTR Category);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CategorySub )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *CategorySub);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CategorySub )( 
            FormDescription * This,
            /* [in] */ BSTR CategorySub);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *Comment);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            FormDescription * This,
            /* [in] */ BSTR Comment);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContactName )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *ContactName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ContactName )( 
            FormDescription * This,
            /* [in] */ BSTR ContactName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *DisplayName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayName )( 
            FormDescription * This,
            /* [in] */ BSTR DisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hidden )( 
            FormDescription * This,
            /* [retval][out] */ VARIANT_BOOL *Hidden);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Hidden )( 
            FormDescription * This,
            /* [in] */ VARIANT_BOOL Hidden);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Icon )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *Icon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Icon )( 
            FormDescription * This,
            /* [in] */ BSTR Icon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Locked )( 
            FormDescription * This,
            /* [retval][out] */ VARIANT_BOOL *Locked);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Locked )( 
            FormDescription * This,
            /* [in] */ VARIANT_BOOL Locked);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MiniIcon )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *MiniIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MiniIcon )( 
            FormDescription * This,
            /* [in] */ BSTR MiniIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            FormDescription * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Number )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *Number);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Number )( 
            FormDescription * This,
            /* [in] */ BSTR Number);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OneOff )( 
            FormDescription * This,
            /* [retval][out] */ VARIANT_BOOL *OneOff);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OneOff )( 
            FormDescription * This,
            /* [in] */ VARIANT_BOOL OneOff);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Password )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *Password);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Password )( 
            FormDescription * This,
            /* [in] */ BSTR Password);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScriptText )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *ScriptText);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Template )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *Template);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Template )( 
            FormDescription * This,
            /* [in] */ BSTR Template);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseWordMail )( 
            FormDescription * This,
            /* [retval][out] */ VARIANT_BOOL *UseWordMail);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseWordMail )( 
            FormDescription * This,
            /* [in] */ VARIANT_BOOL UseWordMail);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            FormDescription * This,
            /* [retval][out] */ BSTR *Version);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Version )( 
            FormDescription * This,
            /* [in] */ BSTR Version);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PublishForm )( 
            FormDescription * This,
            /* [in] */ OlFormRegistry Registry,
            /* [optional][in] */ VARIANT Folder);
        
        END_INTERFACE
    } FormDescriptionVtbl;

    interface FormDescription
    {
        CONST_VTBL struct FormDescriptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FormDescription_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FormDescription_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FormDescription_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FormDescription_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FormDescription_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FormDescription_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FormDescription_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define FormDescription_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define FormDescription_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define FormDescription_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define FormDescription_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define FormDescription_get_Category(This,Category)	\
    ( (This)->lpVtbl -> get_Category(This,Category) ) 

#define FormDescription_put_Category(This,Category)	\
    ( (This)->lpVtbl -> put_Category(This,Category) ) 

#define FormDescription_get_CategorySub(This,CategorySub)	\
    ( (This)->lpVtbl -> get_CategorySub(This,CategorySub) ) 

#define FormDescription_put_CategorySub(This,CategorySub)	\
    ( (This)->lpVtbl -> put_CategorySub(This,CategorySub) ) 

#define FormDescription_get_Comment(This,Comment)	\
    ( (This)->lpVtbl -> get_Comment(This,Comment) ) 

#define FormDescription_put_Comment(This,Comment)	\
    ( (This)->lpVtbl -> put_Comment(This,Comment) ) 

#define FormDescription_get_ContactName(This,ContactName)	\
    ( (This)->lpVtbl -> get_ContactName(This,ContactName) ) 

#define FormDescription_put_ContactName(This,ContactName)	\
    ( (This)->lpVtbl -> put_ContactName(This,ContactName) ) 

#define FormDescription_get_DisplayName(This,DisplayName)	\
    ( (This)->lpVtbl -> get_DisplayName(This,DisplayName) ) 

#define FormDescription_put_DisplayName(This,DisplayName)	\
    ( (This)->lpVtbl -> put_DisplayName(This,DisplayName) ) 

#define FormDescription_get_Hidden(This,Hidden)	\
    ( (This)->lpVtbl -> get_Hidden(This,Hidden) ) 

#define FormDescription_put_Hidden(This,Hidden)	\
    ( (This)->lpVtbl -> put_Hidden(This,Hidden) ) 

#define FormDescription_get_Icon(This,Icon)	\
    ( (This)->lpVtbl -> get_Icon(This,Icon) ) 

#define FormDescription_put_Icon(This,Icon)	\
    ( (This)->lpVtbl -> put_Icon(This,Icon) ) 

#define FormDescription_get_Locked(This,Locked)	\
    ( (This)->lpVtbl -> get_Locked(This,Locked) ) 

#define FormDescription_put_Locked(This,Locked)	\
    ( (This)->lpVtbl -> put_Locked(This,Locked) ) 

#define FormDescription_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define FormDescription_get_MiniIcon(This,MiniIcon)	\
    ( (This)->lpVtbl -> get_MiniIcon(This,MiniIcon) ) 

#define FormDescription_put_MiniIcon(This,MiniIcon)	\
    ( (This)->lpVtbl -> put_MiniIcon(This,MiniIcon) ) 

#define FormDescription_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define FormDescription_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define FormDescription_get_Number(This,Number)	\
    ( (This)->lpVtbl -> get_Number(This,Number) ) 

#define FormDescription_put_Number(This,Number)	\
    ( (This)->lpVtbl -> put_Number(This,Number) ) 

#define FormDescription_get_OneOff(This,OneOff)	\
    ( (This)->lpVtbl -> get_OneOff(This,OneOff) ) 

#define FormDescription_put_OneOff(This,OneOff)	\
    ( (This)->lpVtbl -> put_OneOff(This,OneOff) ) 

#define FormDescription_get_Password(This,Password)	\
    ( (This)->lpVtbl -> get_Password(This,Password) ) 

#define FormDescription_put_Password(This,Password)	\
    ( (This)->lpVtbl -> put_Password(This,Password) ) 

#define FormDescription_get_ScriptText(This,ScriptText)	\
    ( (This)->lpVtbl -> get_ScriptText(This,ScriptText) ) 

#define FormDescription_get_Template(This,Template)	\
    ( (This)->lpVtbl -> get_Template(This,Template) ) 

#define FormDescription_put_Template(This,Template)	\
    ( (This)->lpVtbl -> put_Template(This,Template) ) 

#define FormDescription_get_UseWordMail(This,UseWordMail)	\
    ( (This)->lpVtbl -> get_UseWordMail(This,UseWordMail) ) 

#define FormDescription_put_UseWordMail(This,UseWordMail)	\
    ( (This)->lpVtbl -> put_UseWordMail(This,UseWordMail) ) 

#define FormDescription_get_Version(This,Version)	\
    ( (This)->lpVtbl -> get_Version(This,Version) ) 

#define FormDescription_put_Version(This,Version)	\
    ( (This)->lpVtbl -> put_Version(This,Version) ) 

#define FormDescription_PublishForm(This,Registry,Folder)	\
    ( (This)->lpVtbl -> PublishForm(This,Registry,Folder) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __FormDescription_INTERFACE_DEFINED__ */


#ifndef ___Inspector_INTERFACE_DEFINED__
#define ___Inspector_INTERFACE_DEFINED__

/* interface _Inspector */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Inspector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063005-0000-0000-C000-000000000046")
    _Inspector : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandBars( 
            /* [retval][out] */ /* external definition not present */ CommandBars **CommandBars) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentItem( 
            /* [retval][out] */ IDispatch **CurrentItem) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EditorType( 
            /* [retval][out] */ OlEditorType *EditorType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ModifiedFormPages( 
            /* [retval][out] */ IDispatch **ModifiedFormPages) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE HideFormPage( 
            /* [in] */ BSTR PageName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsWordMail( 
            /* [retval][out] */ VARIANT_BOOL *IsWordMail) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetCurrentFormPage( 
            /* [in] */ BSTR PageName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowFormPage( 
            /* [in] */ BSTR PageName) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLEditor( 
            /* [retval][out] */ IDispatch **HTMLEditor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WordEditor( 
            /* [retval][out] */ IDispatch **WordEditor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *Caption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ long *Height) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ long Height) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ long *Left) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ long Left) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ long *Top) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ long Top) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *Width) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long Width) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WindowState( 
            /* [retval][out] */ OlWindowState *WindowState) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WindowState( 
            /* [in] */ OlWindowState WindowState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetControlItemProperty( 
            /* [in] */ IDispatch *Control,
            /* [in] */ BSTR PropertyName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE NewFormRegion( 
            /* [retval][out] */ IDispatch **Form) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenFormRegion( 
            /* [in] */ BSTR Path,
            /* [retval][out] */ IDispatch **Form) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveFormRegion( 
            /* [in] */ IDispatch *Page,
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AttachmentSelection( 
            /* [retval][out] */ _AttachmentSelection **AttachmentSelection) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetSchedulingStartTime( 
            /* [in] */ DATE Start) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _InspectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Inspector * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Inspector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Inspector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Inspector * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Inspector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Inspector * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Inspector * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Inspector * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Inspector * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Inspector * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Inspector * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBars )( 
            _Inspector * This,
            /* [retval][out] */ /* external definition not present */ CommandBars **CommandBars);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentItem )( 
            _Inspector * This,
            /* [retval][out] */ IDispatch **CurrentItem);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EditorType )( 
            _Inspector * This,
            /* [retval][out] */ OlEditorType *EditorType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ModifiedFormPages )( 
            _Inspector * This,
            /* [retval][out] */ IDispatch **ModifiedFormPages);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _Inspector * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _Inspector * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HideFormPage )( 
            _Inspector * This,
            /* [in] */ BSTR PageName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsWordMail )( 
            _Inspector * This,
            /* [retval][out] */ VARIANT_BOOL *IsWordMail);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetCurrentFormPage )( 
            _Inspector * This,
            /* [in] */ BSTR PageName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowFormPage )( 
            _Inspector * This,
            /* [in] */ BSTR PageName);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLEditor )( 
            _Inspector * This,
            /* [retval][out] */ IDispatch **HTMLEditor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WordEditor )( 
            _Inspector * This,
            /* [retval][out] */ IDispatch **WordEditor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _Inspector * This,
            /* [retval][out] */ BSTR *Caption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            _Inspector * This,
            /* [retval][out] */ long *Height);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            _Inspector * This,
            /* [in] */ long Height);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            _Inspector * This,
            /* [retval][out] */ long *Left);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            _Inspector * This,
            /* [in] */ long Left);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            _Inspector * This,
            /* [retval][out] */ long *Top);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            _Inspector * This,
            /* [in] */ long Top);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            _Inspector * This,
            /* [retval][out] */ long *Width);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            _Inspector * This,
            /* [in] */ long Width);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WindowState )( 
            _Inspector * This,
            /* [retval][out] */ OlWindowState *WindowState);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WindowState )( 
            _Inspector * This,
            /* [in] */ OlWindowState WindowState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            _Inspector * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetControlItemProperty )( 
            _Inspector * This,
            /* [in] */ IDispatch *Control,
            /* [in] */ BSTR PropertyName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NewFormRegion )( 
            _Inspector * This,
            /* [retval][out] */ IDispatch **Form);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenFormRegion )( 
            _Inspector * This,
            /* [in] */ BSTR Path,
            /* [retval][out] */ IDispatch **Form);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveFormRegion )( 
            _Inspector * This,
            /* [in] */ IDispatch *Page,
            /* [in] */ BSTR FileName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AttachmentSelection )( 
            _Inspector * This,
            /* [retval][out] */ _AttachmentSelection **AttachmentSelection);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetSchedulingStartTime )( 
            _Inspector * This,
            /* [in] */ DATE Start);
        
        END_INTERFACE
    } _InspectorVtbl;

    interface _Inspector
    {
        CONST_VTBL struct _InspectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Inspector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Inspector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Inspector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Inspector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Inspector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Inspector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Inspector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Inspector_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Inspector_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Inspector_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Inspector_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Inspector_get_CommandBars(This,CommandBars)	\
    ( (This)->lpVtbl -> get_CommandBars(This,CommandBars) ) 

#define _Inspector_get_CurrentItem(This,CurrentItem)	\
    ( (This)->lpVtbl -> get_CurrentItem(This,CurrentItem) ) 

#define _Inspector_get_EditorType(This,EditorType)	\
    ( (This)->lpVtbl -> get_EditorType(This,EditorType) ) 

#define _Inspector_get_ModifiedFormPages(This,ModifiedFormPages)	\
    ( (This)->lpVtbl -> get_ModifiedFormPages(This,ModifiedFormPages) ) 

#define _Inspector_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _Inspector_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _Inspector_HideFormPage(This,PageName)	\
    ( (This)->lpVtbl -> HideFormPage(This,PageName) ) 

#define _Inspector_IsWordMail(This,IsWordMail)	\
    ( (This)->lpVtbl -> IsWordMail(This,IsWordMail) ) 

#define _Inspector_SetCurrentFormPage(This,PageName)	\
    ( (This)->lpVtbl -> SetCurrentFormPage(This,PageName) ) 

#define _Inspector_ShowFormPage(This,PageName)	\
    ( (This)->lpVtbl -> ShowFormPage(This,PageName) ) 

#define _Inspector_get_HTMLEditor(This,HTMLEditor)	\
    ( (This)->lpVtbl -> get_HTMLEditor(This,HTMLEditor) ) 

#define _Inspector_get_WordEditor(This,WordEditor)	\
    ( (This)->lpVtbl -> get_WordEditor(This,WordEditor) ) 

#define _Inspector_get_Caption(This,Caption)	\
    ( (This)->lpVtbl -> get_Caption(This,Caption) ) 

#define _Inspector_get_Height(This,Height)	\
    ( (This)->lpVtbl -> get_Height(This,Height) ) 

#define _Inspector_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define _Inspector_get_Left(This,Left)	\
    ( (This)->lpVtbl -> get_Left(This,Left) ) 

#define _Inspector_put_Left(This,Left)	\
    ( (This)->lpVtbl -> put_Left(This,Left) ) 

#define _Inspector_get_Top(This,Top)	\
    ( (This)->lpVtbl -> get_Top(This,Top) ) 

#define _Inspector_put_Top(This,Top)	\
    ( (This)->lpVtbl -> put_Top(This,Top) ) 

#define _Inspector_get_Width(This,Width)	\
    ( (This)->lpVtbl -> get_Width(This,Width) ) 

#define _Inspector_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define _Inspector_get_WindowState(This,WindowState)	\
    ( (This)->lpVtbl -> get_WindowState(This,WindowState) ) 

#define _Inspector_put_WindowState(This,WindowState)	\
    ( (This)->lpVtbl -> put_WindowState(This,WindowState) ) 

#define _Inspector_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define _Inspector_SetControlItemProperty(This,Control,PropertyName)	\
    ( (This)->lpVtbl -> SetControlItemProperty(This,Control,PropertyName) ) 

#define _Inspector_NewFormRegion(This,Form)	\
    ( (This)->lpVtbl -> NewFormRegion(This,Form) ) 

#define _Inspector_OpenFormRegion(This,Path,Form)	\
    ( (This)->lpVtbl -> OpenFormRegion(This,Path,Form) ) 

#define _Inspector_SaveFormRegion(This,Page,FileName)	\
    ( (This)->lpVtbl -> SaveFormRegion(This,Page,FileName) ) 

#define _Inspector_get_AttachmentSelection(This,AttachmentSelection)	\
    ( (This)->lpVtbl -> get_AttachmentSelection(This,AttachmentSelection) ) 

#define _Inspector_SetSchedulingStartTime(This,Start)	\
    ( (This)->lpVtbl -> SetSchedulingStartTime(This,Start) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Inspector_INTERFACE_DEFINED__ */


#ifndef ___AttachmentSelection_INTERFACE_DEFINED__
#define ___AttachmentSelection_INTERFACE_DEFINED__

/* interface _AttachmentSelection */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__AttachmentSelection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630F9-0000-0000-C000-000000000046")
    _AttachmentSelection : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Attachment **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Location( 
            /* [retval][out] */ OlSelectionLocation *Location) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSelection( 
            /* [in] */ OlSelectionContents SelectionContents,
            /* [retval][out] */ Selection **SelectionOut) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AttachmentSelectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AttachmentSelection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AttachmentSelection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AttachmentSelection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AttachmentSelection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AttachmentSelection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AttachmentSelection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AttachmentSelection * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _AttachmentSelection * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _AttachmentSelection * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _AttachmentSelection * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _AttachmentSelection * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _AttachmentSelection * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _AttachmentSelection * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Attachment **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Location )( 
            _AttachmentSelection * This,
            /* [retval][out] */ OlSelectionLocation *Location);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSelection )( 
            _AttachmentSelection * This,
            /* [in] */ OlSelectionContents SelectionContents,
            /* [retval][out] */ Selection **SelectionOut);
        
        END_INTERFACE
    } _AttachmentSelectionVtbl;

    interface _AttachmentSelection
    {
        CONST_VTBL struct _AttachmentSelectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AttachmentSelection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AttachmentSelection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AttachmentSelection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AttachmentSelection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AttachmentSelection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AttachmentSelection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AttachmentSelection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _AttachmentSelection_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _AttachmentSelection_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _AttachmentSelection_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _AttachmentSelection_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _AttachmentSelection_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _AttachmentSelection_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _AttachmentSelection_get_Location(This,Location)	\
    ( (This)->lpVtbl -> get_Location(This,Location) ) 

#define _AttachmentSelection_GetSelection(This,SelectionContents,SelectionOut)	\
    ( (This)->lpVtbl -> GetSelection(This,SelectionContents,SelectionOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AttachmentSelection_INTERFACE_DEFINED__ */


#ifndef __Selection_INTERFACE_DEFINED__
#define __Selection_INTERFACE_DEFINED__

/* interface Selection */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Selection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063087-0000-0000-C000-000000000046")
    Selection : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Location( 
            /* [retval][out] */ OlSelectionLocation *Location) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSelection( 
            /* [in] */ OlSelectionContents SelectionContents,
            /* [retval][out] */ Selection **SelectionOut) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct SelectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Selection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Selection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Selection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Selection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Selection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Selection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Selection * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Selection * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Selection * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Selection * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Selection * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Selection * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Selection * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Location )( 
            Selection * This,
            /* [retval][out] */ OlSelectionLocation *Location);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSelection )( 
            Selection * This,
            /* [in] */ OlSelectionContents SelectionContents,
            /* [retval][out] */ Selection **SelectionOut);
        
        END_INTERFACE
    } SelectionVtbl;

    interface Selection
    {
        CONST_VTBL struct SelectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Selection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Selection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Selection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Selection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Selection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Selection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Selection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Selection_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Selection_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Selection_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Selection_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Selection_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Selection_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define Selection_get_Location(This,Location)	\
    ( (This)->lpVtbl -> get_Location(This,Location) ) 

#define Selection_GetSelection(This,SelectionContents,SelectionOut)	\
    ( (This)->lpVtbl -> GetSelection(This,SelectionContents,SelectionOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Selection_INTERFACE_DEFINED__ */


#ifndef __UserProperties_INTERFACE_DEFINED__
#define __UserProperties_INTERFACE_DEFINED__

/* interface UserProperties */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_UserProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006303D-0000-0000-C000-000000000046")
    UserProperties : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ UserProperty **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [in] */ OlUserPropertyType Type,
            /* [optional][in] */ VARIANT AddToFolderFields,
            /* [optional][in] */ VARIANT DisplayFormat,
            /* [retval][out] */ UserProperty **UserProperty) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Custom,
            /* [retval][out] */ UserProperty **UserProperty) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct UserPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            UserProperties * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            UserProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            UserProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            UserProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            UserProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            UserProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            UserProperties * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            UserProperties * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            UserProperties * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            UserProperties * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            UserProperties * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            UserProperties * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            UserProperties * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ UserProperty **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            UserProperties * This,
            /* [in] */ BSTR Name,
            /* [in] */ OlUserPropertyType Type,
            /* [optional][in] */ VARIANT AddToFolderFields,
            /* [optional][in] */ VARIANT DisplayFormat,
            /* [retval][out] */ UserProperty **UserProperty);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            UserProperties * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Custom,
            /* [retval][out] */ UserProperty **UserProperty);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            UserProperties * This,
            /* [in] */ long Index);
        
        END_INTERFACE
    } UserPropertiesVtbl;

    interface UserProperties
    {
        CONST_VTBL struct UserPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define UserProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define UserProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define UserProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define UserProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define UserProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define UserProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define UserProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define UserProperties_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define UserProperties_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define UserProperties_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define UserProperties_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define UserProperties_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define UserProperties_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define UserProperties_Add(This,Name,Type,AddToFolderFields,DisplayFormat,UserProperty)	\
    ( (This)->lpVtbl -> Add(This,Name,Type,AddToFolderFields,DisplayFormat,UserProperty) ) 

#define UserProperties_Find(This,Name,Custom,UserProperty)	\
    ( (This)->lpVtbl -> Find(This,Name,Custom,UserProperty) ) 

#define UserProperties_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __UserProperties_INTERFACE_DEFINED__ */


#ifndef __UserProperty_INTERFACE_DEFINED__
#define __UserProperty_INTERFACE_DEFINED__

/* interface UserProperty */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_UserProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063042-0000-0000-C000-000000000046")
    UserProperty : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Formula( 
            /* [retval][out] */ BSTR *Formula) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Formula( 
            /* [in] */ BSTR Formula) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ OlUserPropertyType *Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ValidationFormula( 
            /* [retval][out] */ BSTR *ValidationFormula) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ValidationFormula( 
            /* [in] */ BSTR ValidationFormula) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ValidationText( 
            /* [retval][out] */ BSTR *ValidationText) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ValidationText( 
            /* [in] */ BSTR ValidationText) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsUserProperty( 
            /* [retval][out] */ VARIANT_BOOL *IsUserProperty) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct UserPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            UserProperty * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            UserProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            UserProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            UserProperty * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            UserProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            UserProperty * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            UserProperty * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            UserProperty * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            UserProperty * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            UserProperty * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            UserProperty * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Formula )( 
            UserProperty * This,
            /* [retval][out] */ BSTR *Formula);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Formula )( 
            UserProperty * This,
            /* [in] */ BSTR Formula);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            UserProperty * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            UserProperty * This,
            /* [retval][out] */ OlUserPropertyType *Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ValidationFormula )( 
            UserProperty * This,
            /* [retval][out] */ BSTR *ValidationFormula);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ValidationFormula )( 
            UserProperty * This,
            /* [in] */ BSTR ValidationFormula);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ValidationText )( 
            UserProperty * This,
            /* [retval][out] */ BSTR *ValidationText);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ValidationText )( 
            UserProperty * This,
            /* [in] */ BSTR ValidationText);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            UserProperty * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            UserProperty * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            UserProperty * This);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsUserProperty )( 
            UserProperty * This,
            /* [retval][out] */ VARIANT_BOOL *IsUserProperty);
        
        END_INTERFACE
    } UserPropertyVtbl;

    interface UserProperty
    {
        CONST_VTBL struct UserPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define UserProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define UserProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define UserProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define UserProperty_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define UserProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define UserProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define UserProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define UserProperty_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define UserProperty_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define UserProperty_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define UserProperty_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define UserProperty_get_Formula(This,Formula)	\
    ( (This)->lpVtbl -> get_Formula(This,Formula) ) 

#define UserProperty_put_Formula(This,Formula)	\
    ( (This)->lpVtbl -> put_Formula(This,Formula) ) 

#define UserProperty_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define UserProperty_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define UserProperty_get_ValidationFormula(This,ValidationFormula)	\
    ( (This)->lpVtbl -> get_ValidationFormula(This,ValidationFormula) ) 

#define UserProperty_put_ValidationFormula(This,ValidationFormula)	\
    ( (This)->lpVtbl -> put_ValidationFormula(This,ValidationFormula) ) 

#define UserProperty_get_ValidationText(This,ValidationText)	\
    ( (This)->lpVtbl -> get_ValidationText(This,ValidationText) ) 

#define UserProperty_put_ValidationText(This,ValidationText)	\
    ( (This)->lpVtbl -> put_ValidationText(This,ValidationText) ) 

#define UserProperty_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define UserProperty_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define UserProperty_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define UserProperty_get_IsUserProperty(This,IsUserProperty)	\
    ( (This)->lpVtbl -> get_IsUserProperty(This,IsUserProperty) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __UserProperty_INTERFACE_DEFINED__ */


#ifndef __MAPIFolder_INTERFACE_DEFINED__
#define __MAPIFolder_INTERFACE_DEFINED__

/* interface MAPIFolder */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_MAPIFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063006-0000-0000-C000-000000000046")
    MAPIFolder : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultItemType( 
            /* [retval][out] */ OlItemType *DefaultItemType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultMessageClass( 
            /* [retval][out] */ BSTR *DefaultMessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *Description) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR Description) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Folders( 
            /* [retval][out] */ _Folders **Folders) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Items( 
            /* [retval][out] */ _Items **Items) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StoreID( 
            /* [retval][out] */ BSTR *StoreID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnReadItemCount( 
            /* [retval][out] */ long *UnReadItemCount) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CopyTo( 
            /* [in] */ MAPIFolder *DestinationFolder,
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExplorer( 
            /* [optional][in] */ VARIANT DisplayMode,
            /* [retval][out] */ _Explorer **Explorer) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ MAPIFolder *DestinationFolder) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserPermissions( 
            /* [retval][out] */ IDispatch **UserPermissions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WebViewOn( 
            /* [retval][out] */ VARIANT_BOOL *WebViewOn) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WebViewOn( 
            /* [in] */ VARIANT_BOOL WebViewOn) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WebViewURL( 
            /* [retval][out] */ BSTR *WebViewURL) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WebViewURL( 
            /* [in] */ BSTR WebViewURL) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_WebViewAllowNavigation( 
            /* [retval][out] */ VARIANT_BOOL *WebViewAllowNavigation) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_WebViewAllowNavigation( 
            /* [in] */ VARIANT_BOOL WebViewAllowNavigation) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddToPFFavorites( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressBookName( 
            /* [retval][out] */ BSTR *AddressBookName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AddressBookName( 
            /* [in] */ BSTR AddressBookName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowAsOutlookAB( 
            /* [retval][out] */ VARIANT_BOOL *ShowAsOutlookAB) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowAsOutlookAB( 
            /* [in] */ VARIANT_BOOL ShowAsOutlookAB) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FolderPath( 
            /* [retval][out] */ BSTR *FolderPath) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE AddToFavorites( 
            /* [optional][in] */ VARIANT fNoUI,
            /* [optional][in] */ VARIANT Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InAppFolderSyncObject( 
            /* [retval][out] */ VARIANT_BOOL *InAppFolderSyncObject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InAppFolderSyncObject( 
            /* [in] */ VARIANT_BOOL InAppFolderSyncObject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentView( 
            /* [retval][out] */ View **CurrentView) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomViewsOnly( 
            /* [retval][out] */ VARIANT_BOOL *CustomViewsOnly) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CustomViewsOnly( 
            /* [in] */ VARIANT_BOOL CustomViewsOnly) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Views( 
            /* [retval][out] */ _Views **Views) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullFolderPath( 
            /* [retval][out] */ BSTR *FullFolderPath) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsSharePointFolder( 
            /* [retval][out] */ VARIANT_BOOL *IsSharePointFolder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowItemCount( 
            /* [retval][out] */ OlShowItemCount *ShowItemCount) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowItemCount( 
            /* [in] */ OlShowItemCount ShowItemCount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Store( 
            /* [retval][out] */ _Store **Store) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStorage( 
            /* [in] */ BSTR StorageIdentifier,
            /* [in] */ OlStorageIdentifierType StorageIdentifierType,
            /* [retval][out] */ _StorageItem **StorageItem) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetTable( 
            /* [optional][in] */ VARIANT Filter,
            /* [optional][in] */ VARIANT TableContents,
            /* [retval][out] */ _Table **Table) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetCalendarExporter( 
            /* [retval][out] */ _CalendarSharing **Exporter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserDefinedProperties( 
            /* [retval][out] */ _UserDefinedProperties **UserDefinedProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetCustomIcon( 
            /* [retval][out] */ /* external definition not present */ void **Picture) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetCustomIcon( 
            /* [in] */ /* external definition not present */ void *Picture) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct MAPIFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            MAPIFolder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            MAPIFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            MAPIFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            MAPIFolder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            MAPIFolder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            MAPIFolder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            MAPIFolder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            MAPIFolder * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            MAPIFolder * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            MAPIFolder * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            MAPIFolder * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultItemType )( 
            MAPIFolder * This,
            /* [retval][out] */ OlItemType *DefaultItemType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultMessageClass )( 
            MAPIFolder * This,
            /* [retval][out] */ BSTR *DefaultMessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            MAPIFolder * This,
            /* [retval][out] */ BSTR *Description);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            MAPIFolder * This,
            /* [in] */ BSTR Description);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            MAPIFolder * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Folders )( 
            MAPIFolder * This,
            /* [retval][out] */ _Folders **Folders);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Items )( 
            MAPIFolder * This,
            /* [retval][out] */ _Items **Items);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            MAPIFolder * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            MAPIFolder * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StoreID )( 
            MAPIFolder * This,
            /* [retval][out] */ BSTR *StoreID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnReadItemCount )( 
            MAPIFolder * This,
            /* [retval][out] */ long *UnReadItemCount);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTo )( 
            MAPIFolder * This,
            /* [in] */ MAPIFolder *DestinationFolder,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            MAPIFolder * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            MAPIFolder * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExplorer )( 
            MAPIFolder * This,
            /* [optional][in] */ VARIANT DisplayMode,
            /* [retval][out] */ _Explorer **Explorer);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveTo )( 
            MAPIFolder * This,
            /* [in] */ MAPIFolder *DestinationFolder);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserPermissions )( 
            MAPIFolder * This,
            /* [retval][out] */ IDispatch **UserPermissions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WebViewOn )( 
            MAPIFolder * This,
            /* [retval][out] */ VARIANT_BOOL *WebViewOn);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WebViewOn )( 
            MAPIFolder * This,
            /* [in] */ VARIANT_BOOL WebViewOn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WebViewURL )( 
            MAPIFolder * This,
            /* [retval][out] */ BSTR *WebViewURL);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WebViewURL )( 
            MAPIFolder * This,
            /* [in] */ BSTR WebViewURL);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WebViewAllowNavigation )( 
            MAPIFolder * This,
            /* [retval][out] */ VARIANT_BOOL *WebViewAllowNavigation);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WebViewAllowNavigation )( 
            MAPIFolder * This,
            /* [in] */ VARIANT_BOOL WebViewAllowNavigation);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddToPFFavorites )( 
            MAPIFolder * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressBookName )( 
            MAPIFolder * This,
            /* [retval][out] */ BSTR *AddressBookName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AddressBookName )( 
            MAPIFolder * This,
            /* [in] */ BSTR AddressBookName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowAsOutlookAB )( 
            MAPIFolder * This,
            /* [retval][out] */ VARIANT_BOOL *ShowAsOutlookAB);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowAsOutlookAB )( 
            MAPIFolder * This,
            /* [in] */ VARIANT_BOOL ShowAsOutlookAB);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FolderPath )( 
            MAPIFolder * This,
            /* [retval][out] */ BSTR *FolderPath);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *AddToFavorites )( 
            MAPIFolder * This,
            /* [optional][in] */ VARIANT fNoUI,
            /* [optional][in] */ VARIANT Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InAppFolderSyncObject )( 
            MAPIFolder * This,
            /* [retval][out] */ VARIANT_BOOL *InAppFolderSyncObject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InAppFolderSyncObject )( 
            MAPIFolder * This,
            /* [in] */ VARIANT_BOOL InAppFolderSyncObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentView )( 
            MAPIFolder * This,
            /* [retval][out] */ View **CurrentView);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomViewsOnly )( 
            MAPIFolder * This,
            /* [retval][out] */ VARIANT_BOOL *CustomViewsOnly);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CustomViewsOnly )( 
            MAPIFolder * This,
            /* [in] */ VARIANT_BOOL CustomViewsOnly);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Views )( 
            MAPIFolder * This,
            /* [retval][out] */ _Views **Views);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            MAPIFolder * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullFolderPath )( 
            MAPIFolder * This,
            /* [retval][out] */ BSTR *FullFolderPath);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsSharePointFolder )( 
            MAPIFolder * This,
            /* [retval][out] */ VARIANT_BOOL *IsSharePointFolder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowItemCount )( 
            MAPIFolder * This,
            /* [retval][out] */ OlShowItemCount *ShowItemCount);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowItemCount )( 
            MAPIFolder * This,
            /* [in] */ OlShowItemCount ShowItemCount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Store )( 
            MAPIFolder * This,
            /* [retval][out] */ _Store **Store);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStorage )( 
            MAPIFolder * This,
            /* [in] */ BSTR StorageIdentifier,
            /* [in] */ OlStorageIdentifierType StorageIdentifierType,
            /* [retval][out] */ _StorageItem **StorageItem);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetTable )( 
            MAPIFolder * This,
            /* [optional][in] */ VARIANT Filter,
            /* [optional][in] */ VARIANT TableContents,
            /* [retval][out] */ _Table **Table);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            MAPIFolder * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCalendarExporter )( 
            MAPIFolder * This,
            /* [retval][out] */ _CalendarSharing **Exporter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserDefinedProperties )( 
            MAPIFolder * This,
            /* [retval][out] */ _UserDefinedProperties **UserDefinedProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomIcon )( 
            MAPIFolder * This,
            /* [retval][out] */ /* external definition not present */ void **Picture);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetCustomIcon )( 
            MAPIFolder * This,
            /* [in] */ /* external definition not present */ void *Picture);
        
        END_INTERFACE
    } MAPIFolderVtbl;

    interface MAPIFolder
    {
        CONST_VTBL struct MAPIFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define MAPIFolder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define MAPIFolder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define MAPIFolder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define MAPIFolder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define MAPIFolder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define MAPIFolder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define MAPIFolder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define MAPIFolder_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define MAPIFolder_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define MAPIFolder_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define MAPIFolder_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define MAPIFolder_get_DefaultItemType(This,DefaultItemType)	\
    ( (This)->lpVtbl -> get_DefaultItemType(This,DefaultItemType) ) 

#define MAPIFolder_get_DefaultMessageClass(This,DefaultMessageClass)	\
    ( (This)->lpVtbl -> get_DefaultMessageClass(This,DefaultMessageClass) ) 

#define MAPIFolder_get_Description(This,Description)	\
    ( (This)->lpVtbl -> get_Description(This,Description) ) 

#define MAPIFolder_put_Description(This,Description)	\
    ( (This)->lpVtbl -> put_Description(This,Description) ) 

#define MAPIFolder_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define MAPIFolder_get_Folders(This,Folders)	\
    ( (This)->lpVtbl -> get_Folders(This,Folders) ) 

#define MAPIFolder_get_Items(This,Items)	\
    ( (This)->lpVtbl -> get_Items(This,Items) ) 

#define MAPIFolder_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define MAPIFolder_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define MAPIFolder_get_StoreID(This,StoreID)	\
    ( (This)->lpVtbl -> get_StoreID(This,StoreID) ) 

#define MAPIFolder_get_UnReadItemCount(This,UnReadItemCount)	\
    ( (This)->lpVtbl -> get_UnReadItemCount(This,UnReadItemCount) ) 

#define MAPIFolder_CopyTo(This,DestinationFolder,Folder)	\
    ( (This)->lpVtbl -> CopyTo(This,DestinationFolder,Folder) ) 

#define MAPIFolder_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define MAPIFolder_Display(This)	\
    ( (This)->lpVtbl -> Display(This) ) 

#define MAPIFolder_GetExplorer(This,DisplayMode,Explorer)	\
    ( (This)->lpVtbl -> GetExplorer(This,DisplayMode,Explorer) ) 

#define MAPIFolder_MoveTo(This,DestinationFolder)	\
    ( (This)->lpVtbl -> MoveTo(This,DestinationFolder) ) 

#define MAPIFolder_get_UserPermissions(This,UserPermissions)	\
    ( (This)->lpVtbl -> get_UserPermissions(This,UserPermissions) ) 

#define MAPIFolder_get_WebViewOn(This,WebViewOn)	\
    ( (This)->lpVtbl -> get_WebViewOn(This,WebViewOn) ) 

#define MAPIFolder_put_WebViewOn(This,WebViewOn)	\
    ( (This)->lpVtbl -> put_WebViewOn(This,WebViewOn) ) 

#define MAPIFolder_get_WebViewURL(This,WebViewURL)	\
    ( (This)->lpVtbl -> get_WebViewURL(This,WebViewURL) ) 

#define MAPIFolder_put_WebViewURL(This,WebViewURL)	\
    ( (This)->lpVtbl -> put_WebViewURL(This,WebViewURL) ) 

#define MAPIFolder_get_WebViewAllowNavigation(This,WebViewAllowNavigation)	\
    ( (This)->lpVtbl -> get_WebViewAllowNavigation(This,WebViewAllowNavigation) ) 

#define MAPIFolder_put_WebViewAllowNavigation(This,WebViewAllowNavigation)	\
    ( (This)->lpVtbl -> put_WebViewAllowNavigation(This,WebViewAllowNavigation) ) 

#define MAPIFolder_AddToPFFavorites(This)	\
    ( (This)->lpVtbl -> AddToPFFavorites(This) ) 

#define MAPIFolder_get_AddressBookName(This,AddressBookName)	\
    ( (This)->lpVtbl -> get_AddressBookName(This,AddressBookName) ) 

#define MAPIFolder_put_AddressBookName(This,AddressBookName)	\
    ( (This)->lpVtbl -> put_AddressBookName(This,AddressBookName) ) 

#define MAPIFolder_get_ShowAsOutlookAB(This,ShowAsOutlookAB)	\
    ( (This)->lpVtbl -> get_ShowAsOutlookAB(This,ShowAsOutlookAB) ) 

#define MAPIFolder_put_ShowAsOutlookAB(This,ShowAsOutlookAB)	\
    ( (This)->lpVtbl -> put_ShowAsOutlookAB(This,ShowAsOutlookAB) ) 

#define MAPIFolder_get_FolderPath(This,FolderPath)	\
    ( (This)->lpVtbl -> get_FolderPath(This,FolderPath) ) 

#define MAPIFolder_AddToFavorites(This,fNoUI,Name)	\
    ( (This)->lpVtbl -> AddToFavorites(This,fNoUI,Name) ) 

#define MAPIFolder_get_InAppFolderSyncObject(This,InAppFolderSyncObject)	\
    ( (This)->lpVtbl -> get_InAppFolderSyncObject(This,InAppFolderSyncObject) ) 

#define MAPIFolder_put_InAppFolderSyncObject(This,InAppFolderSyncObject)	\
    ( (This)->lpVtbl -> put_InAppFolderSyncObject(This,InAppFolderSyncObject) ) 

#define MAPIFolder_get_CurrentView(This,CurrentView)	\
    ( (This)->lpVtbl -> get_CurrentView(This,CurrentView) ) 

#define MAPIFolder_get_CustomViewsOnly(This,CustomViewsOnly)	\
    ( (This)->lpVtbl -> get_CustomViewsOnly(This,CustomViewsOnly) ) 

#define MAPIFolder_put_CustomViewsOnly(This,CustomViewsOnly)	\
    ( (This)->lpVtbl -> put_CustomViewsOnly(This,CustomViewsOnly) ) 

#define MAPIFolder_get_Views(This,Views)	\
    ( (This)->lpVtbl -> get_Views(This,Views) ) 

#define MAPIFolder_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define MAPIFolder_get_FullFolderPath(This,FullFolderPath)	\
    ( (This)->lpVtbl -> get_FullFolderPath(This,FullFolderPath) ) 

#define MAPIFolder_get_IsSharePointFolder(This,IsSharePointFolder)	\
    ( (This)->lpVtbl -> get_IsSharePointFolder(This,IsSharePointFolder) ) 

#define MAPIFolder_get_ShowItemCount(This,ShowItemCount)	\
    ( (This)->lpVtbl -> get_ShowItemCount(This,ShowItemCount) ) 

#define MAPIFolder_put_ShowItemCount(This,ShowItemCount)	\
    ( (This)->lpVtbl -> put_ShowItemCount(This,ShowItemCount) ) 

#define MAPIFolder_get_Store(This,Store)	\
    ( (This)->lpVtbl -> get_Store(This,Store) ) 

#define MAPIFolder_GetStorage(This,StorageIdentifier,StorageIdentifierType,StorageItem)	\
    ( (This)->lpVtbl -> GetStorage(This,StorageIdentifier,StorageIdentifierType,StorageItem) ) 

#define MAPIFolder_GetTable(This,Filter,TableContents,Table)	\
    ( (This)->lpVtbl -> GetTable(This,Filter,TableContents,Table) ) 

#define MAPIFolder_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define MAPIFolder_GetCalendarExporter(This,Exporter)	\
    ( (This)->lpVtbl -> GetCalendarExporter(This,Exporter) ) 

#define MAPIFolder_get_UserDefinedProperties(This,UserDefinedProperties)	\
    ( (This)->lpVtbl -> get_UserDefinedProperties(This,UserDefinedProperties) ) 

#define MAPIFolder_GetCustomIcon(This,Picture)	\
    ( (This)->lpVtbl -> GetCustomIcon(This,Picture) ) 

#define MAPIFolder_SetCustomIcon(This,Picture)	\
    ( (This)->lpVtbl -> SetCustomIcon(This,Picture) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __MAPIFolder_INTERFACE_DEFINED__ */


#ifndef ___Folders_INTERFACE_DEFINED__
#define ___Folders_INTERFACE_DEFINED__

/* interface _Folders */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Folders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063040-0000-0000-C000-000000000046")
    _Folders : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ MAPIFolder **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_RawTable( 
            /* [retval][out] */ IUnknown **RawTable) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Type,
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFirst( 
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetLast( 
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetNext( 
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetPrevious( 
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _FoldersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Folders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Folders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Folders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Folders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Folders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Folders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Folders * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Folders * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Folders * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Folders * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Folders * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Folders * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Folders * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ MAPIFolder **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RawTable )( 
            _Folders * This,
            /* [retval][out] */ IUnknown **RawTable);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _Folders * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Type,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFirst )( 
            _Folders * This,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetLast )( 
            _Folders * This,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetNext )( 
            _Folders * This,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetPrevious )( 
            _Folders * This,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _Folders * This,
            /* [in] */ long Index);
        
        END_INTERFACE
    } _FoldersVtbl;

    interface _Folders
    {
        CONST_VTBL struct _FoldersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Folders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Folders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Folders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Folders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Folders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Folders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Folders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Folders_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Folders_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Folders_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Folders_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Folders_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Folders_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Folders_get_RawTable(This,RawTable)	\
    ( (This)->lpVtbl -> get_RawTable(This,RawTable) ) 

#define _Folders_Add(This,Name,Type,Folder)	\
    ( (This)->lpVtbl -> Add(This,Name,Type,Folder) ) 

#define _Folders_GetFirst(This,Folder)	\
    ( (This)->lpVtbl -> GetFirst(This,Folder) ) 

#define _Folders_GetLast(This,Folder)	\
    ( (This)->lpVtbl -> GetLast(This,Folder) ) 

#define _Folders_GetNext(This,Folder)	\
    ( (This)->lpVtbl -> GetNext(This,Folder) ) 

#define _Folders_GetPrevious(This,Folder)	\
    ( (This)->lpVtbl -> GetPrevious(This,Folder) ) 

#define _Folders_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Folders_INTERFACE_DEFINED__ */


#ifndef ___Items_INTERFACE_DEFINED__
#define ___Items_INTERFACE_DEFINED__

/* interface _Items */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Items;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063041-0000-0000-C000-000000000046")
    _Items : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_RawTable( 
            /* [retval][out] */ IUnknown **RawTable) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IncludeRecurrences( 
            /* [retval][out] */ VARIANT_BOOL *IncludeRecurrences) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IncludeRecurrences( 
            /* [in] */ VARIANT_BOOL IncludeRecurrences) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ VARIANT Type,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Filter,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindNext( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFirst( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetLast( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetNext( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetPrevious( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetColumns( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Restrict( 
            /* [in] */ BSTR Filter,
            /* [retval][out] */ _Items **Items) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetColumns( 
            /* [in] */ BSTR Columns) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Sort( 
            /* [in] */ BSTR Property,
            /* [optional][in] */ VARIANT Descending) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Items * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Items * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Items * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Items * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Items * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Items * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Items * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Items * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Items * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Items * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Items * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Items * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Items * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RawTable )( 
            _Items * This,
            /* [retval][out] */ IUnknown **RawTable);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IncludeRecurrences )( 
            _Items * This,
            /* [retval][out] */ VARIANT_BOOL *IncludeRecurrences);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IncludeRecurrences )( 
            _Items * This,
            /* [in] */ VARIANT_BOOL IncludeRecurrences);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _Items * This,
            /* [optional][in] */ VARIANT Type,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            _Items * This,
            /* [in] */ BSTR Filter,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindNext )( 
            _Items * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFirst )( 
            _Items * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetLast )( 
            _Items * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetNext )( 
            _Items * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetPrevious )( 
            _Items * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _Items * This,
            /* [in] */ long Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetColumns )( 
            _Items * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Restrict )( 
            _Items * This,
            /* [in] */ BSTR Filter,
            /* [retval][out] */ _Items **Items);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetColumns )( 
            _Items * This,
            /* [in] */ BSTR Columns);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Sort )( 
            _Items * This,
            /* [in] */ BSTR Property,
            /* [optional][in] */ VARIANT Descending);
        
        END_INTERFACE
    } _ItemsVtbl;

    interface _Items
    {
        CONST_VTBL struct _ItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Items_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Items_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Items_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Items_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Items_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Items_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Items_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Items_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Items_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Items_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Items_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Items_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Items_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Items_get_RawTable(This,RawTable)	\
    ( (This)->lpVtbl -> get_RawTable(This,RawTable) ) 

#define _Items_get_IncludeRecurrences(This,IncludeRecurrences)	\
    ( (This)->lpVtbl -> get_IncludeRecurrences(This,IncludeRecurrences) ) 

#define _Items_put_IncludeRecurrences(This,IncludeRecurrences)	\
    ( (This)->lpVtbl -> put_IncludeRecurrences(This,IncludeRecurrences) ) 

#define _Items_Add(This,Type,Item)	\
    ( (This)->lpVtbl -> Add(This,Type,Item) ) 

#define _Items_Find(This,Filter,Item)	\
    ( (This)->lpVtbl -> Find(This,Filter,Item) ) 

#define _Items_FindNext(This,Item)	\
    ( (This)->lpVtbl -> FindNext(This,Item) ) 

#define _Items_GetFirst(This,Item)	\
    ( (This)->lpVtbl -> GetFirst(This,Item) ) 

#define _Items_GetLast(This,Item)	\
    ( (This)->lpVtbl -> GetLast(This,Item) ) 

#define _Items_GetNext(This,Item)	\
    ( (This)->lpVtbl -> GetNext(This,Item) ) 

#define _Items_GetPrevious(This,Item)	\
    ( (This)->lpVtbl -> GetPrevious(This,Item) ) 

#define _Items_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define _Items_ResetColumns(This)	\
    ( (This)->lpVtbl -> ResetColumns(This) ) 

#define _Items_Restrict(This,Filter,Items)	\
    ( (This)->lpVtbl -> Restrict(This,Filter,Items) ) 

#define _Items_SetColumns(This,Columns)	\
    ( (This)->lpVtbl -> SetColumns(This,Columns) ) 

#define _Items_Sort(This,Property,Descending)	\
    ( (This)->lpVtbl -> Sort(This,Property,Descending) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Items_INTERFACE_DEFINED__ */


#ifndef ___Explorer_INTERFACE_DEFINED__
#define ___Explorer_INTERFACE_DEFINED__

/* interface _Explorer */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Explorer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063003-0000-0000-C000-000000000046")
    _Explorer : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandBars( 
            /* [retval][out] */ /* external definition not present */ CommandBars **CommandBars) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentFolder( 
            /* [retval][out] */ MAPIFolder **CurrentFolder) = 0;
        
        virtual /* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_CurrentFolder( 
            /* [in] */ MAPIFolder *CurrentFolder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *Caption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentView( 
            /* [retval][out] */ VARIANT *CurrentView) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CurrentView( 
            /* [in] */ VARIANT CurrentView) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ long *Height) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ long Height) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ long *Left) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ long Left) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Panes( 
            /* [retval][out] */ Panes **Panes) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ Selection **Selection) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ long *Top) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ long Top) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *Width) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long Width) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WindowState( 
            /* [retval][out] */ OlWindowState *WindowState) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WindowState( 
            /* [in] */ OlWindowState WindowState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsPaneVisible( 
            /* [in] */ OlPane Pane,
            /* [retval][out] */ VARIANT_BOOL *IsPaneVisible) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowPane( 
            /* [in] */ OlPane Pane,
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Views( 
            /* [retval][out] */ IDispatch **Views) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLDocument( 
            /* [retval][out] */ IDispatch **HTMLDocument) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE SelectFolder( 
            /* [in] */ MAPIFolder *Folder) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE DeselectFolder( 
            /* [in] */ MAPIFolder *Folder) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE IsFolderSelected( 
            /* [in] */ MAPIFolder *Folder,
            /* [retval][out] */ VARIANT_BOOL *fIsSelected) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationPane( 
            /* [retval][out] */ _NavigationPane **NavigationPane) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearSearch( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Search( 
            /* [in] */ BSTR Query,
            /* [in] */ OlSearchScope SearchScope) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsItemSelectableInView( 
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ VARIANT_BOOL *fIsSelectable) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddToSelection( 
            /* [in] */ IDispatch *Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveFromSelection( 
            /* [in] */ IDispatch *Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectAllItems( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearSelection( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AccountSelector( 
            /* [retval][out] */ _AccountSelector **AccountSelector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AttachmentSelection( 
            /* [retval][out] */ _AttachmentSelection **AttachmentSelection) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveInlineResponse( 
            /* [retval][out] */ IDispatch **ActiveInlineResponse) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveInlineResponseWordEditor( 
            /* [retval][out] */ IDispatch **ActiveInlineResponseWordEditor) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ExplorerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Explorer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Explorer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Explorer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Explorer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Explorer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Explorer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Explorer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Explorer * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Explorer * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Explorer * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Explorer * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBars )( 
            _Explorer * This,
            /* [retval][out] */ /* external definition not present */ CommandBars **CommandBars);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFolder )( 
            _Explorer * This,
            /* [retval][out] */ MAPIFolder **CurrentFolder);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_CurrentFolder )( 
            _Explorer * This,
            /* [in] */ MAPIFolder *CurrentFolder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _Explorer * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _Explorer * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _Explorer * This,
            /* [retval][out] */ BSTR *Caption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentView )( 
            _Explorer * This,
            /* [retval][out] */ VARIANT *CurrentView);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentView )( 
            _Explorer * This,
            /* [in] */ VARIANT CurrentView);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            _Explorer * This,
            /* [retval][out] */ long *Height);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            _Explorer * This,
            /* [in] */ long Height);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            _Explorer * This,
            /* [retval][out] */ long *Left);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            _Explorer * This,
            /* [in] */ long Left);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Panes )( 
            _Explorer * This,
            /* [retval][out] */ Panes **Panes);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            _Explorer * This,
            /* [retval][out] */ Selection **Selection);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            _Explorer * This,
            /* [retval][out] */ long *Top);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            _Explorer * This,
            /* [in] */ long Top);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            _Explorer * This,
            /* [retval][out] */ long *Width);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            _Explorer * This,
            /* [in] */ long Width);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WindowState )( 
            _Explorer * This,
            /* [retval][out] */ OlWindowState *WindowState);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WindowState )( 
            _Explorer * This,
            /* [in] */ OlWindowState WindowState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            _Explorer * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsPaneVisible )( 
            _Explorer * This,
            /* [in] */ OlPane Pane,
            /* [retval][out] */ VARIANT_BOOL *IsPaneVisible);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowPane )( 
            _Explorer * This,
            /* [in] */ OlPane Pane,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Views )( 
            _Explorer * This,
            /* [retval][out] */ IDispatch **Views);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLDocument )( 
            _Explorer * This,
            /* [retval][out] */ IDispatch **HTMLDocument);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *SelectFolder )( 
            _Explorer * This,
            /* [in] */ MAPIFolder *Folder);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *DeselectFolder )( 
            _Explorer * This,
            /* [in] */ MAPIFolder *Folder);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *IsFolderSelected )( 
            _Explorer * This,
            /* [in] */ MAPIFolder *Folder,
            /* [retval][out] */ VARIANT_BOOL *fIsSelected);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationPane )( 
            _Explorer * This,
            /* [retval][out] */ _NavigationPane **NavigationPane);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearSearch )( 
            _Explorer * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Search )( 
            _Explorer * This,
            /* [in] */ BSTR Query,
            /* [in] */ OlSearchScope SearchScope);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsItemSelectableInView )( 
            _Explorer * This,
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ VARIANT_BOOL *fIsSelectable);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddToSelection )( 
            _Explorer * This,
            /* [in] */ IDispatch *Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveFromSelection )( 
            _Explorer * This,
            /* [in] */ IDispatch *Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectAllItems )( 
            _Explorer * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearSelection )( 
            _Explorer * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AccountSelector )( 
            _Explorer * This,
            /* [retval][out] */ _AccountSelector **AccountSelector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AttachmentSelection )( 
            _Explorer * This,
            /* [retval][out] */ _AttachmentSelection **AttachmentSelection);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveInlineResponse )( 
            _Explorer * This,
            /* [retval][out] */ IDispatch **ActiveInlineResponse);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveInlineResponseWordEditor )( 
            _Explorer * This,
            /* [retval][out] */ IDispatch **ActiveInlineResponseWordEditor);
        
        END_INTERFACE
    } _ExplorerVtbl;

    interface _Explorer
    {
        CONST_VTBL struct _ExplorerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Explorer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Explorer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Explorer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Explorer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Explorer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Explorer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Explorer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Explorer_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Explorer_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Explorer_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Explorer_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Explorer_get_CommandBars(This,CommandBars)	\
    ( (This)->lpVtbl -> get_CommandBars(This,CommandBars) ) 

#define _Explorer_get_CurrentFolder(This,CurrentFolder)	\
    ( (This)->lpVtbl -> get_CurrentFolder(This,CurrentFolder) ) 

#define _Explorer_putref_CurrentFolder(This,CurrentFolder)	\
    ( (This)->lpVtbl -> putref_CurrentFolder(This,CurrentFolder) ) 

#define _Explorer_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define _Explorer_Display(This)	\
    ( (This)->lpVtbl -> Display(This) ) 

#define _Explorer_get_Caption(This,Caption)	\
    ( (This)->lpVtbl -> get_Caption(This,Caption) ) 

#define _Explorer_get_CurrentView(This,CurrentView)	\
    ( (This)->lpVtbl -> get_CurrentView(This,CurrentView) ) 

#define _Explorer_put_CurrentView(This,CurrentView)	\
    ( (This)->lpVtbl -> put_CurrentView(This,CurrentView) ) 

#define _Explorer_get_Height(This,Height)	\
    ( (This)->lpVtbl -> get_Height(This,Height) ) 

#define _Explorer_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define _Explorer_get_Left(This,Left)	\
    ( (This)->lpVtbl -> get_Left(This,Left) ) 

#define _Explorer_put_Left(This,Left)	\
    ( (This)->lpVtbl -> put_Left(This,Left) ) 

#define _Explorer_get_Panes(This,Panes)	\
    ( (This)->lpVtbl -> get_Panes(This,Panes) ) 

#define _Explorer_get_Selection(This,Selection)	\
    ( (This)->lpVtbl -> get_Selection(This,Selection) ) 

#define _Explorer_get_Top(This,Top)	\
    ( (This)->lpVtbl -> get_Top(This,Top) ) 

#define _Explorer_put_Top(This,Top)	\
    ( (This)->lpVtbl -> put_Top(This,Top) ) 

#define _Explorer_get_Width(This,Width)	\
    ( (This)->lpVtbl -> get_Width(This,Width) ) 

#define _Explorer_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define _Explorer_get_WindowState(This,WindowState)	\
    ( (This)->lpVtbl -> get_WindowState(This,WindowState) ) 

#define _Explorer_put_WindowState(This,WindowState)	\
    ( (This)->lpVtbl -> put_WindowState(This,WindowState) ) 

#define _Explorer_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define _Explorer_IsPaneVisible(This,Pane,IsPaneVisible)	\
    ( (This)->lpVtbl -> IsPaneVisible(This,Pane,IsPaneVisible) ) 

#define _Explorer_ShowPane(This,Pane,Visible)	\
    ( (This)->lpVtbl -> ShowPane(This,Pane,Visible) ) 

#define _Explorer_get_Views(This,Views)	\
    ( (This)->lpVtbl -> get_Views(This,Views) ) 

#define _Explorer_get_HTMLDocument(This,HTMLDocument)	\
    ( (This)->lpVtbl -> get_HTMLDocument(This,HTMLDocument) ) 

#define _Explorer_SelectFolder(This,Folder)	\
    ( (This)->lpVtbl -> SelectFolder(This,Folder) ) 

#define _Explorer_DeselectFolder(This,Folder)	\
    ( (This)->lpVtbl -> DeselectFolder(This,Folder) ) 

#define _Explorer_IsFolderSelected(This,Folder,fIsSelected)	\
    ( (This)->lpVtbl -> IsFolderSelected(This,Folder,fIsSelected) ) 

#define _Explorer_get_NavigationPane(This,NavigationPane)	\
    ( (This)->lpVtbl -> get_NavigationPane(This,NavigationPane) ) 

#define _Explorer_ClearSearch(This)	\
    ( (This)->lpVtbl -> ClearSearch(This) ) 

#define _Explorer_Search(This,Query,SearchScope)	\
    ( (This)->lpVtbl -> Search(This,Query,SearchScope) ) 

#define _Explorer_IsItemSelectableInView(This,Item,fIsSelectable)	\
    ( (This)->lpVtbl -> IsItemSelectableInView(This,Item,fIsSelectable) ) 

#define _Explorer_AddToSelection(This,Item)	\
    ( (This)->lpVtbl -> AddToSelection(This,Item) ) 

#define _Explorer_RemoveFromSelection(This,Item)	\
    ( (This)->lpVtbl -> RemoveFromSelection(This,Item) ) 

#define _Explorer_SelectAllItems(This)	\
    ( (This)->lpVtbl -> SelectAllItems(This) ) 

#define _Explorer_ClearSelection(This)	\
    ( (This)->lpVtbl -> ClearSelection(This) ) 

#define _Explorer_get_AccountSelector(This,AccountSelector)	\
    ( (This)->lpVtbl -> get_AccountSelector(This,AccountSelector) ) 

#define _Explorer_get_AttachmentSelection(This,AttachmentSelection)	\
    ( (This)->lpVtbl -> get_AttachmentSelection(This,AttachmentSelection) ) 

#define _Explorer_get_ActiveInlineResponse(This,ActiveInlineResponse)	\
    ( (This)->lpVtbl -> get_ActiveInlineResponse(This,ActiveInlineResponse) ) 

#define _Explorer_get_ActiveInlineResponseWordEditor(This,ActiveInlineResponseWordEditor)	\
    ( (This)->lpVtbl -> get_ActiveInlineResponseWordEditor(This,ActiveInlineResponseWordEditor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Explorer_INTERFACE_DEFINED__ */


#ifndef __Panes_INTERFACE_DEFINED__
#define __Panes_INTERFACE_DEFINED__

/* interface Panes */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Panes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063009-0000-0000-C000-000000000046")
    Panes : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct PanesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Panes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Panes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Panes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Panes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Panes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Panes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Panes * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Panes * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Panes * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Panes * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Panes * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Panes * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Panes * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item);
        
        END_INTERFACE
    } PanesVtbl;

    interface Panes
    {
        CONST_VTBL struct PanesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Panes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Panes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Panes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Panes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Panes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Panes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Panes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Panes_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Panes_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Panes_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Panes_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Panes_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Panes_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Panes_INTERFACE_DEFINED__ */


#ifndef ___NavigationPane_INTERFACE_DEFINED__
#define ___NavigationPane_INTERFACE_DEFINED__

/* interface _NavigationPane */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NavigationPane;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E6-0000-0000-C000-000000000046")
    _NavigationPane : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCollapsed( 
            /* [retval][out] */ VARIANT_BOOL *IsCollapsed) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsCollapsed( 
            /* [in] */ VARIANT_BOOL IsCollapsed) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentModule( 
            /* [retval][out] */ _NavigationModule **CurrentModule) = 0;
        
        virtual /* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_CurrentModule( 
            /* [in] */ _NavigationModule *CurrentModule) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayedModuleCount( 
            /* [retval][out] */ long *DisplayedModuleCount) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayedModuleCount( 
            /* [in] */ long DisplayedModuleCount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Modules( 
            /* [retval][out] */ _NavigationModules **Modules) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NavigationPaneVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NavigationPane * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NavigationPane * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NavigationPane * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NavigationPane * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NavigationPane * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NavigationPane * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NavigationPane * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NavigationPane * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NavigationPane * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NavigationPane * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NavigationPane * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCollapsed )( 
            _NavigationPane * This,
            /* [retval][out] */ VARIANT_BOOL *IsCollapsed);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsCollapsed )( 
            _NavigationPane * This,
            /* [in] */ VARIANT_BOOL IsCollapsed);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentModule )( 
            _NavigationPane * This,
            /* [retval][out] */ _NavigationModule **CurrentModule);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_CurrentModule )( 
            _NavigationPane * This,
            /* [in] */ _NavigationModule *CurrentModule);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedModuleCount )( 
            _NavigationPane * This,
            /* [retval][out] */ long *DisplayedModuleCount);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedModuleCount )( 
            _NavigationPane * This,
            /* [in] */ long DisplayedModuleCount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Modules )( 
            _NavigationPane * This,
            /* [retval][out] */ _NavigationModules **Modules);
        
        END_INTERFACE
    } _NavigationPaneVtbl;

    interface _NavigationPane
    {
        CONST_VTBL struct _NavigationPaneVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NavigationPane_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NavigationPane_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NavigationPane_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NavigationPane_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NavigationPane_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NavigationPane_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NavigationPane_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NavigationPane_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NavigationPane_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NavigationPane_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NavigationPane_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NavigationPane_get_IsCollapsed(This,IsCollapsed)	\
    ( (This)->lpVtbl -> get_IsCollapsed(This,IsCollapsed) ) 

#define _NavigationPane_put_IsCollapsed(This,IsCollapsed)	\
    ( (This)->lpVtbl -> put_IsCollapsed(This,IsCollapsed) ) 

#define _NavigationPane_get_CurrentModule(This,CurrentModule)	\
    ( (This)->lpVtbl -> get_CurrentModule(This,CurrentModule) ) 

#define _NavigationPane_putref_CurrentModule(This,CurrentModule)	\
    ( (This)->lpVtbl -> putref_CurrentModule(This,CurrentModule) ) 

#define _NavigationPane_get_DisplayedModuleCount(This,DisplayedModuleCount)	\
    ( (This)->lpVtbl -> get_DisplayedModuleCount(This,DisplayedModuleCount) ) 

#define _NavigationPane_put_DisplayedModuleCount(This,DisplayedModuleCount)	\
    ( (This)->lpVtbl -> put_DisplayedModuleCount(This,DisplayedModuleCount) ) 

#define _NavigationPane_get_Modules(This,Modules)	\
    ( (This)->lpVtbl -> get_Modules(This,Modules) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NavigationPane_INTERFACE_DEFINED__ */


#ifndef ___NavigationModule_INTERFACE_DEFINED__
#define ___NavigationModule_INTERFACE_DEFINED__

/* interface _NavigationModule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NavigationModule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E8-0000-0000-C000-000000000046")
    _NavigationModule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationModuleType( 
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NavigationModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NavigationModule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NavigationModule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NavigationModule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NavigationModule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NavigationModule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NavigationModule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NavigationModule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NavigationModule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NavigationModule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NavigationModule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NavigationModule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationModuleType )( 
            _NavigationModule * This,
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _NavigationModule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _NavigationModule * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _NavigationModule * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _NavigationModule * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _NavigationModule * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        END_INTERFACE
    } _NavigationModuleVtbl;

    interface _NavigationModule
    {
        CONST_VTBL struct _NavigationModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NavigationModule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NavigationModule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NavigationModule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NavigationModule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NavigationModule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NavigationModule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NavigationModule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NavigationModule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NavigationModule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NavigationModule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NavigationModule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NavigationModule_get_NavigationModuleType(This,NavigationModuleType)	\
    ( (This)->lpVtbl -> get_NavigationModuleType(This,NavigationModuleType) ) 

#define _NavigationModule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _NavigationModule_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _NavigationModule_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define _NavigationModule_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _NavigationModule_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NavigationModule_INTERFACE_DEFINED__ */


#ifndef ___NavigationModules_INTERFACE_DEFINED__
#define ___NavigationModules_INTERFACE_DEFINED__

/* interface _NavigationModules */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NavigationModules;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E7-0000-0000-C000-000000000046")
    _NavigationModules : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _NavigationModule **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetNavigationModule( 
            /* [in] */ OlNavigationModuleType ModuleType,
            /* [retval][out] */ _NavigationModule **NavigationModule) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NavigationModulesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NavigationModules * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NavigationModules * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NavigationModules * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NavigationModules * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NavigationModules * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NavigationModules * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NavigationModules * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NavigationModules * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NavigationModules * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NavigationModules * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NavigationModules * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _NavigationModules * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _NavigationModules * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _NavigationModule **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetNavigationModule )( 
            _NavigationModules * This,
            /* [in] */ OlNavigationModuleType ModuleType,
            /* [retval][out] */ _NavigationModule **NavigationModule);
        
        END_INTERFACE
    } _NavigationModulesVtbl;

    interface _NavigationModules
    {
        CONST_VTBL struct _NavigationModulesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NavigationModules_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NavigationModules_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NavigationModules_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NavigationModules_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NavigationModules_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NavigationModules_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NavigationModules_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NavigationModules_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NavigationModules_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NavigationModules_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NavigationModules_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NavigationModules_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _NavigationModules_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _NavigationModules_GetNavigationModule(This,ModuleType,NavigationModule)	\
    ( (This)->lpVtbl -> GetNavigationModule(This,ModuleType,NavigationModule) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NavigationModules_INTERFACE_DEFINED__ */


#ifndef ___AccountSelector_INTERFACE_DEFINED__
#define ___AccountSelector_INTERFACE_DEFINED__

/* interface _AccountSelector */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__AccountSelector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063103-0000-0000-C000-000000000046")
    _AccountSelector : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedAccount( 
            /* [retval][out] */ _Account **SelectedAccount) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AccountSelectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AccountSelector * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AccountSelector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AccountSelector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AccountSelector * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AccountSelector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AccountSelector * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AccountSelector * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _AccountSelector * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _AccountSelector * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _AccountSelector * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _AccountSelector * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAccount )( 
            _AccountSelector * This,
            /* [retval][out] */ _Account **SelectedAccount);
        
        END_INTERFACE
    } _AccountSelectorVtbl;

    interface _AccountSelector
    {
        CONST_VTBL struct _AccountSelectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AccountSelector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AccountSelector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AccountSelector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AccountSelector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AccountSelector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AccountSelector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AccountSelector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _AccountSelector_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _AccountSelector_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _AccountSelector_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _AccountSelector_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _AccountSelector_get_SelectedAccount(This,SelectedAccount)	\
    ( (This)->lpVtbl -> get_SelectedAccount(This,SelectedAccount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AccountSelector_INTERFACE_DEFINED__ */


#ifndef ___Account_INTERFACE_DEFINED__
#define ___Account_INTERFACE_DEFINED__

/* interface _Account */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Account;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630C5-0000-0000-C000-000000000046")
    _Account : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AccountType( 
            /* [retval][out] */ OlAccountType *AccountType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ BSTR *DisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserName( 
            /* [retval][out] */ BSTR *UserName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SmtpAddress( 
            /* [retval][out] */ BSTR *SmtpAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoDiscoverConnectionMode( 
            /* [retval][out] */ OlAutoDiscoverConnectionMode *AutoDiscoverConnectionMode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentUser( 
            /* [retval][out] */ Recipient **CurrentUser) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoDiscoverXml( 
            /* [retval][out] */ BSTR *AutoDiscoverXml) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DeliveryStore( 
            /* [retval][out] */ _Store **DeliveryStore) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExchangeConnectionMode( 
            /* [retval][out] */ OlExchangeConnectionMode *ExchangeConnectionMode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExchangeMailboxServerName( 
            /* [retval][out] */ BSTR *ExchangeMailboxServerName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExchangeMailboxServerVersion( 
            /* [retval][out] */ BSTR *ExchangeMailboxServerVersion) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAddressEntryFromID( 
            /* [in] */ BSTR ID,
            /* [retval][out] */ AddressEntry **AddressEntry) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRecipientFromID( 
            /* [in] */ BSTR EntryID,
            /* [retval][out] */ Recipient **Recipient) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_IOlkAccount( 
            /* [retval][out] */ IUnknown **IOlkAccount) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AccountVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Account * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Account * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Account * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Account * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Account * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Account * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Account * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Account * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Account * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Account * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Account * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AccountType )( 
            _Account * This,
            /* [retval][out] */ OlAccountType *AccountType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )( 
            _Account * This,
            /* [retval][out] */ BSTR *DisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserName )( 
            _Account * This,
            /* [retval][out] */ BSTR *UserName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SmtpAddress )( 
            _Account * This,
            /* [retval][out] */ BSTR *SmtpAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoDiscoverConnectionMode )( 
            _Account * This,
            /* [retval][out] */ OlAutoDiscoverConnectionMode *AutoDiscoverConnectionMode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentUser )( 
            _Account * This,
            /* [retval][out] */ Recipient **CurrentUser);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoDiscoverXml )( 
            _Account * This,
            /* [retval][out] */ BSTR *AutoDiscoverXml);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DeliveryStore )( 
            _Account * This,
            /* [retval][out] */ _Store **DeliveryStore);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExchangeConnectionMode )( 
            _Account * This,
            /* [retval][out] */ OlExchangeConnectionMode *ExchangeConnectionMode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExchangeMailboxServerName )( 
            _Account * This,
            /* [retval][out] */ BSTR *ExchangeMailboxServerName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExchangeMailboxServerVersion )( 
            _Account * This,
            /* [retval][out] */ BSTR *ExchangeMailboxServerVersion);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAddressEntryFromID )( 
            _Account * This,
            /* [in] */ BSTR ID,
            /* [retval][out] */ AddressEntry **AddressEntry);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRecipientFromID )( 
            _Account * This,
            /* [in] */ BSTR EntryID,
            /* [retval][out] */ Recipient **Recipient);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IOlkAccount )( 
            _Account * This,
            /* [retval][out] */ IUnknown **IOlkAccount);
        
        END_INTERFACE
    } _AccountVtbl;

    interface _Account
    {
        CONST_VTBL struct _AccountVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Account_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Account_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Account_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Account_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Account_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Account_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Account_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Account_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Account_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Account_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Account_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Account_get_AccountType(This,AccountType)	\
    ( (This)->lpVtbl -> get_AccountType(This,AccountType) ) 

#define _Account_get_DisplayName(This,DisplayName)	\
    ( (This)->lpVtbl -> get_DisplayName(This,DisplayName) ) 

#define _Account_get_UserName(This,UserName)	\
    ( (This)->lpVtbl -> get_UserName(This,UserName) ) 

#define _Account_get_SmtpAddress(This,SmtpAddress)	\
    ( (This)->lpVtbl -> get_SmtpAddress(This,SmtpAddress) ) 

#define _Account_get_AutoDiscoverConnectionMode(This,AutoDiscoverConnectionMode)	\
    ( (This)->lpVtbl -> get_AutoDiscoverConnectionMode(This,AutoDiscoverConnectionMode) ) 

#define _Account_get_CurrentUser(This,CurrentUser)	\
    ( (This)->lpVtbl -> get_CurrentUser(This,CurrentUser) ) 

#define _Account_get_AutoDiscoverXml(This,AutoDiscoverXml)	\
    ( (This)->lpVtbl -> get_AutoDiscoverXml(This,AutoDiscoverXml) ) 

#define _Account_get_DeliveryStore(This,DeliveryStore)	\
    ( (This)->lpVtbl -> get_DeliveryStore(This,DeliveryStore) ) 

#define _Account_get_ExchangeConnectionMode(This,ExchangeConnectionMode)	\
    ( (This)->lpVtbl -> get_ExchangeConnectionMode(This,ExchangeConnectionMode) ) 

#define _Account_get_ExchangeMailboxServerName(This,ExchangeMailboxServerName)	\
    ( (This)->lpVtbl -> get_ExchangeMailboxServerName(This,ExchangeMailboxServerName) ) 

#define _Account_get_ExchangeMailboxServerVersion(This,ExchangeMailboxServerVersion)	\
    ( (This)->lpVtbl -> get_ExchangeMailboxServerVersion(This,ExchangeMailboxServerVersion) ) 

#define _Account_GetAddressEntryFromID(This,ID,AddressEntry)	\
    ( (This)->lpVtbl -> GetAddressEntryFromID(This,ID,AddressEntry) ) 

#define _Account_GetRecipientFromID(This,EntryID,Recipient)	\
    ( (This)->lpVtbl -> GetRecipientFromID(This,EntryID,Recipient) ) 

#define _Account_get_IOlkAccount(This,IOlkAccount)	\
    ( (This)->lpVtbl -> get_IOlkAccount(This,IOlkAccount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Account_INTERFACE_DEFINED__ */


#ifndef ___Store_INTERFACE_DEFINED__
#define ___Store_INTERFACE_DEFINED__

/* interface _Store */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Store;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630C7-0000-0000-C000-000000000046")
    _Store : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ BSTR *DisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StoreID( 
            /* [retval][out] */ BSTR *StoreID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExchangeStoreType( 
            /* [retval][out] */ OlExchangeStoreType *ExchangeStoreType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FilePath( 
            /* [retval][out] */ BSTR *FilePath) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCachedExchange( 
            /* [retval][out] */ VARIANT_BOOL *IsCachedExchange) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDataFileStore( 
            /* [retval][out] */ VARIANT_BOOL *IsDataFileStore) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRootFolder( 
            /* [retval][out] */ MAPIFolder **RootFolder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSearchFolders( 
            /* [retval][out] */ _Folders **SearchFolders) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsOpen( 
            /* [retval][out] */ VARIANT_BOOL *IsOpen) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRules( 
            /* [retval][out] */ _Rules **Rules) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSpecialFolder( 
            /* [in] */ OlSpecialFolders FolderType,
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsInstantSearchEnabled( 
            /* [retval][out] */ VARIANT_BOOL *IsInstantSearchEnabled) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RefreshQuotaDisplay( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetDefaultFolder( 
            /* [in] */ OlDefaultFolders FolderType,
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConversationEnabled( 
            /* [retval][out] */ VARIANT_BOOL *IsConversationEnabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ _Categories **Categories) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _StoreVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Store * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Store * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Store * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Store * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Store * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Store * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Store * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Store * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Store * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Store * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Store * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )( 
            _Store * This,
            /* [retval][out] */ BSTR *DisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StoreID )( 
            _Store * This,
            /* [retval][out] */ BSTR *StoreID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExchangeStoreType )( 
            _Store * This,
            /* [retval][out] */ OlExchangeStoreType *ExchangeStoreType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FilePath )( 
            _Store * This,
            /* [retval][out] */ BSTR *FilePath);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCachedExchange )( 
            _Store * This,
            /* [retval][out] */ VARIANT_BOOL *IsCachedExchange);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDataFileStore )( 
            _Store * This,
            /* [retval][out] */ VARIANT_BOOL *IsDataFileStore);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRootFolder )( 
            _Store * This,
            /* [retval][out] */ MAPIFolder **RootFolder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSearchFolders )( 
            _Store * This,
            /* [retval][out] */ _Folders **SearchFolders);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            _Store * This,
            /* [retval][out] */ VARIANT_BOOL *IsOpen);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _Store * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRules )( 
            _Store * This,
            /* [retval][out] */ _Rules **Rules);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _Store * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSpecialFolder )( 
            _Store * This,
            /* [in] */ OlSpecialFolders FolderType,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsInstantSearchEnabled )( 
            _Store * This,
            /* [retval][out] */ VARIANT_BOOL *IsInstantSearchEnabled);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshQuotaDisplay )( 
            _Store * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetDefaultFolder )( 
            _Store * This,
            /* [in] */ OlDefaultFolders FolderType,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConversationEnabled )( 
            _Store * This,
            /* [retval][out] */ VARIANT_BOOL *IsConversationEnabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _Store * This,
            /* [retval][out] */ _Categories **Categories);
        
        END_INTERFACE
    } _StoreVtbl;

    interface _Store
    {
        CONST_VTBL struct _StoreVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Store_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Store_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Store_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Store_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Store_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Store_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Store_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Store_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Store_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Store_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Store_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Store_get_DisplayName(This,DisplayName)	\
    ( (This)->lpVtbl -> get_DisplayName(This,DisplayName) ) 

#define _Store_get_StoreID(This,StoreID)	\
    ( (This)->lpVtbl -> get_StoreID(This,StoreID) ) 

#define _Store_get_ExchangeStoreType(This,ExchangeStoreType)	\
    ( (This)->lpVtbl -> get_ExchangeStoreType(This,ExchangeStoreType) ) 

#define _Store_get_FilePath(This,FilePath)	\
    ( (This)->lpVtbl -> get_FilePath(This,FilePath) ) 

#define _Store_get_IsCachedExchange(This,IsCachedExchange)	\
    ( (This)->lpVtbl -> get_IsCachedExchange(This,IsCachedExchange) ) 

#define _Store_get_IsDataFileStore(This,IsDataFileStore)	\
    ( (This)->lpVtbl -> get_IsDataFileStore(This,IsDataFileStore) ) 

#define _Store_GetRootFolder(This,RootFolder)	\
    ( (This)->lpVtbl -> GetRootFolder(This,RootFolder) ) 

#define _Store_GetSearchFolders(This,SearchFolders)	\
    ( (This)->lpVtbl -> GetSearchFolders(This,SearchFolders) ) 

#define _Store_get_IsOpen(This,IsOpen)	\
    ( (This)->lpVtbl -> get_IsOpen(This,IsOpen) ) 

#define _Store_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _Store_GetRules(This,Rules)	\
    ( (This)->lpVtbl -> GetRules(This,Rules) ) 

#define _Store_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _Store_GetSpecialFolder(This,FolderType,Folder)	\
    ( (This)->lpVtbl -> GetSpecialFolder(This,FolderType,Folder) ) 

#define _Store_get_IsInstantSearchEnabled(This,IsInstantSearchEnabled)	\
    ( (This)->lpVtbl -> get_IsInstantSearchEnabled(This,IsInstantSearchEnabled) ) 

#define _Store_RefreshQuotaDisplay(This)	\
    ( (This)->lpVtbl -> RefreshQuotaDisplay(This) ) 

#define _Store_GetDefaultFolder(This,FolderType,Folder)	\
    ( (This)->lpVtbl -> GetDefaultFolder(This,FolderType,Folder) ) 

#define _Store_get_IsConversationEnabled(This,IsConversationEnabled)	\
    ( (This)->lpVtbl -> get_IsConversationEnabled(This,IsConversationEnabled) ) 

#define _Store_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Store_INTERFACE_DEFINED__ */


#ifndef ___Rules_INTERFACE_DEFINED__
#define ___Rules_INTERFACE_DEFINED__

/* interface _Rules */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Rules;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630CC-0000-0000-C000-000000000046")
    _Rules : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Rule **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ BSTR Name,
            /* [in] */ OlRuleType RuleType,
            /* [retval][out] */ _Rule **Rule) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [optional][in] */ VARIANT ShowProgress) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsRssRulesProcessingEnabled( 
            /* [retval][out] */ VARIANT_BOOL *IsRssRulesProcessingEnabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsRssRulesProcessingEnabled( 
            /* [in] */ VARIANT_BOOL IsRssRulesProcessingEnabled) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _RulesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Rules * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Rules * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Rules * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Rules * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Rules * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Rules * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Rules * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Rules * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Rules * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Rules * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Rules * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Rules * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Rules * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Rule **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Create )( 
            _Rules * This,
            /* [in] */ BSTR Name,
            /* [in] */ OlRuleType RuleType,
            /* [retval][out] */ _Rule **Rule);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _Rules * This,
            /* [optional][in] */ VARIANT ShowProgress);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _Rules * This,
            /* [in] */ VARIANT Index);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsRssRulesProcessingEnabled )( 
            _Rules * This,
            /* [retval][out] */ VARIANT_BOOL *IsRssRulesProcessingEnabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsRssRulesProcessingEnabled )( 
            _Rules * This,
            /* [in] */ VARIANT_BOOL IsRssRulesProcessingEnabled);
        
        END_INTERFACE
    } _RulesVtbl;

    interface _Rules
    {
        CONST_VTBL struct _RulesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Rules_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Rules_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Rules_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Rules_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Rules_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Rules_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Rules_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Rules_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Rules_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Rules_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Rules_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Rules_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Rules_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Rules_Create(This,Name,RuleType,Rule)	\
    ( (This)->lpVtbl -> Create(This,Name,RuleType,Rule) ) 

#define _Rules_Save(This,ShowProgress)	\
    ( (This)->lpVtbl -> Save(This,ShowProgress) ) 

#define _Rules_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define _Rules_get_IsRssRulesProcessingEnabled(This,IsRssRulesProcessingEnabled)	\
    ( (This)->lpVtbl -> get_IsRssRulesProcessingEnabled(This,IsRssRulesProcessingEnabled) ) 

#define _Rules_put_IsRssRulesProcessingEnabled(This,IsRssRulesProcessingEnabled)	\
    ( (This)->lpVtbl -> put_IsRssRulesProcessingEnabled(This,IsRssRulesProcessingEnabled) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Rules_INTERFACE_DEFINED__ */


#ifndef ___Rule_INTERFACE_DEFINED__
#define ___Rule_INTERFACE_DEFINED__

/* interface _Rule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Rule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630CD-0000-0000-C000-000000000046")
    _Rule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExecutionOrder( 
            /* [retval][out] */ long *ExecutionOrder) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExecutionOrder( 
            /* [in] */ long ExecutionOrder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RuleType( 
            /* [retval][out] */ OlRuleType *RuleType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsLocalRule( 
            /* [retval][out] */ VARIANT_BOOL *IsLocalRule) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [optional][in] */ VARIANT ShowProgress,
            /* [optional][in] */ VARIANT Folder,
            /* [optional][in] */ VARIANT IncludeSubfolders,
            /* [optional][in] */ VARIANT RuleExecuteOption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ _RuleActions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conditions( 
            /* [retval][out] */ _RuleConditions **Conditions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Exceptions( 
            /* [retval][out] */ _RuleConditions **Exceptions) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _RuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Rule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Rule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Rule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Rule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Rule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Rule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Rule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Rule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Rule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Rule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Rule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _Rule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _Rule * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionOrder )( 
            _Rule * This,
            /* [retval][out] */ long *ExecutionOrder);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExecutionOrder )( 
            _Rule * This,
            /* [in] */ long ExecutionOrder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RuleType )( 
            _Rule * This,
            /* [retval][out] */ OlRuleType *RuleType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _Rule * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _Rule * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsLocalRule )( 
            _Rule * This,
            /* [retval][out] */ VARIANT_BOOL *IsLocalRule);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            _Rule * This,
            /* [optional][in] */ VARIANT ShowProgress,
            /* [optional][in] */ VARIANT Folder,
            /* [optional][in] */ VARIANT IncludeSubfolders,
            /* [optional][in] */ VARIANT RuleExecuteOption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _Rule * This,
            /* [retval][out] */ _RuleActions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conditions )( 
            _Rule * This,
            /* [retval][out] */ _RuleConditions **Conditions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Exceptions )( 
            _Rule * This,
            /* [retval][out] */ _RuleConditions **Exceptions);
        
        END_INTERFACE
    } _RuleVtbl;

    interface _Rule
    {
        CONST_VTBL struct _RuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Rule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Rule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Rule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Rule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Rule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Rule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Rule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Rule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Rule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Rule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Rule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Rule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _Rule_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _Rule_get_ExecutionOrder(This,ExecutionOrder)	\
    ( (This)->lpVtbl -> get_ExecutionOrder(This,ExecutionOrder) ) 

#define _Rule_put_ExecutionOrder(This,ExecutionOrder)	\
    ( (This)->lpVtbl -> put_ExecutionOrder(This,ExecutionOrder) ) 

#define _Rule_get_RuleType(This,RuleType)	\
    ( (This)->lpVtbl -> get_RuleType(This,RuleType) ) 

#define _Rule_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _Rule_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _Rule_get_IsLocalRule(This,IsLocalRule)	\
    ( (This)->lpVtbl -> get_IsLocalRule(This,IsLocalRule) ) 

#define _Rule_Execute(This,ShowProgress,Folder,IncludeSubfolders,RuleExecuteOption)	\
    ( (This)->lpVtbl -> Execute(This,ShowProgress,Folder,IncludeSubfolders,RuleExecuteOption) ) 

#define _Rule_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _Rule_get_Conditions(This,Conditions)	\
    ( (This)->lpVtbl -> get_Conditions(This,Conditions) ) 

#define _Rule_get_Exceptions(This,Exceptions)	\
    ( (This)->lpVtbl -> get_Exceptions(This,Exceptions) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Rule_INTERFACE_DEFINED__ */


#ifndef ___RuleActions_INTERFACE_DEFINED__
#define ___RuleActions_INTERFACE_DEFINED__

/* interface _RuleActions */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__RuleActions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630CE-0000-0000-C000-000000000046")
    _RuleActions : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ _RuleAction **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CopyToFolder( 
            /* [retval][out] */ _MoveOrCopyRuleAction **CopyToFolder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DeletePermanently( 
            /* [retval][out] */ _RuleAction **DeletePermanently) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Delete( 
            /* [retval][out] */ _RuleAction **Delete) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DesktopAlert( 
            /* [retval][out] */ _RuleAction **DesktopAlert) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NotifyDelivery( 
            /* [retval][out] */ _RuleAction **NotifyDelivery) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NotifyRead( 
            /* [retval][out] */ _RuleAction **NotifyRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Stop( 
            /* [retval][out] */ _RuleAction **Stop) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MoveToFolder( 
            /* [retval][out] */ _MoveOrCopyRuleAction **MoveToFolder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CC( 
            /* [retval][out] */ _SendRuleAction **CC) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Forward( 
            /* [retval][out] */ _SendRuleAction **Forward) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForwardAsAttachment( 
            /* [retval][out] */ _SendRuleAction **ForwardAsAttachment) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Redirect( 
            /* [retval][out] */ _SendRuleAction **Redirect) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AssignToCategory( 
            /* [retval][out] */ _AssignToCategoryRuleAction **AssignToCategory) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PlaySound( 
            /* [retval][out] */ _PlaySoundRuleAction **PlaySound) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkAsTask( 
            /* [retval][out] */ _MarkAsTaskRuleAction **MarkAsTask) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NewItemAlert( 
            /* [retval][out] */ _NewItemAlertRuleAction **NewItemAlert) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ClearCategories( 
            /* [retval][out] */ _RuleAction **ClearCategories) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _RuleActionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RuleActions * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RuleActions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RuleActions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RuleActions * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RuleActions * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RuleActions * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RuleActions * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _RuleActions * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _RuleActions * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _RuleActions * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _RuleActions * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _RuleActions * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _RuleActions * This,
            /* [in] */ long Index,
            /* [retval][out] */ _RuleAction **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CopyToFolder )( 
            _RuleActions * This,
            /* [retval][out] */ _MoveOrCopyRuleAction **CopyToFolder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DeletePermanently )( 
            _RuleActions * This,
            /* [retval][out] */ _RuleAction **DeletePermanently);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Delete )( 
            _RuleActions * This,
            /* [retval][out] */ _RuleAction **Delete);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DesktopAlert )( 
            _RuleActions * This,
            /* [retval][out] */ _RuleAction **DesktopAlert);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NotifyDelivery )( 
            _RuleActions * This,
            /* [retval][out] */ _RuleAction **NotifyDelivery);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NotifyRead )( 
            _RuleActions * This,
            /* [retval][out] */ _RuleAction **NotifyRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Stop )( 
            _RuleActions * This,
            /* [retval][out] */ _RuleAction **Stop);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MoveToFolder )( 
            _RuleActions * This,
            /* [retval][out] */ _MoveOrCopyRuleAction **MoveToFolder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CC )( 
            _RuleActions * This,
            /* [retval][out] */ _SendRuleAction **CC);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Forward )( 
            _RuleActions * This,
            /* [retval][out] */ _SendRuleAction **Forward);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForwardAsAttachment )( 
            _RuleActions * This,
            /* [retval][out] */ _SendRuleAction **ForwardAsAttachment);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Redirect )( 
            _RuleActions * This,
            /* [retval][out] */ _SendRuleAction **Redirect);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AssignToCategory )( 
            _RuleActions * This,
            /* [retval][out] */ _AssignToCategoryRuleAction **AssignToCategory);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PlaySound )( 
            _RuleActions * This,
            /* [retval][out] */ _PlaySoundRuleAction **PlaySound);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkAsTask )( 
            _RuleActions * This,
            /* [retval][out] */ _MarkAsTaskRuleAction **MarkAsTask);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NewItemAlert )( 
            _RuleActions * This,
            /* [retval][out] */ _NewItemAlertRuleAction **NewItemAlert);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ClearCategories )( 
            _RuleActions * This,
            /* [retval][out] */ _RuleAction **ClearCategories);
        
        END_INTERFACE
    } _RuleActionsVtbl;

    interface _RuleActions
    {
        CONST_VTBL struct _RuleActionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RuleActions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RuleActions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RuleActions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RuleActions_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RuleActions_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RuleActions_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RuleActions_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _RuleActions_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _RuleActions_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _RuleActions_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _RuleActions_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _RuleActions_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _RuleActions_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _RuleActions_get_CopyToFolder(This,CopyToFolder)	\
    ( (This)->lpVtbl -> get_CopyToFolder(This,CopyToFolder) ) 

#define _RuleActions_get_DeletePermanently(This,DeletePermanently)	\
    ( (This)->lpVtbl -> get_DeletePermanently(This,DeletePermanently) ) 

#define _RuleActions_get_Delete(This,Delete)	\
    ( (This)->lpVtbl -> get_Delete(This,Delete) ) 

#define _RuleActions_get_DesktopAlert(This,DesktopAlert)	\
    ( (This)->lpVtbl -> get_DesktopAlert(This,DesktopAlert) ) 

#define _RuleActions_get_NotifyDelivery(This,NotifyDelivery)	\
    ( (This)->lpVtbl -> get_NotifyDelivery(This,NotifyDelivery) ) 

#define _RuleActions_get_NotifyRead(This,NotifyRead)	\
    ( (This)->lpVtbl -> get_NotifyRead(This,NotifyRead) ) 

#define _RuleActions_get_Stop(This,Stop)	\
    ( (This)->lpVtbl -> get_Stop(This,Stop) ) 

#define _RuleActions_get_MoveToFolder(This,MoveToFolder)	\
    ( (This)->lpVtbl -> get_MoveToFolder(This,MoveToFolder) ) 

#define _RuleActions_get_CC(This,CC)	\
    ( (This)->lpVtbl -> get_CC(This,CC) ) 

#define _RuleActions_get_Forward(This,Forward)	\
    ( (This)->lpVtbl -> get_Forward(This,Forward) ) 

#define _RuleActions_get_ForwardAsAttachment(This,ForwardAsAttachment)	\
    ( (This)->lpVtbl -> get_ForwardAsAttachment(This,ForwardAsAttachment) ) 

#define _RuleActions_get_Redirect(This,Redirect)	\
    ( (This)->lpVtbl -> get_Redirect(This,Redirect) ) 

#define _RuleActions_get_AssignToCategory(This,AssignToCategory)	\
    ( (This)->lpVtbl -> get_AssignToCategory(This,AssignToCategory) ) 

#define _RuleActions_get_PlaySound(This,PlaySound)	\
    ( (This)->lpVtbl -> get_PlaySound(This,PlaySound) ) 

#define _RuleActions_get_MarkAsTask(This,MarkAsTask)	\
    ( (This)->lpVtbl -> get_MarkAsTask(This,MarkAsTask) ) 

#define _RuleActions_get_NewItemAlert(This,NewItemAlert)	\
    ( (This)->lpVtbl -> get_NewItemAlert(This,NewItemAlert) ) 

#define _RuleActions_get_ClearCategories(This,ClearCategories)	\
    ( (This)->lpVtbl -> get_ClearCategories(This,ClearCategories) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RuleActions_INTERFACE_DEFINED__ */


#ifndef ___RuleAction_INTERFACE_DEFINED__
#define ___RuleAction_INTERFACE_DEFINED__

/* interface _RuleAction */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__RuleAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630CF-0000-0000-C000-000000000046")
    _RuleAction : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActionType( 
            /* [retval][out] */ OlRuleActionType *ActionType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _RuleActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RuleAction * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RuleAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RuleAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RuleAction * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RuleAction * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RuleAction * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RuleAction * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _RuleAction * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _RuleAction * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _RuleAction * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _RuleAction * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _RuleAction * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _RuleAction * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActionType )( 
            _RuleAction * This,
            /* [retval][out] */ OlRuleActionType *ActionType);
        
        END_INTERFACE
    } _RuleActionVtbl;

    interface _RuleAction
    {
        CONST_VTBL struct _RuleActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RuleAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RuleAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RuleAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RuleAction_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RuleAction_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RuleAction_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RuleAction_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _RuleAction_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _RuleAction_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _RuleAction_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _RuleAction_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _RuleAction_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _RuleAction_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _RuleAction_get_ActionType(This,ActionType)	\
    ( (This)->lpVtbl -> get_ActionType(This,ActionType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RuleAction_INTERFACE_DEFINED__ */


#ifndef ___MoveOrCopyRuleAction_INTERFACE_DEFINED__
#define ___MoveOrCopyRuleAction_INTERFACE_DEFINED__

/* interface _MoveOrCopyRuleAction */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__MoveOrCopyRuleAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D0-0000-0000-C000-000000000046")
    _MoveOrCopyRuleAction : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActionType( 
            /* [retval][out] */ OlRuleActionType *ActionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Folder( 
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Folder( 
            /* [in] */ MAPIFolder *Folder) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MoveOrCopyRuleActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MoveOrCopyRuleAction * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MoveOrCopyRuleAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MoveOrCopyRuleAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MoveOrCopyRuleAction * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MoveOrCopyRuleAction * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MoveOrCopyRuleAction * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MoveOrCopyRuleAction * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _MoveOrCopyRuleAction * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _MoveOrCopyRuleAction * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _MoveOrCopyRuleAction * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _MoveOrCopyRuleAction * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _MoveOrCopyRuleAction * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _MoveOrCopyRuleAction * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActionType )( 
            _MoveOrCopyRuleAction * This,
            /* [retval][out] */ OlRuleActionType *ActionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Folder )( 
            _MoveOrCopyRuleAction * This,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Folder )( 
            _MoveOrCopyRuleAction * This,
            /* [in] */ MAPIFolder *Folder);
        
        END_INTERFACE
    } _MoveOrCopyRuleActionVtbl;

    interface _MoveOrCopyRuleAction
    {
        CONST_VTBL struct _MoveOrCopyRuleActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MoveOrCopyRuleAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MoveOrCopyRuleAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MoveOrCopyRuleAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MoveOrCopyRuleAction_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MoveOrCopyRuleAction_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MoveOrCopyRuleAction_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MoveOrCopyRuleAction_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _MoveOrCopyRuleAction_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _MoveOrCopyRuleAction_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _MoveOrCopyRuleAction_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _MoveOrCopyRuleAction_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _MoveOrCopyRuleAction_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _MoveOrCopyRuleAction_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _MoveOrCopyRuleAction_get_ActionType(This,ActionType)	\
    ( (This)->lpVtbl -> get_ActionType(This,ActionType) ) 

#define _MoveOrCopyRuleAction_get_Folder(This,Folder)	\
    ( (This)->lpVtbl -> get_Folder(This,Folder) ) 

#define _MoveOrCopyRuleAction_put_Folder(This,Folder)	\
    ( (This)->lpVtbl -> put_Folder(This,Folder) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MoveOrCopyRuleAction_INTERFACE_DEFINED__ */


#ifndef ___SendRuleAction_INTERFACE_DEFINED__
#define ___SendRuleAction_INTERFACE_DEFINED__

/* interface _SendRuleAction */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__SendRuleAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D1-0000-0000-C000-000000000046")
    _SendRuleAction : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActionType( 
            /* [retval][out] */ OlRuleActionType *ActionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _SendRuleActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SendRuleAction * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SendRuleAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SendRuleAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SendRuleAction * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SendRuleAction * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SendRuleAction * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SendRuleAction * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _SendRuleAction * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _SendRuleAction * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _SendRuleAction * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _SendRuleAction * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _SendRuleAction * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _SendRuleAction * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActionType )( 
            _SendRuleAction * This,
            /* [retval][out] */ OlRuleActionType *ActionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _SendRuleAction * This,
            /* [retval][out] */ Recipients **Recipients);
        
        END_INTERFACE
    } _SendRuleActionVtbl;

    interface _SendRuleAction
    {
        CONST_VTBL struct _SendRuleActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SendRuleAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SendRuleAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SendRuleAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SendRuleAction_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SendRuleAction_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SendRuleAction_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SendRuleAction_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _SendRuleAction_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _SendRuleAction_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _SendRuleAction_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _SendRuleAction_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _SendRuleAction_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _SendRuleAction_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _SendRuleAction_get_ActionType(This,ActionType)	\
    ( (This)->lpVtbl -> get_ActionType(This,ActionType) ) 

#define _SendRuleAction_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SendRuleAction_INTERFACE_DEFINED__ */


#ifndef __Recipients_INTERFACE_DEFINED__
#define __Recipients_INTERFACE_DEFINED__

/* interface Recipients */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Recipients;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006303B-0000-0000-C000-000000000046")
    Recipients : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Recipient **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ Recipient **Recipient) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResolveAll( 
            /* [retval][out] */ VARIANT_BOOL *Success) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct RecipientsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Recipients * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Recipients * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Recipients * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Recipients * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Recipients * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Recipients * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Recipients * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Recipients * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Recipients * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Recipients * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Recipients * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Recipients * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Recipients * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Recipient **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Recipients * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ Recipient **Recipient);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            Recipients * This,
            /* [in] */ long Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResolveAll )( 
            Recipients * This,
            /* [retval][out] */ VARIANT_BOOL *Success);
        
        END_INTERFACE
    } RecipientsVtbl;

    interface Recipients
    {
        CONST_VTBL struct RecipientsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Recipients_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Recipients_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Recipients_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Recipients_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Recipients_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Recipients_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Recipients_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Recipients_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Recipients_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Recipients_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Recipients_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Recipients_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Recipients_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define Recipients_Add(This,Name,Recipient)	\
    ( (This)->lpVtbl -> Add(This,Name,Recipient) ) 

#define Recipients_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define Recipients_ResolveAll(This,Success)	\
    ( (This)->lpVtbl -> ResolveAll(This,Success) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Recipients_INTERFACE_DEFINED__ */


#ifndef ___AssignToCategoryRuleAction_INTERFACE_DEFINED__
#define ___AssignToCategoryRuleAction_INTERFACE_DEFINED__

/* interface _AssignToCategoryRuleAction */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__AssignToCategoryRuleAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D4-0000-0000-C000-000000000046")
    _AssignToCategoryRuleAction : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActionType( 
            /* [retval][out] */ OlRuleActionType *ActionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ VARIANT *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ VARIANT Categories) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AssignToCategoryRuleActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssignToCategoryRuleAction * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssignToCategoryRuleAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssignToCategoryRuleAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssignToCategoryRuleAction * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssignToCategoryRuleAction * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssignToCategoryRuleAction * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssignToCategoryRuleAction * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _AssignToCategoryRuleAction * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _AssignToCategoryRuleAction * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _AssignToCategoryRuleAction * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _AssignToCategoryRuleAction * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _AssignToCategoryRuleAction * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _AssignToCategoryRuleAction * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActionType )( 
            _AssignToCategoryRuleAction * This,
            /* [retval][out] */ OlRuleActionType *ActionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _AssignToCategoryRuleAction * This,
            /* [retval][out] */ VARIANT *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _AssignToCategoryRuleAction * This,
            /* [in] */ VARIANT Categories);
        
        END_INTERFACE
    } _AssignToCategoryRuleActionVtbl;

    interface _AssignToCategoryRuleAction
    {
        CONST_VTBL struct _AssignToCategoryRuleActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssignToCategoryRuleAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssignToCategoryRuleAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssignToCategoryRuleAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssignToCategoryRuleAction_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssignToCategoryRuleAction_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssignToCategoryRuleAction_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssignToCategoryRuleAction_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _AssignToCategoryRuleAction_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _AssignToCategoryRuleAction_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _AssignToCategoryRuleAction_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _AssignToCategoryRuleAction_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _AssignToCategoryRuleAction_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _AssignToCategoryRuleAction_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _AssignToCategoryRuleAction_get_ActionType(This,ActionType)	\
    ( (This)->lpVtbl -> get_ActionType(This,ActionType) ) 

#define _AssignToCategoryRuleAction_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _AssignToCategoryRuleAction_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssignToCategoryRuleAction_INTERFACE_DEFINED__ */


#ifndef ___PlaySoundRuleAction_INTERFACE_DEFINED__
#define ___PlaySoundRuleAction_INTERFACE_DEFINED__

/* interface _PlaySoundRuleAction */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__PlaySoundRuleAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D5-0000-0000-C000-000000000046")
    _PlaySoundRuleAction : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActionType( 
            /* [retval][out] */ OlRuleActionType *ActionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FilePath( 
            /* [retval][out] */ BSTR *FilePath) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FilePath( 
            /* [in] */ BSTR FilePath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _PlaySoundRuleActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PlaySoundRuleAction * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PlaySoundRuleAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PlaySoundRuleAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PlaySoundRuleAction * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PlaySoundRuleAction * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PlaySoundRuleAction * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PlaySoundRuleAction * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _PlaySoundRuleAction * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _PlaySoundRuleAction * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _PlaySoundRuleAction * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _PlaySoundRuleAction * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _PlaySoundRuleAction * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _PlaySoundRuleAction * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActionType )( 
            _PlaySoundRuleAction * This,
            /* [retval][out] */ OlRuleActionType *ActionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FilePath )( 
            _PlaySoundRuleAction * This,
            /* [retval][out] */ BSTR *FilePath);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FilePath )( 
            _PlaySoundRuleAction * This,
            /* [in] */ BSTR FilePath);
        
        END_INTERFACE
    } _PlaySoundRuleActionVtbl;

    interface _PlaySoundRuleAction
    {
        CONST_VTBL struct _PlaySoundRuleActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PlaySoundRuleAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PlaySoundRuleAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PlaySoundRuleAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PlaySoundRuleAction_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PlaySoundRuleAction_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PlaySoundRuleAction_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PlaySoundRuleAction_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _PlaySoundRuleAction_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _PlaySoundRuleAction_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _PlaySoundRuleAction_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _PlaySoundRuleAction_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _PlaySoundRuleAction_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _PlaySoundRuleAction_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _PlaySoundRuleAction_get_ActionType(This,ActionType)	\
    ( (This)->lpVtbl -> get_ActionType(This,ActionType) ) 

#define _PlaySoundRuleAction_get_FilePath(This,FilePath)	\
    ( (This)->lpVtbl -> get_FilePath(This,FilePath) ) 

#define _PlaySoundRuleAction_put_FilePath(This,FilePath)	\
    ( (This)->lpVtbl -> put_FilePath(This,FilePath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PlaySoundRuleAction_INTERFACE_DEFINED__ */


#ifndef ___MarkAsTaskRuleAction_INTERFACE_DEFINED__
#define ___MarkAsTaskRuleAction_INTERFACE_DEFINED__

/* interface _MarkAsTaskRuleAction */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__MarkAsTaskRuleAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D6-0000-0000-C000-000000000046")
    _MarkAsTaskRuleAction : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActionType( 
            /* [retval][out] */ OlRuleActionType *ActionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagTo( 
            /* [retval][out] */ BSTR *FlagTo) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagTo( 
            /* [in] */ BSTR FlagTo) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkInterval( 
            /* [retval][out] */ OlMarkInterval *MarkInterval) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkInterval( 
            /* [in] */ OlMarkInterval MarkInterval) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MarkAsTaskRuleActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MarkAsTaskRuleAction * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MarkAsTaskRuleAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MarkAsTaskRuleAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MarkAsTaskRuleAction * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MarkAsTaskRuleAction * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MarkAsTaskRuleAction * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MarkAsTaskRuleAction * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _MarkAsTaskRuleAction * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _MarkAsTaskRuleAction * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _MarkAsTaskRuleAction * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _MarkAsTaskRuleAction * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _MarkAsTaskRuleAction * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _MarkAsTaskRuleAction * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActionType )( 
            _MarkAsTaskRuleAction * This,
            /* [retval][out] */ OlRuleActionType *ActionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagTo )( 
            _MarkAsTaskRuleAction * This,
            /* [retval][out] */ BSTR *FlagTo);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagTo )( 
            _MarkAsTaskRuleAction * This,
            /* [in] */ BSTR FlagTo);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkInterval )( 
            _MarkAsTaskRuleAction * This,
            /* [retval][out] */ OlMarkInterval *MarkInterval);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkInterval )( 
            _MarkAsTaskRuleAction * This,
            /* [in] */ OlMarkInterval MarkInterval);
        
        END_INTERFACE
    } _MarkAsTaskRuleActionVtbl;

    interface _MarkAsTaskRuleAction
    {
        CONST_VTBL struct _MarkAsTaskRuleActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MarkAsTaskRuleAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MarkAsTaskRuleAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MarkAsTaskRuleAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MarkAsTaskRuleAction_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MarkAsTaskRuleAction_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MarkAsTaskRuleAction_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MarkAsTaskRuleAction_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _MarkAsTaskRuleAction_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _MarkAsTaskRuleAction_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _MarkAsTaskRuleAction_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _MarkAsTaskRuleAction_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _MarkAsTaskRuleAction_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _MarkAsTaskRuleAction_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _MarkAsTaskRuleAction_get_ActionType(This,ActionType)	\
    ( (This)->lpVtbl -> get_ActionType(This,ActionType) ) 

#define _MarkAsTaskRuleAction_get_FlagTo(This,FlagTo)	\
    ( (This)->lpVtbl -> get_FlagTo(This,FlagTo) ) 

#define _MarkAsTaskRuleAction_put_FlagTo(This,FlagTo)	\
    ( (This)->lpVtbl -> put_FlagTo(This,FlagTo) ) 

#define _MarkAsTaskRuleAction_get_MarkInterval(This,MarkInterval)	\
    ( (This)->lpVtbl -> get_MarkInterval(This,MarkInterval) ) 

#define _MarkAsTaskRuleAction_put_MarkInterval(This,MarkInterval)	\
    ( (This)->lpVtbl -> put_MarkInterval(This,MarkInterval) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MarkAsTaskRuleAction_INTERFACE_DEFINED__ */


#ifndef ___NewItemAlertRuleAction_INTERFACE_DEFINED__
#define ___NewItemAlertRuleAction_INTERFACE_DEFINED__

/* interface _NewItemAlertRuleAction */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NewItemAlertRuleAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D7-0000-0000-C000-000000000046")
    _NewItemAlertRuleAction : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActionType( 
            /* [retval][out] */ OlRuleActionType *ActionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ BSTR *Text) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ BSTR Text) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NewItemAlertRuleActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NewItemAlertRuleAction * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NewItemAlertRuleAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NewItemAlertRuleAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NewItemAlertRuleAction * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NewItemAlertRuleAction * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NewItemAlertRuleAction * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NewItemAlertRuleAction * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NewItemAlertRuleAction * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NewItemAlertRuleAction * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NewItemAlertRuleAction * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NewItemAlertRuleAction * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _NewItemAlertRuleAction * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _NewItemAlertRuleAction * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActionType )( 
            _NewItemAlertRuleAction * This,
            /* [retval][out] */ OlRuleActionType *ActionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            _NewItemAlertRuleAction * This,
            /* [retval][out] */ BSTR *Text);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            _NewItemAlertRuleAction * This,
            /* [in] */ BSTR Text);
        
        END_INTERFACE
    } _NewItemAlertRuleActionVtbl;

    interface _NewItemAlertRuleAction
    {
        CONST_VTBL struct _NewItemAlertRuleActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NewItemAlertRuleAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NewItemAlertRuleAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NewItemAlertRuleAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NewItemAlertRuleAction_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NewItemAlertRuleAction_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NewItemAlertRuleAction_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NewItemAlertRuleAction_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NewItemAlertRuleAction_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NewItemAlertRuleAction_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NewItemAlertRuleAction_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NewItemAlertRuleAction_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NewItemAlertRuleAction_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _NewItemAlertRuleAction_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _NewItemAlertRuleAction_get_ActionType(This,ActionType)	\
    ( (This)->lpVtbl -> get_ActionType(This,ActionType) ) 

#define _NewItemAlertRuleAction_get_Text(This,Text)	\
    ( (This)->lpVtbl -> get_Text(This,Text) ) 

#define _NewItemAlertRuleAction_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NewItemAlertRuleAction_INTERFACE_DEFINED__ */


#ifndef ___RuleConditions_INTERFACE_DEFINED__
#define ___RuleConditions_INTERFACE_DEFINED__

/* interface _RuleConditions */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__RuleConditions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D8-0000-0000-C000-000000000046")
    _RuleConditions : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ _RuleCondition **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CC( 
            /* [retval][out] */ _RuleCondition **CC) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasAttachment( 
            /* [retval][out] */ _RuleCondition **HasAttachment) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ _ImportanceRuleCondition **Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MeetingInviteOrUpdate( 
            /* [retval][out] */ _RuleCondition **MeetingInviteOrUpdate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NotTo( 
            /* [retval][out] */ _RuleCondition **NotTo) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnlyToMe( 
            /* [retval][out] */ _RuleCondition **OnlyToMe) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToMe( 
            /* [retval][out] */ _RuleCondition **ToMe) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToOrCc( 
            /* [retval][out] */ _RuleCondition **ToOrCc) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Account( 
            /* [retval][out] */ _AccountRuleCondition **Account) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ _TextRuleCondition **Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BodyOrSubject( 
            /* [retval][out] */ _TextRuleCondition **BodyOrSubject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Category( 
            /* [retval][out] */ _CategoryRuleCondition **Category) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormName( 
            /* [retval][out] */ _FormNameRuleCondition **FormName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_From( 
            /* [retval][out] */ _ToOrFromRuleCondition **From) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageHeader( 
            /* [retval][out] */ _TextRuleCondition **MessageHeader) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RecipientAddress( 
            /* [retval][out] */ _AddressRuleCondition **RecipientAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderAddress( 
            /* [retval][out] */ _AddressRuleCondition **SenderAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderInAddressList( 
            /* [retval][out] */ _SenderInAddressListRuleCondition **SenderInAddressList) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ _TextRuleCondition **Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SentTo( 
            /* [retval][out] */ _ToOrFromRuleCondition **SentTo) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnLocalMachine( 
            /* [retval][out] */ _RuleCondition **OnLocalMachine) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnOtherMachine( 
            /* [retval][out] */ _RuleCondition **OnOtherMachine) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AnyCategory( 
            /* [retval][out] */ _RuleCondition **AnyCategory) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FromAnyRSSFeed( 
            /* [retval][out] */ _RuleCondition **FromAnyRSSFeed) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FromRssFeed( 
            /* [retval][out] */ _FromRssFeedRuleCondition **FromRssFeed) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _RuleConditionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RuleConditions * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RuleConditions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RuleConditions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RuleConditions * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RuleConditions * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RuleConditions * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RuleConditions * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _RuleConditions * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _RuleConditions * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _RuleConditions * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _RuleConditions * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _RuleConditions * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _RuleConditions * This,
            /* [in] */ long Index,
            /* [retval][out] */ _RuleCondition **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CC )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **CC);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasAttachment )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **HasAttachment);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _RuleConditions * This,
            /* [retval][out] */ _ImportanceRuleCondition **Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MeetingInviteOrUpdate )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **MeetingInviteOrUpdate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NotTo )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **NotTo);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnlyToMe )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **OnlyToMe);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToMe )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **ToMe);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToOrCc )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **ToOrCc);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Account )( 
            _RuleConditions * This,
            /* [retval][out] */ _AccountRuleCondition **Account);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _RuleConditions * This,
            /* [retval][out] */ _TextRuleCondition **Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BodyOrSubject )( 
            _RuleConditions * This,
            /* [retval][out] */ _TextRuleCondition **BodyOrSubject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Category )( 
            _RuleConditions * This,
            /* [retval][out] */ _CategoryRuleCondition **Category);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormName )( 
            _RuleConditions * This,
            /* [retval][out] */ _FormNameRuleCondition **FormName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_From )( 
            _RuleConditions * This,
            /* [retval][out] */ _ToOrFromRuleCondition **From);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageHeader )( 
            _RuleConditions * This,
            /* [retval][out] */ _TextRuleCondition **MessageHeader);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecipientAddress )( 
            _RuleConditions * This,
            /* [retval][out] */ _AddressRuleCondition **RecipientAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderAddress )( 
            _RuleConditions * This,
            /* [retval][out] */ _AddressRuleCondition **SenderAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderInAddressList )( 
            _RuleConditions * This,
            /* [retval][out] */ _SenderInAddressListRuleCondition **SenderInAddressList);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _RuleConditions * This,
            /* [retval][out] */ _TextRuleCondition **Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SentTo )( 
            _RuleConditions * This,
            /* [retval][out] */ _ToOrFromRuleCondition **SentTo);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnLocalMachine )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **OnLocalMachine);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnOtherMachine )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **OnOtherMachine);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AnyCategory )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **AnyCategory);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FromAnyRSSFeed )( 
            _RuleConditions * This,
            /* [retval][out] */ _RuleCondition **FromAnyRSSFeed);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FromRssFeed )( 
            _RuleConditions * This,
            /* [retval][out] */ _FromRssFeedRuleCondition **FromRssFeed);
        
        END_INTERFACE
    } _RuleConditionsVtbl;

    interface _RuleConditions
    {
        CONST_VTBL struct _RuleConditionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RuleConditions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RuleConditions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RuleConditions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RuleConditions_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RuleConditions_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RuleConditions_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RuleConditions_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _RuleConditions_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _RuleConditions_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _RuleConditions_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _RuleConditions_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _RuleConditions_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _RuleConditions_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _RuleConditions_get_CC(This,CC)	\
    ( (This)->lpVtbl -> get_CC(This,CC) ) 

#define _RuleConditions_get_HasAttachment(This,HasAttachment)	\
    ( (This)->lpVtbl -> get_HasAttachment(This,HasAttachment) ) 

#define _RuleConditions_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _RuleConditions_get_MeetingInviteOrUpdate(This,MeetingInviteOrUpdate)	\
    ( (This)->lpVtbl -> get_MeetingInviteOrUpdate(This,MeetingInviteOrUpdate) ) 

#define _RuleConditions_get_NotTo(This,NotTo)	\
    ( (This)->lpVtbl -> get_NotTo(This,NotTo) ) 

#define _RuleConditions_get_OnlyToMe(This,OnlyToMe)	\
    ( (This)->lpVtbl -> get_OnlyToMe(This,OnlyToMe) ) 

#define _RuleConditions_get_ToMe(This,ToMe)	\
    ( (This)->lpVtbl -> get_ToMe(This,ToMe) ) 

#define _RuleConditions_get_ToOrCc(This,ToOrCc)	\
    ( (This)->lpVtbl -> get_ToOrCc(This,ToOrCc) ) 

#define _RuleConditions_get_Account(This,Account)	\
    ( (This)->lpVtbl -> get_Account(This,Account) ) 

#define _RuleConditions_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _RuleConditions_get_BodyOrSubject(This,BodyOrSubject)	\
    ( (This)->lpVtbl -> get_BodyOrSubject(This,BodyOrSubject) ) 

#define _RuleConditions_get_Category(This,Category)	\
    ( (This)->lpVtbl -> get_Category(This,Category) ) 

#define _RuleConditions_get_FormName(This,FormName)	\
    ( (This)->lpVtbl -> get_FormName(This,FormName) ) 

#define _RuleConditions_get_From(This,From)	\
    ( (This)->lpVtbl -> get_From(This,From) ) 

#define _RuleConditions_get_MessageHeader(This,MessageHeader)	\
    ( (This)->lpVtbl -> get_MessageHeader(This,MessageHeader) ) 

#define _RuleConditions_get_RecipientAddress(This,RecipientAddress)	\
    ( (This)->lpVtbl -> get_RecipientAddress(This,RecipientAddress) ) 

#define _RuleConditions_get_SenderAddress(This,SenderAddress)	\
    ( (This)->lpVtbl -> get_SenderAddress(This,SenderAddress) ) 

#define _RuleConditions_get_SenderInAddressList(This,SenderInAddressList)	\
    ( (This)->lpVtbl -> get_SenderInAddressList(This,SenderInAddressList) ) 

#define _RuleConditions_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _RuleConditions_get_SentTo(This,SentTo)	\
    ( (This)->lpVtbl -> get_SentTo(This,SentTo) ) 

#define _RuleConditions_get_OnLocalMachine(This,OnLocalMachine)	\
    ( (This)->lpVtbl -> get_OnLocalMachine(This,OnLocalMachine) ) 

#define _RuleConditions_get_OnOtherMachine(This,OnOtherMachine)	\
    ( (This)->lpVtbl -> get_OnOtherMachine(This,OnOtherMachine) ) 

#define _RuleConditions_get_AnyCategory(This,AnyCategory)	\
    ( (This)->lpVtbl -> get_AnyCategory(This,AnyCategory) ) 

#define _RuleConditions_get_FromAnyRSSFeed(This,FromAnyRSSFeed)	\
    ( (This)->lpVtbl -> get_FromAnyRSSFeed(This,FromAnyRSSFeed) ) 

#define _RuleConditions_get_FromRssFeed(This,FromRssFeed)	\
    ( (This)->lpVtbl -> get_FromRssFeed(This,FromRssFeed) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RuleConditions_INTERFACE_DEFINED__ */


#ifndef ___RuleCondition_INTERFACE_DEFINED__
#define ___RuleCondition_INTERFACE_DEFINED__

/* interface _RuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__RuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D9-0000-0000-C000-000000000046")
    _RuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _RuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _RuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _RuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _RuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _RuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _RuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _RuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _RuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        END_INTERFACE
    } _RuleConditionVtbl;

    interface _RuleCondition
    {
        CONST_VTBL struct _RuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _RuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _RuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _RuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _RuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _RuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _RuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _RuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RuleCondition_INTERFACE_DEFINED__ */


#ifndef ___ImportanceRuleCondition_INTERFACE_DEFINED__
#define ___ImportanceRuleCondition_INTERFACE_DEFINED__

/* interface _ImportanceRuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ImportanceRuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630DA-0000-0000-C000-000000000046")
    _ImportanceRuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ImportanceRuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ImportanceRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ImportanceRuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ImportanceRuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ImportanceRuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ImportanceRuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ImportanceRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ImportanceRuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ImportanceRuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ImportanceRuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ImportanceRuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ImportanceRuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _ImportanceRuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _ImportanceRuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _ImportanceRuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _ImportanceRuleCondition * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _ImportanceRuleCondition * This,
            /* [in] */ OlImportance Importance);
        
        END_INTERFACE
    } _ImportanceRuleConditionVtbl;

    interface _ImportanceRuleCondition
    {
        CONST_VTBL struct _ImportanceRuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ImportanceRuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ImportanceRuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ImportanceRuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ImportanceRuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ImportanceRuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ImportanceRuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ImportanceRuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ImportanceRuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ImportanceRuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ImportanceRuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ImportanceRuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ImportanceRuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _ImportanceRuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _ImportanceRuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#define _ImportanceRuleCondition_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _ImportanceRuleCondition_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ImportanceRuleCondition_INTERFACE_DEFINED__ */


#ifndef ___AccountRuleCondition_INTERFACE_DEFINED__
#define ___AccountRuleCondition_INTERFACE_DEFINED__

/* interface _AccountRuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__AccountRuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630DB-0000-0000-C000-000000000046")
    _AccountRuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Account( 
            /* [retval][out] */ _Account **Account) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Account( 
            /* [in] */ _Account *Account) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AccountRuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AccountRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AccountRuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AccountRuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AccountRuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AccountRuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AccountRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AccountRuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _AccountRuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _AccountRuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _AccountRuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _AccountRuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _AccountRuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _AccountRuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _AccountRuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Account )( 
            _AccountRuleCondition * This,
            /* [retval][out] */ _Account **Account);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Account )( 
            _AccountRuleCondition * This,
            /* [in] */ _Account *Account);
        
        END_INTERFACE
    } _AccountRuleConditionVtbl;

    interface _AccountRuleCondition
    {
        CONST_VTBL struct _AccountRuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AccountRuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AccountRuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AccountRuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AccountRuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AccountRuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AccountRuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AccountRuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _AccountRuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _AccountRuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _AccountRuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _AccountRuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _AccountRuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _AccountRuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _AccountRuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#define _AccountRuleCondition_get_Account(This,Account)	\
    ( (This)->lpVtbl -> get_Account(This,Account) ) 

#define _AccountRuleCondition_put_Account(This,Account)	\
    ( (This)->lpVtbl -> put_Account(This,Account) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AccountRuleCondition_INTERFACE_DEFINED__ */


#ifndef ___TextRuleCondition_INTERFACE_DEFINED__
#define ___TextRuleCondition_INTERFACE_DEFINED__

/* interface _TextRuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TextRuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E0-0000-0000-C000-000000000046")
    _TextRuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ VARIANT *Text) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ VARIANT Text) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TextRuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TextRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TextRuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TextRuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TextRuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TextRuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TextRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TextRuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TextRuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TextRuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TextRuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TextRuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _TextRuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _TextRuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _TextRuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            _TextRuleCondition * This,
            /* [retval][out] */ VARIANT *Text);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            _TextRuleCondition * This,
            /* [in] */ VARIANT Text);
        
        END_INTERFACE
    } _TextRuleConditionVtbl;

    interface _TextRuleCondition
    {
        CONST_VTBL struct _TextRuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TextRuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TextRuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TextRuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TextRuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TextRuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TextRuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TextRuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TextRuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TextRuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TextRuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TextRuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TextRuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _TextRuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _TextRuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#define _TextRuleCondition_get_Text(This,Text)	\
    ( (This)->lpVtbl -> get_Text(This,Text) ) 

#define _TextRuleCondition_put_Text(This,Text)	\
    ( (This)->lpVtbl -> put_Text(This,Text) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TextRuleCondition_INTERFACE_DEFINED__ */


#ifndef ___CategoryRuleCondition_INTERFACE_DEFINED__
#define ___CategoryRuleCondition_INTERFACE_DEFINED__

/* interface _CategoryRuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__CategoryRuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630DC-0000-0000-C000-000000000046")
    _CategoryRuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ VARIANT *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ VARIANT Categories) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _CategoryRuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CategoryRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CategoryRuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CategoryRuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CategoryRuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CategoryRuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CategoryRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CategoryRuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _CategoryRuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _CategoryRuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _CategoryRuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _CategoryRuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _CategoryRuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _CategoryRuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _CategoryRuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _CategoryRuleCondition * This,
            /* [retval][out] */ VARIANT *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _CategoryRuleCondition * This,
            /* [in] */ VARIANT Categories);
        
        END_INTERFACE
    } _CategoryRuleConditionVtbl;

    interface _CategoryRuleCondition
    {
        CONST_VTBL struct _CategoryRuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CategoryRuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CategoryRuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CategoryRuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CategoryRuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CategoryRuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CategoryRuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CategoryRuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CategoryRuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _CategoryRuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _CategoryRuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _CategoryRuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _CategoryRuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _CategoryRuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _CategoryRuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#define _CategoryRuleCondition_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _CategoryRuleCondition_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CategoryRuleCondition_INTERFACE_DEFINED__ */


#ifndef ___FormNameRuleCondition_INTERFACE_DEFINED__
#define ___FormNameRuleCondition_INTERFACE_DEFINED__

/* interface _FormNameRuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__FormNameRuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630DD-0000-0000-C000-000000000046")
    _FormNameRuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormName( 
            /* [retval][out] */ VARIANT *FormName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FormName( 
            /* [in] */ VARIANT FormName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _FormNameRuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FormNameRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FormNameRuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FormNameRuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FormNameRuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FormNameRuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FormNameRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FormNameRuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _FormNameRuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _FormNameRuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _FormNameRuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _FormNameRuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _FormNameRuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _FormNameRuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _FormNameRuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormName )( 
            _FormNameRuleCondition * This,
            /* [retval][out] */ VARIANT *FormName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FormName )( 
            _FormNameRuleCondition * This,
            /* [in] */ VARIANT FormName);
        
        END_INTERFACE
    } _FormNameRuleConditionVtbl;

    interface _FormNameRuleCondition
    {
        CONST_VTBL struct _FormNameRuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FormNameRuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FormNameRuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FormNameRuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FormNameRuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FormNameRuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FormNameRuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FormNameRuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _FormNameRuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _FormNameRuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _FormNameRuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _FormNameRuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _FormNameRuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _FormNameRuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _FormNameRuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#define _FormNameRuleCondition_get_FormName(This,FormName)	\
    ( (This)->lpVtbl -> get_FormName(This,FormName) ) 

#define _FormNameRuleCondition_put_FormName(This,FormName)	\
    ( (This)->lpVtbl -> put_FormName(This,FormName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FormNameRuleCondition_INTERFACE_DEFINED__ */


#ifndef ___ToOrFromRuleCondition_INTERFACE_DEFINED__
#define ___ToOrFromRuleCondition_INTERFACE_DEFINED__

/* interface _ToOrFromRuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ToOrFromRuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630DE-0000-0000-C000-000000000046")
    _ToOrFromRuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ToOrFromRuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ToOrFromRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ToOrFromRuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ToOrFromRuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ToOrFromRuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ToOrFromRuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ToOrFromRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ToOrFromRuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ToOrFromRuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ToOrFromRuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ToOrFromRuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ToOrFromRuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _ToOrFromRuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _ToOrFromRuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _ToOrFromRuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _ToOrFromRuleCondition * This,
            /* [retval][out] */ Recipients **Recipients);
        
        END_INTERFACE
    } _ToOrFromRuleConditionVtbl;

    interface _ToOrFromRuleCondition
    {
        CONST_VTBL struct _ToOrFromRuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ToOrFromRuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ToOrFromRuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ToOrFromRuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ToOrFromRuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ToOrFromRuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ToOrFromRuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ToOrFromRuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ToOrFromRuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ToOrFromRuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ToOrFromRuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ToOrFromRuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ToOrFromRuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _ToOrFromRuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _ToOrFromRuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#define _ToOrFromRuleCondition_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ToOrFromRuleCondition_INTERFACE_DEFINED__ */


#ifndef ___AddressRuleCondition_INTERFACE_DEFINED__
#define ___AddressRuleCondition_INTERFACE_DEFINED__

/* interface _AddressRuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__AddressRuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630FA-0000-0000-C000-000000000046")
    _AddressRuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Address( 
            /* [retval][out] */ VARIANT *Address) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Address( 
            /* [in] */ VARIANT Address) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AddressRuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AddressRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AddressRuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AddressRuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AddressRuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AddressRuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AddressRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AddressRuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _AddressRuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _AddressRuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _AddressRuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _AddressRuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _AddressRuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _AddressRuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _AddressRuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Address )( 
            _AddressRuleCondition * This,
            /* [retval][out] */ VARIANT *Address);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Address )( 
            _AddressRuleCondition * This,
            /* [in] */ VARIANT Address);
        
        END_INTERFACE
    } _AddressRuleConditionVtbl;

    interface _AddressRuleCondition
    {
        CONST_VTBL struct _AddressRuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AddressRuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AddressRuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AddressRuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AddressRuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AddressRuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AddressRuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AddressRuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _AddressRuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _AddressRuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _AddressRuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _AddressRuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _AddressRuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _AddressRuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _AddressRuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#define _AddressRuleCondition_get_Address(This,Address)	\
    ( (This)->lpVtbl -> get_Address(This,Address) ) 

#define _AddressRuleCondition_put_Address(This,Address)	\
    ( (This)->lpVtbl -> put_Address(This,Address) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AddressRuleCondition_INTERFACE_DEFINED__ */


#ifndef ___SenderInAddressListRuleCondition_INTERFACE_DEFINED__
#define ___SenderInAddressListRuleCondition_INTERFACE_DEFINED__

/* interface _SenderInAddressListRuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__SenderInAddressListRuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630DF-0000-0000-C000-000000000046")
    _SenderInAddressListRuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressList( 
            /* [retval][out] */ AddressList **AddressList) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AddressList( 
            /* [in] */ AddressList *AddressList) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _SenderInAddressListRuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SenderInAddressListRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SenderInAddressListRuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SenderInAddressListRuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SenderInAddressListRuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SenderInAddressListRuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SenderInAddressListRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SenderInAddressListRuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _SenderInAddressListRuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _SenderInAddressListRuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _SenderInAddressListRuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _SenderInAddressListRuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _SenderInAddressListRuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _SenderInAddressListRuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _SenderInAddressListRuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressList )( 
            _SenderInAddressListRuleCondition * This,
            /* [retval][out] */ AddressList **AddressList);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AddressList )( 
            _SenderInAddressListRuleCondition * This,
            /* [in] */ AddressList *AddressList);
        
        END_INTERFACE
    } _SenderInAddressListRuleConditionVtbl;

    interface _SenderInAddressListRuleCondition
    {
        CONST_VTBL struct _SenderInAddressListRuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SenderInAddressListRuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SenderInAddressListRuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SenderInAddressListRuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SenderInAddressListRuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SenderInAddressListRuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SenderInAddressListRuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SenderInAddressListRuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _SenderInAddressListRuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _SenderInAddressListRuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _SenderInAddressListRuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _SenderInAddressListRuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _SenderInAddressListRuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _SenderInAddressListRuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _SenderInAddressListRuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#define _SenderInAddressListRuleCondition_get_AddressList(This,AddressList)	\
    ( (This)->lpVtbl -> get_AddressList(This,AddressList) ) 

#define _SenderInAddressListRuleCondition_put_AddressList(This,AddressList)	\
    ( (This)->lpVtbl -> put_AddressList(This,AddressList) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SenderInAddressListRuleCondition_INTERFACE_DEFINED__ */


#ifndef __AddressList_INTERFACE_DEFINED__
#define __AddressList_INTERFACE_DEFINED__

/* interface AddressList */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_AddressList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063049-0000-0000-C000-000000000046")
    AddressList : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressEntries( 
            /* [retval][out] */ AddressEntries **AddressEntries) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ BSTR *ID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsReadOnly( 
            /* [retval][out] */ VARIANT_BOOL *IsReadOnly) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetContactsFolder( 
            /* [retval][out] */ MAPIFolder **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressListType( 
            /* [retval][out] */ OlAddressListType *AddressListType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ResolutionOrder( 
            /* [retval][out] */ long *ResolutionOrder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsInitialAddressList( 
            /* [retval][out] */ VARIANT_BOOL *IsInitialAddressList) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct AddressListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AddressList * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AddressList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AddressList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AddressList * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AddressList * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AddressList * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AddressList * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            AddressList * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            AddressList * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            AddressList * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            AddressList * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressEntries )( 
            AddressList * This,
            /* [retval][out] */ AddressEntries **AddressEntries);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            AddressList * This,
            /* [retval][out] */ BSTR *ID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            AddressList * This,
            /* [retval][out] */ long *Index);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsReadOnly )( 
            AddressList * This,
            /* [retval][out] */ VARIANT_BOOL *IsReadOnly);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            AddressList * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetContactsFolder )( 
            AddressList * This,
            /* [retval][out] */ MAPIFolder **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressListType )( 
            AddressList * This,
            /* [retval][out] */ OlAddressListType *AddressListType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ResolutionOrder )( 
            AddressList * This,
            /* [retval][out] */ long *ResolutionOrder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsInitialAddressList )( 
            AddressList * This,
            /* [retval][out] */ VARIANT_BOOL *IsInitialAddressList);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            AddressList * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        END_INTERFACE
    } AddressListVtbl;

    interface AddressList
    {
        CONST_VTBL struct AddressListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AddressList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AddressList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AddressList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AddressList_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AddressList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AddressList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AddressList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define AddressList_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define AddressList_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define AddressList_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define AddressList_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define AddressList_get_AddressEntries(This,AddressEntries)	\
    ( (This)->lpVtbl -> get_AddressEntries(This,AddressEntries) ) 

#define AddressList_get_ID(This,ID)	\
    ( (This)->lpVtbl -> get_ID(This,ID) ) 

#define AddressList_get_Index(This,Index)	\
    ( (This)->lpVtbl -> get_Index(This,Index) ) 

#define AddressList_get_IsReadOnly(This,IsReadOnly)	\
    ( (This)->lpVtbl -> get_IsReadOnly(This,IsReadOnly) ) 

#define AddressList_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define AddressList_GetContactsFolder(This,ret)	\
    ( (This)->lpVtbl -> GetContactsFolder(This,ret) ) 

#define AddressList_get_AddressListType(This,AddressListType)	\
    ( (This)->lpVtbl -> get_AddressListType(This,AddressListType) ) 

#define AddressList_get_ResolutionOrder(This,ResolutionOrder)	\
    ( (This)->lpVtbl -> get_ResolutionOrder(This,ResolutionOrder) ) 

#define AddressList_get_IsInitialAddressList(This,IsInitialAddressList)	\
    ( (This)->lpVtbl -> get_IsInitialAddressList(This,IsInitialAddressList) ) 

#define AddressList_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __AddressList_INTERFACE_DEFINED__ */


#ifndef ___FromRssFeedRuleCondition_INTERFACE_DEFINED__
#define ___FromRssFeedRuleCondition_INTERFACE_DEFINED__

/* interface _FromRssFeedRuleCondition */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__FromRssFeedRuleCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630FB-0000-0000-C000-000000000046")
    _FromRssFeedRuleCondition : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConditionType( 
            /* [retval][out] */ OlRuleConditionType *ConditionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FromRssFeed( 
            /* [retval][out] */ VARIANT *FromRssFeed) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FromRssFeed( 
            /* [in] */ VARIANT FromRssFeed) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _FromRssFeedRuleConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FromRssFeedRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FromRssFeedRuleCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FromRssFeedRuleCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FromRssFeedRuleCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FromRssFeedRuleCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FromRssFeedRuleCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FromRssFeedRuleCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _FromRssFeedRuleCondition * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _FromRssFeedRuleCondition * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _FromRssFeedRuleCondition * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _FromRssFeedRuleCondition * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _FromRssFeedRuleCondition * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _FromRssFeedRuleCondition * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConditionType )( 
            _FromRssFeedRuleCondition * This,
            /* [retval][out] */ OlRuleConditionType *ConditionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FromRssFeed )( 
            _FromRssFeedRuleCondition * This,
            /* [retval][out] */ VARIANT *FromRssFeed);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FromRssFeed )( 
            _FromRssFeedRuleCondition * This,
            /* [in] */ VARIANT FromRssFeed);
        
        END_INTERFACE
    } _FromRssFeedRuleConditionVtbl;

    interface _FromRssFeedRuleCondition
    {
        CONST_VTBL struct _FromRssFeedRuleConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FromRssFeedRuleCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FromRssFeedRuleCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FromRssFeedRuleCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FromRssFeedRuleCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FromRssFeedRuleCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FromRssFeedRuleCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FromRssFeedRuleCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _FromRssFeedRuleCondition_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _FromRssFeedRuleCondition_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _FromRssFeedRuleCondition_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _FromRssFeedRuleCondition_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _FromRssFeedRuleCondition_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _FromRssFeedRuleCondition_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _FromRssFeedRuleCondition_get_ConditionType(This,ConditionType)	\
    ( (This)->lpVtbl -> get_ConditionType(This,ConditionType) ) 

#define _FromRssFeedRuleCondition_get_FromRssFeed(This,FromRssFeed)	\
    ( (This)->lpVtbl -> get_FromRssFeed(This,FromRssFeed) ) 

#define _FromRssFeedRuleCondition_put_FromRssFeed(This,FromRssFeed)	\
    ( (This)->lpVtbl -> put_FromRssFeed(This,FromRssFeed) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FromRssFeedRuleCondition_INTERFACE_DEFINED__ */


#ifndef ___Categories_INTERFACE_DEFINED__
#define ___Categories_INTERFACE_DEFINED__

/* interface _Categories */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Categories;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E4-0000-0000-C000-000000000046")
    _Categories : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Category **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Color,
            /* [optional][in] */ VARIANT ShortcutKey,
            /* [retval][out] */ _Category **ppCategory) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _CategoriesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Categories * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Categories * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Categories * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Categories * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Categories * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Categories * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Categories * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Categories * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Categories * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Categories * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Categories * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Categories * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Categories * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Category **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _Categories * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Color,
            /* [optional][in] */ VARIANT ShortcutKey,
            /* [retval][out] */ _Category **ppCategory);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _Categories * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } _CategoriesVtbl;

    interface _Categories
    {
        CONST_VTBL struct _CategoriesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Categories_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Categories_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Categories_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Categories_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Categories_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Categories_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Categories_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Categories_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Categories_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Categories_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Categories_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Categories_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Categories_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Categories_Add(This,Name,Color,ShortcutKey,ppCategory)	\
    ( (This)->lpVtbl -> Add(This,Name,Color,ShortcutKey,ppCategory) ) 

#define _Categories_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Categories_INTERFACE_DEFINED__ */


#ifndef ___Category_INTERFACE_DEFINED__
#define ___Category_INTERFACE_DEFINED__

/* interface _Category */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Category;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E3-0000-0000-C000-000000000046")
    _Category : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Color( 
            /* [retval][out] */ OlCategoryColor *Color) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Color( 
            /* [in] */ OlCategoryColor Color) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShortcutKey( 
            /* [retval][out] */ OlCategoryShortcutKey *ShortcutKey) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShortcutKey( 
            /* [in] */ OlCategoryShortcutKey ShortcutKey) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CategoryID( 
            /* [retval][out] */ BSTR *CategoryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CategoryBorderColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *CategoryBorderColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CategoryGradientTopColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *CategoryGradientTopColor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CategoryGradientBottomColor( 
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *CategoryGradientBottomColor) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _CategoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Category * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Category * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Category * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Category * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Category * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Category * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Category * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Category * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Category * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Category * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Category * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _Category * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _Category * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            _Category * This,
            /* [retval][out] */ OlCategoryColor *Color);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            _Category * This,
            /* [in] */ OlCategoryColor Color);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShortcutKey )( 
            _Category * This,
            /* [retval][out] */ OlCategoryShortcutKey *ShortcutKey);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShortcutKey )( 
            _Category * This,
            /* [in] */ OlCategoryShortcutKey ShortcutKey);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CategoryID )( 
            _Category * This,
            /* [retval][out] */ BSTR *CategoryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CategoryBorderColor )( 
            _Category * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *CategoryBorderColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CategoryGradientTopColor )( 
            _Category * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *CategoryGradientTopColor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CategoryGradientBottomColor )( 
            _Category * This,
            /* [retval][out] */ /* external definition not present */ OLE_COLOR *CategoryGradientBottomColor);
        
        END_INTERFACE
    } _CategoryVtbl;

    interface _Category
    {
        CONST_VTBL struct _CategoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Category_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Category_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Category_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Category_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Category_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Category_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Category_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Category_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Category_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Category_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Category_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Category_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _Category_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _Category_get_Color(This,Color)	\
    ( (This)->lpVtbl -> get_Color(This,Color) ) 

#define _Category_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define _Category_get_ShortcutKey(This,ShortcutKey)	\
    ( (This)->lpVtbl -> get_ShortcutKey(This,ShortcutKey) ) 

#define _Category_put_ShortcutKey(This,ShortcutKey)	\
    ( (This)->lpVtbl -> put_ShortcutKey(This,ShortcutKey) ) 

#define _Category_get_CategoryID(This,CategoryID)	\
    ( (This)->lpVtbl -> get_CategoryID(This,CategoryID) ) 

#define _Category_get_CategoryBorderColor(This,CategoryBorderColor)	\
    ( (This)->lpVtbl -> get_CategoryBorderColor(This,CategoryBorderColor) ) 

#define _Category_get_CategoryGradientTopColor(This,CategoryGradientTopColor)	\
    ( (This)->lpVtbl -> get_CategoryGradientTopColor(This,CategoryGradientTopColor) ) 

#define _Category_get_CategoryGradientBottomColor(This,CategoryGradientBottomColor)	\
    ( (This)->lpVtbl -> get_CategoryGradientBottomColor(This,CategoryGradientBottomColor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Category_INTERFACE_DEFINED__ */


#ifndef __View_INTERFACE_DEFINED__
#define __View_INTERFACE_DEFINED__

/* interface View */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_View;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063095-0000-0000-C000-000000000046")
    View : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ BSTR Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LockUserChanges( 
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LockUserChanges( 
            /* [in] */ VARIANT_BOOL LockUserChanges) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveOption( 
            /* [retval][out] */ OlViewSaveOption *SaveOption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Standard( 
            /* [retval][out] */ VARIANT_BOOL *Standard) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewType( 
            /* [retval][out] */ OlViewType *ViewType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XML( 
            /* [retval][out] */ BSTR *XML) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_XML( 
            /* [in] */ BSTR XML) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GoToDate( 
            /* [in] */ DATE Date) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Filter( 
            /* [in] */ BSTR Filter) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            View * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            View * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            View * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            View * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            View * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            View * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            View * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            View * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            View * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            View * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            View * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            View * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            View * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            View * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            View * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            View * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            View * This,
            /* [retval][out] */ BSTR *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            View * This,
            /* [in] */ BSTR Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockUserChanges )( 
            View * This,
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockUserChanges )( 
            View * This,
            /* [in] */ VARIANT_BOOL LockUserChanges);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            View * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            View * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveOption )( 
            View * This,
            /* [retval][out] */ OlViewSaveOption *SaveOption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Standard )( 
            View * This,
            /* [retval][out] */ VARIANT_BOOL *Standard);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewType )( 
            View * This,
            /* [retval][out] */ OlViewType *ViewType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XML )( 
            View * This,
            /* [retval][out] */ BSTR *XML);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XML )( 
            View * This,
            /* [in] */ BSTR XML);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GoToDate )( 
            View * This,
            /* [in] */ DATE Date);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            View * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            View * This,
            /* [in] */ BSTR Filter);
        
        END_INTERFACE
    } ViewVtbl;

    interface View
    {
        CONST_VTBL struct ViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define View_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define View_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define View_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define View_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define View_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define View_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define View_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define View_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define View_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define View_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define View_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define View_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define View_Copy(This,Name,SaveOption,ppview)	\
    ( (This)->lpVtbl -> Copy(This,Name,SaveOption,ppview) ) 

#define View_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define View_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define View_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define View_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define View_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define View_get_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> get_LockUserChanges(This,LockUserChanges) ) 

#define View_put_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> put_LockUserChanges(This,LockUserChanges) ) 

#define View_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define View_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define View_get_SaveOption(This,SaveOption)	\
    ( (This)->lpVtbl -> get_SaveOption(This,SaveOption) ) 

#define View_get_Standard(This,Standard)	\
    ( (This)->lpVtbl -> get_Standard(This,Standard) ) 

#define View_get_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> get_ViewType(This,ViewType) ) 

#define View_get_XML(This,XML)	\
    ( (This)->lpVtbl -> get_XML(This,XML) ) 

#define View_put_XML(This,XML)	\
    ( (This)->lpVtbl -> put_XML(This,XML) ) 

#define View_GoToDate(This,Date)	\
    ( (This)->lpVtbl -> GoToDate(This,Date) ) 

#define View_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define View_put_Filter(This,Filter)	\
    ( (This)->lpVtbl -> put_Filter(This,Filter) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __View_INTERFACE_DEFINED__ */


#ifndef ___Views_INTERFACE_DEFINED__
#define ___Views_INTERFACE_DEFINED__

/* interface _Views */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Views;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006308D-0000-0000-C000-000000000046")
    _Views : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ View **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [in] */ OlViewType ViewType,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ IUnknown **ppvObject) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ViewsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Views * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Views * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Views * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Views * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Views * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Views * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Views * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Views * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Views * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Views * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Views * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Views * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Views * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ View **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _Views * This,
            /* [in] */ BSTR Name,
            /* [in] */ OlViewType ViewType,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _Views * This,
            /* [in] */ VARIANT Index);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            _Views * This,
            /* [retval][out] */ IUnknown **ppvObject);
        
        END_INTERFACE
    } _ViewsVtbl;

    interface _Views
    {
        CONST_VTBL struct _ViewsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Views_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Views_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Views_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Views_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Views_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Views_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Views_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Views_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Views_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Views_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Views_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Views_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Views_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Views_Add(This,Name,ViewType,SaveOption,ppview)	\
    ( (This)->lpVtbl -> Add(This,Name,ViewType,SaveOption,ppview) ) 

#define _Views_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define _Views__NewEnum(This,ppvObject)	\
    ( (This)->lpVtbl -> _NewEnum(This,ppvObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Views_INTERFACE_DEFINED__ */


#ifndef ___StorageItem_INTERFACE_DEFINED__
#define ___StorageItem_INTERFACE_DEFINED__

/* interface _StorageItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__StorageItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630CB-0000-0000-C000-000000000046")
    _StorageItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Creator( 
            /* [retval][out] */ BSTR *Creator) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Creator( 
            /* [in] */ BSTR Creator) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _StorageItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StorageItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StorageItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StorageItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StorageItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StorageItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StorageItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StorageItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _StorageItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _StorageItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _StorageItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _StorageItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _StorageItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _StorageItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _StorageItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _StorageItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _StorageItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _StorageItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _StorageItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _StorageItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _StorageItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _StorageItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _StorageItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _StorageItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _StorageItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _StorageItem * This,
            /* [retval][out] */ BSTR *Creator);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Creator )( 
            _StorageItem * This,
            /* [in] */ BSTR Creator);
        
        END_INTERFACE
    } _StorageItemVtbl;

    interface _StorageItem
    {
        CONST_VTBL struct _StorageItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StorageItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StorageItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StorageItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StorageItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StorageItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StorageItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StorageItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _StorageItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _StorageItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _StorageItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _StorageItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _StorageItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _StorageItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _StorageItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _StorageItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _StorageItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _StorageItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _StorageItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _StorageItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _StorageItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _StorageItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _StorageItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _StorageItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _StorageItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _StorageItem_get_Creator(This,Creator)	\
    ( (This)->lpVtbl -> get_Creator(This,Creator) ) 

#define _StorageItem_put_Creator(This,Creator)	\
    ( (This)->lpVtbl -> put_Creator(This,Creator) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StorageItem_INTERFACE_DEFINED__ */


#ifndef ___Table_INTERFACE_DEFINED__
#define ___Table_INTERFACE_DEFINED__

/* interface _Table */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Table;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D2-0000-0000-C000-000000000046")
    _Table : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindRow( 
            /* [in] */ BSTR Filter,
            /* [retval][out] */ _Row **Row) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindNextRow( 
            /* [retval][out] */ _Row **Row) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetArray( 
            /* [in] */ long MaxRows,
            /* [retval][out] */ VARIANT *Rows) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetNextRow( 
            /* [retval][out] */ _Row **NextRow) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRowCount( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MoveToStart( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Restrict( 
            /* [in] */ BSTR Filter,
            /* [retval][out] */ _Table **Table) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Sort( 
            /* [in] */ BSTR SortProperty,
            /* [optional][in] */ VARIANT Descending) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Columns( 
            /* [retval][out] */ _Columns **Columns) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndOfTable( 
            /* [retval][out] */ VARIANT_BOOL *EndOfTable) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Table * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Table * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Table * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Table * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Table * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Table * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Table * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Table * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Table * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Table * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Table * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindRow )( 
            _Table * This,
            /* [in] */ BSTR Filter,
            /* [retval][out] */ _Row **Row);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindNextRow )( 
            _Table * This,
            /* [retval][out] */ _Row **Row);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetArray )( 
            _Table * This,
            /* [in] */ long MaxRows,
            /* [retval][out] */ VARIANT *Rows);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetNextRow )( 
            _Table * This,
            /* [retval][out] */ _Row **NextRow);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRowCount )( 
            _Table * This,
            /* [retval][out] */ long *Count);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MoveToStart )( 
            _Table * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Restrict )( 
            _Table * This,
            /* [in] */ BSTR Filter,
            /* [retval][out] */ _Table **Table);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Sort )( 
            _Table * This,
            /* [in] */ BSTR SortProperty,
            /* [optional][in] */ VARIANT Descending);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Columns )( 
            _Table * This,
            /* [retval][out] */ _Columns **Columns);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndOfTable )( 
            _Table * This,
            /* [retval][out] */ VARIANT_BOOL *EndOfTable);
        
        END_INTERFACE
    } _TableVtbl;

    interface _Table
    {
        CONST_VTBL struct _TableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Table_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Table_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Table_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Table_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Table_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Table_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Table_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Table_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Table_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Table_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Table_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Table_FindRow(This,Filter,Row)	\
    ( (This)->lpVtbl -> FindRow(This,Filter,Row) ) 

#define _Table_FindNextRow(This,Row)	\
    ( (This)->lpVtbl -> FindNextRow(This,Row) ) 

#define _Table_GetArray(This,MaxRows,Rows)	\
    ( (This)->lpVtbl -> GetArray(This,MaxRows,Rows) ) 

#define _Table_GetNextRow(This,NextRow)	\
    ( (This)->lpVtbl -> GetNextRow(This,NextRow) ) 

#define _Table_GetRowCount(This,Count)	\
    ( (This)->lpVtbl -> GetRowCount(This,Count) ) 

#define _Table_MoveToStart(This)	\
    ( (This)->lpVtbl -> MoveToStart(This) ) 

#define _Table_Restrict(This,Filter,Table)	\
    ( (This)->lpVtbl -> Restrict(This,Filter,Table) ) 

#define _Table_Sort(This,SortProperty,Descending)	\
    ( (This)->lpVtbl -> Sort(This,SortProperty,Descending) ) 

#define _Table_get_Columns(This,Columns)	\
    ( (This)->lpVtbl -> get_Columns(This,Columns) ) 

#define _Table_get_EndOfTable(This,EndOfTable)	\
    ( (This)->lpVtbl -> get_EndOfTable(This,EndOfTable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Table_INTERFACE_DEFINED__ */


#ifndef ___Row_INTERFACE_DEFINED__
#define ___Row_INTERFACE_DEFINED__

/* interface _Row */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Row;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630D3-0000-0000-C000-000000000046")
    _Row : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE BinaryToString( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ BSTR *Value) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetValues( 
            /* [retval][out] */ VARIANT *Values) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE LocalTimeToUTC( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ DATE *Value) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE UTCToLocalTime( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ DATE *Value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _RowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Row * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Row * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Row * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Row * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Row * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Row * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Row * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Row * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Row * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Row * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Row * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *BinaryToString )( 
            _Row * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ BSTR *Value);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetValues )( 
            _Row * This,
            /* [retval][out] */ VARIANT *Values);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Row * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LocalTimeToUTC )( 
            _Row * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ DATE *Value);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UTCToLocalTime )( 
            _Row * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ DATE *Value);
        
        END_INTERFACE
    } _RowVtbl;

    interface _Row
    {
        CONST_VTBL struct _RowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Row_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Row_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Row_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Row_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Row_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Row_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Row_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Row_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Row_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Row_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Row_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Row_BinaryToString(This,Index,Value)	\
    ( (This)->lpVtbl -> BinaryToString(This,Index,Value) ) 

#define _Row_GetValues(This,Values)	\
    ( (This)->lpVtbl -> GetValues(This,Values) ) 

#define _Row_Item(This,Index,Value)	\
    ( (This)->lpVtbl -> Item(This,Index,Value) ) 

#define _Row_LocalTimeToUTC(This,Index,Value)	\
    ( (This)->lpVtbl -> LocalTimeToUTC(This,Index,Value) ) 

#define _Row_UTCToLocalTime(This,Index,Value)	\
    ( (This)->lpVtbl -> UTCToLocalTime(This,Index,Value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Row_INTERFACE_DEFINED__ */


#ifndef ___Columns_INTERFACE_DEFINED__
#define ___Columns_INTERFACE_DEFINED__

/* interface _Columns */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Columns;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E1-0000-0000-C000-000000000046")
    _Columns : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Column **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ _Column **Column) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ColumnsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Columns * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Columns * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Columns * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Columns * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Columns * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Columns * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Columns * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Columns * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Columns * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Columns * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Columns * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Columns * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Columns * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Column **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _Columns * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ _Column **Column);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _Columns * This,
            /* [in] */ VARIANT Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            _Columns * This);
        
        END_INTERFACE
    } _ColumnsVtbl;

    interface _Columns
    {
        CONST_VTBL struct _ColumnsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Columns_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Columns_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Columns_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Columns_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Columns_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Columns_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Columns_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Columns_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Columns_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Columns_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Columns_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Columns_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Columns_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Columns_Add(This,Name,Column)	\
    ( (This)->lpVtbl -> Add(This,Name,Column) ) 

#define _Columns_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define _Columns_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Columns_INTERFACE_DEFINED__ */


#ifndef ___Column_INTERFACE_DEFINED__
#define ___Column_INTERFACE_DEFINED__

/* interface _Column */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Column;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E5-0000-0000-C000-000000000046")
    _Column : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ColumnVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Column * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Column * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Column * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Column * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Column * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Column * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Column * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Column * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Column * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Column * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Column * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _Column * This,
            /* [retval][out] */ BSTR *Name);
        
        END_INTERFACE
    } _ColumnVtbl;

    interface _Column
    {
        CONST_VTBL struct _ColumnVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Column_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Column_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Column_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Column_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Column_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Column_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Column_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Column_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Column_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Column_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Column_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Column_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Column_INTERFACE_DEFINED__ */


#ifndef ___CalendarSharing_INTERFACE_DEFINED__
#define ___CalendarSharing_INTERFACE_DEFINED__

/* interface _CalendarSharing */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__CalendarSharing;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E2-0000-0000-C000-000000000046")
    _CalendarSharing : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAsICal( 
            /* [in] */ BSTR Path) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ForwardAsICal( 
            /* [in] */ OlCalendarMailFormat MailFormat,
            /* [retval][out] */ _MailItem **RetVal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CalendarDetail( 
            /* [retval][out] */ OlCalendarDetail *CalendarDetail) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CalendarDetail( 
            /* [in] */ OlCalendarDetail CalendarDetail) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndDate( 
            /* [retval][out] */ DATE *EndDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndDate( 
            /* [in] */ DATE EndDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Folder( 
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IncludeAttachments( 
            /* [retval][out] */ VARIANT_BOOL *IncludeAttachments) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IncludeAttachments( 
            /* [in] */ VARIANT_BOOL IncludeAttachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IncludePrivateDetails( 
            /* [retval][out] */ VARIANT_BOOL *IncludePrivateDetails) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IncludePrivateDetails( 
            /* [in] */ VARIANT_BOOL IncludePrivateDetails) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RestrictToWorkingHours( 
            /* [retval][out] */ VARIANT_BOOL *RestrictToWorkingHours) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RestrictToWorkingHours( 
            /* [in] */ VARIANT_BOOL RestrictToWorkingHours) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartDate( 
            /* [retval][out] */ DATE *StartDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartDate( 
            /* [in] */ DATE StartDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IncludeWholeCalendar( 
            /* [retval][out] */ VARIANT_BOOL *IncludeWholeCalendar) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IncludeWholeCalendar( 
            /* [in] */ VARIANT_BOOL IncludeWholeCalendar) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _CalendarSharingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CalendarSharing * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CalendarSharing * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CalendarSharing * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CalendarSharing * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CalendarSharing * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CalendarSharing * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CalendarSharing * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _CalendarSharing * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _CalendarSharing * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _CalendarSharing * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _CalendarSharing * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAsICal )( 
            _CalendarSharing * This,
            /* [in] */ BSTR Path);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ForwardAsICal )( 
            _CalendarSharing * This,
            /* [in] */ OlCalendarMailFormat MailFormat,
            /* [retval][out] */ _MailItem **RetVal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CalendarDetail )( 
            _CalendarSharing * This,
            /* [retval][out] */ OlCalendarDetail *CalendarDetail);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CalendarDetail )( 
            _CalendarSharing * This,
            /* [in] */ OlCalendarDetail CalendarDetail);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndDate )( 
            _CalendarSharing * This,
            /* [retval][out] */ DATE *EndDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndDate )( 
            _CalendarSharing * This,
            /* [in] */ DATE EndDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Folder )( 
            _CalendarSharing * This,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IncludeAttachments )( 
            _CalendarSharing * This,
            /* [retval][out] */ VARIANT_BOOL *IncludeAttachments);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IncludeAttachments )( 
            _CalendarSharing * This,
            /* [in] */ VARIANT_BOOL IncludeAttachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IncludePrivateDetails )( 
            _CalendarSharing * This,
            /* [retval][out] */ VARIANT_BOOL *IncludePrivateDetails);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IncludePrivateDetails )( 
            _CalendarSharing * This,
            /* [in] */ VARIANT_BOOL IncludePrivateDetails);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RestrictToWorkingHours )( 
            _CalendarSharing * This,
            /* [retval][out] */ VARIANT_BOOL *RestrictToWorkingHours);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RestrictToWorkingHours )( 
            _CalendarSharing * This,
            /* [in] */ VARIANT_BOOL RestrictToWorkingHours);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartDate )( 
            _CalendarSharing * This,
            /* [retval][out] */ DATE *StartDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartDate )( 
            _CalendarSharing * This,
            /* [in] */ DATE StartDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IncludeWholeCalendar )( 
            _CalendarSharing * This,
            /* [retval][out] */ VARIANT_BOOL *IncludeWholeCalendar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IncludeWholeCalendar )( 
            _CalendarSharing * This,
            /* [in] */ VARIANT_BOOL IncludeWholeCalendar);
        
        END_INTERFACE
    } _CalendarSharingVtbl;

    interface _CalendarSharing
    {
        CONST_VTBL struct _CalendarSharingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CalendarSharing_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CalendarSharing_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CalendarSharing_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CalendarSharing_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CalendarSharing_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CalendarSharing_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CalendarSharing_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CalendarSharing_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _CalendarSharing_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _CalendarSharing_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _CalendarSharing_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _CalendarSharing_SaveAsICal(This,Path)	\
    ( (This)->lpVtbl -> SaveAsICal(This,Path) ) 

#define _CalendarSharing_ForwardAsICal(This,MailFormat,RetVal)	\
    ( (This)->lpVtbl -> ForwardAsICal(This,MailFormat,RetVal) ) 

#define _CalendarSharing_get_CalendarDetail(This,CalendarDetail)	\
    ( (This)->lpVtbl -> get_CalendarDetail(This,CalendarDetail) ) 

#define _CalendarSharing_put_CalendarDetail(This,CalendarDetail)	\
    ( (This)->lpVtbl -> put_CalendarDetail(This,CalendarDetail) ) 

#define _CalendarSharing_get_EndDate(This,EndDate)	\
    ( (This)->lpVtbl -> get_EndDate(This,EndDate) ) 

#define _CalendarSharing_put_EndDate(This,EndDate)	\
    ( (This)->lpVtbl -> put_EndDate(This,EndDate) ) 

#define _CalendarSharing_get_Folder(This,Folder)	\
    ( (This)->lpVtbl -> get_Folder(This,Folder) ) 

#define _CalendarSharing_get_IncludeAttachments(This,IncludeAttachments)	\
    ( (This)->lpVtbl -> get_IncludeAttachments(This,IncludeAttachments) ) 

#define _CalendarSharing_put_IncludeAttachments(This,IncludeAttachments)	\
    ( (This)->lpVtbl -> put_IncludeAttachments(This,IncludeAttachments) ) 

#define _CalendarSharing_get_IncludePrivateDetails(This,IncludePrivateDetails)	\
    ( (This)->lpVtbl -> get_IncludePrivateDetails(This,IncludePrivateDetails) ) 

#define _CalendarSharing_put_IncludePrivateDetails(This,IncludePrivateDetails)	\
    ( (This)->lpVtbl -> put_IncludePrivateDetails(This,IncludePrivateDetails) ) 

#define _CalendarSharing_get_RestrictToWorkingHours(This,RestrictToWorkingHours)	\
    ( (This)->lpVtbl -> get_RestrictToWorkingHours(This,RestrictToWorkingHours) ) 

#define _CalendarSharing_put_RestrictToWorkingHours(This,RestrictToWorkingHours)	\
    ( (This)->lpVtbl -> put_RestrictToWorkingHours(This,RestrictToWorkingHours) ) 

#define _CalendarSharing_get_StartDate(This,StartDate)	\
    ( (This)->lpVtbl -> get_StartDate(This,StartDate) ) 

#define _CalendarSharing_put_StartDate(This,StartDate)	\
    ( (This)->lpVtbl -> put_StartDate(This,StartDate) ) 

#define _CalendarSharing_get_IncludeWholeCalendar(This,IncludeWholeCalendar)	\
    ( (This)->lpVtbl -> get_IncludeWholeCalendar(This,IncludeWholeCalendar) ) 

#define _CalendarSharing_put_IncludeWholeCalendar(This,IncludeWholeCalendar)	\
    ( (This)->lpVtbl -> put_IncludeWholeCalendar(This,IncludeWholeCalendar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CalendarSharing_INTERFACE_DEFINED__ */


#ifndef ___MailItem_INTERFACE_DEFINED__
#define ___MailItem_INTERFACE_DEFINED__

/* interface _MailItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__MailItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063034-0000-0000-C000-000000000046")
    _MailItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AlternateRecipientAllowed( 
            /* [retval][out] */ VARIANT_BOOL *AlternateRecipientAllowed) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AlternateRecipientAllowed( 
            /* [in] */ VARIANT_BOOL AlternateRecipientAllowed) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoForwarded( 
            /* [retval][out] */ VARIANT_BOOL *AutoForwarded) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoForwarded( 
            /* [in] */ VARIANT_BOOL AutoForwarded) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BCC( 
            /* [retval][out] */ BSTR *BCC) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BCC( 
            /* [in] */ BSTR BCC) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CC( 
            /* [retval][out] */ BSTR *CC) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CC( 
            /* [in] */ BSTR CC) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DeferredDeliveryTime( 
            /* [retval][out] */ DATE *DeferredDeliveryTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DeferredDeliveryTime( 
            /* [in] */ DATE DeferredDeliveryTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DeleteAfterSubmit( 
            /* [retval][out] */ VARIANT_BOOL *DeleteAfterSubmit) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DeleteAfterSubmit( 
            /* [in] */ VARIANT_BOOL DeleteAfterSubmit) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExpiryTime( 
            /* [retval][out] */ DATE *ExpiryTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExpiryTime( 
            /* [in] */ DATE ExpiryTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagDueBy( 
            /* [retval][out] */ DATE *FlagDueBy) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagDueBy( 
            /* [in] */ DATE FlagDueBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagRequest( 
            /* [retval][out] */ BSTR *FlagRequest) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagRequest( 
            /* [in] */ BSTR FlagRequest) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagStatus( 
            /* [retval][out] */ OlFlagStatus *FlagStatus) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagStatus( 
            /* [in] */ OlFlagStatus FlagStatus) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLBody( 
            /* [retval][out] */ BSTR *HTMLBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HTMLBody( 
            /* [in] */ BSTR HTMLBody) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginatorDeliveryReportRequested( 
            /* [retval][out] */ VARIANT_BOOL *OriginatorDeliveryReportRequested) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OriginatorDeliveryReportRequested( 
            /* [in] */ VARIANT_BOOL OriginatorDeliveryReportRequested) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReadReceiptRequested( 
            /* [retval][out] */ VARIANT_BOOL *ReadReceiptRequested) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReadReceiptRequested( 
            /* [in] */ VARIANT_BOOL ReadReceiptRequested) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedByEntryID( 
            /* [retval][out] */ BSTR *ReceivedByEntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedByName( 
            /* [retval][out] */ BSTR *ReceivedByName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedOnBehalfOfEntryID( 
            /* [retval][out] */ BSTR *ReceivedOnBehalfOfEntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedOnBehalfOfName( 
            /* [retval][out] */ BSTR *ReceivedOnBehalfOfName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedTime( 
            /* [retval][out] */ DATE *ReceivedTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RecipientReassignmentProhibited( 
            /* [retval][out] */ VARIANT_BOOL *RecipientReassignmentProhibited) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RecipientReassignmentProhibited( 
            /* [in] */ VARIANT_BOOL RecipientReassignmentProhibited) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault( 
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderOverrideDefault( 
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderPlaySound( 
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderPlaySound( 
            /* [in] */ VARIANT_BOOL ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSet( 
            /* [retval][out] */ VARIANT_BOOL *ReminderSet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSet( 
            /* [in] */ VARIANT_BOOL ReminderSet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSoundFile( 
            /* [retval][out] */ BSTR *ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSoundFile( 
            /* [in] */ BSTR ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderTime( 
            /* [retval][out] */ DATE *ReminderTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderTime( 
            /* [in] */ DATE ReminderTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RemoteStatus( 
            /* [retval][out] */ OlRemoteStatus *RemoteStatus) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RemoteStatus( 
            /* [in] */ OlRemoteStatus RemoteStatus) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyRecipientNames( 
            /* [retval][out] */ BSTR *ReplyRecipientNames) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyRecipients( 
            /* [retval][out] */ Recipients **ReplyRecipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveSentMessageFolder( 
            /* [retval][out] */ MAPIFolder **SaveSentMessageFolder) = 0;
        
        virtual /* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_SaveSentMessageFolder( 
            /* [in] */ MAPIFolder *SaveSentMessageFolder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderName( 
            /* [retval][out] */ BSTR *SenderName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sent( 
            /* [retval][out] */ VARIANT_BOOL *Sent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SentOn( 
            /* [retval][out] */ DATE *SentOn) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SentOnBehalfOfName( 
            /* [retval][out] */ BSTR *SentOnBehalfOfName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SentOnBehalfOfName( 
            /* [in] */ BSTR SentOnBehalfOfName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Submitted( 
            /* [retval][out] */ VARIANT_BOOL *Submitted) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_To( 
            /* [retval][out] */ BSTR *To) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_To( 
            /* [in] */ BSTR To) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VotingOptions( 
            /* [retval][out] */ BSTR *VotingOptions) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_VotingOptions( 
            /* [in] */ BSTR VotingOptions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VotingResponse( 
            /* [retval][out] */ BSTR *VotingResponse) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_VotingResponse( 
            /* [in] */ BSTR VotingResponse) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearConversationIndex( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Forward( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reply( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplyAll( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Send( void) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BodyFormat( 
            /* [retval][out] */ OlBodyFormat *BodyFormat) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BodyFormat( 
            /* [in] */ OlBodyFormat BodyFormat) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InternetCodepage( 
            /* [retval][out] */ long *InternetCodepage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InternetCodepage( 
            /* [in] */ long InternetCodepage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsIPFax( 
            /* [retval][out] */ VARIANT_BOOL *IsIPFax) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsIPFax( 
            /* [in] */ VARIANT_BOOL IsIPFax) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagIcon( 
            /* [retval][out] */ OlFlagIcon *FlagIcon) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagIcon( 
            /* [in] */ OlFlagIcon FlagIcon) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasCoverSheet( 
            /* [retval][out] */ VARIANT_BOOL *HasCoverSheet) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_HasCoverSheet( 
            /* [in] */ VARIANT_BOOL HasCoverSheet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailAddress( 
            /* [retval][out] */ BSTR *SenderEmailAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailType( 
            /* [retval][out] */ BSTR *SenderEmailType) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableSharedAttachments( 
            /* [retval][out] */ VARIANT_BOOL *EnableSharedAttachments) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableSharedAttachments( 
            /* [in] */ VARIANT_BOOL EnableSharedAttachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Permission( 
            /* [retval][out] */ OlPermission *Permission) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Permission( 
            /* [in] */ OlPermission Permission) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PermissionService( 
            /* [retval][out] */ OlPermissionService *PermissionService) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PermissionService( 
            /* [in] */ OlPermissionService PermissionService) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddBusinessCard( 
            /* [in] */ _ContactItem *contact) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SendUsingAccount( 
            /* [retval][out] */ _Account **SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SendUsingAccount( 
            /* [in] */ _Account *SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskSubject( 
            /* [retval][out] */ BSTR *TaskSubject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskSubject( 
            /* [in] */ BSTR TaskSubject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskDueDate( 
            /* [retval][out] */ DATE *TaskDueDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskDueDate( 
            /* [in] */ DATE TaskDueDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskStartDate( 
            /* [retval][out] */ DATE *TaskStartDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskStartDate( 
            /* [in] */ DATE TaskStartDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskCompletedDate( 
            /* [retval][out] */ DATE *TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskCompletedDate( 
            /* [in] */ DATE TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToDoTaskOrdinal( 
            /* [retval][out] */ DATE *ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToDoTaskOrdinal( 
            /* [in] */ DATE ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkAsTask( 
            /* [in] */ OlMarkInterval MarkInterval) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearTaskFlag( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsMarkedAsTask( 
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sender( 
            /* [retval][out] */ AddressEntry **Sender) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sender( 
            /* [in] */ AddressEntry *Sender) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PermissionTemplateGuid( 
            /* [retval][out] */ BSTR *PermissionTemplateGuid) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PermissionTemplateGuid( 
            /* [in] */ BSTR PermissionTemplateGuid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RetentionPolicyName( 
            /* [retval][out] */ BSTR *RetentionPolicyName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RetentionExpirationDate( 
            /* [retval][out] */ DATE *RetentionExpirationDate) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MailItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MailItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MailItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MailItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MailItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MailItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MailItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MailItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _MailItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _MailItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _MailItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _MailItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _MailItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _MailItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _MailItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _MailItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _MailItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _MailItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _MailItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _MailItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _MailItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _MailItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _MailItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _MailItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _MailItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _MailItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _MailItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _MailItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _MailItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _MailItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _MailItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _MailItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _MailItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _MailItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _MailItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _MailItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _MailItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _MailItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _MailItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _MailItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _MailItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AlternateRecipientAllowed )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *AlternateRecipientAllowed);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AlternateRecipientAllowed )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL AlternateRecipientAllowed);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoForwarded )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoForwarded);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoForwarded )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL AutoForwarded);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BCC )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *BCC);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BCC )( 
            _MailItem * This,
            /* [in] */ BSTR BCC);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CC )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *CC);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CC )( 
            _MailItem * This,
            /* [in] */ BSTR CC);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DeferredDeliveryTime )( 
            _MailItem * This,
            /* [retval][out] */ DATE *DeferredDeliveryTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DeferredDeliveryTime )( 
            _MailItem * This,
            /* [in] */ DATE DeferredDeliveryTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DeleteAfterSubmit )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *DeleteAfterSubmit);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DeleteAfterSubmit )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL DeleteAfterSubmit);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpiryTime )( 
            _MailItem * This,
            /* [retval][out] */ DATE *ExpiryTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpiryTime )( 
            _MailItem * This,
            /* [in] */ DATE ExpiryTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagDueBy )( 
            _MailItem * This,
            /* [retval][out] */ DATE *FlagDueBy);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagDueBy )( 
            _MailItem * This,
            /* [in] */ DATE FlagDueBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagRequest )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *FlagRequest);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagRequest )( 
            _MailItem * This,
            /* [in] */ BSTR FlagRequest);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagStatus )( 
            _MailItem * This,
            /* [retval][out] */ OlFlagStatus *FlagStatus);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagStatus )( 
            _MailItem * This,
            /* [in] */ OlFlagStatus FlagStatus);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLBody )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *HTMLBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HTMLBody )( 
            _MailItem * This,
            /* [in] */ BSTR HTMLBody);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OriginatorDeliveryReportRequested )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *OriginatorDeliveryReportRequested);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OriginatorDeliveryReportRequested )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL OriginatorDeliveryReportRequested);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReadReceiptRequested )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReadReceiptRequested);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReadReceiptRequested )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL ReadReceiptRequested);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedByEntryID )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *ReceivedByEntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedByName )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *ReceivedByName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedOnBehalfOfEntryID )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *ReceivedOnBehalfOfEntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedOnBehalfOfName )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *ReceivedOnBehalfOfName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedTime )( 
            _MailItem * This,
            /* [retval][out] */ DATE *ReceivedTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecipientReassignmentProhibited )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *RecipientReassignmentProhibited);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RecipientReassignmentProhibited )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL RecipientReassignmentProhibited);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _MailItem * This,
            /* [retval][out] */ Recipients **Recipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderOverrideDefault )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderOverrideDefault )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderPlaySound )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderPlaySound )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL ReminderPlaySound);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSet )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderSet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSet )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL ReminderSet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSoundFile )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *ReminderSoundFile);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSoundFile )( 
            _MailItem * This,
            /* [in] */ BSTR ReminderSoundFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderTime )( 
            _MailItem * This,
            /* [retval][out] */ DATE *ReminderTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderTime )( 
            _MailItem * This,
            /* [in] */ DATE ReminderTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RemoteStatus )( 
            _MailItem * This,
            /* [retval][out] */ OlRemoteStatus *RemoteStatus);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RemoteStatus )( 
            _MailItem * This,
            /* [in] */ OlRemoteStatus RemoteStatus);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyRecipientNames )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *ReplyRecipientNames);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyRecipients )( 
            _MailItem * This,
            /* [retval][out] */ Recipients **ReplyRecipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveSentMessageFolder )( 
            _MailItem * This,
            /* [retval][out] */ MAPIFolder **SaveSentMessageFolder);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_SaveSentMessageFolder )( 
            _MailItem * This,
            /* [in] */ MAPIFolder *SaveSentMessageFolder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderName )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *SenderName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sent )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *Sent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SentOn )( 
            _MailItem * This,
            /* [retval][out] */ DATE *SentOn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SentOnBehalfOfName )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *SentOnBehalfOfName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SentOnBehalfOfName )( 
            _MailItem * This,
            /* [in] */ BSTR SentOnBehalfOfName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Submitted )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *Submitted);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_To )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *To);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_To )( 
            _MailItem * This,
            /* [in] */ BSTR To);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VotingOptions )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *VotingOptions);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VotingOptions )( 
            _MailItem * This,
            /* [in] */ BSTR VotingOptions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VotingResponse )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *VotingResponse);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_VotingResponse )( 
            _MailItem * This,
            /* [in] */ BSTR VotingResponse);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearConversationIndex )( 
            _MailItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Forward )( 
            _MailItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reply )( 
            _MailItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplyAll )( 
            _MailItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Send )( 
            _MailItem * This);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _MailItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _MailItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BodyFormat )( 
            _MailItem * This,
            /* [retval][out] */ OlBodyFormat *BodyFormat);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BodyFormat )( 
            _MailItem * This,
            /* [in] */ OlBodyFormat BodyFormat);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _MailItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _MailItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InternetCodepage )( 
            _MailItem * This,
            /* [retval][out] */ long *InternetCodepage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InternetCodepage )( 
            _MailItem * This,
            /* [in] */ long InternetCodepage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _MailItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _MailItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsIPFax )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsIPFax);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsIPFax )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL IsIPFax);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagIcon )( 
            _MailItem * This,
            /* [retval][out] */ OlFlagIcon *FlagIcon);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagIcon )( 
            _MailItem * This,
            /* [in] */ OlFlagIcon FlagIcon);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasCoverSheet )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *HasCoverSheet);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HasCoverSheet )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL HasCoverSheet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _MailItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailAddress )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *SenderEmailAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailType )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *SenderEmailType);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableSharedAttachments )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *EnableSharedAttachments);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableSharedAttachments )( 
            _MailItem * This,
            /* [in] */ VARIANT_BOOL EnableSharedAttachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Permission )( 
            _MailItem * This,
            /* [retval][out] */ OlPermission *Permission);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Permission )( 
            _MailItem * This,
            /* [in] */ OlPermission Permission);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PermissionService )( 
            _MailItem * This,
            /* [retval][out] */ OlPermissionService *PermissionService);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PermissionService )( 
            _MailItem * This,
            /* [in] */ OlPermissionService PermissionService);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _MailItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddBusinessCard )( 
            _MailItem * This,
            /* [in] */ _ContactItem *contact);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SendUsingAccount )( 
            _MailItem * This,
            /* [retval][out] */ _Account **SendUsingAccount);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SendUsingAccount )( 
            _MailItem * This,
            /* [in] */ _Account *SendUsingAccount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskSubject )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *TaskSubject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskSubject )( 
            _MailItem * This,
            /* [in] */ BSTR TaskSubject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskDueDate )( 
            _MailItem * This,
            /* [retval][out] */ DATE *TaskDueDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskDueDate )( 
            _MailItem * This,
            /* [in] */ DATE TaskDueDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskStartDate )( 
            _MailItem * This,
            /* [retval][out] */ DATE *TaskStartDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskStartDate )( 
            _MailItem * This,
            /* [in] */ DATE TaskStartDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskCompletedDate )( 
            _MailItem * This,
            /* [retval][out] */ DATE *TaskCompletedDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskCompletedDate )( 
            _MailItem * This,
            /* [in] */ DATE TaskCompletedDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToDoTaskOrdinal )( 
            _MailItem * This,
            /* [retval][out] */ DATE *ToDoTaskOrdinal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToDoTaskOrdinal )( 
            _MailItem * This,
            /* [in] */ DATE ToDoTaskOrdinal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkAsTask )( 
            _MailItem * This,
            /* [in] */ OlMarkInterval MarkInterval);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearTaskFlag )( 
            _MailItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsMarkedAsTask )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _MailItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sender )( 
            _MailItem * This,
            /* [retval][out] */ AddressEntry **Sender);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sender )( 
            _MailItem * This,
            /* [in] */ AddressEntry *Sender);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PermissionTemplateGuid )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *PermissionTemplateGuid);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PermissionTemplateGuid )( 
            _MailItem * This,
            /* [in] */ BSTR PermissionTemplateGuid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _MailItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _MailItem * This,
            /* [in] */ VARIANT RTFBody);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RetentionPolicyName )( 
            _MailItem * This,
            /* [retval][out] */ BSTR *RetentionPolicyName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RetentionExpirationDate )( 
            _MailItem * This,
            /* [retval][out] */ DATE *RetentionExpirationDate);
        
        END_INTERFACE
    } _MailItemVtbl;

    interface _MailItem
    {
        CONST_VTBL struct _MailItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MailItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MailItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MailItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MailItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MailItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MailItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MailItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _MailItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _MailItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _MailItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _MailItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _MailItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _MailItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _MailItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _MailItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _MailItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _MailItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _MailItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _MailItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _MailItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _MailItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _MailItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _MailItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _MailItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _MailItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _MailItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _MailItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _MailItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _MailItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _MailItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _MailItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _MailItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _MailItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _MailItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _MailItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _MailItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _MailItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _MailItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _MailItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _MailItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _MailItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _MailItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _MailItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _MailItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _MailItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _MailItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _MailItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _MailItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _MailItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _MailItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _MailItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _MailItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _MailItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _MailItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _MailItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _MailItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _MailItem_get_AlternateRecipientAllowed(This,AlternateRecipientAllowed)	\
    ( (This)->lpVtbl -> get_AlternateRecipientAllowed(This,AlternateRecipientAllowed) ) 

#define _MailItem_put_AlternateRecipientAllowed(This,AlternateRecipientAllowed)	\
    ( (This)->lpVtbl -> put_AlternateRecipientAllowed(This,AlternateRecipientAllowed) ) 

#define _MailItem_get_AutoForwarded(This,AutoForwarded)	\
    ( (This)->lpVtbl -> get_AutoForwarded(This,AutoForwarded) ) 

#define _MailItem_put_AutoForwarded(This,AutoForwarded)	\
    ( (This)->lpVtbl -> put_AutoForwarded(This,AutoForwarded) ) 

#define _MailItem_get_BCC(This,BCC)	\
    ( (This)->lpVtbl -> get_BCC(This,BCC) ) 

#define _MailItem_put_BCC(This,BCC)	\
    ( (This)->lpVtbl -> put_BCC(This,BCC) ) 

#define _MailItem_get_CC(This,CC)	\
    ( (This)->lpVtbl -> get_CC(This,CC) ) 

#define _MailItem_put_CC(This,CC)	\
    ( (This)->lpVtbl -> put_CC(This,CC) ) 

#define _MailItem_get_DeferredDeliveryTime(This,DeferredDeliveryTime)	\
    ( (This)->lpVtbl -> get_DeferredDeliveryTime(This,DeferredDeliveryTime) ) 

#define _MailItem_put_DeferredDeliveryTime(This,DeferredDeliveryTime)	\
    ( (This)->lpVtbl -> put_DeferredDeliveryTime(This,DeferredDeliveryTime) ) 

#define _MailItem_get_DeleteAfterSubmit(This,DeleteAfterSubmit)	\
    ( (This)->lpVtbl -> get_DeleteAfterSubmit(This,DeleteAfterSubmit) ) 

#define _MailItem_put_DeleteAfterSubmit(This,DeleteAfterSubmit)	\
    ( (This)->lpVtbl -> put_DeleteAfterSubmit(This,DeleteAfterSubmit) ) 

#define _MailItem_get_ExpiryTime(This,ExpiryTime)	\
    ( (This)->lpVtbl -> get_ExpiryTime(This,ExpiryTime) ) 

#define _MailItem_put_ExpiryTime(This,ExpiryTime)	\
    ( (This)->lpVtbl -> put_ExpiryTime(This,ExpiryTime) ) 

#define _MailItem_get_FlagDueBy(This,FlagDueBy)	\
    ( (This)->lpVtbl -> get_FlagDueBy(This,FlagDueBy) ) 

#define _MailItem_put_FlagDueBy(This,FlagDueBy)	\
    ( (This)->lpVtbl -> put_FlagDueBy(This,FlagDueBy) ) 

#define _MailItem_get_FlagRequest(This,FlagRequest)	\
    ( (This)->lpVtbl -> get_FlagRequest(This,FlagRequest) ) 

#define _MailItem_put_FlagRequest(This,FlagRequest)	\
    ( (This)->lpVtbl -> put_FlagRequest(This,FlagRequest) ) 

#define _MailItem_get_FlagStatus(This,FlagStatus)	\
    ( (This)->lpVtbl -> get_FlagStatus(This,FlagStatus) ) 

#define _MailItem_put_FlagStatus(This,FlagStatus)	\
    ( (This)->lpVtbl -> put_FlagStatus(This,FlagStatus) ) 

#define _MailItem_get_HTMLBody(This,HTMLBody)	\
    ( (This)->lpVtbl -> get_HTMLBody(This,HTMLBody) ) 

#define _MailItem_put_HTMLBody(This,HTMLBody)	\
    ( (This)->lpVtbl -> put_HTMLBody(This,HTMLBody) ) 

#define _MailItem_get_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested)	\
    ( (This)->lpVtbl -> get_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested) ) 

#define _MailItem_put_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested)	\
    ( (This)->lpVtbl -> put_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested) ) 

#define _MailItem_get_ReadReceiptRequested(This,ReadReceiptRequested)	\
    ( (This)->lpVtbl -> get_ReadReceiptRequested(This,ReadReceiptRequested) ) 

#define _MailItem_put_ReadReceiptRequested(This,ReadReceiptRequested)	\
    ( (This)->lpVtbl -> put_ReadReceiptRequested(This,ReadReceiptRequested) ) 

#define _MailItem_get_ReceivedByEntryID(This,ReceivedByEntryID)	\
    ( (This)->lpVtbl -> get_ReceivedByEntryID(This,ReceivedByEntryID) ) 

#define _MailItem_get_ReceivedByName(This,ReceivedByName)	\
    ( (This)->lpVtbl -> get_ReceivedByName(This,ReceivedByName) ) 

#define _MailItem_get_ReceivedOnBehalfOfEntryID(This,ReceivedOnBehalfOfEntryID)	\
    ( (This)->lpVtbl -> get_ReceivedOnBehalfOfEntryID(This,ReceivedOnBehalfOfEntryID) ) 

#define _MailItem_get_ReceivedOnBehalfOfName(This,ReceivedOnBehalfOfName)	\
    ( (This)->lpVtbl -> get_ReceivedOnBehalfOfName(This,ReceivedOnBehalfOfName) ) 

#define _MailItem_get_ReceivedTime(This,ReceivedTime)	\
    ( (This)->lpVtbl -> get_ReceivedTime(This,ReceivedTime) ) 

#define _MailItem_get_RecipientReassignmentProhibited(This,RecipientReassignmentProhibited)	\
    ( (This)->lpVtbl -> get_RecipientReassignmentProhibited(This,RecipientReassignmentProhibited) ) 

#define _MailItem_put_RecipientReassignmentProhibited(This,RecipientReassignmentProhibited)	\
    ( (This)->lpVtbl -> put_RecipientReassignmentProhibited(This,RecipientReassignmentProhibited) ) 

#define _MailItem_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#define _MailItem_get_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> get_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _MailItem_put_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> put_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _MailItem_get_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> get_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _MailItem_put_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> put_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _MailItem_get_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> get_ReminderSet(This,ReminderSet) ) 

#define _MailItem_put_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> put_ReminderSet(This,ReminderSet) ) 

#define _MailItem_get_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> get_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _MailItem_put_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> put_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _MailItem_get_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> get_ReminderTime(This,ReminderTime) ) 

#define _MailItem_put_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> put_ReminderTime(This,ReminderTime) ) 

#define _MailItem_get_RemoteStatus(This,RemoteStatus)	\
    ( (This)->lpVtbl -> get_RemoteStatus(This,RemoteStatus) ) 

#define _MailItem_put_RemoteStatus(This,RemoteStatus)	\
    ( (This)->lpVtbl -> put_RemoteStatus(This,RemoteStatus) ) 

#define _MailItem_get_ReplyRecipientNames(This,ReplyRecipientNames)	\
    ( (This)->lpVtbl -> get_ReplyRecipientNames(This,ReplyRecipientNames) ) 

#define _MailItem_get_ReplyRecipients(This,ReplyRecipients)	\
    ( (This)->lpVtbl -> get_ReplyRecipients(This,ReplyRecipients) ) 

#define _MailItem_get_SaveSentMessageFolder(This,SaveSentMessageFolder)	\
    ( (This)->lpVtbl -> get_SaveSentMessageFolder(This,SaveSentMessageFolder) ) 

#define _MailItem_putref_SaveSentMessageFolder(This,SaveSentMessageFolder)	\
    ( (This)->lpVtbl -> putref_SaveSentMessageFolder(This,SaveSentMessageFolder) ) 

#define _MailItem_get_SenderName(This,SenderName)	\
    ( (This)->lpVtbl -> get_SenderName(This,SenderName) ) 

#define _MailItem_get_Sent(This,Sent)	\
    ( (This)->lpVtbl -> get_Sent(This,Sent) ) 

#define _MailItem_get_SentOn(This,SentOn)	\
    ( (This)->lpVtbl -> get_SentOn(This,SentOn) ) 

#define _MailItem_get_SentOnBehalfOfName(This,SentOnBehalfOfName)	\
    ( (This)->lpVtbl -> get_SentOnBehalfOfName(This,SentOnBehalfOfName) ) 

#define _MailItem_put_SentOnBehalfOfName(This,SentOnBehalfOfName)	\
    ( (This)->lpVtbl -> put_SentOnBehalfOfName(This,SentOnBehalfOfName) ) 

#define _MailItem_get_Submitted(This,Submitted)	\
    ( (This)->lpVtbl -> get_Submitted(This,Submitted) ) 

#define _MailItem_get_To(This,To)	\
    ( (This)->lpVtbl -> get_To(This,To) ) 

#define _MailItem_put_To(This,To)	\
    ( (This)->lpVtbl -> put_To(This,To) ) 

#define _MailItem_get_VotingOptions(This,VotingOptions)	\
    ( (This)->lpVtbl -> get_VotingOptions(This,VotingOptions) ) 

#define _MailItem_put_VotingOptions(This,VotingOptions)	\
    ( (This)->lpVtbl -> put_VotingOptions(This,VotingOptions) ) 

#define _MailItem_get_VotingResponse(This,VotingResponse)	\
    ( (This)->lpVtbl -> get_VotingResponse(This,VotingResponse) ) 

#define _MailItem_put_VotingResponse(This,VotingResponse)	\
    ( (This)->lpVtbl -> put_VotingResponse(This,VotingResponse) ) 

#define _MailItem_ClearConversationIndex(This)	\
    ( (This)->lpVtbl -> ClearConversationIndex(This) ) 

#define _MailItem_Forward(This,Item)	\
    ( (This)->lpVtbl -> Forward(This,Item) ) 

#define _MailItem_Reply(This,Item)	\
    ( (This)->lpVtbl -> Reply(This,Item) ) 

#define _MailItem_ReplyAll(This,Item)	\
    ( (This)->lpVtbl -> ReplyAll(This,Item) ) 

#define _MailItem_Send(This)	\
    ( (This)->lpVtbl -> Send(This) ) 

#define _MailItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _MailItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _MailItem_get_BodyFormat(This,BodyFormat)	\
    ( (This)->lpVtbl -> get_BodyFormat(This,BodyFormat) ) 

#define _MailItem_put_BodyFormat(This,BodyFormat)	\
    ( (This)->lpVtbl -> put_BodyFormat(This,BodyFormat) ) 

#define _MailItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _MailItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _MailItem_get_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> get_InternetCodepage(This,InternetCodepage) ) 

#define _MailItem_put_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> put_InternetCodepage(This,InternetCodepage) ) 

#define _MailItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _MailItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _MailItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _MailItem_get_IsIPFax(This,IsIPFax)	\
    ( (This)->lpVtbl -> get_IsIPFax(This,IsIPFax) ) 

#define _MailItem_put_IsIPFax(This,IsIPFax)	\
    ( (This)->lpVtbl -> put_IsIPFax(This,IsIPFax) ) 

#define _MailItem_get_FlagIcon(This,FlagIcon)	\
    ( (This)->lpVtbl -> get_FlagIcon(This,FlagIcon) ) 

#define _MailItem_put_FlagIcon(This,FlagIcon)	\
    ( (This)->lpVtbl -> put_FlagIcon(This,FlagIcon) ) 

#define _MailItem_get_HasCoverSheet(This,HasCoverSheet)	\
    ( (This)->lpVtbl -> get_HasCoverSheet(This,HasCoverSheet) ) 

#define _MailItem_put_HasCoverSheet(This,HasCoverSheet)	\
    ( (This)->lpVtbl -> put_HasCoverSheet(This,HasCoverSheet) ) 

#define _MailItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _MailItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _MailItem_get_SenderEmailAddress(This,SenderEmailAddress)	\
    ( (This)->lpVtbl -> get_SenderEmailAddress(This,SenderEmailAddress) ) 

#define _MailItem_get_SenderEmailType(This,SenderEmailType)	\
    ( (This)->lpVtbl -> get_SenderEmailType(This,SenderEmailType) ) 

#define _MailItem_get_EnableSharedAttachments(This,EnableSharedAttachments)	\
    ( (This)->lpVtbl -> get_EnableSharedAttachments(This,EnableSharedAttachments) ) 

#define _MailItem_put_EnableSharedAttachments(This,EnableSharedAttachments)	\
    ( (This)->lpVtbl -> put_EnableSharedAttachments(This,EnableSharedAttachments) ) 

#define _MailItem_get_Permission(This,Permission)	\
    ( (This)->lpVtbl -> get_Permission(This,Permission) ) 

#define _MailItem_put_Permission(This,Permission)	\
    ( (This)->lpVtbl -> put_Permission(This,Permission) ) 

#define _MailItem_get_PermissionService(This,PermissionService)	\
    ( (This)->lpVtbl -> get_PermissionService(This,PermissionService) ) 

#define _MailItem_put_PermissionService(This,PermissionService)	\
    ( (This)->lpVtbl -> put_PermissionService(This,PermissionService) ) 

#define _MailItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _MailItem_AddBusinessCard(This,contact)	\
    ( (This)->lpVtbl -> AddBusinessCard(This,contact) ) 

#define _MailItem_get_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> get_SendUsingAccount(This,SendUsingAccount) ) 

#define _MailItem_put_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> put_SendUsingAccount(This,SendUsingAccount) ) 

#define _MailItem_get_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> get_TaskSubject(This,TaskSubject) ) 

#define _MailItem_put_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> put_TaskSubject(This,TaskSubject) ) 

#define _MailItem_get_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> get_TaskDueDate(This,TaskDueDate) ) 

#define _MailItem_put_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> put_TaskDueDate(This,TaskDueDate) ) 

#define _MailItem_get_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> get_TaskStartDate(This,TaskStartDate) ) 

#define _MailItem_put_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> put_TaskStartDate(This,TaskStartDate) ) 

#define _MailItem_get_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> get_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _MailItem_put_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> put_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _MailItem_get_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> get_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _MailItem_put_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> put_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _MailItem_MarkAsTask(This,MarkInterval)	\
    ( (This)->lpVtbl -> MarkAsTask(This,MarkInterval) ) 

#define _MailItem_ClearTaskFlag(This)	\
    ( (This)->lpVtbl -> ClearTaskFlag(This) ) 

#define _MailItem_get_IsMarkedAsTask(This,IsMarkedAsTask)	\
    ( (This)->lpVtbl -> get_IsMarkedAsTask(This,IsMarkedAsTask) ) 

#define _MailItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _MailItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _MailItem_get_Sender(This,Sender)	\
    ( (This)->lpVtbl -> get_Sender(This,Sender) ) 

#define _MailItem_put_Sender(This,Sender)	\
    ( (This)->lpVtbl -> put_Sender(This,Sender) ) 

#define _MailItem_get_PermissionTemplateGuid(This,PermissionTemplateGuid)	\
    ( (This)->lpVtbl -> get_PermissionTemplateGuid(This,PermissionTemplateGuid) ) 

#define _MailItem_put_PermissionTemplateGuid(This,PermissionTemplateGuid)	\
    ( (This)->lpVtbl -> put_PermissionTemplateGuid(This,PermissionTemplateGuid) ) 

#define _MailItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _MailItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#define _MailItem_get_RetentionPolicyName(This,RetentionPolicyName)	\
    ( (This)->lpVtbl -> get_RetentionPolicyName(This,RetentionPolicyName) ) 

#define _MailItem_get_RetentionExpirationDate(This,RetentionExpirationDate)	\
    ( (This)->lpVtbl -> get_RetentionExpirationDate(This,RetentionExpirationDate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _MailItem_ShowCategoriesDialog_Proxy( 
    _MailItem * This);


void __RPC_STUB _MailItem_ShowCategoriesDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_InternetCodepage_Proxy( 
    _MailItem * This,
    /* [retval][out] */ long *InternetCodepage);


void __RPC_STUB _MailItem_get_InternetCodepage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_InternetCodepage_Proxy( 
    _MailItem * This,
    /* [in] */ long InternetCodepage);


void __RPC_STUB _MailItem_put_InternetCodepage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_MarkForDownload_Proxy( 
    _MailItem * This,
    /* [retval][out] */ OlRemoteStatus *MarkForDownload);


void __RPC_STUB _MailItem_get_MarkForDownload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_MarkForDownload_Proxy( 
    _MailItem * This,
    /* [in] */ OlRemoteStatus MarkForDownload);


void __RPC_STUB _MailItem_put_MarkForDownload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_IsConflict_Proxy( 
    _MailItem * This,
    /* [retval][out] */ VARIANT_BOOL *IsConflict);


void __RPC_STUB _MailItem_get_IsConflict_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_IsIPFax_Proxy( 
    _MailItem * This,
    /* [retval][out] */ VARIANT_BOOL *IsIPFax);


void __RPC_STUB _MailItem_get_IsIPFax_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_IsIPFax_Proxy( 
    _MailItem * This,
    /* [in] */ VARIANT_BOOL IsIPFax);


void __RPC_STUB _MailItem_put_IsIPFax_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_FlagIcon_Proxy( 
    _MailItem * This,
    /* [retval][out] */ OlFlagIcon *FlagIcon);


void __RPC_STUB _MailItem_get_FlagIcon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_FlagIcon_Proxy( 
    _MailItem * This,
    /* [in] */ OlFlagIcon FlagIcon);


void __RPC_STUB _MailItem_put_FlagIcon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_HasCoverSheet_Proxy( 
    _MailItem * This,
    /* [retval][out] */ VARIANT_BOOL *HasCoverSheet);


void __RPC_STUB _MailItem_get_HasCoverSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_HasCoverSheet_Proxy( 
    _MailItem * This,
    /* [in] */ VARIANT_BOOL HasCoverSheet);


void __RPC_STUB _MailItem_put_HasCoverSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_AutoResolvedWinner_Proxy( 
    _MailItem * This,
    /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);


void __RPC_STUB _MailItem_get_AutoResolvedWinner_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_Conflicts_Proxy( 
    _MailItem * This,
    /* [retval][out] */ Conflicts **Conflicts);


void __RPC_STUB _MailItem_get_Conflicts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_SenderEmailAddress_Proxy( 
    _MailItem * This,
    /* [retval][out] */ BSTR *SenderEmailAddress);


void __RPC_STUB _MailItem_get_SenderEmailAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_SenderEmailType_Proxy( 
    _MailItem * This,
    /* [retval][out] */ BSTR *SenderEmailType);


void __RPC_STUB _MailItem_get_SenderEmailType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_EnableSharedAttachments_Proxy( 
    _MailItem * This,
    /* [retval][out] */ VARIANT_BOOL *EnableSharedAttachments);


void __RPC_STUB _MailItem_get_EnableSharedAttachments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_EnableSharedAttachments_Proxy( 
    _MailItem * This,
    /* [in] */ VARIANT_BOOL EnableSharedAttachments);


void __RPC_STUB _MailItem_put_EnableSharedAttachments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_Permission_Proxy( 
    _MailItem * This,
    /* [retval][out] */ OlPermission *Permission);


void __RPC_STUB _MailItem_get_Permission_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_Permission_Proxy( 
    _MailItem * This,
    /* [in] */ OlPermission Permission);


void __RPC_STUB _MailItem_put_Permission_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_PermissionService_Proxy( 
    _MailItem * This,
    /* [retval][out] */ OlPermissionService *PermissionService);


void __RPC_STUB _MailItem_get_PermissionService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_PermissionService_Proxy( 
    _MailItem * This,
    /* [in] */ OlPermissionService PermissionService);


void __RPC_STUB _MailItem_put_PermissionService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_PropertyAccessor_Proxy( 
    _MailItem * This,
    /* [retval][out] */ _PropertyAccessor **PropertyAccessor);


void __RPC_STUB _MailItem_get_PropertyAccessor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _MailItem_AddBusinessCard_Proxy( 
    _MailItem * This,
    /* [in] */ _ContactItem *contact);


void __RPC_STUB _MailItem_AddBusinessCard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_SendUsingAccount_Proxy( 
    _MailItem * This,
    /* [retval][out] */ _Account **SendUsingAccount);


void __RPC_STUB _MailItem_get_SendUsingAccount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_SendUsingAccount_Proxy( 
    _MailItem * This,
    /* [in] */ _Account *SendUsingAccount);


void __RPC_STUB _MailItem_put_SendUsingAccount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_TaskSubject_Proxy( 
    _MailItem * This,
    /* [retval][out] */ BSTR *TaskSubject);


void __RPC_STUB _MailItem_get_TaskSubject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_TaskSubject_Proxy( 
    _MailItem * This,
    /* [in] */ BSTR TaskSubject);


void __RPC_STUB _MailItem_put_TaskSubject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_TaskDueDate_Proxy( 
    _MailItem * This,
    /* [retval][out] */ DATE *TaskDueDate);


void __RPC_STUB _MailItem_get_TaskDueDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_TaskDueDate_Proxy( 
    _MailItem * This,
    /* [in] */ DATE TaskDueDate);


void __RPC_STUB _MailItem_put_TaskDueDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_TaskStartDate_Proxy( 
    _MailItem * This,
    /* [retval][out] */ DATE *TaskStartDate);


void __RPC_STUB _MailItem_get_TaskStartDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_TaskStartDate_Proxy( 
    _MailItem * This,
    /* [in] */ DATE TaskStartDate);


void __RPC_STUB _MailItem_put_TaskStartDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_TaskCompletedDate_Proxy( 
    _MailItem * This,
    /* [retval][out] */ DATE *TaskCompletedDate);


void __RPC_STUB _MailItem_get_TaskCompletedDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_TaskCompletedDate_Proxy( 
    _MailItem * This,
    /* [in] */ DATE TaskCompletedDate);


void __RPC_STUB _MailItem_put_TaskCompletedDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_ToDoTaskOrdinal_Proxy( 
    _MailItem * This,
    /* [retval][out] */ DATE *ToDoTaskOrdinal);


void __RPC_STUB _MailItem_get_ToDoTaskOrdinal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_ToDoTaskOrdinal_Proxy( 
    _MailItem * This,
    /* [in] */ DATE ToDoTaskOrdinal);


void __RPC_STUB _MailItem_put_ToDoTaskOrdinal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _MailItem_MarkAsTask_Proxy( 
    _MailItem * This,
    /* [in] */ OlMarkInterval MarkInterval);


void __RPC_STUB _MailItem_MarkAsTask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _MailItem_ClearTaskFlag_Proxy( 
    _MailItem * This);


void __RPC_STUB _MailItem_ClearTaskFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_IsMarkedAsTask_Proxy( 
    _MailItem * This,
    /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask);


void __RPC_STUB _MailItem_get_IsMarkedAsTask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _MailItem_GetConversation_Proxy( 
    _MailItem * This,
    /* [retval][out] */ _Conversation **Conversation);


void __RPC_STUB _MailItem_GetConversation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_ConversationID_Proxy( 
    _MailItem * This,
    /* [retval][out] */ BSTR *ConversationID);


void __RPC_STUB _MailItem_get_ConversationID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_Sender_Proxy( 
    _MailItem * This,
    /* [retval][out] */ AddressEntry **Sender);


void __RPC_STUB _MailItem_get_Sender_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_Sender_Proxy( 
    _MailItem * This,
    /* [in] */ AddressEntry *Sender);


void __RPC_STUB _MailItem_put_Sender_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_PermissionTemplateGuid_Proxy( 
    _MailItem * This,
    /* [retval][out] */ BSTR *PermissionTemplateGuid);


void __RPC_STUB _MailItem_get_PermissionTemplateGuid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_PermissionTemplateGuid_Proxy( 
    _MailItem * This,
    /* [in] */ BSTR PermissionTemplateGuid);


void __RPC_STUB _MailItem_put_PermissionTemplateGuid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_RTFBody_Proxy( 
    _MailItem * This,
    /* [retval][out] */ VARIANT *RTFBody);


void __RPC_STUB _MailItem_get_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _MailItem_put_RTFBody_Proxy( 
    _MailItem * This,
    /* [in] */ VARIANT RTFBody);


void __RPC_STUB _MailItem_put_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_RetentionPolicyName_Proxy( 
    _MailItem * This,
    /* [retval][out] */ BSTR *RetentionPolicyName);


void __RPC_STUB _MailItem_get_RetentionPolicyName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _MailItem_get_RetentionExpirationDate_Proxy( 
    _MailItem * This,
    /* [retval][out] */ DATE *RetentionExpirationDate);


void __RPC_STUB _MailItem_get_RetentionExpirationDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* ___MailItem_INTERFACE_DEFINED__ */


#ifndef __Links_INTERFACE_DEFINED__
#define __Links_INTERFACE_DEFINED__

/* interface Links */
/* [object][custom][oleautomation][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_Links;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006308A-0000-0000-C000-000000000046")
    Links : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Link **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ Link **Link) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct LinksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Links * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Links * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Links * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Links * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Links * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Links * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Links * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Links * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Links * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Links * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Links * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Links * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Links * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Link **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Links * This,
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ Link **Link);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            Links * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } LinksVtbl;

    interface Links
    {
        CONST_VTBL struct LinksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Links_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Links_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Links_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Links_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Links_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Links_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Links_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Links_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Links_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Links_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Links_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Links_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Links_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define Links_Add(This,Item,Link)	\
    ( (This)->lpVtbl -> Add(This,Item,Link) ) 

#define Links_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Links_INTERFACE_DEFINED__ */


#ifndef __Link_INTERFACE_DEFINED__
#define __Link_INTERFACE_DEFINED__

/* interface Link */
/* [object][oleautomation][dual][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_Link;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063089-0000-0000-C000-000000000046")
    Link : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ OlObjectClass *Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct LinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Link * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Link * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Link * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Link * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Link * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Link * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Link * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Link * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Link * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Link * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Link * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Link * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Link * This,
            /* [retval][out] */ OlObjectClass *Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Link * This,
            /* [retval][out] */ IDispatch **Item);
        
        END_INTERFACE
    } LinkVtbl;

    interface Link
    {
        CONST_VTBL struct LinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Link_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Link_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Link_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Link_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Link_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Link_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Link_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Link_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Link_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Link_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Link_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Link_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Link_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define Link_get_Item(This,Item)	\
    ( (This)->lpVtbl -> get_Item(This,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Link_INTERFACE_DEFINED__ */


#ifndef __ItemProperties_INTERFACE_DEFINED__
#define __ItemProperties_INTERFACE_DEFINED__

/* interface ItemProperties */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_ItemProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630A8-0000-0000-C000-000000000046")
    ItemProperties : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ItemProperty **Item) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ IUnknown **ppvObject) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [in] */ OlUserPropertyType Type,
            /* [optional][in] */ VARIANT AddToFolderFields,
            /* [optional][in] */ VARIANT DisplayFormat,
            /* [retval][out] */ ItemProperty **ItemProperty) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ItemPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ItemProperties * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ItemProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ItemProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ItemProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ItemProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ItemProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ItemProperties * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ItemProperties * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            ItemProperties * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            ItemProperties * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ItemProperties * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ItemProperties * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            ItemProperties * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ItemProperty **Item);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            ItemProperties * This,
            /* [retval][out] */ IUnknown **ppvObject);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            ItemProperties * This,
            /* [in] */ BSTR Name,
            /* [in] */ OlUserPropertyType Type,
            /* [optional][in] */ VARIANT AddToFolderFields,
            /* [optional][in] */ VARIANT DisplayFormat,
            /* [retval][out] */ ItemProperty **ItemProperty);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            ItemProperties * This,
            /* [in] */ long Index);
        
        END_INTERFACE
    } ItemPropertiesVtbl;

    interface ItemProperties
    {
        CONST_VTBL struct ItemPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ItemProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ItemProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ItemProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ItemProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ItemProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ItemProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ItemProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ItemProperties_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define ItemProperties_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define ItemProperties_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define ItemProperties_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define ItemProperties_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define ItemProperties_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define ItemProperties__NewEnum(This,ppvObject)	\
    ( (This)->lpVtbl -> _NewEnum(This,ppvObject) ) 

#define ItemProperties_Add(This,Name,Type,AddToFolderFields,DisplayFormat,ItemProperty)	\
    ( (This)->lpVtbl -> Add(This,Name,Type,AddToFolderFields,DisplayFormat,ItemProperty) ) 

#define ItemProperties_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ItemProperties_INTERFACE_DEFINED__ */


#ifndef __ItemProperty_INTERFACE_DEFINED__
#define __ItemProperty_INTERFACE_DEFINED__

/* interface ItemProperty */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_ItemProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630A7-0000-0000-C000-000000000046")
    ItemProperty : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Formula( 
            /* [retval][out] */ BSTR *Formula) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Formula( 
            /* [in] */ BSTR Formula) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ OlUserPropertyType *Type) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ValidationFormula( 
            /* [retval][out] */ BSTR *ValidationFormula) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_ValidationFormula( 
            /* [in] */ BSTR ValidationFormula) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ValidationText( 
            /* [retval][out] */ BSTR *ValidationText) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_ValidationText( 
            /* [in] */ BSTR ValidationText) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsUserProperty( 
            /* [retval][out] */ VARIANT_BOOL *IsUserProperty) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ItemPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ItemProperty * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ItemProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ItemProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ItemProperty * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ItemProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ItemProperty * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ItemProperty * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            ItemProperty * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            ItemProperty * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            ItemProperty * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            ItemProperty * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Formula )( 
            ItemProperty * This,
            /* [retval][out] */ BSTR *Formula);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Formula )( 
            ItemProperty * This,
            /* [in] */ BSTR Formula);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            ItemProperty * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            ItemProperty * This,
            /* [retval][out] */ OlUserPropertyType *Type);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ValidationFormula )( 
            ItemProperty * This,
            /* [retval][out] */ BSTR *ValidationFormula);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ValidationFormula )( 
            ItemProperty * This,
            /* [in] */ BSTR ValidationFormula);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ValidationText )( 
            ItemProperty * This,
            /* [retval][out] */ BSTR *ValidationText);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ValidationText )( 
            ItemProperty * This,
            /* [in] */ BSTR ValidationText);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            ItemProperty * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            ItemProperty * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            ItemProperty * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsUserProperty )( 
            ItemProperty * This,
            /* [retval][out] */ VARIANT_BOOL *IsUserProperty);
        
        END_INTERFACE
    } ItemPropertyVtbl;

    interface ItemProperty
    {
        CONST_VTBL struct ItemPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ItemProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ItemProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ItemProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ItemProperty_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ItemProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ItemProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ItemProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ItemProperty_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define ItemProperty_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define ItemProperty_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define ItemProperty_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define ItemProperty_get_Formula(This,Formula)	\
    ( (This)->lpVtbl -> get_Formula(This,Formula) ) 

#define ItemProperty_put_Formula(This,Formula)	\
    ( (This)->lpVtbl -> put_Formula(This,Formula) ) 

#define ItemProperty_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define ItemProperty_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define ItemProperty_get_ValidationFormula(This,ValidationFormula)	\
    ( (This)->lpVtbl -> get_ValidationFormula(This,ValidationFormula) ) 

#define ItemProperty_put_ValidationFormula(This,ValidationFormula)	\
    ( (This)->lpVtbl -> put_ValidationFormula(This,ValidationFormula) ) 

#define ItemProperty_get_ValidationText(This,ValidationText)	\
    ( (This)->lpVtbl -> get_ValidationText(This,ValidationText) ) 

#define ItemProperty_put_ValidationText(This,ValidationText)	\
    ( (This)->lpVtbl -> put_ValidationText(This,ValidationText) ) 

#define ItemProperty_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define ItemProperty_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define ItemProperty_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define ItemProperty_get_IsUserProperty(This,IsUserProperty)	\
    ( (This)->lpVtbl -> get_IsUserProperty(This,IsUserProperty) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ItemProperty_INTERFACE_DEFINED__ */


#ifndef __Conflicts_INTERFACE_DEFINED__
#define __Conflicts_INTERFACE_DEFINED__

/* interface Conflicts */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Conflicts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630C2-0000-0000-C000-000000000046")
    Conflicts : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Conflict **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFirst( 
            /* [retval][out] */ Conflict **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetLast( 
            /* [retval][out] */ Conflict **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetNext( 
            /* [retval][out] */ Conflict **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetPrevious( 
            /* [retval][out] */ Conflict **Item) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ConflictsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Conflicts * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Conflicts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Conflicts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Conflicts * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Conflicts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Conflicts * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Conflicts * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Conflicts * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Conflicts * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Conflicts * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Conflicts * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Conflicts * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Conflicts * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Conflict **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFirst )( 
            Conflicts * This,
            /* [retval][out] */ Conflict **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetLast )( 
            Conflicts * This,
            /* [retval][out] */ Conflict **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetNext )( 
            Conflicts * This,
            /* [retval][out] */ Conflict **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetPrevious )( 
            Conflicts * This,
            /* [retval][out] */ Conflict **Item);
        
        END_INTERFACE
    } ConflictsVtbl;

    interface Conflicts
    {
        CONST_VTBL struct ConflictsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Conflicts_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Conflicts_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Conflicts_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Conflicts_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Conflicts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Conflicts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Conflicts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Conflicts_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Conflicts_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Conflicts_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Conflicts_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Conflicts_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Conflicts_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define Conflicts_GetFirst(This,Item)	\
    ( (This)->lpVtbl -> GetFirst(This,Item) ) 

#define Conflicts_GetLast(This,Item)	\
    ( (This)->lpVtbl -> GetLast(This,Item) ) 

#define Conflicts_GetNext(This,Item)	\
    ( (This)->lpVtbl -> GetNext(This,Item) ) 

#define Conflicts_GetPrevious(This,Item)	\
    ( (This)->lpVtbl -> GetPrevious(This,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Conflicts_INTERFACE_DEFINED__ */


#ifndef __Conflict_INTERFACE_DEFINED__
#define __Conflict_INTERFACE_DEFINED__

/* interface Conflict */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Conflict;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630C3-0000-0000-C000-000000000046")
    Conflict : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ OlObjectClass *Type) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ConflictVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Conflict * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Conflict * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Conflict * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Conflict * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Conflict * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Conflict * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Conflict * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Conflict * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Conflict * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Conflict * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Conflict * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Conflict * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            Conflict * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            Conflict * This,
            /* [retval][out] */ OlObjectClass *Type);
        
        END_INTERFACE
    } ConflictVtbl;

    interface Conflict
    {
        CONST_VTBL struct ConflictVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Conflict_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Conflict_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Conflict_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Conflict_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Conflict_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Conflict_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Conflict_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Conflict_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Conflict_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Conflict_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Conflict_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Conflict_get_Item(This,Item)	\
    ( (This)->lpVtbl -> get_Item(This,Item) ) 

#define Conflict_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Conflict_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Conflict_INTERFACE_DEFINED__ */


#ifndef __ItemEvents_DISPINTERFACE_DEFINED__
#define __ItemEvents_DISPINTERFACE_DEFINED__

/* dispinterface ItemEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ItemEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006303A-0000-0000-C000-000000000046")
    ItemEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ItemEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ItemEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ItemEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ItemEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ItemEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ItemEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ItemEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ItemEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ItemEventsVtbl;

    interface ItemEvents
    {
        CONST_VTBL struct ItemEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ItemEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ItemEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ItemEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ItemEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ItemEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ItemEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ItemEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ItemEvents_DISPINTERFACE_DEFINED__ */


#ifndef __ItemEvents_10_DISPINTERFACE_DEFINED__
#define __ItemEvents_10_DISPINTERFACE_DEFINED__

/* dispinterface ItemEvents_10 */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ItemEvents_10;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006302B-0000-0000-C000-000000000046")
    ItemEvents_10 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ItemEvents_10Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ItemEvents_10 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ItemEvents_10 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ItemEvents_10 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ItemEvents_10 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ItemEvents_10 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ItemEvents_10 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ItemEvents_10 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ItemEvents_10Vtbl;

    interface ItemEvents_10
    {
        CONST_VTBL struct ItemEvents_10Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ItemEvents_10_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ItemEvents_10_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ItemEvents_10_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ItemEvents_10_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ItemEvents_10_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ItemEvents_10_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ItemEvents_10_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ItemEvents_10_DISPINTERFACE_DEFINED__ */


#ifndef ___Conversation_INTERFACE_DEFINED__
#define ___Conversation_INTERFACE_DEFINED__

/* interface _Conversation */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Conversation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063101-0000-0000-C000-000000000046")
    _Conversation : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetTable( 
            /* [retval][out] */ _Table **Table) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetChildren( 
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ _SimpleItems **SimpleItems) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetParent( 
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ IDispatch **itemParent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRootItems( 
            /* [retval][out] */ _SimpleItems **SimpleItems) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAlwaysAssignCategories( 
            /* [in] */ _Store *Store,
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAlwaysDelete( 
            /* [in] */ _Store *Store,
            /* [retval][out] */ OlAlwaysDeleteConversation *AlwaysDelete) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAlwaysMoveToFolder( 
            /* [in] */ _Store *Store,
            /* [retval][out] */ MAPIFolder **MoveToFolder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkAsRead( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkAsUnread( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetAlwaysAssignCategories( 
            /* [in] */ BSTR Categories,
            /* [in] */ _Store *Store) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetAlwaysDelete( 
            /* [in] */ OlAlwaysDeleteConversation AlwaysDelete,
            /* [in] */ _Store *Store) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetAlwaysMoveToFolder( 
            /* [in] */ MAPIFolder *MoveToFolder,
            /* [in] */ _Store *Store) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearAlwaysAssignCategories( 
            /* [in] */ _Store *Store) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE StopAlwaysDelete( 
            /* [in] */ _Store *Store) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE StopAlwaysMoveToFolder( 
            /* [in] */ _Store *Store) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ConversationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Conversation * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Conversation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Conversation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Conversation * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Conversation * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Conversation * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Conversation * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Conversation * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Conversation * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Conversation * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Conversation * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetTable )( 
            _Conversation * This,
            /* [retval][out] */ _Table **Table);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetChildren )( 
            _Conversation * This,
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ _SimpleItems **SimpleItems);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            _Conversation * This,
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ IDispatch **itemParent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRootItems )( 
            _Conversation * This,
            /* [retval][out] */ _SimpleItems **SimpleItems);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAlwaysAssignCategories )( 
            _Conversation * This,
            /* [in] */ _Store *Store,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAlwaysDelete )( 
            _Conversation * This,
            /* [in] */ _Store *Store,
            /* [retval][out] */ OlAlwaysDeleteConversation *AlwaysDelete);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAlwaysMoveToFolder )( 
            _Conversation * This,
            /* [in] */ _Store *Store,
            /* [retval][out] */ MAPIFolder **MoveToFolder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkAsRead )( 
            _Conversation * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkAsUnread )( 
            _Conversation * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetAlwaysAssignCategories )( 
            _Conversation * This,
            /* [in] */ BSTR Categories,
            /* [in] */ _Store *Store);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetAlwaysDelete )( 
            _Conversation * This,
            /* [in] */ OlAlwaysDeleteConversation AlwaysDelete,
            /* [in] */ _Store *Store);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetAlwaysMoveToFolder )( 
            _Conversation * This,
            /* [in] */ MAPIFolder *MoveToFolder,
            /* [in] */ _Store *Store);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearAlwaysAssignCategories )( 
            _Conversation * This,
            /* [in] */ _Store *Store);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopAlwaysDelete )( 
            _Conversation * This,
            /* [in] */ _Store *Store);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopAlwaysMoveToFolder )( 
            _Conversation * This,
            /* [in] */ _Store *Store);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _Conversation * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        END_INTERFACE
    } _ConversationVtbl;

    interface _Conversation
    {
        CONST_VTBL struct _ConversationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Conversation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Conversation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Conversation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Conversation_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Conversation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Conversation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Conversation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Conversation_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Conversation_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Conversation_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Conversation_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Conversation_GetTable(This,Table)	\
    ( (This)->lpVtbl -> GetTable(This,Table) ) 

#define _Conversation_GetChildren(This,Item,SimpleItems)	\
    ( (This)->lpVtbl -> GetChildren(This,Item,SimpleItems) ) 

#define _Conversation_GetParent(This,Item,itemParent)	\
    ( (This)->lpVtbl -> GetParent(This,Item,itemParent) ) 

#define _Conversation_GetRootItems(This,SimpleItems)	\
    ( (This)->lpVtbl -> GetRootItems(This,SimpleItems) ) 

#define _Conversation_GetAlwaysAssignCategories(This,Store,Categories)	\
    ( (This)->lpVtbl -> GetAlwaysAssignCategories(This,Store,Categories) ) 

#define _Conversation_GetAlwaysDelete(This,Store,AlwaysDelete)	\
    ( (This)->lpVtbl -> GetAlwaysDelete(This,Store,AlwaysDelete) ) 

#define _Conversation_GetAlwaysMoveToFolder(This,Store,MoveToFolder)	\
    ( (This)->lpVtbl -> GetAlwaysMoveToFolder(This,Store,MoveToFolder) ) 

#define _Conversation_MarkAsRead(This)	\
    ( (This)->lpVtbl -> MarkAsRead(This) ) 

#define _Conversation_MarkAsUnread(This)	\
    ( (This)->lpVtbl -> MarkAsUnread(This) ) 

#define _Conversation_SetAlwaysAssignCategories(This,Categories,Store)	\
    ( (This)->lpVtbl -> SetAlwaysAssignCategories(This,Categories,Store) ) 

#define _Conversation_SetAlwaysDelete(This,AlwaysDelete,Store)	\
    ( (This)->lpVtbl -> SetAlwaysDelete(This,AlwaysDelete,Store) ) 

#define _Conversation_SetAlwaysMoveToFolder(This,MoveToFolder,Store)	\
    ( (This)->lpVtbl -> SetAlwaysMoveToFolder(This,MoveToFolder,Store) ) 

#define _Conversation_ClearAlwaysAssignCategories(This,Store)	\
    ( (This)->lpVtbl -> ClearAlwaysAssignCategories(This,Store) ) 

#define _Conversation_StopAlwaysDelete(This,Store)	\
    ( (This)->lpVtbl -> StopAlwaysDelete(This,Store) ) 

#define _Conversation_StopAlwaysMoveToFolder(This,Store)	\
    ( (This)->lpVtbl -> StopAlwaysMoveToFolder(This,Store) ) 

#define _Conversation_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Conversation_INTERFACE_DEFINED__ */


#ifndef ___SimpleItems_INTERFACE_DEFINED__
#define ___SimpleItems_INTERFACE_DEFINED__

/* interface _SimpleItems */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__SimpleItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063102-0000-0000-C000-000000000046")
    _SimpleItems : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _SimpleItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SimpleItems * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SimpleItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SimpleItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SimpleItems * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SimpleItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SimpleItems * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SimpleItems * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _SimpleItems * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _SimpleItems * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _SimpleItems * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _SimpleItems * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _SimpleItems * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _SimpleItems * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item);
        
        END_INTERFACE
    } _SimpleItemsVtbl;

    interface _SimpleItems
    {
        CONST_VTBL struct _SimpleItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SimpleItems_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SimpleItems_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SimpleItems_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SimpleItems_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SimpleItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SimpleItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SimpleItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _SimpleItems_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _SimpleItems_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _SimpleItems_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _SimpleItems_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _SimpleItems_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _SimpleItems_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SimpleItems_INTERFACE_DEFINED__ */


#ifndef ___UserDefinedProperties_INTERFACE_DEFINED__
#define ___UserDefinedProperties_INTERFACE_DEFINED__

/* interface _UserDefinedProperties */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__UserDefinedProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063047-0000-0000-C000-000000000046")
    _UserDefinedProperties : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _UserDefinedProperty **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [in] */ OlUserPropertyType Type,
            /* [optional][in] */ VARIANT DisplayFormat,
            /* [optional][in] */ VARIANT Formula,
            /* [retval][out] */ _UserDefinedProperty **UserDefinedProperty) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ _UserDefinedProperty **UserDefinedProperty) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _UserDefinedPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UserDefinedProperties * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UserDefinedProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UserDefinedProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UserDefinedProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UserDefinedProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UserDefinedProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UserDefinedProperties * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _UserDefinedProperties * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _UserDefinedProperties * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _UserDefinedProperties * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _UserDefinedProperties * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _UserDefinedProperties * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _UserDefinedProperties * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _UserDefinedProperty **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _UserDefinedProperties * This,
            /* [in] */ BSTR Name,
            /* [in] */ OlUserPropertyType Type,
            /* [optional][in] */ VARIANT DisplayFormat,
            /* [optional][in] */ VARIANT Formula,
            /* [retval][out] */ _UserDefinedProperty **UserDefinedProperty);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            _UserDefinedProperties * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ _UserDefinedProperty **UserDefinedProperty);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _UserDefinedProperties * This,
            /* [in] */ long Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            _UserDefinedProperties * This);
        
        END_INTERFACE
    } _UserDefinedPropertiesVtbl;

    interface _UserDefinedProperties
    {
        CONST_VTBL struct _UserDefinedPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UserDefinedProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UserDefinedProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UserDefinedProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UserDefinedProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UserDefinedProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UserDefinedProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UserDefinedProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _UserDefinedProperties_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _UserDefinedProperties_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _UserDefinedProperties_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _UserDefinedProperties_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _UserDefinedProperties_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _UserDefinedProperties_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _UserDefinedProperties_Add(This,Name,Type,DisplayFormat,Formula,UserDefinedProperty)	\
    ( (This)->lpVtbl -> Add(This,Name,Type,DisplayFormat,Formula,UserDefinedProperty) ) 

#define _UserDefinedProperties_Find(This,Name,UserDefinedProperty)	\
    ( (This)->lpVtbl -> Find(This,Name,UserDefinedProperty) ) 

#define _UserDefinedProperties_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define _UserDefinedProperties_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UserDefinedProperties_INTERFACE_DEFINED__ */


#ifndef ___UserDefinedProperty_INTERFACE_DEFINED__
#define ___UserDefinedProperty_INTERFACE_DEFINED__

/* interface _UserDefinedProperty */
/* [object][oleautomation][dual][uuid] */ 


EXTERN_C const IID IID__UserDefinedProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006305C-0000-0000-C000-000000000046")
    _UserDefinedProperty : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Formula( 
            /* [retval][out] */ BSTR *Formula) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ OlUserPropertyType *Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayFormat( 
            /* [retval][out] */ long *DisplayFormat) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _UserDefinedPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UserDefinedProperty * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UserDefinedProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UserDefinedProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UserDefinedProperty * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UserDefinedProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UserDefinedProperty * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UserDefinedProperty * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _UserDefinedProperty * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _UserDefinedProperty * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _UserDefinedProperty * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _UserDefinedProperty * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Formula )( 
            _UserDefinedProperty * This,
            /* [retval][out] */ BSTR *Formula);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _UserDefinedProperty * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _UserDefinedProperty * This,
            /* [retval][out] */ OlUserPropertyType *Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayFormat )( 
            _UserDefinedProperty * This,
            /* [retval][out] */ long *DisplayFormat);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _UserDefinedProperty * This);
        
        END_INTERFACE
    } _UserDefinedPropertyVtbl;

    interface _UserDefinedProperty
    {
        CONST_VTBL struct _UserDefinedPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UserDefinedProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UserDefinedProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UserDefinedProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UserDefinedProperty_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UserDefinedProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UserDefinedProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UserDefinedProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _UserDefinedProperty_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _UserDefinedProperty_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _UserDefinedProperty_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _UserDefinedProperty_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _UserDefinedProperty_get_Formula(This,Formula)	\
    ( (This)->lpVtbl -> get_Formula(This,Formula) ) 

#define _UserDefinedProperty_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _UserDefinedProperty_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define _UserDefinedProperty_get_DisplayFormat(This,DisplayFormat)	\
    ( (This)->lpVtbl -> get_DisplayFormat(This,DisplayFormat) ) 

#define _UserDefinedProperty_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UserDefinedProperty_INTERFACE_DEFINED__ */


#ifndef ___ExchangeUser_INTERFACE_DEFINED__
#define ___ExchangeUser_INTERFACE_DEFINED__

/* interface _ExchangeUser */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ExchangeUser;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630C9-0000-0000-C000-000000000046")
    _ExchangeUser : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Address( 
            /* [retval][out] */ BSTR *Address) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Address( 
            /* [in] */ BSTR Address) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayType( 
            /* [retval][out] */ OlDisplayType *DisplayType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ BSTR *ID) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Manager( 
            /* [retval][out] */ AddressEntry **Manager) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_MAPIOBJECT( 
            /* [in] */ IUnknown *MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ AddressEntries **Members) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR *Type) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ BSTR Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Details( 
            /* [optional][in] */ VARIANT HWnd) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFreeBusy( 
            /* [in] */ DATE Start,
            /* [in] */ long MinPerChar,
            /* [optional][in] */ VARIANT CompleteFormat,
            /* [retval][out] */ BSTR *FreeBusyInfo) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Update( 
            /* [optional][in] */ VARIANT MakePermanent,
            /* [optional][in] */ VARIANT Refresh) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE UpdateFreeBusy( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetContact( 
            /* [retval][out] */ _ContactItem **ret) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExchangeUser( 
            /* [retval][out] */ _ExchangeUser **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressEntryUserType( 
            /* [retval][out] */ OlAddressEntryUserType *AddressEntryUserType) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExchangeDistributionList( 
            /* [retval][out] */ _ExchangeDistributionList **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetDirectReports( 
            /* [retval][out] */ AddressEntries **ret) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetMemberOfList( 
            /* [retval][out] */ AddressEntries **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Alias( 
            /* [retval][out] */ BSTR *Alias) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AssistantName( 
            /* [retval][out] */ BSTR *AssistantName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AssistantName( 
            /* [in] */ BSTR AssistantName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusinessTelephoneNumber( 
            /* [retval][out] */ BSTR *BusinessTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusinessTelephoneNumber( 
            /* [in] */ BSTR BusinessTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_City( 
            /* [retval][out] */ BSTR *City) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_City( 
            /* [in] */ BSTR City) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comments( 
            /* [retval][out] */ BSTR *Comments) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comments( 
            /* [in] */ BSTR Comments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CompanyName( 
            /* [retval][out] */ BSTR *CompanyName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CompanyName( 
            /* [in] */ BSTR CompanyName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Department( 
            /* [retval][out] */ BSTR *Department) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Department( 
            /* [in] */ BSTR Department) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FirstName( 
            /* [retval][out] */ BSTR *FirstName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FirstName( 
            /* [in] */ BSTR FirstName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_JobTitle( 
            /* [retval][out] */ BSTR *JobTitle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_JobTitle( 
            /* [in] */ BSTR JobTitle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastName( 
            /* [retval][out] */ BSTR *LastName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LastName( 
            /* [in] */ BSTR LastName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MobileTelephoneNumber( 
            /* [retval][out] */ BSTR *MobileTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MobileTelephoneNumber( 
            /* [in] */ BSTR MobileTelephoneNumber) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OfficeLocation( 
            /* [retval][out] */ BSTR *OfficeLocation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OfficeLocation( 
            /* [in] */ BSTR OfficeLocation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PostalCode( 
            /* [retval][out] */ BSTR *PostalCode) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PostalCode( 
            /* [in] */ BSTR PostalCode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrimarySmtpAddress( 
            /* [retval][out] */ BSTR *PrimarySmtpAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StateOrProvince( 
            /* [retval][out] */ BSTR *StateOrProvince) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StateOrProvince( 
            /* [in] */ BSTR StateOrProvince) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StreetAddress( 
            /* [retval][out] */ BSTR *StreetAddress) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StreetAddress( 
            /* [in] */ BSTR StreetAddress) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExchangeUserManager( 
            /* [retval][out] */ _ExchangeUser **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_YomiCompanyName( 
            /* [retval][out] */ BSTR *YomiCompanyName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_YomiCompanyName( 
            /* [in] */ BSTR YomiCompanyName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_YomiFirstName( 
            /* [retval][out] */ BSTR *YomiFirstName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_YomiFirstName( 
            /* [in] */ BSTR YomiFirstName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_YomiLastName( 
            /* [retval][out] */ BSTR *YomiLastName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_YomiLastName( 
            /* [in] */ BSTR YomiLastName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_YomiDisplayName( 
            /* [retval][out] */ BSTR *YomiDisplayName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_YomiDisplayName( 
            /* [in] */ BSTR YomiDisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_YomiDepartment( 
            /* [retval][out] */ BSTR *YomiDepartment) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_YomiDepartment( 
            /* [in] */ BSTR YomiDepartment) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetPicture( 
            /* [retval][out] */ /* external definition not present */ void **ppPictureDisp) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ExchangeUserVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ExchangeUser * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ExchangeUser * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ExchangeUser * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ExchangeUser * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ExchangeUser * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ExchangeUser * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ExchangeUser * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ExchangeUser * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ExchangeUser * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ExchangeUser * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ExchangeUser * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Address )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *Address);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Address )( 
            _ExchangeUser * This,
            /* [in] */ BSTR Address);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayType )( 
            _ExchangeUser * This,
            /* [retval][out] */ OlDisplayType *DisplayType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *ID);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Manager )( 
            _ExchangeUser * This,
            /* [retval][out] */ AddressEntry **Manager);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _ExchangeUser * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MAPIOBJECT )( 
            _ExchangeUser * This,
            /* [in] */ IUnknown *MAPIOBJECT);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            _ExchangeUser * This,
            /* [retval][out] */ AddressEntries **Members);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _ExchangeUser * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *Type);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            _ExchangeUser * This,
            /* [in] */ BSTR Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _ExchangeUser * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Details )( 
            _ExchangeUser * This,
            /* [optional][in] */ VARIANT HWnd);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFreeBusy )( 
            _ExchangeUser * This,
            /* [in] */ DATE Start,
            /* [in] */ long MinPerChar,
            /* [optional][in] */ VARIANT CompleteFormat,
            /* [retval][out] */ BSTR *FreeBusyInfo);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            _ExchangeUser * This,
            /* [optional][in] */ VARIANT MakePermanent,
            /* [optional][in] */ VARIANT Refresh);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateFreeBusy )( 
            _ExchangeUser * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetContact )( 
            _ExchangeUser * This,
            /* [retval][out] */ _ContactItem **ret);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExchangeUser )( 
            _ExchangeUser * This,
            /* [retval][out] */ _ExchangeUser **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressEntryUserType )( 
            _ExchangeUser * This,
            /* [retval][out] */ OlAddressEntryUserType *AddressEntryUserType);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExchangeDistributionList )( 
            _ExchangeUser * This,
            /* [retval][out] */ _ExchangeDistributionList **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _ExchangeUser * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetDirectReports )( 
            _ExchangeUser * This,
            /* [retval][out] */ AddressEntries **ret);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetMemberOfList )( 
            _ExchangeUser * This,
            /* [retval][out] */ AddressEntries **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alias )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *Alias);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AssistantName )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *AssistantName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AssistantName )( 
            _ExchangeUser * This,
            /* [in] */ BSTR AssistantName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessTelephoneNumber )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *BusinessTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessTelephoneNumber )( 
            _ExchangeUser * This,
            /* [in] */ BSTR BusinessTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_City )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *City);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_City )( 
            _ExchangeUser * This,
            /* [in] */ BSTR City);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comments )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *Comments);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comments )( 
            _ExchangeUser * This,
            /* [in] */ BSTR Comments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CompanyName )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *CompanyName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CompanyName )( 
            _ExchangeUser * This,
            /* [in] */ BSTR CompanyName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Department )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *Department);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Department )( 
            _ExchangeUser * This,
            /* [in] */ BSTR Department);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FirstName )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *FirstName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FirstName )( 
            _ExchangeUser * This,
            /* [in] */ BSTR FirstName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_JobTitle )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *JobTitle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_JobTitle )( 
            _ExchangeUser * This,
            /* [in] */ BSTR JobTitle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastName )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *LastName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastName )( 
            _ExchangeUser * This,
            /* [in] */ BSTR LastName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MobileTelephoneNumber )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *MobileTelephoneNumber);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MobileTelephoneNumber )( 
            _ExchangeUser * This,
            /* [in] */ BSTR MobileTelephoneNumber);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfficeLocation )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *OfficeLocation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfficeLocation )( 
            _ExchangeUser * This,
            /* [in] */ BSTR OfficeLocation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PostalCode )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *PostalCode);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PostalCode )( 
            _ExchangeUser * This,
            /* [in] */ BSTR PostalCode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrimarySmtpAddress )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *PrimarySmtpAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StateOrProvince )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *StateOrProvince);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StateOrProvince )( 
            _ExchangeUser * This,
            /* [in] */ BSTR StateOrProvince);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StreetAddress )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *StreetAddress);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StreetAddress )( 
            _ExchangeUser * This,
            /* [in] */ BSTR StreetAddress);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExchangeUserManager )( 
            _ExchangeUser * This,
            /* [retval][out] */ _ExchangeUser **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YomiCompanyName )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *YomiCompanyName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YomiCompanyName )( 
            _ExchangeUser * This,
            /* [in] */ BSTR YomiCompanyName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YomiFirstName )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *YomiFirstName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YomiFirstName )( 
            _ExchangeUser * This,
            /* [in] */ BSTR YomiFirstName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YomiLastName )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *YomiLastName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YomiLastName )( 
            _ExchangeUser * This,
            /* [in] */ BSTR YomiLastName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YomiDisplayName )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *YomiDisplayName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YomiDisplayName )( 
            _ExchangeUser * This,
            /* [in] */ BSTR YomiDisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_YomiDepartment )( 
            _ExchangeUser * This,
            /* [retval][out] */ BSTR *YomiDepartment);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_YomiDepartment )( 
            _ExchangeUser * This,
            /* [in] */ BSTR YomiDepartment);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetPicture )( 
            _ExchangeUser * This,
            /* [retval][out] */ /* external definition not present */ void **ppPictureDisp);
        
        END_INTERFACE
    } _ExchangeUserVtbl;

    interface _ExchangeUser
    {
        CONST_VTBL struct _ExchangeUserVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ExchangeUser_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ExchangeUser_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ExchangeUser_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ExchangeUser_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ExchangeUser_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ExchangeUser_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ExchangeUser_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ExchangeUser_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ExchangeUser_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ExchangeUser_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ExchangeUser_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ExchangeUser_get_Address(This,Address)	\
    ( (This)->lpVtbl -> get_Address(This,Address) ) 

#define _ExchangeUser_put_Address(This,Address)	\
    ( (This)->lpVtbl -> put_Address(This,Address) ) 

#define _ExchangeUser_get_DisplayType(This,DisplayType)	\
    ( (This)->lpVtbl -> get_DisplayType(This,DisplayType) ) 

#define _ExchangeUser_get_ID(This,ID)	\
    ( (This)->lpVtbl -> get_ID(This,ID) ) 

#define _ExchangeUser_get_Manager(This,Manager)	\
    ( (This)->lpVtbl -> get_Manager(This,Manager) ) 

#define _ExchangeUser_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _ExchangeUser_put_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> put_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _ExchangeUser_get_Members(This,Members)	\
    ( (This)->lpVtbl -> get_Members(This,Members) ) 

#define _ExchangeUser_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _ExchangeUser_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _ExchangeUser_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define _ExchangeUser_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define _ExchangeUser_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _ExchangeUser_Details(This,HWnd)	\
    ( (This)->lpVtbl -> Details(This,HWnd) ) 

#define _ExchangeUser_GetFreeBusy(This,Start,MinPerChar,CompleteFormat,FreeBusyInfo)	\
    ( (This)->lpVtbl -> GetFreeBusy(This,Start,MinPerChar,CompleteFormat,FreeBusyInfo) ) 

#define _ExchangeUser_Update(This,MakePermanent,Refresh)	\
    ( (This)->lpVtbl -> Update(This,MakePermanent,Refresh) ) 

#define _ExchangeUser_UpdateFreeBusy(This)	\
    ( (This)->lpVtbl -> UpdateFreeBusy(This) ) 

#define _ExchangeUser_GetContact(This,ret)	\
    ( (This)->lpVtbl -> GetContact(This,ret) ) 

#define _ExchangeUser_GetExchangeUser(This,ret)	\
    ( (This)->lpVtbl -> GetExchangeUser(This,ret) ) 

#define _ExchangeUser_get_AddressEntryUserType(This,AddressEntryUserType)	\
    ( (This)->lpVtbl -> get_AddressEntryUserType(This,AddressEntryUserType) ) 

#define _ExchangeUser_GetExchangeDistributionList(This,ret)	\
    ( (This)->lpVtbl -> GetExchangeDistributionList(This,ret) ) 

#define _ExchangeUser_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _ExchangeUser_GetDirectReports(This,ret)	\
    ( (This)->lpVtbl -> GetDirectReports(This,ret) ) 

#define _ExchangeUser_GetMemberOfList(This,ret)	\
    ( (This)->lpVtbl -> GetMemberOfList(This,ret) ) 

#define _ExchangeUser_get_Alias(This,Alias)	\
    ( (This)->lpVtbl -> get_Alias(This,Alias) ) 

#define _ExchangeUser_get_AssistantName(This,AssistantName)	\
    ( (This)->lpVtbl -> get_AssistantName(This,AssistantName) ) 

#define _ExchangeUser_put_AssistantName(This,AssistantName)	\
    ( (This)->lpVtbl -> put_AssistantName(This,AssistantName) ) 

#define _ExchangeUser_get_BusinessTelephoneNumber(This,BusinessTelephoneNumber)	\
    ( (This)->lpVtbl -> get_BusinessTelephoneNumber(This,BusinessTelephoneNumber) ) 

#define _ExchangeUser_put_BusinessTelephoneNumber(This,BusinessTelephoneNumber)	\
    ( (This)->lpVtbl -> put_BusinessTelephoneNumber(This,BusinessTelephoneNumber) ) 

#define _ExchangeUser_get_City(This,City)	\
    ( (This)->lpVtbl -> get_City(This,City) ) 

#define _ExchangeUser_put_City(This,City)	\
    ( (This)->lpVtbl -> put_City(This,City) ) 

#define _ExchangeUser_get_Comments(This,Comments)	\
    ( (This)->lpVtbl -> get_Comments(This,Comments) ) 

#define _ExchangeUser_put_Comments(This,Comments)	\
    ( (This)->lpVtbl -> put_Comments(This,Comments) ) 

#define _ExchangeUser_get_CompanyName(This,CompanyName)	\
    ( (This)->lpVtbl -> get_CompanyName(This,CompanyName) ) 

#define _ExchangeUser_put_CompanyName(This,CompanyName)	\
    ( (This)->lpVtbl -> put_CompanyName(This,CompanyName) ) 

#define _ExchangeUser_get_Department(This,Department)	\
    ( (This)->lpVtbl -> get_Department(This,Department) ) 

#define _ExchangeUser_put_Department(This,Department)	\
    ( (This)->lpVtbl -> put_Department(This,Department) ) 

#define _ExchangeUser_get_FirstName(This,FirstName)	\
    ( (This)->lpVtbl -> get_FirstName(This,FirstName) ) 

#define _ExchangeUser_put_FirstName(This,FirstName)	\
    ( (This)->lpVtbl -> put_FirstName(This,FirstName) ) 

#define _ExchangeUser_get_JobTitle(This,JobTitle)	\
    ( (This)->lpVtbl -> get_JobTitle(This,JobTitle) ) 

#define _ExchangeUser_put_JobTitle(This,JobTitle)	\
    ( (This)->lpVtbl -> put_JobTitle(This,JobTitle) ) 

#define _ExchangeUser_get_LastName(This,LastName)	\
    ( (This)->lpVtbl -> get_LastName(This,LastName) ) 

#define _ExchangeUser_put_LastName(This,LastName)	\
    ( (This)->lpVtbl -> put_LastName(This,LastName) ) 

#define _ExchangeUser_get_MobileTelephoneNumber(This,MobileTelephoneNumber)	\
    ( (This)->lpVtbl -> get_MobileTelephoneNumber(This,MobileTelephoneNumber) ) 

#define _ExchangeUser_put_MobileTelephoneNumber(This,MobileTelephoneNumber)	\
    ( (This)->lpVtbl -> put_MobileTelephoneNumber(This,MobileTelephoneNumber) ) 

#define _ExchangeUser_get_OfficeLocation(This,OfficeLocation)	\
    ( (This)->lpVtbl -> get_OfficeLocation(This,OfficeLocation) ) 

#define _ExchangeUser_put_OfficeLocation(This,OfficeLocation)	\
    ( (This)->lpVtbl -> put_OfficeLocation(This,OfficeLocation) ) 

#define _ExchangeUser_get_PostalCode(This,PostalCode)	\
    ( (This)->lpVtbl -> get_PostalCode(This,PostalCode) ) 

#define _ExchangeUser_put_PostalCode(This,PostalCode)	\
    ( (This)->lpVtbl -> put_PostalCode(This,PostalCode) ) 

#define _ExchangeUser_get_PrimarySmtpAddress(This,PrimarySmtpAddress)	\
    ( (This)->lpVtbl -> get_PrimarySmtpAddress(This,PrimarySmtpAddress) ) 

#define _ExchangeUser_get_StateOrProvince(This,StateOrProvince)	\
    ( (This)->lpVtbl -> get_StateOrProvince(This,StateOrProvince) ) 

#define _ExchangeUser_put_StateOrProvince(This,StateOrProvince)	\
    ( (This)->lpVtbl -> put_StateOrProvince(This,StateOrProvince) ) 

#define _ExchangeUser_get_StreetAddress(This,StreetAddress)	\
    ( (This)->lpVtbl -> get_StreetAddress(This,StreetAddress) ) 

#define _ExchangeUser_put_StreetAddress(This,StreetAddress)	\
    ( (This)->lpVtbl -> put_StreetAddress(This,StreetAddress) ) 

#define _ExchangeUser_GetExchangeUserManager(This,ret)	\
    ( (This)->lpVtbl -> GetExchangeUserManager(This,ret) ) 

#define _ExchangeUser_get_YomiCompanyName(This,YomiCompanyName)	\
    ( (This)->lpVtbl -> get_YomiCompanyName(This,YomiCompanyName) ) 

#define _ExchangeUser_put_YomiCompanyName(This,YomiCompanyName)	\
    ( (This)->lpVtbl -> put_YomiCompanyName(This,YomiCompanyName) ) 

#define _ExchangeUser_get_YomiFirstName(This,YomiFirstName)	\
    ( (This)->lpVtbl -> get_YomiFirstName(This,YomiFirstName) ) 

#define _ExchangeUser_put_YomiFirstName(This,YomiFirstName)	\
    ( (This)->lpVtbl -> put_YomiFirstName(This,YomiFirstName) ) 

#define _ExchangeUser_get_YomiLastName(This,YomiLastName)	\
    ( (This)->lpVtbl -> get_YomiLastName(This,YomiLastName) ) 

#define _ExchangeUser_put_YomiLastName(This,YomiLastName)	\
    ( (This)->lpVtbl -> put_YomiLastName(This,YomiLastName) ) 

#define _ExchangeUser_get_YomiDisplayName(This,YomiDisplayName)	\
    ( (This)->lpVtbl -> get_YomiDisplayName(This,YomiDisplayName) ) 

#define _ExchangeUser_put_YomiDisplayName(This,YomiDisplayName)	\
    ( (This)->lpVtbl -> put_YomiDisplayName(This,YomiDisplayName) ) 

#define _ExchangeUser_get_YomiDepartment(This,YomiDepartment)	\
    ( (This)->lpVtbl -> get_YomiDepartment(This,YomiDepartment) ) 

#define _ExchangeUser_put_YomiDepartment(This,YomiDepartment)	\
    ( (This)->lpVtbl -> put_YomiDepartment(This,YomiDepartment) ) 

#define _ExchangeUser_GetPicture(This,ppPictureDisp)	\
    ( (This)->lpVtbl -> GetPicture(This,ppPictureDisp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ExchangeUser_INTERFACE_DEFINED__ */


#ifndef ___ExchangeDistributionList_INTERFACE_DEFINED__
#define ___ExchangeDistributionList_INTERFACE_DEFINED__

/* interface _ExchangeDistributionList */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ExchangeDistributionList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630CA-0000-0000-C000-000000000046")
    _ExchangeDistributionList : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Address( 
            /* [retval][out] */ BSTR *Address) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Address( 
            /* [in] */ BSTR Address) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayType( 
            /* [retval][out] */ OlDisplayType *DisplayType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ BSTR *ID) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Manager( 
            /* [retval][out] */ AddressEntry **Manager) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_MAPIOBJECT( 
            /* [in] */ IUnknown *MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ AddressEntries **Members) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR *Type) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ BSTR Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Details( 
            /* [optional][in] */ VARIANT HWnd) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFreeBusy( 
            /* [in] */ DATE Start,
            /* [in] */ long MinPerChar,
            /* [optional][in] */ VARIANT CompleteFormat,
            /* [retval][out] */ BSTR *FreeBusyInfo) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Update( 
            /* [optional][in] */ VARIANT MakePermanent,
            /* [optional][in] */ VARIANT Refresh) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE UpdateFreeBusy( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetContact( 
            /* [retval][out] */ _ContactItem **ret) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExchangeUser( 
            /* [retval][out] */ _ExchangeUser **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressEntryUserType( 
            /* [retval][out] */ OlAddressEntryUserType *AddressEntryUserType) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExchangeDistributionList( 
            /* [retval][out] */ _ExchangeDistributionList **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetMemberOfList( 
            /* [retval][out] */ AddressEntries **ret) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetExchangeDistributionListMembers( 
            /* [retval][out] */ AddressEntries **ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Alias( 
            /* [retval][out] */ BSTR *Alias) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comments( 
            /* [retval][out] */ BSTR *Comments) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comments( 
            /* [in] */ BSTR Comments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrimarySmtpAddress( 
            /* [retval][out] */ BSTR *PrimarySmtpAddress) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetOwners( 
            /* [retval][out] */ AddressEntries **ret) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ExchangeDistributionListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ExchangeDistributionList * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ExchangeDistributionList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ExchangeDistributionList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ExchangeDistributionList * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ExchangeDistributionList * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ExchangeDistributionList * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ExchangeDistributionList * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Address )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ BSTR *Address);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Address )( 
            _ExchangeDistributionList * This,
            /* [in] */ BSTR Address);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayType )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ OlDisplayType *DisplayType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ BSTR *ID);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Manager )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ AddressEntry **Manager);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MAPIOBJECT )( 
            _ExchangeDistributionList * This,
            /* [in] */ IUnknown *MAPIOBJECT);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ AddressEntries **Members);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _ExchangeDistributionList * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ BSTR *Type);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            _ExchangeDistributionList * This,
            /* [in] */ BSTR Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _ExchangeDistributionList * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Details )( 
            _ExchangeDistributionList * This,
            /* [optional][in] */ VARIANT HWnd);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFreeBusy )( 
            _ExchangeDistributionList * This,
            /* [in] */ DATE Start,
            /* [in] */ long MinPerChar,
            /* [optional][in] */ VARIANT CompleteFormat,
            /* [retval][out] */ BSTR *FreeBusyInfo);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            _ExchangeDistributionList * This,
            /* [optional][in] */ VARIANT MakePermanent,
            /* [optional][in] */ VARIANT Refresh);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateFreeBusy )( 
            _ExchangeDistributionList * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetContact )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ _ContactItem **ret);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExchangeUser )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ _ExchangeUser **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressEntryUserType )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ OlAddressEntryUserType *AddressEntryUserType);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExchangeDistributionList )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ _ExchangeDistributionList **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetMemberOfList )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ AddressEntries **ret);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetExchangeDistributionListMembers )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ AddressEntries **ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Alias )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ BSTR *Alias);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comments )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ BSTR *Comments);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comments )( 
            _ExchangeDistributionList * This,
            /* [in] */ BSTR Comments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrimarySmtpAddress )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ BSTR *PrimarySmtpAddress);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetOwners )( 
            _ExchangeDistributionList * This,
            /* [retval][out] */ AddressEntries **ret);
        
        END_INTERFACE
    } _ExchangeDistributionListVtbl;

    interface _ExchangeDistributionList
    {
        CONST_VTBL struct _ExchangeDistributionListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ExchangeDistributionList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ExchangeDistributionList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ExchangeDistributionList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ExchangeDistributionList_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ExchangeDistributionList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ExchangeDistributionList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ExchangeDistributionList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ExchangeDistributionList_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ExchangeDistributionList_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ExchangeDistributionList_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ExchangeDistributionList_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ExchangeDistributionList_get_Address(This,Address)	\
    ( (This)->lpVtbl -> get_Address(This,Address) ) 

#define _ExchangeDistributionList_put_Address(This,Address)	\
    ( (This)->lpVtbl -> put_Address(This,Address) ) 

#define _ExchangeDistributionList_get_DisplayType(This,DisplayType)	\
    ( (This)->lpVtbl -> get_DisplayType(This,DisplayType) ) 

#define _ExchangeDistributionList_get_ID(This,ID)	\
    ( (This)->lpVtbl -> get_ID(This,ID) ) 

#define _ExchangeDistributionList_get_Manager(This,Manager)	\
    ( (This)->lpVtbl -> get_Manager(This,Manager) ) 

#define _ExchangeDistributionList_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _ExchangeDistributionList_put_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> put_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _ExchangeDistributionList_get_Members(This,Members)	\
    ( (This)->lpVtbl -> get_Members(This,Members) ) 

#define _ExchangeDistributionList_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _ExchangeDistributionList_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _ExchangeDistributionList_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define _ExchangeDistributionList_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define _ExchangeDistributionList_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _ExchangeDistributionList_Details(This,HWnd)	\
    ( (This)->lpVtbl -> Details(This,HWnd) ) 

#define _ExchangeDistributionList_GetFreeBusy(This,Start,MinPerChar,CompleteFormat,FreeBusyInfo)	\
    ( (This)->lpVtbl -> GetFreeBusy(This,Start,MinPerChar,CompleteFormat,FreeBusyInfo) ) 

#define _ExchangeDistributionList_Update(This,MakePermanent,Refresh)	\
    ( (This)->lpVtbl -> Update(This,MakePermanent,Refresh) ) 

#define _ExchangeDistributionList_UpdateFreeBusy(This)	\
    ( (This)->lpVtbl -> UpdateFreeBusy(This) ) 

#define _ExchangeDistributionList_GetContact(This,ret)	\
    ( (This)->lpVtbl -> GetContact(This,ret) ) 

#define _ExchangeDistributionList_GetExchangeUser(This,ret)	\
    ( (This)->lpVtbl -> GetExchangeUser(This,ret) ) 

#define _ExchangeDistributionList_get_AddressEntryUserType(This,AddressEntryUserType)	\
    ( (This)->lpVtbl -> get_AddressEntryUserType(This,AddressEntryUserType) ) 

#define _ExchangeDistributionList_GetExchangeDistributionList(This,ret)	\
    ( (This)->lpVtbl -> GetExchangeDistributionList(This,ret) ) 

#define _ExchangeDistributionList_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _ExchangeDistributionList_GetMemberOfList(This,ret)	\
    ( (This)->lpVtbl -> GetMemberOfList(This,ret) ) 

#define _ExchangeDistributionList_GetExchangeDistributionListMembers(This,ret)	\
    ( (This)->lpVtbl -> GetExchangeDistributionListMembers(This,ret) ) 

#define _ExchangeDistributionList_get_Alias(This,Alias)	\
    ( (This)->lpVtbl -> get_Alias(This,Alias) ) 

#define _ExchangeDistributionList_get_Comments(This,Comments)	\
    ( (This)->lpVtbl -> get_Comments(This,Comments) ) 

#define _ExchangeDistributionList_put_Comments(This,Comments)	\
    ( (This)->lpVtbl -> put_Comments(This,Comments) ) 

#define _ExchangeDistributionList_get_PrimarySmtpAddress(This,PrimarySmtpAddress)	\
    ( (This)->lpVtbl -> get_PrimarySmtpAddress(This,PrimarySmtpAddress) ) 

#define _ExchangeDistributionList_GetOwners(This,ret)	\
    ( (This)->lpVtbl -> GetOwners(This,ret) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ExchangeDistributionList_INTERFACE_DEFINED__ */


#ifndef __AddressLists_INTERFACE_DEFINED__
#define __AddressLists_INTERFACE_DEFINED__

/* interface AddressLists */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_AddressLists;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063048-0000-0000-C000-000000000046")
    AddressLists : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ AddressList **Item) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct AddressListsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AddressLists * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AddressLists * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AddressLists * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AddressLists * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AddressLists * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AddressLists * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AddressLists * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            AddressLists * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            AddressLists * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            AddressLists * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            AddressLists * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            AddressLists * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            AddressLists * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ AddressList **Item);
        
        END_INTERFACE
    } AddressListsVtbl;

    interface AddressLists
    {
        CONST_VTBL struct AddressListsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AddressLists_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AddressLists_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AddressLists_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AddressLists_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AddressLists_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AddressLists_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AddressLists_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define AddressLists_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define AddressLists_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define AddressLists_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define AddressLists_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define AddressLists_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define AddressLists_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __AddressLists_INTERFACE_DEFINED__ */


#ifndef __SyncObjects_INTERFACE_DEFINED__
#define __SyncObjects_INTERFACE_DEFINED__

/* interface SyncObjects */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_SyncObjects;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063086-0000-0000-C000-000000000046")
    SyncObjects : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _SyncObject **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AppFolders( 
            /* [retval][out] */ _SyncObject **AppFolders) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct SyncObjectsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SyncObjects * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SyncObjects * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SyncObjects * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SyncObjects * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SyncObjects * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SyncObjects * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SyncObjects * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            SyncObjects * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            SyncObjects * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            SyncObjects * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            SyncObjects * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            SyncObjects * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            SyncObjects * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _SyncObject **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AppFolders )( 
            SyncObjects * This,
            /* [retval][out] */ _SyncObject **AppFolders);
        
        END_INTERFACE
    } SyncObjectsVtbl;

    interface SyncObjects
    {
        CONST_VTBL struct SyncObjectsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SyncObjects_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SyncObjects_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SyncObjects_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SyncObjects_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SyncObjects_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SyncObjects_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SyncObjects_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SyncObjects_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define SyncObjects_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define SyncObjects_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define SyncObjects_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define SyncObjects_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define SyncObjects_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define SyncObjects_get_AppFolders(This,AppFolders)	\
    ( (This)->lpVtbl -> get_AppFolders(This,AppFolders) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SyncObjects_INTERFACE_DEFINED__ */


#ifndef ___SyncObject_INTERFACE_DEFINED__
#define ___SyncObject_INTERFACE_DEFINED__

/* interface _SyncObject */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__SyncObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063083-0000-0000-C000-000000000046")
    _SyncObject : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Start( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _SyncObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SyncObject * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SyncObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SyncObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SyncObject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SyncObject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SyncObject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SyncObject * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _SyncObject * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _SyncObject * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _SyncObject * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _SyncObject * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _SyncObject * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            _SyncObject * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            _SyncObject * This);
        
        END_INTERFACE
    } _SyncObjectVtbl;

    interface _SyncObject
    {
        CONST_VTBL struct _SyncObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SyncObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SyncObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SyncObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SyncObject_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SyncObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SyncObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SyncObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _SyncObject_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _SyncObject_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _SyncObject_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _SyncObject_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _SyncObject_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _SyncObject_Start(This)	\
    ( (This)->lpVtbl -> Start(This) ) 

#define _SyncObject_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SyncObject_INTERFACE_DEFINED__ */


#ifndef __SyncObjectEvents_DISPINTERFACE_DEFINED__
#define __SyncObjectEvents_DISPINTERFACE_DEFINED__

/* dispinterface SyncObjectEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_SyncObjectEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00063085-0000-0000-C000-000000000046")
    SyncObjectEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct SyncObjectEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            SyncObjectEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            SyncObjectEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            SyncObjectEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            SyncObjectEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            SyncObjectEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            SyncObjectEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SyncObjectEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } SyncObjectEventsVtbl;

    interface SyncObjectEvents
    {
        CONST_VTBL struct SyncObjectEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SyncObjectEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SyncObjectEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SyncObjectEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SyncObjectEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SyncObjectEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SyncObjectEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SyncObjectEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __SyncObjectEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___Accounts_INTERFACE_DEFINED__
#define ___Accounts_INTERFACE_DEFINED__

/* interface _Accounts */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Accounts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630C4-0000-0000-C000-000000000046")
    _Accounts : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Account **Item) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AccountsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Accounts * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Accounts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Accounts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Accounts * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Accounts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Accounts * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Accounts * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Accounts * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Accounts * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Accounts * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Accounts * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Accounts * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Accounts * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Account **Item);
        
        END_INTERFACE
    } _AccountsVtbl;

    interface _Accounts
    {
        CONST_VTBL struct _AccountsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Accounts_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Accounts_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Accounts_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Accounts_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Accounts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Accounts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Accounts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Accounts_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Accounts_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Accounts_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Accounts_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Accounts_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Accounts_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Accounts_INTERFACE_DEFINED__ */


#ifndef __AccountsEvents_DISPINTERFACE_DEFINED__
#define __AccountsEvents_DISPINTERFACE_DEFINED__

/* dispinterface AccountsEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_AccountsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00063105-0000-0000-C000-000000000046")
    AccountsEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct AccountsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AccountsEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AccountsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AccountsEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AccountsEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AccountsEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AccountsEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AccountsEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } AccountsEventsVtbl;

    interface AccountsEvents
    {
        CONST_VTBL struct AccountsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AccountsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AccountsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AccountsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AccountsEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AccountsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AccountsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AccountsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __AccountsEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___Stores_INTERFACE_DEFINED__
#define ___Stores_INTERFACE_DEFINED__

/* interface _Stores */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Stores;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630C6-0000-0000-C000-000000000046")
    _Stores : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Store **Item) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _StoresVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Stores * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Stores * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Stores * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Stores * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Stores * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Stores * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Stores * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Stores * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Stores * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Stores * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Stores * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Stores * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Stores * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Store **Item);
        
        END_INTERFACE
    } _StoresVtbl;

    interface _Stores
    {
        CONST_VTBL struct _StoresVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Stores_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Stores_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Stores_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Stores_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Stores_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Stores_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Stores_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Stores_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Stores_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Stores_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Stores_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Stores_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Stores_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Stores_INTERFACE_DEFINED__ */


#ifndef __StoresEvents_12_DISPINTERFACE_DEFINED__
#define __StoresEvents_12_DISPINTERFACE_DEFINED__

/* dispinterface StoresEvents_12 */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_StoresEvents_12;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000630F8-0000-0000-C000-000000000046")
    StoresEvents_12 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct StoresEvents_12Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            StoresEvents_12 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            StoresEvents_12 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            StoresEvents_12 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            StoresEvents_12 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            StoresEvents_12 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            StoresEvents_12 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            StoresEvents_12 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } StoresEvents_12Vtbl;

    interface StoresEvents_12
    {
        CONST_VTBL struct StoresEvents_12Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define StoresEvents_12_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define StoresEvents_12_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define StoresEvents_12_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define StoresEvents_12_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define StoresEvents_12_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define StoresEvents_12_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define StoresEvents_12_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __StoresEvents_12_DISPINTERFACE_DEFINED__ */


#ifndef ___SelectNamesDialog_INTERFACE_DEFINED__
#define ___SelectNamesDialog_INTERFACE_DEFINED__

/* interface _SelectNamesDialog */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__SelectNamesDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630C8-0000-0000-C000-000000000046")
    _SelectNamesDialog : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *Caption) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [retval][out] */ VARIANT_BOOL *ret) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Recipients( 
            /* [in] */ Recipients *Recipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BccLabel( 
            /* [retval][out] */ BSTR *BccLabel) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BccLabel( 
            /* [in] */ BSTR BccLabel) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CcLabel( 
            /* [retval][out] */ BSTR *CcLabel) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CcLabel( 
            /* [in] */ BSTR CcLabel) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToLabel( 
            /* [retval][out] */ BSTR *ToLabel) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToLabel( 
            /* [in] */ BSTR ToLabel) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AllowMultipleSelection( 
            /* [retval][out] */ VARIANT_BOOL *AllowMultipleSelection) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AllowMultipleSelection( 
            /* [in] */ VARIANT_BOOL AllowMultipleSelection) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceResolution( 
            /* [retval][out] */ VARIANT_BOOL *ForceResolution) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceResolution( 
            /* [in] */ VARIANT_BOOL ForceResolution) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowOnlyInitialAddressList( 
            /* [retval][out] */ VARIANT_BOOL *ShowOnlyInitialAddressList) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowOnlyInitialAddressList( 
            /* [in] */ VARIANT_BOOL ShowOnlyInitialAddressList) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfRecipientSelectors( 
            /* [retval][out] */ OlRecipientSelectors *NumberOfRecipientSelectors) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NumberOfRecipientSelectors( 
            /* [in] */ OlRecipientSelectors NumberOfRecipientSelectors) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InitialAddressList( 
            /* [retval][out] */ AddressList **InitialAddressList) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InitialAddressList( 
            /* [in] */ AddressList *InitialAddressList) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetDefaultDisplayMode( 
            /* [in] */ OlDefaultSelectNamesDisplayMode defaultMode) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _SelectNamesDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SelectNamesDialog * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SelectNamesDialog * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SelectNamesDialog * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SelectNamesDialog * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SelectNamesDialog * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SelectNamesDialog * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SelectNamesDialog * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ BSTR *Caption);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _SelectNamesDialog * This,
            /* [in] */ BSTR Caption);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ VARIANT_BOOL *ret);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ Recipients **Recipients);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Recipients )( 
            _SelectNamesDialog * This,
            /* [in] */ Recipients *Recipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BccLabel )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ BSTR *BccLabel);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BccLabel )( 
            _SelectNamesDialog * This,
            /* [in] */ BSTR BccLabel);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CcLabel )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ BSTR *CcLabel);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CcLabel )( 
            _SelectNamesDialog * This,
            /* [in] */ BSTR CcLabel);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToLabel )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ BSTR *ToLabel);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToLabel )( 
            _SelectNamesDialog * This,
            /* [in] */ BSTR ToLabel);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AllowMultipleSelection )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ VARIANT_BOOL *AllowMultipleSelection);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AllowMultipleSelection )( 
            _SelectNamesDialog * This,
            /* [in] */ VARIANT_BOOL AllowMultipleSelection);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceResolution )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ VARIANT_BOOL *ForceResolution);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceResolution )( 
            _SelectNamesDialog * This,
            /* [in] */ VARIANT_BOOL ForceResolution);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowOnlyInitialAddressList )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ VARIANT_BOOL *ShowOnlyInitialAddressList);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowOnlyInitialAddressList )( 
            _SelectNamesDialog * This,
            /* [in] */ VARIANT_BOOL ShowOnlyInitialAddressList);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfRecipientSelectors )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ OlRecipientSelectors *NumberOfRecipientSelectors);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NumberOfRecipientSelectors )( 
            _SelectNamesDialog * This,
            /* [in] */ OlRecipientSelectors NumberOfRecipientSelectors);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InitialAddressList )( 
            _SelectNamesDialog * This,
            /* [retval][out] */ AddressList **InitialAddressList);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InitialAddressList )( 
            _SelectNamesDialog * This,
            /* [in] */ AddressList *InitialAddressList);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetDefaultDisplayMode )( 
            _SelectNamesDialog * This,
            /* [in] */ OlDefaultSelectNamesDisplayMode defaultMode);
        
        END_INTERFACE
    } _SelectNamesDialogVtbl;

    interface _SelectNamesDialog
    {
        CONST_VTBL struct _SelectNamesDialogVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SelectNamesDialog_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SelectNamesDialog_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SelectNamesDialog_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SelectNamesDialog_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SelectNamesDialog_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SelectNamesDialog_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SelectNamesDialog_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _SelectNamesDialog_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _SelectNamesDialog_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _SelectNamesDialog_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _SelectNamesDialog_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _SelectNamesDialog_get_Caption(This,Caption)	\
    ( (This)->lpVtbl -> get_Caption(This,Caption) ) 

#define _SelectNamesDialog_put_Caption(This,Caption)	\
    ( (This)->lpVtbl -> put_Caption(This,Caption) ) 

#define _SelectNamesDialog_Display(This,ret)	\
    ( (This)->lpVtbl -> Display(This,ret) ) 

#define _SelectNamesDialog_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#define _SelectNamesDialog_put_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> put_Recipients(This,Recipients) ) 

#define _SelectNamesDialog_get_BccLabel(This,BccLabel)	\
    ( (This)->lpVtbl -> get_BccLabel(This,BccLabel) ) 

#define _SelectNamesDialog_put_BccLabel(This,BccLabel)	\
    ( (This)->lpVtbl -> put_BccLabel(This,BccLabel) ) 

#define _SelectNamesDialog_get_CcLabel(This,CcLabel)	\
    ( (This)->lpVtbl -> get_CcLabel(This,CcLabel) ) 

#define _SelectNamesDialog_put_CcLabel(This,CcLabel)	\
    ( (This)->lpVtbl -> put_CcLabel(This,CcLabel) ) 

#define _SelectNamesDialog_get_ToLabel(This,ToLabel)	\
    ( (This)->lpVtbl -> get_ToLabel(This,ToLabel) ) 

#define _SelectNamesDialog_put_ToLabel(This,ToLabel)	\
    ( (This)->lpVtbl -> put_ToLabel(This,ToLabel) ) 

#define _SelectNamesDialog_get_AllowMultipleSelection(This,AllowMultipleSelection)	\
    ( (This)->lpVtbl -> get_AllowMultipleSelection(This,AllowMultipleSelection) ) 

#define _SelectNamesDialog_put_AllowMultipleSelection(This,AllowMultipleSelection)	\
    ( (This)->lpVtbl -> put_AllowMultipleSelection(This,AllowMultipleSelection) ) 

#define _SelectNamesDialog_get_ForceResolution(This,ForceResolution)	\
    ( (This)->lpVtbl -> get_ForceResolution(This,ForceResolution) ) 

#define _SelectNamesDialog_put_ForceResolution(This,ForceResolution)	\
    ( (This)->lpVtbl -> put_ForceResolution(This,ForceResolution) ) 

#define _SelectNamesDialog_get_ShowOnlyInitialAddressList(This,ShowOnlyInitialAddressList)	\
    ( (This)->lpVtbl -> get_ShowOnlyInitialAddressList(This,ShowOnlyInitialAddressList) ) 

#define _SelectNamesDialog_put_ShowOnlyInitialAddressList(This,ShowOnlyInitialAddressList)	\
    ( (This)->lpVtbl -> put_ShowOnlyInitialAddressList(This,ShowOnlyInitialAddressList) ) 

#define _SelectNamesDialog_get_NumberOfRecipientSelectors(This,NumberOfRecipientSelectors)	\
    ( (This)->lpVtbl -> get_NumberOfRecipientSelectors(This,NumberOfRecipientSelectors) ) 

#define _SelectNamesDialog_put_NumberOfRecipientSelectors(This,NumberOfRecipientSelectors)	\
    ( (This)->lpVtbl -> put_NumberOfRecipientSelectors(This,NumberOfRecipientSelectors) ) 

#define _SelectNamesDialog_get_InitialAddressList(This,InitialAddressList)	\
    ( (This)->lpVtbl -> get_InitialAddressList(This,InitialAddressList) ) 

#define _SelectNamesDialog_put_InitialAddressList(This,InitialAddressList)	\
    ( (This)->lpVtbl -> put_InitialAddressList(This,InitialAddressList) ) 

#define _SelectNamesDialog_SetDefaultDisplayMode(This,defaultMode)	\
    ( (This)->lpVtbl -> SetDefaultDisplayMode(This,defaultMode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SelectNamesDialog_INTERFACE_DEFINED__ */


#ifndef ___SharingItem_INTERFACE_DEFINED__
#define ___SharingItem_INTERFACE_DEFINED__

/* interface _SharingItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__SharingItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006302F-0000-0000-C000-000000000046")
    _SharingItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Allow( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Deny( 
            /* [retval][out] */ SharingItem	**denyMailItem) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RemoteName( 
            /* [retval][out] */ BSTR *RemoteName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RemoteID( 
            /* [retval][out] */ BSTR *RemoteID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RemotePath( 
            /* [retval][out] */ BSTR *RemotePath) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SharingProviderGuid( 
            /* [retval][out] */ BSTR *SharingProviderGuid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenSharedFolder( 
            /* [retval][out] */ MAPIFolder **sf) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SharingProvider( 
            /* [retval][out] */ OlSharingProvider *SharingProvider) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AllowWriteAccess( 
            /* [retval][out] */ VARIANT_BOOL *AllowWriteAccess) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AllowWriteAccess( 
            /* [in] */ VARIANT_BOOL AllowWriteAccess) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ OlSharingMsgType *Type) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ OlSharingMsgType Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RequestedFolder( 
            /* [retval][out] */ OlDefaultFolders *RequestedFolder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SendUsingAccount( 
            /* [retval][out] */ _Account **SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SendUsingAccount( 
            /* [in] */ _Account *SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AlternateRecipientAllowed( 
            /* [retval][out] */ VARIANT_BOOL *AlternateRecipientAllowed) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AlternateRecipientAllowed( 
            /* [in] */ VARIANT_BOOL AlternateRecipientAllowed) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoForwarded( 
            /* [retval][out] */ VARIANT_BOOL *AutoForwarded) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoForwarded( 
            /* [in] */ VARIANT_BOOL AutoForwarded) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BCC( 
            /* [retval][out] */ BSTR *BCC) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BCC( 
            /* [in] */ BSTR BCC) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CC( 
            /* [retval][out] */ BSTR *CC) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CC( 
            /* [in] */ BSTR CC) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DeferredDeliveryTime( 
            /* [retval][out] */ DATE *DeferredDeliveryTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DeferredDeliveryTime( 
            /* [in] */ DATE DeferredDeliveryTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DeleteAfterSubmit( 
            /* [retval][out] */ VARIANT_BOOL *DeleteAfterSubmit) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DeleteAfterSubmit( 
            /* [in] */ VARIANT_BOOL DeleteAfterSubmit) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExpiryTime( 
            /* [retval][out] */ DATE *ExpiryTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExpiryTime( 
            /* [in] */ DATE ExpiryTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagDueBy( 
            /* [retval][out] */ DATE *FlagDueBy) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagDueBy( 
            /* [in] */ DATE FlagDueBy) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagRequest( 
            /* [retval][out] */ BSTR *FlagRequest) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagRequest( 
            /* [in] */ BSTR FlagRequest) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagStatus( 
            /* [retval][out] */ OlFlagStatus *FlagStatus) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagStatus( 
            /* [in] */ OlFlagStatus FlagStatus) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLBody( 
            /* [retval][out] */ BSTR *HTMLBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HTMLBody( 
            /* [in] */ BSTR HTMLBody) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginatorDeliveryReportRequested( 
            /* [retval][out] */ VARIANT_BOOL *OriginatorDeliveryReportRequested) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OriginatorDeliveryReportRequested( 
            /* [in] */ VARIANT_BOOL OriginatorDeliveryReportRequested) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReadReceiptRequested( 
            /* [retval][out] */ VARIANT_BOOL *ReadReceiptRequested) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReadReceiptRequested( 
            /* [in] */ VARIANT_BOOL ReadReceiptRequested) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedByEntryID( 
            /* [retval][out] */ BSTR *ReceivedByEntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedByName( 
            /* [retval][out] */ BSTR *ReceivedByName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedOnBehalfOfEntryID( 
            /* [retval][out] */ BSTR *ReceivedOnBehalfOfEntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedOnBehalfOfName( 
            /* [retval][out] */ BSTR *ReceivedOnBehalfOfName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedTime( 
            /* [retval][out] */ DATE *ReceivedTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RecipientReassignmentProhibited( 
            /* [retval][out] */ VARIANT_BOOL *RecipientReassignmentProhibited) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RecipientReassignmentProhibited( 
            /* [in] */ VARIANT_BOOL RecipientReassignmentProhibited) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault( 
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderOverrideDefault( 
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderPlaySound( 
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderPlaySound( 
            /* [in] */ VARIANT_BOOL ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSet( 
            /* [retval][out] */ VARIANT_BOOL *ReminderSet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSet( 
            /* [in] */ VARIANT_BOOL ReminderSet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSoundFile( 
            /* [retval][out] */ BSTR *ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSoundFile( 
            /* [in] */ BSTR ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderTime( 
            /* [retval][out] */ DATE *ReminderTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderTime( 
            /* [in] */ DATE ReminderTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RemoteStatus( 
            /* [retval][out] */ OlRemoteStatus *RemoteStatus) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RemoteStatus( 
            /* [in] */ OlRemoteStatus RemoteStatus) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyRecipientNames( 
            /* [retval][out] */ BSTR *ReplyRecipientNames) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyRecipients( 
            /* [retval][out] */ Recipients **ReplyRecipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveSentMessageFolder( 
            /* [retval][out] */ MAPIFolder **SaveSentMessageFolder) = 0;
        
        virtual /* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_SaveSentMessageFolder( 
            /* [in] */ MAPIFolder *SaveSentMessageFolder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderName( 
            /* [retval][out] */ BSTR *SenderName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sent( 
            /* [retval][out] */ VARIANT_BOOL *Sent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SentOn( 
            /* [retval][out] */ DATE *SentOn) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SentOnBehalfOfName( 
            /* [retval][out] */ BSTR *SentOnBehalfOfName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SentOnBehalfOfName( 
            /* [in] */ BSTR SentOnBehalfOfName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Submitted( 
            /* [retval][out] */ VARIANT_BOOL *Submitted) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_To( 
            /* [retval][out] */ BSTR *To) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_To( 
            /* [in] */ BSTR To) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearConversationIndex( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Forward( 
            /* [retval][out] */ SharingItem	**Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reply( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplyAll( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Send( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BodyFormat( 
            /* [retval][out] */ OlBodyFormat *BodyFormat) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BodyFormat( 
            /* [in] */ OlBodyFormat BodyFormat) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InternetCodepage( 
            /* [retval][out] */ long *InternetCodepage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InternetCodepage( 
            /* [in] */ long InternetCodepage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddBusinessCard( 
            /* [in] */ _ContactItem *contact) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskSubject( 
            /* [retval][out] */ BSTR *TaskSubject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskSubject( 
            /* [in] */ BSTR TaskSubject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskDueDate( 
            /* [retval][out] */ DATE *TaskDueDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskDueDate( 
            /* [in] */ DATE TaskDueDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskStartDate( 
            /* [retval][out] */ DATE *TaskStartDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskStartDate( 
            /* [in] */ DATE TaskStartDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskCompletedDate( 
            /* [retval][out] */ DATE *TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskCompletedDate( 
            /* [in] */ DATE TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToDoTaskOrdinal( 
            /* [retval][out] */ DATE *ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToDoTaskOrdinal( 
            /* [in] */ DATE ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagIcon( 
            /* [retval][out] */ OlFlagIcon *FlagIcon) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagIcon( 
            /* [in] */ OlFlagIcon FlagIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailAddress( 
            /* [retval][out] */ BSTR *SenderEmailAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailType( 
            /* [retval][out] */ BSTR *SenderEmailType) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableSharedAttachments( 
            /* [retval][out] */ VARIANT_BOOL *EnableSharedAttachments) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableSharedAttachments( 
            /* [in] */ VARIANT_BOOL EnableSharedAttachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Permission( 
            /* [retval][out] */ OlPermission *Permission) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Permission( 
            /* [in] */ OlPermission Permission) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PermissionService( 
            /* [retval][out] */ OlPermissionService *PermissionService) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PermissionService( 
            /* [in] */ OlPermissionService PermissionService) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkAsTask( 
            /* [in] */ OlMarkInterval MarkInterval) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearTaskFlag( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsMarkedAsTask( 
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PermissionTemplateGuid( 
            /* [retval][out] */ BSTR *PermissionTemplateGuid) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PermissionTemplateGuid( 
            /* [in] */ BSTR PermissionTemplateGuid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RetentionPolicyName( 
            /* [retval][out] */ BSTR *RetentionPolicyName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RetentionExpirationDate( 
            /* [retval][out] */ DATE *RetentionExpirationDate) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _SharingItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SharingItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SharingItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SharingItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SharingItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SharingItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SharingItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SharingItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _SharingItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _SharingItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _SharingItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _SharingItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _SharingItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _SharingItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _SharingItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _SharingItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _SharingItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _SharingItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _SharingItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _SharingItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _SharingItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _SharingItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _SharingItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _SharingItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _SharingItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _SharingItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _SharingItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _SharingItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _SharingItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _SharingItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _SharingItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _SharingItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _SharingItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _SharingItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _SharingItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _SharingItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _SharingItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _SharingItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _SharingItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Allow )( 
            _SharingItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Deny )( 
            _SharingItem * This,
            /* [retval][out] */ SharingItem	**denyMailItem);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _SharingItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RemoteName )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *RemoteName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RemoteID )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *RemoteID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RemotePath )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *RemotePath);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SharingProviderGuid )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *SharingProviderGuid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenSharedFolder )( 
            _SharingItem * This,
            /* [retval][out] */ MAPIFolder **sf);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SharingProvider )( 
            _SharingItem * This,
            /* [retval][out] */ OlSharingProvider *SharingProvider);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AllowWriteAccess )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *AllowWriteAccess);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AllowWriteAccess )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL AllowWriteAccess);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _SharingItem * This,
            /* [retval][out] */ OlSharingMsgType *Type);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            _SharingItem * This,
            /* [in] */ OlSharingMsgType Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RequestedFolder )( 
            _SharingItem * This,
            /* [retval][out] */ OlDefaultFolders *RequestedFolder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SendUsingAccount )( 
            _SharingItem * This,
            /* [retval][out] */ _Account **SendUsingAccount);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SendUsingAccount )( 
            _SharingItem * This,
            /* [in] */ _Account *SendUsingAccount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AlternateRecipientAllowed )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *AlternateRecipientAllowed);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AlternateRecipientAllowed )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL AlternateRecipientAllowed);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoForwarded )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoForwarded);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoForwarded )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL AutoForwarded);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BCC )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *BCC);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BCC )( 
            _SharingItem * This,
            /* [in] */ BSTR BCC);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CC )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *CC);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CC )( 
            _SharingItem * This,
            /* [in] */ BSTR CC);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DeferredDeliveryTime )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *DeferredDeliveryTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DeferredDeliveryTime )( 
            _SharingItem * This,
            /* [in] */ DATE DeferredDeliveryTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DeleteAfterSubmit )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *DeleteAfterSubmit);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DeleteAfterSubmit )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL DeleteAfterSubmit);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpiryTime )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *ExpiryTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpiryTime )( 
            _SharingItem * This,
            /* [in] */ DATE ExpiryTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagDueBy )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *FlagDueBy);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagDueBy )( 
            _SharingItem * This,
            /* [in] */ DATE FlagDueBy);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagRequest )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *FlagRequest);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagRequest )( 
            _SharingItem * This,
            /* [in] */ BSTR FlagRequest);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagStatus )( 
            _SharingItem * This,
            /* [retval][out] */ OlFlagStatus *FlagStatus);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagStatus )( 
            _SharingItem * This,
            /* [in] */ OlFlagStatus FlagStatus);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLBody )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *HTMLBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HTMLBody )( 
            _SharingItem * This,
            /* [in] */ BSTR HTMLBody);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OriginatorDeliveryReportRequested )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *OriginatorDeliveryReportRequested);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OriginatorDeliveryReportRequested )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL OriginatorDeliveryReportRequested);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReadReceiptRequested )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReadReceiptRequested);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReadReceiptRequested )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL ReadReceiptRequested);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedByEntryID )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *ReceivedByEntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedByName )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *ReceivedByName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedOnBehalfOfEntryID )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *ReceivedOnBehalfOfEntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedOnBehalfOfName )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *ReceivedOnBehalfOfName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedTime )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *ReceivedTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecipientReassignmentProhibited )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *RecipientReassignmentProhibited);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RecipientReassignmentProhibited )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL RecipientReassignmentProhibited);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _SharingItem * This,
            /* [retval][out] */ Recipients **Recipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderOverrideDefault )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderOverrideDefault )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderPlaySound )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderPlaySound )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL ReminderPlaySound);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSet )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderSet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSet )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL ReminderSet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSoundFile )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *ReminderSoundFile);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSoundFile )( 
            _SharingItem * This,
            /* [in] */ BSTR ReminderSoundFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderTime )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *ReminderTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderTime )( 
            _SharingItem * This,
            /* [in] */ DATE ReminderTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RemoteStatus )( 
            _SharingItem * This,
            /* [retval][out] */ OlRemoteStatus *RemoteStatus);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RemoteStatus )( 
            _SharingItem * This,
            /* [in] */ OlRemoteStatus RemoteStatus);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyRecipientNames )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *ReplyRecipientNames);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyRecipients )( 
            _SharingItem * This,
            /* [retval][out] */ Recipients **ReplyRecipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveSentMessageFolder )( 
            _SharingItem * This,
            /* [retval][out] */ MAPIFolder **SaveSentMessageFolder);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_SaveSentMessageFolder )( 
            _SharingItem * This,
            /* [in] */ MAPIFolder *SaveSentMessageFolder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderName )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *SenderName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sent )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *Sent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SentOn )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *SentOn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SentOnBehalfOfName )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *SentOnBehalfOfName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SentOnBehalfOfName )( 
            _SharingItem * This,
            /* [in] */ BSTR SentOnBehalfOfName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Submitted )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *Submitted);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_To )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *To);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_To )( 
            _SharingItem * This,
            /* [in] */ BSTR To);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearConversationIndex )( 
            _SharingItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Forward )( 
            _SharingItem * This,
            /* [retval][out] */ SharingItem	**Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reply )( 
            _SharingItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplyAll )( 
            _SharingItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Send )( 
            _SharingItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _SharingItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BodyFormat )( 
            _SharingItem * This,
            /* [retval][out] */ OlBodyFormat *BodyFormat);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BodyFormat )( 
            _SharingItem * This,
            /* [in] */ OlBodyFormat BodyFormat);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _SharingItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _SharingItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InternetCodepage )( 
            _SharingItem * This,
            /* [retval][out] */ long *InternetCodepage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InternetCodepage )( 
            _SharingItem * This,
            /* [in] */ long InternetCodepage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _SharingItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _SharingItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddBusinessCard )( 
            _SharingItem * This,
            /* [in] */ _ContactItem *contact);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskSubject )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *TaskSubject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskSubject )( 
            _SharingItem * This,
            /* [in] */ BSTR TaskSubject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskDueDate )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *TaskDueDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskDueDate )( 
            _SharingItem * This,
            /* [in] */ DATE TaskDueDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskStartDate )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *TaskStartDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskStartDate )( 
            _SharingItem * This,
            /* [in] */ DATE TaskStartDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskCompletedDate )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *TaskCompletedDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskCompletedDate )( 
            _SharingItem * This,
            /* [in] */ DATE TaskCompletedDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToDoTaskOrdinal )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *ToDoTaskOrdinal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToDoTaskOrdinal )( 
            _SharingItem * This,
            /* [in] */ DATE ToDoTaskOrdinal);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagIcon )( 
            _SharingItem * This,
            /* [retval][out] */ OlFlagIcon *FlagIcon);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagIcon )( 
            _SharingItem * This,
            /* [in] */ OlFlagIcon FlagIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _SharingItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailAddress )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *SenderEmailAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailType )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *SenderEmailType);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableSharedAttachments )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *EnableSharedAttachments);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableSharedAttachments )( 
            _SharingItem * This,
            /* [in] */ VARIANT_BOOL EnableSharedAttachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Permission )( 
            _SharingItem * This,
            /* [retval][out] */ OlPermission *Permission);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Permission )( 
            _SharingItem * This,
            /* [in] */ OlPermission Permission);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PermissionService )( 
            _SharingItem * This,
            /* [retval][out] */ OlPermissionService *PermissionService);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PermissionService )( 
            _SharingItem * This,
            /* [in] */ OlPermissionService PermissionService);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkAsTask )( 
            _SharingItem * This,
            /* [in] */ OlMarkInterval MarkInterval);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearTaskFlag )( 
            _SharingItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsMarkedAsTask )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _SharingItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PermissionTemplateGuid )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *PermissionTemplateGuid);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PermissionTemplateGuid )( 
            _SharingItem * This,
            /* [in] */ BSTR PermissionTemplateGuid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _SharingItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _SharingItem * This,
            /* [in] */ VARIANT RTFBody);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RetentionPolicyName )( 
            _SharingItem * This,
            /* [retval][out] */ BSTR *RetentionPolicyName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RetentionExpirationDate )( 
            _SharingItem * This,
            /* [retval][out] */ DATE *RetentionExpirationDate);
        
        END_INTERFACE
    } _SharingItemVtbl;

    interface _SharingItem
    {
        CONST_VTBL struct _SharingItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SharingItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SharingItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SharingItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SharingItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SharingItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SharingItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SharingItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _SharingItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _SharingItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _SharingItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _SharingItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _SharingItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _SharingItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _SharingItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _SharingItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _SharingItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _SharingItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _SharingItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _SharingItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _SharingItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _SharingItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _SharingItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _SharingItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _SharingItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _SharingItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _SharingItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _SharingItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _SharingItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _SharingItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _SharingItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _SharingItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _SharingItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _SharingItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _SharingItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _SharingItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _SharingItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _SharingItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _SharingItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _SharingItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _SharingItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _SharingItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _SharingItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _SharingItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _SharingItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _SharingItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _SharingItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _SharingItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _SharingItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _SharingItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _SharingItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _SharingItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _SharingItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _SharingItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _SharingItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _SharingItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _SharingItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _SharingItem_Allow(This)	\
    ( (This)->lpVtbl -> Allow(This) ) 

#define _SharingItem_Deny(This,denyMailItem)	\
    ( (This)->lpVtbl -> Deny(This,denyMailItem) ) 

#define _SharingItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _SharingItem_get_RemoteName(This,RemoteName)	\
    ( (This)->lpVtbl -> get_RemoteName(This,RemoteName) ) 

#define _SharingItem_get_RemoteID(This,RemoteID)	\
    ( (This)->lpVtbl -> get_RemoteID(This,RemoteID) ) 

#define _SharingItem_get_RemotePath(This,RemotePath)	\
    ( (This)->lpVtbl -> get_RemotePath(This,RemotePath) ) 

#define _SharingItem_get_SharingProviderGuid(This,SharingProviderGuid)	\
    ( (This)->lpVtbl -> get_SharingProviderGuid(This,SharingProviderGuid) ) 

#define _SharingItem_OpenSharedFolder(This,sf)	\
    ( (This)->lpVtbl -> OpenSharedFolder(This,sf) ) 

#define _SharingItem_get_SharingProvider(This,SharingProvider)	\
    ( (This)->lpVtbl -> get_SharingProvider(This,SharingProvider) ) 

#define _SharingItem_get_AllowWriteAccess(This,AllowWriteAccess)	\
    ( (This)->lpVtbl -> get_AllowWriteAccess(This,AllowWriteAccess) ) 

#define _SharingItem_put_AllowWriteAccess(This,AllowWriteAccess)	\
    ( (This)->lpVtbl -> put_AllowWriteAccess(This,AllowWriteAccess) ) 

#define _SharingItem_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define _SharingItem_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define _SharingItem_get_RequestedFolder(This,RequestedFolder)	\
    ( (This)->lpVtbl -> get_RequestedFolder(This,RequestedFolder) ) 

#define _SharingItem_get_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> get_SendUsingAccount(This,SendUsingAccount) ) 

#define _SharingItem_put_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> put_SendUsingAccount(This,SendUsingAccount) ) 

#define _SharingItem_get_AlternateRecipientAllowed(This,AlternateRecipientAllowed)	\
    ( (This)->lpVtbl -> get_AlternateRecipientAllowed(This,AlternateRecipientAllowed) ) 

#define _SharingItem_put_AlternateRecipientAllowed(This,AlternateRecipientAllowed)	\
    ( (This)->lpVtbl -> put_AlternateRecipientAllowed(This,AlternateRecipientAllowed) ) 

#define _SharingItem_get_AutoForwarded(This,AutoForwarded)	\
    ( (This)->lpVtbl -> get_AutoForwarded(This,AutoForwarded) ) 

#define _SharingItem_put_AutoForwarded(This,AutoForwarded)	\
    ( (This)->lpVtbl -> put_AutoForwarded(This,AutoForwarded) ) 

#define _SharingItem_get_BCC(This,BCC)	\
    ( (This)->lpVtbl -> get_BCC(This,BCC) ) 

#define _SharingItem_put_BCC(This,BCC)	\
    ( (This)->lpVtbl -> put_BCC(This,BCC) ) 

#define _SharingItem_get_CC(This,CC)	\
    ( (This)->lpVtbl -> get_CC(This,CC) ) 

#define _SharingItem_put_CC(This,CC)	\
    ( (This)->lpVtbl -> put_CC(This,CC) ) 

#define _SharingItem_get_DeferredDeliveryTime(This,DeferredDeliveryTime)	\
    ( (This)->lpVtbl -> get_DeferredDeliveryTime(This,DeferredDeliveryTime) ) 

#define _SharingItem_put_DeferredDeliveryTime(This,DeferredDeliveryTime)	\
    ( (This)->lpVtbl -> put_DeferredDeliveryTime(This,DeferredDeliveryTime) ) 

#define _SharingItem_get_DeleteAfterSubmit(This,DeleteAfterSubmit)	\
    ( (This)->lpVtbl -> get_DeleteAfterSubmit(This,DeleteAfterSubmit) ) 

#define _SharingItem_put_DeleteAfterSubmit(This,DeleteAfterSubmit)	\
    ( (This)->lpVtbl -> put_DeleteAfterSubmit(This,DeleteAfterSubmit) ) 

#define _SharingItem_get_ExpiryTime(This,ExpiryTime)	\
    ( (This)->lpVtbl -> get_ExpiryTime(This,ExpiryTime) ) 

#define _SharingItem_put_ExpiryTime(This,ExpiryTime)	\
    ( (This)->lpVtbl -> put_ExpiryTime(This,ExpiryTime) ) 

#define _SharingItem_get_FlagDueBy(This,FlagDueBy)	\
    ( (This)->lpVtbl -> get_FlagDueBy(This,FlagDueBy) ) 

#define _SharingItem_put_FlagDueBy(This,FlagDueBy)	\
    ( (This)->lpVtbl -> put_FlagDueBy(This,FlagDueBy) ) 

#define _SharingItem_get_FlagRequest(This,FlagRequest)	\
    ( (This)->lpVtbl -> get_FlagRequest(This,FlagRequest) ) 

#define _SharingItem_put_FlagRequest(This,FlagRequest)	\
    ( (This)->lpVtbl -> put_FlagRequest(This,FlagRequest) ) 

#define _SharingItem_get_FlagStatus(This,FlagStatus)	\
    ( (This)->lpVtbl -> get_FlagStatus(This,FlagStatus) ) 

#define _SharingItem_put_FlagStatus(This,FlagStatus)	\
    ( (This)->lpVtbl -> put_FlagStatus(This,FlagStatus) ) 

#define _SharingItem_get_HTMLBody(This,HTMLBody)	\
    ( (This)->lpVtbl -> get_HTMLBody(This,HTMLBody) ) 

#define _SharingItem_put_HTMLBody(This,HTMLBody)	\
    ( (This)->lpVtbl -> put_HTMLBody(This,HTMLBody) ) 

#define _SharingItem_get_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested)	\
    ( (This)->lpVtbl -> get_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested) ) 

#define _SharingItem_put_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested)	\
    ( (This)->lpVtbl -> put_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested) ) 

#define _SharingItem_get_ReadReceiptRequested(This,ReadReceiptRequested)	\
    ( (This)->lpVtbl -> get_ReadReceiptRequested(This,ReadReceiptRequested) ) 

#define _SharingItem_put_ReadReceiptRequested(This,ReadReceiptRequested)	\
    ( (This)->lpVtbl -> put_ReadReceiptRequested(This,ReadReceiptRequested) ) 

#define _SharingItem_get_ReceivedByEntryID(This,ReceivedByEntryID)	\
    ( (This)->lpVtbl -> get_ReceivedByEntryID(This,ReceivedByEntryID) ) 

#define _SharingItem_get_ReceivedByName(This,ReceivedByName)	\
    ( (This)->lpVtbl -> get_ReceivedByName(This,ReceivedByName) ) 

#define _SharingItem_get_ReceivedOnBehalfOfEntryID(This,ReceivedOnBehalfOfEntryID)	\
    ( (This)->lpVtbl -> get_ReceivedOnBehalfOfEntryID(This,ReceivedOnBehalfOfEntryID) ) 

#define _SharingItem_get_ReceivedOnBehalfOfName(This,ReceivedOnBehalfOfName)	\
    ( (This)->lpVtbl -> get_ReceivedOnBehalfOfName(This,ReceivedOnBehalfOfName) ) 

#define _SharingItem_get_ReceivedTime(This,ReceivedTime)	\
    ( (This)->lpVtbl -> get_ReceivedTime(This,ReceivedTime) ) 

#define _SharingItem_get_RecipientReassignmentProhibited(This,RecipientReassignmentProhibited)	\
    ( (This)->lpVtbl -> get_RecipientReassignmentProhibited(This,RecipientReassignmentProhibited) ) 

#define _SharingItem_put_RecipientReassignmentProhibited(This,RecipientReassignmentProhibited)	\
    ( (This)->lpVtbl -> put_RecipientReassignmentProhibited(This,RecipientReassignmentProhibited) ) 

#define _SharingItem_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#define _SharingItem_get_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> get_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _SharingItem_put_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> put_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _SharingItem_get_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> get_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _SharingItem_put_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> put_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _SharingItem_get_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> get_ReminderSet(This,ReminderSet) ) 

#define _SharingItem_put_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> put_ReminderSet(This,ReminderSet) ) 

#define _SharingItem_get_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> get_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _SharingItem_put_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> put_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _SharingItem_get_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> get_ReminderTime(This,ReminderTime) ) 

#define _SharingItem_put_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> put_ReminderTime(This,ReminderTime) ) 

#define _SharingItem_get_RemoteStatus(This,RemoteStatus)	\
    ( (This)->lpVtbl -> get_RemoteStatus(This,RemoteStatus) ) 

#define _SharingItem_put_RemoteStatus(This,RemoteStatus)	\
    ( (This)->lpVtbl -> put_RemoteStatus(This,RemoteStatus) ) 

#define _SharingItem_get_ReplyRecipientNames(This,ReplyRecipientNames)	\
    ( (This)->lpVtbl -> get_ReplyRecipientNames(This,ReplyRecipientNames) ) 

#define _SharingItem_get_ReplyRecipients(This,ReplyRecipients)	\
    ( (This)->lpVtbl -> get_ReplyRecipients(This,ReplyRecipients) ) 

#define _SharingItem_get_SaveSentMessageFolder(This,SaveSentMessageFolder)	\
    ( (This)->lpVtbl -> get_SaveSentMessageFolder(This,SaveSentMessageFolder) ) 

#define _SharingItem_putref_SaveSentMessageFolder(This,SaveSentMessageFolder)	\
    ( (This)->lpVtbl -> putref_SaveSentMessageFolder(This,SaveSentMessageFolder) ) 

#define _SharingItem_get_SenderName(This,SenderName)	\
    ( (This)->lpVtbl -> get_SenderName(This,SenderName) ) 

#define _SharingItem_get_Sent(This,Sent)	\
    ( (This)->lpVtbl -> get_Sent(This,Sent) ) 

#define _SharingItem_get_SentOn(This,SentOn)	\
    ( (This)->lpVtbl -> get_SentOn(This,SentOn) ) 

#define _SharingItem_get_SentOnBehalfOfName(This,SentOnBehalfOfName)	\
    ( (This)->lpVtbl -> get_SentOnBehalfOfName(This,SentOnBehalfOfName) ) 

#define _SharingItem_put_SentOnBehalfOfName(This,SentOnBehalfOfName)	\
    ( (This)->lpVtbl -> put_SentOnBehalfOfName(This,SentOnBehalfOfName) ) 

#define _SharingItem_get_Submitted(This,Submitted)	\
    ( (This)->lpVtbl -> get_Submitted(This,Submitted) ) 

#define _SharingItem_get_To(This,To)	\
    ( (This)->lpVtbl -> get_To(This,To) ) 

#define _SharingItem_put_To(This,To)	\
    ( (This)->lpVtbl -> put_To(This,To) ) 

#define _SharingItem_ClearConversationIndex(This)	\
    ( (This)->lpVtbl -> ClearConversationIndex(This) ) 

#define _SharingItem_Forward(This,Item)	\
    ( (This)->lpVtbl -> Forward(This,Item) ) 

#define _SharingItem_Reply(This,Item)	\
    ( (This)->lpVtbl -> Reply(This,Item) ) 

#define _SharingItem_ReplyAll(This,Item)	\
    ( (This)->lpVtbl -> ReplyAll(This,Item) ) 

#define _SharingItem_Send(This)	\
    ( (This)->lpVtbl -> Send(This) ) 

#define _SharingItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _SharingItem_get_BodyFormat(This,BodyFormat)	\
    ( (This)->lpVtbl -> get_BodyFormat(This,BodyFormat) ) 

#define _SharingItem_put_BodyFormat(This,BodyFormat)	\
    ( (This)->lpVtbl -> put_BodyFormat(This,BodyFormat) ) 

#define _SharingItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _SharingItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _SharingItem_get_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> get_InternetCodepage(This,InternetCodepage) ) 

#define _SharingItem_put_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> put_InternetCodepage(This,InternetCodepage) ) 

#define _SharingItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _SharingItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _SharingItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _SharingItem_AddBusinessCard(This,contact)	\
    ( (This)->lpVtbl -> AddBusinessCard(This,contact) ) 

#define _SharingItem_get_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> get_TaskSubject(This,TaskSubject) ) 

#define _SharingItem_put_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> put_TaskSubject(This,TaskSubject) ) 

#define _SharingItem_get_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> get_TaskDueDate(This,TaskDueDate) ) 

#define _SharingItem_put_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> put_TaskDueDate(This,TaskDueDate) ) 

#define _SharingItem_get_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> get_TaskStartDate(This,TaskStartDate) ) 

#define _SharingItem_put_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> put_TaskStartDate(This,TaskStartDate) ) 

#define _SharingItem_get_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> get_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _SharingItem_put_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> put_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _SharingItem_get_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> get_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _SharingItem_put_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> put_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _SharingItem_get_FlagIcon(This,FlagIcon)	\
    ( (This)->lpVtbl -> get_FlagIcon(This,FlagIcon) ) 

#define _SharingItem_put_FlagIcon(This,FlagIcon)	\
    ( (This)->lpVtbl -> put_FlagIcon(This,FlagIcon) ) 

#define _SharingItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _SharingItem_get_SenderEmailAddress(This,SenderEmailAddress)	\
    ( (This)->lpVtbl -> get_SenderEmailAddress(This,SenderEmailAddress) ) 

#define _SharingItem_get_SenderEmailType(This,SenderEmailType)	\
    ( (This)->lpVtbl -> get_SenderEmailType(This,SenderEmailType) ) 

#define _SharingItem_get_EnableSharedAttachments(This,EnableSharedAttachments)	\
    ( (This)->lpVtbl -> get_EnableSharedAttachments(This,EnableSharedAttachments) ) 

#define _SharingItem_put_EnableSharedAttachments(This,EnableSharedAttachments)	\
    ( (This)->lpVtbl -> put_EnableSharedAttachments(This,EnableSharedAttachments) ) 

#define _SharingItem_get_Permission(This,Permission)	\
    ( (This)->lpVtbl -> get_Permission(This,Permission) ) 

#define _SharingItem_put_Permission(This,Permission)	\
    ( (This)->lpVtbl -> put_Permission(This,Permission) ) 

#define _SharingItem_get_PermissionService(This,PermissionService)	\
    ( (This)->lpVtbl -> get_PermissionService(This,PermissionService) ) 

#define _SharingItem_put_PermissionService(This,PermissionService)	\
    ( (This)->lpVtbl -> put_PermissionService(This,PermissionService) ) 

#define _SharingItem_MarkAsTask(This,MarkInterval)	\
    ( (This)->lpVtbl -> MarkAsTask(This,MarkInterval) ) 

#define _SharingItem_ClearTaskFlag(This)	\
    ( (This)->lpVtbl -> ClearTaskFlag(This) ) 

#define _SharingItem_get_IsMarkedAsTask(This,IsMarkedAsTask)	\
    ( (This)->lpVtbl -> get_IsMarkedAsTask(This,IsMarkedAsTask) ) 

#define _SharingItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _SharingItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _SharingItem_get_PermissionTemplateGuid(This,PermissionTemplateGuid)	\
    ( (This)->lpVtbl -> get_PermissionTemplateGuid(This,PermissionTemplateGuid) ) 

#define _SharingItem_put_PermissionTemplateGuid(This,PermissionTemplateGuid)	\
    ( (This)->lpVtbl -> put_PermissionTemplateGuid(This,PermissionTemplateGuid) ) 

#define _SharingItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _SharingItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#define _SharingItem_get_RetentionPolicyName(This,RetentionPolicyName)	\
    ( (This)->lpVtbl -> get_RetentionPolicyName(This,RetentionPolicyName) ) 

#define _SharingItem_get_RetentionExpirationDate(This,RetentionExpirationDate)	\
    ( (This)->lpVtbl -> get_RetentionExpirationDate(This,RetentionExpirationDate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_To_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ BSTR *To);


void __RPC_STUB _SharingItem_get_To_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_To_Proxy( 
    _SharingItem * This,
    /* [in] */ BSTR To);


void __RPC_STUB _SharingItem_put_To_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_ClearConversationIndex_Proxy( 
    _SharingItem * This);


void __RPC_STUB _SharingItem_ClearConversationIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_Forward_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ SharingItem	**Item);


void __RPC_STUB _SharingItem_Forward_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_Reply_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ _MailItem **Item);


void __RPC_STUB _SharingItem_Reply_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_ReplyAll_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ _MailItem **Item);


void __RPC_STUB _SharingItem_ReplyAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_Send_Proxy( 
    _SharingItem * This);


void __RPC_STUB _SharingItem_Send_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_ItemProperties_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ ItemProperties **ItemProperties);


void __RPC_STUB _SharingItem_get_ItemProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_BodyFormat_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ OlBodyFormat *BodyFormat);


void __RPC_STUB _SharingItem_get_BodyFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_BodyFormat_Proxy( 
    _SharingItem * This,
    /* [in] */ OlBodyFormat BodyFormat);


void __RPC_STUB _SharingItem_put_BodyFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_DownloadState_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ OlDownloadState *DownloadState);


void __RPC_STUB _SharingItem_get_DownloadState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_ShowCategoriesDialog_Proxy( 
    _SharingItem * This);


void __RPC_STUB _SharingItem_ShowCategoriesDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_InternetCodepage_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ long *InternetCodepage);


void __RPC_STUB _SharingItem_get_InternetCodepage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_InternetCodepage_Proxy( 
    _SharingItem * This,
    /* [in] */ long InternetCodepage);


void __RPC_STUB _SharingItem_put_InternetCodepage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_MarkForDownload_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ OlRemoteStatus *MarkForDownload);


void __RPC_STUB _SharingItem_get_MarkForDownload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_MarkForDownload_Proxy( 
    _SharingItem * This,
    /* [in] */ OlRemoteStatus MarkForDownload);


void __RPC_STUB _SharingItem_put_MarkForDownload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_IsConflict_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ VARIANT_BOOL *IsConflict);


void __RPC_STUB _SharingItem_get_IsConflict_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_AddBusinessCard_Proxy( 
    _SharingItem * This,
    /* [in] */ _ContactItem *contact);


void __RPC_STUB _SharingItem_AddBusinessCard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_TaskSubject_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ BSTR *TaskSubject);


void __RPC_STUB _SharingItem_get_TaskSubject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_TaskSubject_Proxy( 
    _SharingItem * This,
    /* [in] */ BSTR TaskSubject);


void __RPC_STUB _SharingItem_put_TaskSubject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_TaskDueDate_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ DATE *TaskDueDate);


void __RPC_STUB _SharingItem_get_TaskDueDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_TaskDueDate_Proxy( 
    _SharingItem * This,
    /* [in] */ DATE TaskDueDate);


void __RPC_STUB _SharingItem_put_TaskDueDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_TaskStartDate_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ DATE *TaskStartDate);


void __RPC_STUB _SharingItem_get_TaskStartDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_TaskStartDate_Proxy( 
    _SharingItem * This,
    /* [in] */ DATE TaskStartDate);


void __RPC_STUB _SharingItem_put_TaskStartDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_TaskCompletedDate_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ DATE *TaskCompletedDate);


void __RPC_STUB _SharingItem_get_TaskCompletedDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_TaskCompletedDate_Proxy( 
    _SharingItem * This,
    /* [in] */ DATE TaskCompletedDate);


void __RPC_STUB _SharingItem_put_TaskCompletedDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_ToDoTaskOrdinal_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ DATE *ToDoTaskOrdinal);


void __RPC_STUB _SharingItem_get_ToDoTaskOrdinal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_ToDoTaskOrdinal_Proxy( 
    _SharingItem * This,
    /* [in] */ DATE ToDoTaskOrdinal);


void __RPC_STUB _SharingItem_put_ToDoTaskOrdinal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_FlagIcon_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ OlFlagIcon *FlagIcon);


void __RPC_STUB _SharingItem_get_FlagIcon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_FlagIcon_Proxy( 
    _SharingItem * This,
    /* [in] */ OlFlagIcon FlagIcon);


void __RPC_STUB _SharingItem_put_FlagIcon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_Conflicts_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ Conflicts **Conflicts);


void __RPC_STUB _SharingItem_get_Conflicts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_SenderEmailAddress_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ BSTR *SenderEmailAddress);


void __RPC_STUB _SharingItem_get_SenderEmailAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_SenderEmailType_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ BSTR *SenderEmailType);


void __RPC_STUB _SharingItem_get_SenderEmailType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_EnableSharedAttachments_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ VARIANT_BOOL *EnableSharedAttachments);


void __RPC_STUB _SharingItem_get_EnableSharedAttachments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_EnableSharedAttachments_Proxy( 
    _SharingItem * This,
    /* [in] */ VARIANT_BOOL EnableSharedAttachments);


void __RPC_STUB _SharingItem_put_EnableSharedAttachments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_Permission_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ OlPermission *Permission);


void __RPC_STUB _SharingItem_get_Permission_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_Permission_Proxy( 
    _SharingItem * This,
    /* [in] */ OlPermission Permission);


void __RPC_STUB _SharingItem_put_Permission_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_PermissionService_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ OlPermissionService *PermissionService);


void __RPC_STUB _SharingItem_get_PermissionService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_PermissionService_Proxy( 
    _SharingItem * This,
    /* [in] */ OlPermissionService PermissionService);


void __RPC_STUB _SharingItem_put_PermissionService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_MarkAsTask_Proxy( 
    _SharingItem * This,
    /* [in] */ OlMarkInterval MarkInterval);


void __RPC_STUB _SharingItem_MarkAsTask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_ClearTaskFlag_Proxy( 
    _SharingItem * This);


void __RPC_STUB _SharingItem_ClearTaskFlag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_IsMarkedAsTask_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask);


void __RPC_STUB _SharingItem_get_IsMarkedAsTask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_GetConversation_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ _Conversation **Conversation);


void __RPC_STUB _SharingItem_GetConversation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_ConversationID_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ BSTR *ConversationID);


void __RPC_STUB _SharingItem_get_ConversationID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_PermissionTemplateGuid_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ BSTR *PermissionTemplateGuid);


void __RPC_STUB _SharingItem_get_PermissionTemplateGuid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_PermissionTemplateGuid_Proxy( 
    _SharingItem * This,
    /* [in] */ BSTR PermissionTemplateGuid);


void __RPC_STUB _SharingItem_put_PermissionTemplateGuid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_RTFBody_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ VARIANT *RTFBody);


void __RPC_STUB _SharingItem_get_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_put_RTFBody_Proxy( 
    _SharingItem * This,
    /* [in] */ VARIANT RTFBody);


void __RPC_STUB _SharingItem_put_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_RetentionPolicyName_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ BSTR *RetentionPolicyName);


void __RPC_STUB _SharingItem_get_RetentionPolicyName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _SharingItem_get_RetentionExpirationDate_Proxy( 
    _SharingItem * This,
    /* [retval][out] */ DATE *RetentionExpirationDate);


void __RPC_STUB _SharingItem_get_RetentionExpirationDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* ___SharingItem_INTERFACE_DEFINED__ */


#ifndef ___Explorers_INTERFACE_DEFINED__
#define ___Explorers_INTERFACE_DEFINED__

/* interface _Explorers */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Explorers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006300A-0000-0000-C000-000000000046")
    _Explorers : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Explorer **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT Folder,
            /* [optional][in] */ OlFolderDisplayMode DisplayMode,
            /* [retval][out] */ _Explorer **Explorer) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ExplorersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Explorers * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Explorers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Explorers * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Explorers * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Explorers * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Explorers * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Explorers * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Explorers * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Explorers * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Explorers * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Explorers * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Explorers * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Explorers * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Explorer **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _Explorers * This,
            /* [in] */ VARIANT Folder,
            /* [optional][in] */ OlFolderDisplayMode DisplayMode,
            /* [retval][out] */ _Explorer **Explorer);
        
        END_INTERFACE
    } _ExplorersVtbl;

    interface _Explorers
    {
        CONST_VTBL struct _ExplorersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Explorers_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Explorers_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Explorers_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Explorers_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Explorers_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Explorers_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Explorers_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Explorers_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Explorers_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Explorers_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Explorers_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Explorers_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Explorers_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Explorers_Add(This,Folder,DisplayMode,Explorer)	\
    ( (This)->lpVtbl -> Add(This,Folder,DisplayMode,Explorer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Explorers_INTERFACE_DEFINED__ */


#ifndef __ExplorerEvents_DISPINTERFACE_DEFINED__
#define __ExplorerEvents_DISPINTERFACE_DEFINED__

/* dispinterface ExplorerEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ExplorerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006304F-0000-0000-C000-000000000046")
    ExplorerEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ExplorerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ExplorerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ExplorerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ExplorerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ExplorerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ExplorerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ExplorerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ExplorerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ExplorerEventsVtbl;

    interface ExplorerEvents
    {
        CONST_VTBL struct ExplorerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ExplorerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ExplorerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ExplorerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ExplorerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ExplorerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ExplorerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ExplorerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ExplorerEvents_DISPINTERFACE_DEFINED__ */


#ifndef __ExplorerEvents_10_DISPINTERFACE_DEFINED__
#define __ExplorerEvents_10_DISPINTERFACE_DEFINED__

/* dispinterface ExplorerEvents_10 */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ExplorerEvents_10;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006300F-0000-0000-C000-000000000046")
    ExplorerEvents_10 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ExplorerEvents_10Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ExplorerEvents_10 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ExplorerEvents_10 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ExplorerEvents_10 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ExplorerEvents_10 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ExplorerEvents_10 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ExplorerEvents_10 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ExplorerEvents_10 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ExplorerEvents_10Vtbl;

    interface ExplorerEvents_10
    {
        CONST_VTBL struct ExplorerEvents_10Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ExplorerEvents_10_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ExplorerEvents_10_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ExplorerEvents_10_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ExplorerEvents_10_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ExplorerEvents_10_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ExplorerEvents_10_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ExplorerEvents_10_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ExplorerEvents_10_DISPINTERFACE_DEFINED__ */


#ifndef ___Inspectors_INTERFACE_DEFINED__
#define ___Inspectors_INTERFACE_DEFINED__

/* interface _Inspectors */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Inspectors;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063008-0000-0000-C000-000000000046")
    _Inspectors : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Inspector **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ _Inspector **Inspector) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _InspectorsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Inspectors * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Inspectors * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Inspectors * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Inspectors * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Inspectors * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Inspectors * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Inspectors * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Inspectors * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Inspectors * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Inspectors * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Inspectors * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Inspectors * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Inspectors * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Inspector **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _Inspectors * This,
            /* [in] */ IDispatch *Item,
            /* [retval][out] */ _Inspector **Inspector);
        
        END_INTERFACE
    } _InspectorsVtbl;

    interface _Inspectors
    {
        CONST_VTBL struct _InspectorsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Inspectors_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Inspectors_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Inspectors_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Inspectors_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Inspectors_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Inspectors_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Inspectors_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Inspectors_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Inspectors_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Inspectors_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Inspectors_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Inspectors_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Inspectors_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Inspectors_Add(This,Item,Inspector)	\
    ( (This)->lpVtbl -> Add(This,Item,Inspector) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Inspectors_INTERFACE_DEFINED__ */


#ifndef __InspectorEvents_DISPINTERFACE_DEFINED__
#define __InspectorEvents_DISPINTERFACE_DEFINED__

/* dispinterface InspectorEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_InspectorEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006307D-0000-0000-C000-000000000046")
    InspectorEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct InspectorEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            InspectorEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            InspectorEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            InspectorEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            InspectorEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            InspectorEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            InspectorEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            InspectorEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } InspectorEventsVtbl;

    interface InspectorEvents
    {
        CONST_VTBL struct InspectorEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define InspectorEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define InspectorEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define InspectorEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define InspectorEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define InspectorEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define InspectorEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define InspectorEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __InspectorEvents_DISPINTERFACE_DEFINED__ */


#ifndef __InspectorEvents_10_DISPINTERFACE_DEFINED__
#define __InspectorEvents_10_DISPINTERFACE_DEFINED__

/* dispinterface InspectorEvents_10 */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_InspectorEvents_10;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006302A-0000-0000-C000-000000000046")
    InspectorEvents_10 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct InspectorEvents_10Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            InspectorEvents_10 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            InspectorEvents_10 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            InspectorEvents_10 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            InspectorEvents_10 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            InspectorEvents_10 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            InspectorEvents_10 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            InspectorEvents_10 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } InspectorEvents_10Vtbl;

    interface InspectorEvents_10
    {
        CONST_VTBL struct InspectorEvents_10Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define InspectorEvents_10_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define InspectorEvents_10_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define InspectorEvents_10_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define InspectorEvents_10_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define InspectorEvents_10_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define InspectorEvents_10_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define InspectorEvents_10_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __InspectorEvents_10_DISPINTERFACE_DEFINED__ */


#ifndef __Search_INTERFACE_DEFINED__
#define __Search_INTERFACE_DEFINED__

/* interface Search */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Search;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006300B-0000-0000-C000-000000000046")
    Search : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsSynchronous( 
            /* [retval][out] */ VARIANT_BOOL *IsSynchronous) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Results( 
            /* [retval][out] */ _Results **Results) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchSubFolders( 
            /* [retval][out] */ VARIANT_BOOL *SearchSubFolders) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Tag( 
            /* [retval][out] */ BSTR *Tag) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Scope( 
            /* [retval][out] */ BSTR *Scope) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetTable( 
            /* [retval][out] */ _Table **Table) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct SearchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Search * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Search * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Search * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Search * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Search * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Search * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Search * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Search * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Search * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Search * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Search * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            Search * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsSynchronous )( 
            Search * This,
            /* [retval][out] */ VARIANT_BOOL *IsSynchronous);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Results )( 
            Search * This,
            /* [retval][out] */ _Results **Results);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SearchSubFolders )( 
            Search * This,
            /* [retval][out] */ VARIANT_BOOL *SearchSubFolders);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            Search * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            Search * This,
            /* [retval][out] */ BSTR *Tag);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Scope )( 
            Search * This,
            /* [retval][out] */ BSTR *Scope);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            Search * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetTable )( 
            Search * This,
            /* [retval][out] */ _Table **Table);
        
        END_INTERFACE
    } SearchVtbl;

    interface Search
    {
        CONST_VTBL struct SearchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Search_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Search_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Search_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Search_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Search_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Search_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Search_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Search_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Search_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Search_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Search_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Search_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define Search_get_IsSynchronous(This,IsSynchronous)	\
    ( (This)->lpVtbl -> get_IsSynchronous(This,IsSynchronous) ) 

#define Search_get_Results(This,Results)	\
    ( (This)->lpVtbl -> get_Results(This,Results) ) 

#define Search_get_SearchSubFolders(This,SearchSubFolders)	\
    ( (This)->lpVtbl -> get_SearchSubFolders(This,SearchSubFolders) ) 

#define Search_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define Search_get_Tag(This,Tag)	\
    ( (This)->lpVtbl -> get_Tag(This,Tag) ) 

#define Search_get_Scope(This,Scope)	\
    ( (This)->lpVtbl -> get_Scope(This,Scope) ) 

#define Search_Save(This,Name,Folder)	\
    ( (This)->lpVtbl -> Save(This,Name,Folder) ) 

#define Search_GetTable(This,Table)	\
    ( (This)->lpVtbl -> GetTable(This,Table) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Search_INTERFACE_DEFINED__ */


#ifndef ___Results_INTERFACE_DEFINED__
#define ___Results_INTERFACE_DEFINED__

/* interface _Results */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Results;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006300C-0000-0000-C000-000000000046")
    _Results : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_RawTable( 
            /* [retval][out] */ IUnknown **RawTable) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFirst( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetLast( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetNext( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetPrevious( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetColumns( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetColumns( 
            /* [in] */ BSTR Columns) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Sort( 
            /* [in] */ BSTR Property,
            /* [optional][in] */ VARIANT Descending) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultItemType( 
            /* [retval][out] */ OlItemType *DefaultItemType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultItemType( 
            /* [in] */ OlItemType DefaultItemType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ResultsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Results * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Results * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Results * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Results * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Results * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Results * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Results * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Results * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Results * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Results * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Results * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Results * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Results * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RawTable )( 
            _Results * This,
            /* [retval][out] */ IUnknown **RawTable);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFirst )( 
            _Results * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetLast )( 
            _Results * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetNext )( 
            _Results * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetPrevious )( 
            _Results * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetColumns )( 
            _Results * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetColumns )( 
            _Results * This,
            /* [in] */ BSTR Columns);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Sort )( 
            _Results * This,
            /* [in] */ BSTR Property,
            /* [optional][in] */ VARIANT Descending);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultItemType )( 
            _Results * This,
            /* [retval][out] */ OlItemType *DefaultItemType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultItemType )( 
            _Results * This,
            /* [in] */ OlItemType DefaultItemType);
        
        END_INTERFACE
    } _ResultsVtbl;

    interface _Results
    {
        CONST_VTBL struct _ResultsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Results_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Results_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Results_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Results_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Results_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Results_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Results_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Results_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Results_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Results_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Results_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Results_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Results_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Results_get_RawTable(This,RawTable)	\
    ( (This)->lpVtbl -> get_RawTable(This,RawTable) ) 

#define _Results_GetFirst(This,Item)	\
    ( (This)->lpVtbl -> GetFirst(This,Item) ) 

#define _Results_GetLast(This,Item)	\
    ( (This)->lpVtbl -> GetLast(This,Item) ) 

#define _Results_GetNext(This,Item)	\
    ( (This)->lpVtbl -> GetNext(This,Item) ) 

#define _Results_GetPrevious(This,Item)	\
    ( (This)->lpVtbl -> GetPrevious(This,Item) ) 

#define _Results_ResetColumns(This)	\
    ( (This)->lpVtbl -> ResetColumns(This) ) 

#define _Results_SetColumns(This,Columns)	\
    ( (This)->lpVtbl -> SetColumns(This,Columns) ) 

#define _Results_Sort(This,Property,Descending)	\
    ( (This)->lpVtbl -> Sort(This,Property,Descending) ) 

#define _Results_get_DefaultItemType(This,DefaultItemType)	\
    ( (This)->lpVtbl -> get_DefaultItemType(This,DefaultItemType) ) 

#define _Results_put_DefaultItemType(This,DefaultItemType)	\
    ( (This)->lpVtbl -> put_DefaultItemType(This,DefaultItemType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Results_INTERFACE_DEFINED__ */


#ifndef ___Reminders_INTERFACE_DEFINED__
#define ___Reminders_INTERFACE_DEFINED__

/* interface _Reminders */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Reminders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630B1-0000-0000-C000-000000000046")
    _Reminders : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Reminder **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ IUnknown **ppvObject) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _RemindersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Reminders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Reminders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Reminders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Reminders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Reminders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Reminders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Reminders * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Reminders * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Reminders * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Reminders * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Reminders * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _Reminders * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _Reminders * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _Reminder **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _Reminders * This,
            /* [in] */ VARIANT Index);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            _Reminders * This,
            /* [retval][out] */ IUnknown **ppvObject);
        
        END_INTERFACE
    } _RemindersVtbl;

    interface _Reminders
    {
        CONST_VTBL struct _RemindersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Reminders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Reminders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Reminders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Reminders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Reminders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Reminders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Reminders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Reminders_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Reminders_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Reminders_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Reminders_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Reminders_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _Reminders_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _Reminders_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define _Reminders__NewEnum(This,ppvObject)	\
    ( (This)->lpVtbl -> _NewEnum(This,ppvObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Reminders_INTERFACE_DEFINED__ */


#ifndef ___Reminder_INTERFACE_DEFINED__
#define ___Reminder_INTERFACE_DEFINED__

/* interface _Reminder */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Reminder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630B0-0000-0000-C000-000000000046")
    _Reminder : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Dismiss( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Snooze( 
            /* [optional][in] */ VARIANT SnoozeTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *Caption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsVisible( 
            /* [retval][out] */ VARIANT_BOOL *IsVisible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NextReminderDate( 
            /* [retval][out] */ DATE *NextReminderDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalReminderDate( 
            /* [retval][out] */ DATE *OriginalReminderDate) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ReminderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Reminder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Reminder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Reminder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Reminder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Reminder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Reminder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Reminder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Reminder * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _Reminder * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _Reminder * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Reminder * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Dismiss )( 
            _Reminder * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Snooze )( 
            _Reminder * This,
            /* [optional][in] */ VARIANT SnoozeTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _Reminder * This,
            /* [retval][out] */ BSTR *Caption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsVisible )( 
            _Reminder * This,
            /* [retval][out] */ VARIANT_BOOL *IsVisible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            _Reminder * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NextReminderDate )( 
            _Reminder * This,
            /* [retval][out] */ DATE *NextReminderDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OriginalReminderDate )( 
            _Reminder * This,
            /* [retval][out] */ DATE *OriginalReminderDate);
        
        END_INTERFACE
    } _ReminderVtbl;

    interface _Reminder
    {
        CONST_VTBL struct _ReminderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Reminder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Reminder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Reminder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Reminder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Reminder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Reminder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Reminder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Reminder_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _Reminder_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _Reminder_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _Reminder_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _Reminder_Dismiss(This)	\
    ( (This)->lpVtbl -> Dismiss(This) ) 

#define _Reminder_Snooze(This,SnoozeTime)	\
    ( (This)->lpVtbl -> Snooze(This,SnoozeTime) ) 

#define _Reminder_get_Caption(This,Caption)	\
    ( (This)->lpVtbl -> get_Caption(This,Caption) ) 

#define _Reminder_get_IsVisible(This,IsVisible)	\
    ( (This)->lpVtbl -> get_IsVisible(This,IsVisible) ) 

#define _Reminder_get_Item(This,Item)	\
    ( (This)->lpVtbl -> get_Item(This,Item) ) 

#define _Reminder_get_NextReminderDate(This,NextReminderDate)	\
    ( (This)->lpVtbl -> get_NextReminderDate(This,NextReminderDate) ) 

#define _Reminder_get_OriginalReminderDate(This,OriginalReminderDate)	\
    ( (This)->lpVtbl -> get_OriginalReminderDate(This,OriginalReminderDate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Reminder_INTERFACE_DEFINED__ */


#ifndef ___TimeZones_INTERFACE_DEFINED__
#define ___TimeZones_INTERFACE_DEFINED__

/* interface _TimeZones */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TimeZones;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630FC-0000-0000-C000-000000000046")
    _TimeZones : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _TimeZone **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ConvertTime( 
            /* [in] */ DATE SourceDateTime,
            /* [in] */ _TimeZone *SourceTimeZone,
            /* [in] */ _TimeZone *DestinationTimeZone,
            /* [retval][out] */ DATE *DestinationDateTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentTimeZone( 
            /* [retval][out] */ _TimeZone **CurrentTimeZone) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TimeZonesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TimeZones * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TimeZones * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TimeZones * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TimeZones * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TimeZones * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TimeZones * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TimeZones * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TimeZones * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TimeZones * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TimeZones * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TimeZones * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _TimeZones * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _TimeZones * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _TimeZone **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ConvertTime )( 
            _TimeZones * This,
            /* [in] */ DATE SourceDateTime,
            /* [in] */ _TimeZone *SourceTimeZone,
            /* [in] */ _TimeZone *DestinationTimeZone,
            /* [retval][out] */ DATE *DestinationDateTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTimeZone )( 
            _TimeZones * This,
            /* [retval][out] */ _TimeZone **CurrentTimeZone);
        
        END_INTERFACE
    } _TimeZonesVtbl;

    interface _TimeZones
    {
        CONST_VTBL struct _TimeZonesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TimeZones_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TimeZones_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TimeZones_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TimeZones_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TimeZones_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TimeZones_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TimeZones_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TimeZones_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TimeZones_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TimeZones_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TimeZones_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TimeZones_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _TimeZones_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _TimeZones_ConvertTime(This,SourceDateTime,SourceTimeZone,DestinationTimeZone,DestinationDateTime)	\
    ( (This)->lpVtbl -> ConvertTime(This,SourceDateTime,SourceTimeZone,DestinationTimeZone,DestinationDateTime) ) 

#define _TimeZones_get_CurrentTimeZone(This,CurrentTimeZone)	\
    ( (This)->lpVtbl -> get_CurrentTimeZone(This,CurrentTimeZone) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TimeZones_INTERFACE_DEFINED__ */


#ifndef ___OlkTimeZoneControl_INTERFACE_DEFINED__
#define ___OlkTimeZoneControl_INTERFACE_DEFINED__

/* interface _OlkTimeZoneControl */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OlkTimeZoneControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00067367-0000-0000-C000-000000000046")
    _OlkTimeZoneControl : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AppointmentTimeField( 
            /* [retval][out] */ OlAppointmentTimeField *AppointmentTimeField) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AppointmentTimeField( 
            /* [in] */ OlAppointmentTimeField AppointmentTimeField) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BorderStyle( 
            /* [retval][out] */ OlBorderStyle *BorderStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BorderStyle( 
            /* [in] */ OlBorderStyle BorderStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Locked( 
            /* [retval][out] */ VARIANT_BOOL *Locked) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Locked( 
            /* [in] */ VARIANT_BOOL Locked) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ /* external definition not present */ void **MouseIcon) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ /* external definition not present */ void *MouseIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ OlMousePointer *MousePointer) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ OlMousePointer MousePointer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedTimeZoneIndex( 
            /* [retval][out] */ long *SelectedTimeZoneIndex) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SelectedTimeZoneIndex( 
            /* [in] */ long SelectedTimeZoneIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *Value) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DropDown( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OlkTimeZoneControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OlkTimeZoneControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OlkTimeZoneControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OlkTimeZoneControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OlkTimeZoneControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OlkTimeZoneControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OlkTimeZoneControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OlkTimeZoneControl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AppointmentTimeField )( 
            _OlkTimeZoneControl * This,
            /* [retval][out] */ OlAppointmentTimeField *AppointmentTimeField);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AppointmentTimeField )( 
            _OlkTimeZoneControl * This,
            /* [in] */ OlAppointmentTimeField AppointmentTimeField);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            _OlkTimeZoneControl * This,
            /* [retval][out] */ OlBorderStyle *BorderStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            _OlkTimeZoneControl * This,
            /* [in] */ OlBorderStyle BorderStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _OlkTimeZoneControl * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _OlkTimeZoneControl * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Locked )( 
            _OlkTimeZoneControl * This,
            /* [retval][out] */ VARIANT_BOOL *Locked);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Locked )( 
            _OlkTimeZoneControl * This,
            /* [in] */ VARIANT_BOOL Locked);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            _OlkTimeZoneControl * This,
            /* [retval][out] */ /* external definition not present */ void **MouseIcon);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            _OlkTimeZoneControl * This,
            /* [in] */ /* external definition not present */ void *MouseIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            _OlkTimeZoneControl * This,
            /* [retval][out] */ OlMousePointer *MousePointer);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            _OlkTimeZoneControl * This,
            /* [in] */ OlMousePointer MousePointer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedTimeZoneIndex )( 
            _OlkTimeZoneControl * This,
            /* [retval][out] */ long *SelectedTimeZoneIndex);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SelectedTimeZoneIndex )( 
            _OlkTimeZoneControl * This,
            /* [in] */ long SelectedTimeZoneIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _OlkTimeZoneControl * This,
            /* [retval][out] */ VARIANT *Value);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            _OlkTimeZoneControl * This,
            /* [in] */ VARIANT Value);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DropDown )( 
            _OlkTimeZoneControl * This);
        
        END_INTERFACE
    } _OlkTimeZoneControlVtbl;

    interface _OlkTimeZoneControl
    {
        CONST_VTBL struct _OlkTimeZoneControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OlkTimeZoneControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OlkTimeZoneControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OlkTimeZoneControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OlkTimeZoneControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OlkTimeZoneControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OlkTimeZoneControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OlkTimeZoneControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OlkTimeZoneControl_get_AppointmentTimeField(This,AppointmentTimeField)	\
    ( (This)->lpVtbl -> get_AppointmentTimeField(This,AppointmentTimeField) ) 

#define _OlkTimeZoneControl_put_AppointmentTimeField(This,AppointmentTimeField)	\
    ( (This)->lpVtbl -> put_AppointmentTimeField(This,AppointmentTimeField) ) 

#define _OlkTimeZoneControl_get_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,BorderStyle) ) 

#define _OlkTimeZoneControl_put_BorderStyle(This,BorderStyle)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,BorderStyle) ) 

#define _OlkTimeZoneControl_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _OlkTimeZoneControl_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _OlkTimeZoneControl_get_Locked(This,Locked)	\
    ( (This)->lpVtbl -> get_Locked(This,Locked) ) 

#define _OlkTimeZoneControl_put_Locked(This,Locked)	\
    ( (This)->lpVtbl -> put_Locked(This,Locked) ) 

#define _OlkTimeZoneControl_get_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,MouseIcon) ) 

#define _OlkTimeZoneControl_put_MouseIcon(This,MouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,MouseIcon) ) 

#define _OlkTimeZoneControl_get_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,MousePointer) ) 

#define _OlkTimeZoneControl_put_MousePointer(This,MousePointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,MousePointer) ) 

#define _OlkTimeZoneControl_get_SelectedTimeZoneIndex(This,SelectedTimeZoneIndex)	\
    ( (This)->lpVtbl -> get_SelectedTimeZoneIndex(This,SelectedTimeZoneIndex) ) 

#define _OlkTimeZoneControl_put_SelectedTimeZoneIndex(This,SelectedTimeZoneIndex)	\
    ( (This)->lpVtbl -> put_SelectedTimeZoneIndex(This,SelectedTimeZoneIndex) ) 

#define _OlkTimeZoneControl_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define _OlkTimeZoneControl_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define _OlkTimeZoneControl_DropDown(This)	\
    ( (This)->lpVtbl -> DropDown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OlkTimeZoneControl_INTERFACE_DEFINED__ */


#ifndef __OlkTimeZoneControlEvents_DISPINTERFACE_DEFINED__
#define __OlkTimeZoneControlEvents_DISPINTERFACE_DEFINED__

/* dispinterface OlkTimeZoneControlEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OlkTimeZoneControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00067368-0000-0000-C000-000000000046")
    OlkTimeZoneControlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OlkTimeZoneControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OlkTimeZoneControlEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OlkTimeZoneControlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OlkTimeZoneControlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OlkTimeZoneControlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OlkTimeZoneControlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OlkTimeZoneControlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OlkTimeZoneControlEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OlkTimeZoneControlEventsVtbl;

    interface OlkTimeZoneControlEvents
    {
        CONST_VTBL struct OlkTimeZoneControlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OlkTimeZoneControlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OlkTimeZoneControlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OlkTimeZoneControlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OlkTimeZoneControlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OlkTimeZoneControlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OlkTimeZoneControlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OlkTimeZoneControlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OlkTimeZoneControlEvents_DISPINTERFACE_DEFINED__ */


#ifndef __ApplicationEvents_DISPINTERFACE_DEFINED__
#define __ApplicationEvents_DISPINTERFACE_DEFINED__

/* dispinterface ApplicationEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ApplicationEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006304E-0000-0000-C000-000000000046")
    ApplicationEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ApplicationEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ApplicationEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ApplicationEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ApplicationEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ApplicationEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ApplicationEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ApplicationEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ApplicationEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ApplicationEventsVtbl;

    interface ApplicationEvents
    {
        CONST_VTBL struct ApplicationEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ApplicationEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ApplicationEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ApplicationEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ApplicationEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ApplicationEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ApplicationEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ApplicationEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ApplicationEvents_DISPINTERFACE_DEFINED__ */


#ifndef __PropertyPages_INTERFACE_DEFINED__
#define __PropertyPages_INTERFACE_DEFINED__

/* interface PropertyPages */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_PropertyPages;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063080-0000-0000-C000-000000000046")
    PropertyPages : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT Page,
            /* [optional][in] */ BSTR Title) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct PropertyPagesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            PropertyPages * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            PropertyPages * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            PropertyPages * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            PropertyPages * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            PropertyPages * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            PropertyPages * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            PropertyPages * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            PropertyPages * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            PropertyPages * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            PropertyPages * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            PropertyPages * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            PropertyPages * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            PropertyPages * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            PropertyPages * This,
            /* [in] */ VARIANT Page,
            /* [optional][in] */ BSTR Title);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            PropertyPages * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } PropertyPagesVtbl;

    interface PropertyPages
    {
        CONST_VTBL struct PropertyPagesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define PropertyPages_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define PropertyPages_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define PropertyPages_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define PropertyPages_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define PropertyPages_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define PropertyPages_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define PropertyPages_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define PropertyPages_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define PropertyPages_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define PropertyPages_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define PropertyPages_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define PropertyPages_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define PropertyPages_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define PropertyPages_Add(This,Page,Title)	\
    ( (This)->lpVtbl -> Add(This,Page,Title) ) 

#define PropertyPages_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __PropertyPages_INTERFACE_DEFINED__ */


#ifndef __RecurrencePattern_INTERFACE_DEFINED__
#define __RecurrencePattern_INTERFACE_DEFINED__

/* interface RecurrencePattern */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_RecurrencePattern;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063044-0000-0000-C000-000000000046")
    RecurrencePattern : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DayOfMonth( 
            /* [retval][out] */ long *DayOfMonth) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DayOfMonth( 
            /* [in] */ long DayOfMonth) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DayOfWeekMask( 
            /* [retval][out] */ OlDaysOfWeek *DayOfWeekMask) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DayOfWeekMask( 
            /* [in] */ OlDaysOfWeek DayOfWeekMask) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Duration( 
            /* [retval][out] */ long *Duration) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Duration( 
            /* [in] */ long Duration) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndTime( 
            /* [retval][out] */ DATE *EndTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndTime( 
            /* [in] */ DATE EndTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Exceptions( 
            /* [retval][out] */ Exceptions **Exceptions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Instance( 
            /* [retval][out] */ long *Instance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Instance( 
            /* [in] */ long Instance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Interval( 
            /* [retval][out] */ long *Interval) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Interval( 
            /* [in] */ long Interval) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MonthOfYear( 
            /* [retval][out] */ long *MonthOfYear) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MonthOfYear( 
            /* [in] */ long MonthOfYear) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoEndDate( 
            /* [retval][out] */ VARIANT_BOOL *NoEndDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoEndDate( 
            /* [in] */ VARIANT_BOOL NoEndDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Occurrences( 
            /* [retval][out] */ long *Occurrences) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Occurrences( 
            /* [in] */ long Occurrences) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternEndDate( 
            /* [retval][out] */ DATE *PatternEndDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PatternEndDate( 
            /* [in] */ DATE PatternEndDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PatternStartDate( 
            /* [retval][out] */ DATE *PatternStartDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PatternStartDate( 
            /* [in] */ DATE PatternStartDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RecurrenceType( 
            /* [retval][out] */ OlRecurrenceType *RecurrenceType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RecurrenceType( 
            /* [in] */ OlRecurrenceType RecurrenceType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Regenerate( 
            /* [retval][out] */ VARIANT_BOOL *Regenerate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Regenerate( 
            /* [in] */ VARIANT_BOOL Regenerate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartTime( 
            /* [retval][out] */ DATE *StartTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartTime( 
            /* [in] */ DATE StartTime) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetOccurrence( 
            /* [in] */ DATE StartDate,
            /* [retval][out] */ _AppointmentItem **AppointmentItem) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct RecurrencePatternVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            RecurrencePattern * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            RecurrencePattern * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            RecurrencePattern * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            RecurrencePattern * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            RecurrencePattern * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            RecurrencePattern * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            RecurrencePattern * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            RecurrencePattern * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            RecurrencePattern * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            RecurrencePattern * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            RecurrencePattern * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DayOfMonth )( 
            RecurrencePattern * This,
            /* [retval][out] */ long *DayOfMonth);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DayOfMonth )( 
            RecurrencePattern * This,
            /* [in] */ long DayOfMonth);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DayOfWeekMask )( 
            RecurrencePattern * This,
            /* [retval][out] */ OlDaysOfWeek *DayOfWeekMask);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DayOfWeekMask )( 
            RecurrencePattern * This,
            /* [in] */ OlDaysOfWeek DayOfWeekMask);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            RecurrencePattern * This,
            /* [retval][out] */ long *Duration);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Duration )( 
            RecurrencePattern * This,
            /* [in] */ long Duration);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndTime )( 
            RecurrencePattern * This,
            /* [retval][out] */ DATE *EndTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndTime )( 
            RecurrencePattern * This,
            /* [in] */ DATE EndTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Exceptions )( 
            RecurrencePattern * This,
            /* [retval][out] */ Exceptions **Exceptions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Instance )( 
            RecurrencePattern * This,
            /* [retval][out] */ long *Instance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Instance )( 
            RecurrencePattern * This,
            /* [in] */ long Instance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Interval )( 
            RecurrencePattern * This,
            /* [retval][out] */ long *Interval);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Interval )( 
            RecurrencePattern * This,
            /* [in] */ long Interval);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MonthOfYear )( 
            RecurrencePattern * This,
            /* [retval][out] */ long *MonthOfYear);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MonthOfYear )( 
            RecurrencePattern * This,
            /* [in] */ long MonthOfYear);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoEndDate )( 
            RecurrencePattern * This,
            /* [retval][out] */ VARIANT_BOOL *NoEndDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoEndDate )( 
            RecurrencePattern * This,
            /* [in] */ VARIANT_BOOL NoEndDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Occurrences )( 
            RecurrencePattern * This,
            /* [retval][out] */ long *Occurrences);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Occurrences )( 
            RecurrencePattern * This,
            /* [in] */ long Occurrences);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternEndDate )( 
            RecurrencePattern * This,
            /* [retval][out] */ DATE *PatternEndDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PatternEndDate )( 
            RecurrencePattern * This,
            /* [in] */ DATE PatternEndDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PatternStartDate )( 
            RecurrencePattern * This,
            /* [retval][out] */ DATE *PatternStartDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PatternStartDate )( 
            RecurrencePattern * This,
            /* [in] */ DATE PatternStartDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecurrenceType )( 
            RecurrencePattern * This,
            /* [retval][out] */ OlRecurrenceType *RecurrenceType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RecurrenceType )( 
            RecurrencePattern * This,
            /* [in] */ OlRecurrenceType RecurrenceType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Regenerate )( 
            RecurrencePattern * This,
            /* [retval][out] */ VARIANT_BOOL *Regenerate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Regenerate )( 
            RecurrencePattern * This,
            /* [in] */ VARIANT_BOOL Regenerate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartTime )( 
            RecurrencePattern * This,
            /* [retval][out] */ DATE *StartTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartTime )( 
            RecurrencePattern * This,
            /* [in] */ DATE StartTime);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetOccurrence )( 
            RecurrencePattern * This,
            /* [in] */ DATE StartDate,
            /* [retval][out] */ _AppointmentItem **AppointmentItem);
        
        END_INTERFACE
    } RecurrencePatternVtbl;

    interface RecurrencePattern
    {
        CONST_VTBL struct RecurrencePatternVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define RecurrencePattern_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define RecurrencePattern_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define RecurrencePattern_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define RecurrencePattern_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define RecurrencePattern_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define RecurrencePattern_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define RecurrencePattern_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define RecurrencePattern_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define RecurrencePattern_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define RecurrencePattern_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define RecurrencePattern_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define RecurrencePattern_get_DayOfMonth(This,DayOfMonth)	\
    ( (This)->lpVtbl -> get_DayOfMonth(This,DayOfMonth) ) 

#define RecurrencePattern_put_DayOfMonth(This,DayOfMonth)	\
    ( (This)->lpVtbl -> put_DayOfMonth(This,DayOfMonth) ) 

#define RecurrencePattern_get_DayOfWeekMask(This,DayOfWeekMask)	\
    ( (This)->lpVtbl -> get_DayOfWeekMask(This,DayOfWeekMask) ) 

#define RecurrencePattern_put_DayOfWeekMask(This,DayOfWeekMask)	\
    ( (This)->lpVtbl -> put_DayOfWeekMask(This,DayOfWeekMask) ) 

#define RecurrencePattern_get_Duration(This,Duration)	\
    ( (This)->lpVtbl -> get_Duration(This,Duration) ) 

#define RecurrencePattern_put_Duration(This,Duration)	\
    ( (This)->lpVtbl -> put_Duration(This,Duration) ) 

#define RecurrencePattern_get_EndTime(This,EndTime)	\
    ( (This)->lpVtbl -> get_EndTime(This,EndTime) ) 

#define RecurrencePattern_put_EndTime(This,EndTime)	\
    ( (This)->lpVtbl -> put_EndTime(This,EndTime) ) 

#define RecurrencePattern_get_Exceptions(This,Exceptions)	\
    ( (This)->lpVtbl -> get_Exceptions(This,Exceptions) ) 

#define RecurrencePattern_get_Instance(This,Instance)	\
    ( (This)->lpVtbl -> get_Instance(This,Instance) ) 

#define RecurrencePattern_put_Instance(This,Instance)	\
    ( (This)->lpVtbl -> put_Instance(This,Instance) ) 

#define RecurrencePattern_get_Interval(This,Interval)	\
    ( (This)->lpVtbl -> get_Interval(This,Interval) ) 

#define RecurrencePattern_put_Interval(This,Interval)	\
    ( (This)->lpVtbl -> put_Interval(This,Interval) ) 

#define RecurrencePattern_get_MonthOfYear(This,MonthOfYear)	\
    ( (This)->lpVtbl -> get_MonthOfYear(This,MonthOfYear) ) 

#define RecurrencePattern_put_MonthOfYear(This,MonthOfYear)	\
    ( (This)->lpVtbl -> put_MonthOfYear(This,MonthOfYear) ) 

#define RecurrencePattern_get_NoEndDate(This,NoEndDate)	\
    ( (This)->lpVtbl -> get_NoEndDate(This,NoEndDate) ) 

#define RecurrencePattern_put_NoEndDate(This,NoEndDate)	\
    ( (This)->lpVtbl -> put_NoEndDate(This,NoEndDate) ) 

#define RecurrencePattern_get_Occurrences(This,Occurrences)	\
    ( (This)->lpVtbl -> get_Occurrences(This,Occurrences) ) 

#define RecurrencePattern_put_Occurrences(This,Occurrences)	\
    ( (This)->lpVtbl -> put_Occurrences(This,Occurrences) ) 

#define RecurrencePattern_get_PatternEndDate(This,PatternEndDate)	\
    ( (This)->lpVtbl -> get_PatternEndDate(This,PatternEndDate) ) 

#define RecurrencePattern_put_PatternEndDate(This,PatternEndDate)	\
    ( (This)->lpVtbl -> put_PatternEndDate(This,PatternEndDate) ) 

#define RecurrencePattern_get_PatternStartDate(This,PatternStartDate)	\
    ( (This)->lpVtbl -> get_PatternStartDate(This,PatternStartDate) ) 

#define RecurrencePattern_put_PatternStartDate(This,PatternStartDate)	\
    ( (This)->lpVtbl -> put_PatternStartDate(This,PatternStartDate) ) 

#define RecurrencePattern_get_RecurrenceType(This,RecurrenceType)	\
    ( (This)->lpVtbl -> get_RecurrenceType(This,RecurrenceType) ) 

#define RecurrencePattern_put_RecurrenceType(This,RecurrenceType)	\
    ( (This)->lpVtbl -> put_RecurrenceType(This,RecurrenceType) ) 

#define RecurrencePattern_get_Regenerate(This,Regenerate)	\
    ( (This)->lpVtbl -> get_Regenerate(This,Regenerate) ) 

#define RecurrencePattern_put_Regenerate(This,Regenerate)	\
    ( (This)->lpVtbl -> put_Regenerate(This,Regenerate) ) 

#define RecurrencePattern_get_StartTime(This,StartTime)	\
    ( (This)->lpVtbl -> get_StartTime(This,StartTime) ) 

#define RecurrencePattern_put_StartTime(This,StartTime)	\
    ( (This)->lpVtbl -> put_StartTime(This,StartTime) ) 

#define RecurrencePattern_GetOccurrence(This,StartDate,AppointmentItem)	\
    ( (This)->lpVtbl -> GetOccurrence(This,StartDate,AppointmentItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __RecurrencePattern_INTERFACE_DEFINED__ */


#ifndef __Exceptions_INTERFACE_DEFINED__
#define __Exceptions_INTERFACE_DEFINED__

/* interface Exceptions */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Exceptions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006304C-0000-0000-C000-000000000046")
    Exceptions : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Exception **Item) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ExceptionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Exceptions * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Exceptions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Exceptions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Exceptions * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Exceptions * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Exceptions * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Exceptions * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Exceptions * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Exceptions * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Exceptions * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Exceptions * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Exceptions * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Exceptions * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Exception **Item);
        
        END_INTERFACE
    } ExceptionsVtbl;

    interface Exceptions
    {
        CONST_VTBL struct ExceptionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Exceptions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Exceptions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Exceptions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Exceptions_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Exceptions_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Exceptions_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Exceptions_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Exceptions_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Exceptions_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Exceptions_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Exceptions_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Exceptions_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Exceptions_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Exceptions_INTERFACE_DEFINED__ */


#ifndef __Exception_INTERFACE_DEFINED__
#define __Exception_INTERFACE_DEFINED__

/* interface Exception */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Exception;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006304D-0000-0000-C000-000000000046")
    Exception : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AppointmentItem( 
            /* [retval][out] */ _AppointmentItem **AppointmentItem) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Deleted( 
            /* [retval][out] */ VARIANT_BOOL *Deleted) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalDate( 
            /* [retval][out] */ DATE *OriginalDate) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Exception * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Exception * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Exception * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Exception * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Exception * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Exception * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Exception * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Exception * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Exception * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Exception * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Exception * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AppointmentItem )( 
            Exception * This,
            /* [retval][out] */ _AppointmentItem **AppointmentItem);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Deleted )( 
            Exception * This,
            /* [retval][out] */ VARIANT_BOOL *Deleted);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OriginalDate )( 
            Exception * This,
            /* [retval][out] */ DATE *OriginalDate);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            Exception * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        END_INTERFACE
    } ExceptionVtbl;

    interface Exception
    {
        CONST_VTBL struct ExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Exception_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Exception_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Exception_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Exception_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Exception_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Exception_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Exception_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Exception_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Exception_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Exception_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Exception_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Exception_get_AppointmentItem(This,AppointmentItem)	\
    ( (This)->lpVtbl -> get_AppointmentItem(This,AppointmentItem) ) 

#define Exception_get_Deleted(This,Deleted)	\
    ( (This)->lpVtbl -> get_Deleted(This,Deleted) ) 

#define Exception_get_OriginalDate(This,OriginalDate)	\
    ( (This)->lpVtbl -> get_OriginalDate(This,OriginalDate) ) 

#define Exception_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Exception_INTERFACE_DEFINED__ */


#ifndef ___AppointmentItem_INTERFACE_DEFINED__
#define ___AppointmentItem_INTERFACE_DEFINED__

/* interface _AppointmentItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__AppointmentItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063033-0000-0000-C000-000000000046")
    _AppointmentItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AllDayEvent( 
            /* [retval][out] */ VARIANT_BOOL *AllDayEvent) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AllDayEvent( 
            /* [in] */ VARIANT_BOOL AllDayEvent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BusyStatus( 
            /* [retval][out] */ OlBusyStatus *BusyStatus) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BusyStatus( 
            /* [in] */ OlBusyStatus BusyStatus) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Duration( 
            /* [retval][out] */ long *Duration) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Duration( 
            /* [in] */ long Duration) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_End( 
            /* [retval][out] */ DATE *End) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_End( 
            /* [in] */ DATE End) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsOnlineMeeting( 
            /* [retval][out] */ VARIANT_BOOL *IsOnlineMeeting) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsOnlineMeeting( 
            /* [in] */ VARIANT_BOOL IsOnlineMeeting) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsRecurring( 
            /* [retval][out] */ VARIANT_BOOL *IsRecurring) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Location( 
            /* [retval][out] */ BSTR *Location) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Location( 
            /* [in] */ BSTR Location) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MeetingStatus( 
            /* [retval][out] */ OlMeetingStatus *MeetingStatus) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MeetingStatus( 
            /* [in] */ OlMeetingStatus MeetingStatus) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_NetMeetingAutoStart( 
            /* [retval][out] */ VARIANT_BOOL *NetMeetingAutoStart) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_NetMeetingAutoStart( 
            /* [in] */ VARIANT_BOOL NetMeetingAutoStart) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_NetMeetingOrganizerAlias( 
            /* [retval][out] */ BSTR *NetMeetingOrganizerAlias) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_NetMeetingOrganizerAlias( 
            /* [in] */ BSTR NetMeetingOrganizerAlias) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_NetMeetingServer( 
            /* [retval][out] */ BSTR *NetMeetingServer) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_NetMeetingServer( 
            /* [in] */ BSTR NetMeetingServer) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_NetMeetingType( 
            /* [retval][out] */ OlNetMeetingType *NetMeetingType) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_NetMeetingType( 
            /* [in] */ OlNetMeetingType NetMeetingType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OptionalAttendees( 
            /* [retval][out] */ BSTR *OptionalAttendees) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OptionalAttendees( 
            /* [in] */ BSTR OptionalAttendees) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Organizer( 
            /* [retval][out] */ BSTR *Organizer) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RecurrenceState( 
            /* [retval][out] */ OlRecurrenceState *RecurrenceState) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderMinutesBeforeStart( 
            /* [retval][out] */ long *ReminderMinutesBeforeStart) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderMinutesBeforeStart( 
            /* [in] */ long ReminderMinutesBeforeStart) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault( 
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderOverrideDefault( 
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderPlaySound( 
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderPlaySound( 
            /* [in] */ VARIANT_BOOL ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSet( 
            /* [retval][out] */ VARIANT_BOOL *ReminderSet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSet( 
            /* [in] */ VARIANT_BOOL ReminderSet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSoundFile( 
            /* [retval][out] */ BSTR *ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSoundFile( 
            /* [in] */ BSTR ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyTime( 
            /* [retval][out] */ DATE *ReplyTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReplyTime( 
            /* [in] */ DATE ReplyTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RequiredAttendees( 
            /* [retval][out] */ BSTR *RequiredAttendees) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RequiredAttendees( 
            /* [in] */ BSTR RequiredAttendees) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Resources( 
            /* [retval][out] */ BSTR *Resources) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Resources( 
            /* [in] */ BSTR Resources) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ResponseRequested( 
            /* [retval][out] */ VARIANT_BOOL *ResponseRequested) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ResponseRequested( 
            /* [in] */ VARIANT_BOOL ResponseRequested) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ResponseStatus( 
            /* [retval][out] */ OlResponseStatus *ResponseStatus) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Start( 
            /* [retval][out] */ DATE *Start) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Start( 
            /* [in] */ DATE Start) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearRecurrencePattern( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ForwardAsVcal( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRecurrencePattern( 
            /* [retval][out] */ RecurrencePattern **RecurrencPattern) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Respond( 
            /* [in] */ OlMeetingResponse Response,
            /* [optional][in] */ VARIANT fNoUI,
            /* [optional][in] */ VARIANT fAdditionalTextDialog,
            /* [retval][out] */ _MeetingItem **ResponseItem) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Send( void) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_NetMeetingDocPathName( 
            /* [retval][out] */ BSTR *NetMeetingDocPathName) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_NetMeetingDocPathName( 
            /* [in] */ BSTR NetMeetingDocPathName) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_NetShowURL( 
            /* [retval][out] */ BSTR *NetShowURL) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_NetShowURL( 
            /* [in] */ BSTR NetShowURL) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConferenceServerAllowExternal( 
            /* [retval][out] */ VARIANT_BOOL *ConferenceServerAllowExternal) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConferenceServerAllowExternal( 
            /* [in] */ VARIANT_BOOL ConferenceServerAllowExternal) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConferenceServerPassword( 
            /* [retval][out] */ BSTR *ConferenceServerPassword) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConferenceServerPassword( 
            /* [in] */ BSTR ConferenceServerPassword) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InternetCodepage( 
            /* [retval][out] */ long *InternetCodepage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InternetCodepage( 
            /* [in] */ long InternetCodepage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MeetingWorkspaceURL( 
            /* [retval][out] */ BSTR *MeetingWorkspaceURL) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SendUsingAccount( 
            /* [retval][out] */ _Account **SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SendUsingAccount( 
            /* [in] */ _Account *SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GlobalAppointmentID( 
            /* [retval][out] */ BSTR *GlobalAppointmentID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceUpdateToAllAttendees( 
            /* [retval][out] */ VARIANT_BOOL *ForceUpdateToAllAttendees) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceUpdateToAllAttendees( 
            /* [in] */ VARIANT_BOOL ForceUpdateToAllAttendees) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartUTC( 
            /* [retval][out] */ DATE *StartUTC) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartUTC( 
            /* [in] */ DATE StartUTC) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndUTC( 
            /* [retval][out] */ DATE *EndUTC) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndUTC( 
            /* [in] */ DATE EndUTC) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartInStartTimeZone( 
            /* [retval][out] */ DATE *StartInStartTimeZone) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartInStartTimeZone( 
            /* [in] */ DATE StartInStartTimeZone) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndInEndTimeZone( 
            /* [retval][out] */ DATE *EndInEndTimeZone) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndInEndTimeZone( 
            /* [in] */ DATE EndInEndTimeZone) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartTimeZone( 
            /* [retval][out] */ _TimeZone **StartTimeZone) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartTimeZone( 
            /* [in] */ _TimeZone *StartTimeZone) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndTimeZone( 
            /* [retval][out] */ _TimeZone **EndTimeZone) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndTimeZone( 
            /* [in] */ _TimeZone *EndTimeZone) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CopyTo( 
            /* [in] */ MAPIFolder *DestinationFolder,
            /* [in] */ OlAppointmentCopyOptions CopyOptions,
            /* [retval][out] */ _AppointmentItem **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetOrganizer( 
            /* [retval][out] */ AddressEntry **Organizer) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AppointmentItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AppointmentItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AppointmentItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AppointmentItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AppointmentItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AppointmentItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AppointmentItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AppointmentItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _AppointmentItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _AppointmentItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _AppointmentItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _AppointmentItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _AppointmentItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _AppointmentItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _AppointmentItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _AppointmentItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _AppointmentItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _AppointmentItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _AppointmentItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _AppointmentItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _AppointmentItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _AppointmentItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _AppointmentItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _AppointmentItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _AppointmentItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _AppointmentItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _AppointmentItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _AppointmentItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _AppointmentItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _AppointmentItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _AppointmentItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _AppointmentItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _AppointmentItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _AppointmentItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _AppointmentItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _AppointmentItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _AppointmentItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _AppointmentItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AllDayEvent )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *AllDayEvent);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AllDayEvent )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL AllDayEvent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BusyStatus )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlBusyStatus *BusyStatus);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BusyStatus )( 
            _AppointmentItem * This,
            /* [in] */ OlBusyStatus BusyStatus);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            _AppointmentItem * This,
            /* [retval][out] */ long *Duration);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Duration )( 
            _AppointmentItem * This,
            /* [in] */ long Duration);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_End )( 
            _AppointmentItem * This,
            /* [retval][out] */ DATE *End);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_End )( 
            _AppointmentItem * This,
            /* [in] */ DATE End);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsOnlineMeeting )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsOnlineMeeting);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsOnlineMeeting )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL IsOnlineMeeting);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsRecurring )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsRecurring);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Location )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *Location);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Location )( 
            _AppointmentItem * This,
            /* [in] */ BSTR Location);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MeetingStatus )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlMeetingStatus *MeetingStatus);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MeetingStatus )( 
            _AppointmentItem * This,
            /* [in] */ OlMeetingStatus MeetingStatus);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NetMeetingAutoStart )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *NetMeetingAutoStart);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NetMeetingAutoStart )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL NetMeetingAutoStart);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NetMeetingOrganizerAlias )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *NetMeetingOrganizerAlias);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NetMeetingOrganizerAlias )( 
            _AppointmentItem * This,
            /* [in] */ BSTR NetMeetingOrganizerAlias);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NetMeetingServer )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *NetMeetingServer);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NetMeetingServer )( 
            _AppointmentItem * This,
            /* [in] */ BSTR NetMeetingServer);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NetMeetingType )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlNetMeetingType *NetMeetingType);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NetMeetingType )( 
            _AppointmentItem * This,
            /* [in] */ OlNetMeetingType NetMeetingType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OptionalAttendees )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *OptionalAttendees);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OptionalAttendees )( 
            _AppointmentItem * This,
            /* [in] */ BSTR OptionalAttendees);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Organizer )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *Organizer);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _AppointmentItem * This,
            /* [retval][out] */ Recipients **Recipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecurrenceState )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlRecurrenceState *RecurrenceState);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderMinutesBeforeStart )( 
            _AppointmentItem * This,
            /* [retval][out] */ long *ReminderMinutesBeforeStart);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderMinutesBeforeStart )( 
            _AppointmentItem * This,
            /* [in] */ long ReminderMinutesBeforeStart);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderOverrideDefault )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderOverrideDefault )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderPlaySound )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderPlaySound )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL ReminderPlaySound);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSet )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderSet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSet )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL ReminderSet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSoundFile )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *ReminderSoundFile);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSoundFile )( 
            _AppointmentItem * This,
            /* [in] */ BSTR ReminderSoundFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyTime )( 
            _AppointmentItem * This,
            /* [retval][out] */ DATE *ReplyTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReplyTime )( 
            _AppointmentItem * This,
            /* [in] */ DATE ReplyTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RequiredAttendees )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *RequiredAttendees);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RequiredAttendees )( 
            _AppointmentItem * This,
            /* [in] */ BSTR RequiredAttendees);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Resources )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *Resources);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Resources )( 
            _AppointmentItem * This,
            /* [in] */ BSTR Resources);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ResponseRequested )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *ResponseRequested);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ResponseRequested )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL ResponseRequested);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ResponseStatus )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlResponseStatus *ResponseStatus);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Start )( 
            _AppointmentItem * This,
            /* [retval][out] */ DATE *Start);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Start )( 
            _AppointmentItem * This,
            /* [in] */ DATE Start);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearRecurrencePattern )( 
            _AppointmentItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ForwardAsVcal )( 
            _AppointmentItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRecurrencePattern )( 
            _AppointmentItem * This,
            /* [retval][out] */ RecurrencePattern **RecurrencPattern);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Respond )( 
            _AppointmentItem * This,
            /* [in] */ OlMeetingResponse Response,
            /* [optional][in] */ VARIANT fNoUI,
            /* [optional][in] */ VARIANT fAdditionalTextDialog,
            /* [retval][out] */ _MeetingItem **ResponseItem);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Send )( 
            _AppointmentItem * This);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NetMeetingDocPathName )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *NetMeetingDocPathName);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NetMeetingDocPathName )( 
            _AppointmentItem * This,
            /* [in] */ BSTR NetMeetingDocPathName);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NetShowURL )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *NetShowURL);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NetShowURL )( 
            _AppointmentItem * This,
            /* [in] */ BSTR NetShowURL);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _AppointmentItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConferenceServerAllowExternal )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *ConferenceServerAllowExternal);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConferenceServerAllowExternal )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL ConferenceServerAllowExternal);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConferenceServerPassword )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *ConferenceServerPassword);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConferenceServerPassword )( 
            _AppointmentItem * This,
            /* [in] */ BSTR ConferenceServerPassword);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _AppointmentItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _AppointmentItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InternetCodepage )( 
            _AppointmentItem * This,
            /* [retval][out] */ long *InternetCodepage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InternetCodepage )( 
            _AppointmentItem * This,
            /* [in] */ long InternetCodepage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _AppointmentItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _AppointmentItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MeetingWorkspaceURL )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *MeetingWorkspaceURL);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _AppointmentItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _AppointmentItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SendUsingAccount )( 
            _AppointmentItem * This,
            /* [retval][out] */ _Account **SendUsingAccount);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SendUsingAccount )( 
            _AppointmentItem * This,
            /* [in] */ _Account *SendUsingAccount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GlobalAppointmentID )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *GlobalAppointmentID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceUpdateToAllAttendees )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT_BOOL *ForceUpdateToAllAttendees);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceUpdateToAllAttendees )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT_BOOL ForceUpdateToAllAttendees);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartUTC )( 
            _AppointmentItem * This,
            /* [retval][out] */ DATE *StartUTC);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartUTC )( 
            _AppointmentItem * This,
            /* [in] */ DATE StartUTC);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndUTC )( 
            _AppointmentItem * This,
            /* [retval][out] */ DATE *EndUTC);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndUTC )( 
            _AppointmentItem * This,
            /* [in] */ DATE EndUTC);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartInStartTimeZone )( 
            _AppointmentItem * This,
            /* [retval][out] */ DATE *StartInStartTimeZone);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartInStartTimeZone )( 
            _AppointmentItem * This,
            /* [in] */ DATE StartInStartTimeZone);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndInEndTimeZone )( 
            _AppointmentItem * This,
            /* [retval][out] */ DATE *EndInEndTimeZone);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndInEndTimeZone )( 
            _AppointmentItem * This,
            /* [in] */ DATE EndInEndTimeZone);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartTimeZone )( 
            _AppointmentItem * This,
            /* [retval][out] */ _TimeZone **StartTimeZone);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartTimeZone )( 
            _AppointmentItem * This,
            /* [in] */ _TimeZone *StartTimeZone);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndTimeZone )( 
            _AppointmentItem * This,
            /* [retval][out] */ _TimeZone **EndTimeZone);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndTimeZone )( 
            _AppointmentItem * This,
            /* [in] */ _TimeZone *EndTimeZone);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _AppointmentItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _AppointmentItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTo )( 
            _AppointmentItem * This,
            /* [in] */ MAPIFolder *DestinationFolder,
            /* [in] */ OlAppointmentCopyOptions CopyOptions,
            /* [retval][out] */ _AppointmentItem **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _AppointmentItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _AppointmentItem * This,
            /* [in] */ VARIANT RTFBody);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetOrganizer )( 
            _AppointmentItem * This,
            /* [retval][out] */ AddressEntry **Organizer);
        
        END_INTERFACE
    } _AppointmentItemVtbl;

    interface _AppointmentItem
    {
        CONST_VTBL struct _AppointmentItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AppointmentItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AppointmentItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AppointmentItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AppointmentItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AppointmentItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AppointmentItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AppointmentItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _AppointmentItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _AppointmentItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _AppointmentItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _AppointmentItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _AppointmentItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _AppointmentItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _AppointmentItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _AppointmentItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _AppointmentItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _AppointmentItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _AppointmentItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _AppointmentItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _AppointmentItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _AppointmentItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _AppointmentItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _AppointmentItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _AppointmentItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _AppointmentItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _AppointmentItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _AppointmentItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _AppointmentItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _AppointmentItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _AppointmentItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _AppointmentItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _AppointmentItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _AppointmentItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _AppointmentItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _AppointmentItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _AppointmentItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _AppointmentItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _AppointmentItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _AppointmentItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _AppointmentItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _AppointmentItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _AppointmentItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _AppointmentItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _AppointmentItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _AppointmentItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _AppointmentItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _AppointmentItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _AppointmentItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _AppointmentItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _AppointmentItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _AppointmentItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _AppointmentItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _AppointmentItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _AppointmentItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _AppointmentItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _AppointmentItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _AppointmentItem_get_AllDayEvent(This,AllDayEvent)	\
    ( (This)->lpVtbl -> get_AllDayEvent(This,AllDayEvent) ) 

#define _AppointmentItem_put_AllDayEvent(This,AllDayEvent)	\
    ( (This)->lpVtbl -> put_AllDayEvent(This,AllDayEvent) ) 

#define _AppointmentItem_get_BusyStatus(This,BusyStatus)	\
    ( (This)->lpVtbl -> get_BusyStatus(This,BusyStatus) ) 

#define _AppointmentItem_put_BusyStatus(This,BusyStatus)	\
    ( (This)->lpVtbl -> put_BusyStatus(This,BusyStatus) ) 

#define _AppointmentItem_get_Duration(This,Duration)	\
    ( (This)->lpVtbl -> get_Duration(This,Duration) ) 

#define _AppointmentItem_put_Duration(This,Duration)	\
    ( (This)->lpVtbl -> put_Duration(This,Duration) ) 

#define _AppointmentItem_get_End(This,End)	\
    ( (This)->lpVtbl -> get_End(This,End) ) 

#define _AppointmentItem_put_End(This,End)	\
    ( (This)->lpVtbl -> put_End(This,End) ) 

#define _AppointmentItem_get_IsOnlineMeeting(This,IsOnlineMeeting)	\
    ( (This)->lpVtbl -> get_IsOnlineMeeting(This,IsOnlineMeeting) ) 

#define _AppointmentItem_put_IsOnlineMeeting(This,IsOnlineMeeting)	\
    ( (This)->lpVtbl -> put_IsOnlineMeeting(This,IsOnlineMeeting) ) 

#define _AppointmentItem_get_IsRecurring(This,IsRecurring)	\
    ( (This)->lpVtbl -> get_IsRecurring(This,IsRecurring) ) 

#define _AppointmentItem_get_Location(This,Location)	\
    ( (This)->lpVtbl -> get_Location(This,Location) ) 

#define _AppointmentItem_put_Location(This,Location)	\
    ( (This)->lpVtbl -> put_Location(This,Location) ) 

#define _AppointmentItem_get_MeetingStatus(This,MeetingStatus)	\
    ( (This)->lpVtbl -> get_MeetingStatus(This,MeetingStatus) ) 

#define _AppointmentItem_put_MeetingStatus(This,MeetingStatus)	\
    ( (This)->lpVtbl -> put_MeetingStatus(This,MeetingStatus) ) 

#define _AppointmentItem_get_NetMeetingAutoStart(This,NetMeetingAutoStart)	\
    ( (This)->lpVtbl -> get_NetMeetingAutoStart(This,NetMeetingAutoStart) ) 

#define _AppointmentItem_put_NetMeetingAutoStart(This,NetMeetingAutoStart)	\
    ( (This)->lpVtbl -> put_NetMeetingAutoStart(This,NetMeetingAutoStart) ) 

#define _AppointmentItem_get_NetMeetingOrganizerAlias(This,NetMeetingOrganizerAlias)	\
    ( (This)->lpVtbl -> get_NetMeetingOrganizerAlias(This,NetMeetingOrganizerAlias) ) 

#define _AppointmentItem_put_NetMeetingOrganizerAlias(This,NetMeetingOrganizerAlias)	\
    ( (This)->lpVtbl -> put_NetMeetingOrganizerAlias(This,NetMeetingOrganizerAlias) ) 

#define _AppointmentItem_get_NetMeetingServer(This,NetMeetingServer)	\
    ( (This)->lpVtbl -> get_NetMeetingServer(This,NetMeetingServer) ) 

#define _AppointmentItem_put_NetMeetingServer(This,NetMeetingServer)	\
    ( (This)->lpVtbl -> put_NetMeetingServer(This,NetMeetingServer) ) 

#define _AppointmentItem_get_NetMeetingType(This,NetMeetingType)	\
    ( (This)->lpVtbl -> get_NetMeetingType(This,NetMeetingType) ) 

#define _AppointmentItem_put_NetMeetingType(This,NetMeetingType)	\
    ( (This)->lpVtbl -> put_NetMeetingType(This,NetMeetingType) ) 

#define _AppointmentItem_get_OptionalAttendees(This,OptionalAttendees)	\
    ( (This)->lpVtbl -> get_OptionalAttendees(This,OptionalAttendees) ) 

#define _AppointmentItem_put_OptionalAttendees(This,OptionalAttendees)	\
    ( (This)->lpVtbl -> put_OptionalAttendees(This,OptionalAttendees) ) 

#define _AppointmentItem_get_Organizer(This,Organizer)	\
    ( (This)->lpVtbl -> get_Organizer(This,Organizer) ) 

#define _AppointmentItem_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#define _AppointmentItem_get_RecurrenceState(This,RecurrenceState)	\
    ( (This)->lpVtbl -> get_RecurrenceState(This,RecurrenceState) ) 

#define _AppointmentItem_get_ReminderMinutesBeforeStart(This,ReminderMinutesBeforeStart)	\
    ( (This)->lpVtbl -> get_ReminderMinutesBeforeStart(This,ReminderMinutesBeforeStart) ) 

#define _AppointmentItem_put_ReminderMinutesBeforeStart(This,ReminderMinutesBeforeStart)	\
    ( (This)->lpVtbl -> put_ReminderMinutesBeforeStart(This,ReminderMinutesBeforeStart) ) 

#define _AppointmentItem_get_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> get_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _AppointmentItem_put_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> put_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _AppointmentItem_get_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> get_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _AppointmentItem_put_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> put_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _AppointmentItem_get_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> get_ReminderSet(This,ReminderSet) ) 

#define _AppointmentItem_put_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> put_ReminderSet(This,ReminderSet) ) 

#define _AppointmentItem_get_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> get_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _AppointmentItem_put_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> put_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _AppointmentItem_get_ReplyTime(This,ReplyTime)	\
    ( (This)->lpVtbl -> get_ReplyTime(This,ReplyTime) ) 

#define _AppointmentItem_put_ReplyTime(This,ReplyTime)	\
    ( (This)->lpVtbl -> put_ReplyTime(This,ReplyTime) ) 

#define _AppointmentItem_get_RequiredAttendees(This,RequiredAttendees)	\
    ( (This)->lpVtbl -> get_RequiredAttendees(This,RequiredAttendees) ) 

#define _AppointmentItem_put_RequiredAttendees(This,RequiredAttendees)	\
    ( (This)->lpVtbl -> put_RequiredAttendees(This,RequiredAttendees) ) 

#define _AppointmentItem_get_Resources(This,Resources)	\
    ( (This)->lpVtbl -> get_Resources(This,Resources) ) 

#define _AppointmentItem_put_Resources(This,Resources)	\
    ( (This)->lpVtbl -> put_Resources(This,Resources) ) 

#define _AppointmentItem_get_ResponseRequested(This,ResponseRequested)	\
    ( (This)->lpVtbl -> get_ResponseRequested(This,ResponseRequested) ) 

#define _AppointmentItem_put_ResponseRequested(This,ResponseRequested)	\
    ( (This)->lpVtbl -> put_ResponseRequested(This,ResponseRequested) ) 

#define _AppointmentItem_get_ResponseStatus(This,ResponseStatus)	\
    ( (This)->lpVtbl -> get_ResponseStatus(This,ResponseStatus) ) 

#define _AppointmentItem_get_Start(This,Start)	\
    ( (This)->lpVtbl -> get_Start(This,Start) ) 

#define _AppointmentItem_put_Start(This,Start)	\
    ( (This)->lpVtbl -> put_Start(This,Start) ) 

#define _AppointmentItem_ClearRecurrencePattern(This)	\
    ( (This)->lpVtbl -> ClearRecurrencePattern(This) ) 

#define _AppointmentItem_ForwardAsVcal(This,Item)	\
    ( (This)->lpVtbl -> ForwardAsVcal(This,Item) ) 

#define _AppointmentItem_GetRecurrencePattern(This,RecurrencPattern)	\
    ( (This)->lpVtbl -> GetRecurrencePattern(This,RecurrencPattern) ) 

#define _AppointmentItem_Respond(This,Response,fNoUI,fAdditionalTextDialog,ResponseItem)	\
    ( (This)->lpVtbl -> Respond(This,Response,fNoUI,fAdditionalTextDialog,ResponseItem) ) 

#define _AppointmentItem_Send(This)	\
    ( (This)->lpVtbl -> Send(This) ) 

#define _AppointmentItem_get_NetMeetingDocPathName(This,NetMeetingDocPathName)	\
    ( (This)->lpVtbl -> get_NetMeetingDocPathName(This,NetMeetingDocPathName) ) 

#define _AppointmentItem_put_NetMeetingDocPathName(This,NetMeetingDocPathName)	\
    ( (This)->lpVtbl -> put_NetMeetingDocPathName(This,NetMeetingDocPathName) ) 

#define _AppointmentItem_get_NetShowURL(This,NetShowURL)	\
    ( (This)->lpVtbl -> get_NetShowURL(This,NetShowURL) ) 

#define _AppointmentItem_put_NetShowURL(This,NetShowURL)	\
    ( (This)->lpVtbl -> put_NetShowURL(This,NetShowURL) ) 

#define _AppointmentItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _AppointmentItem_get_ConferenceServerAllowExternal(This,ConferenceServerAllowExternal)	\
    ( (This)->lpVtbl -> get_ConferenceServerAllowExternal(This,ConferenceServerAllowExternal) ) 

#define _AppointmentItem_put_ConferenceServerAllowExternal(This,ConferenceServerAllowExternal)	\
    ( (This)->lpVtbl -> put_ConferenceServerAllowExternal(This,ConferenceServerAllowExternal) ) 

#define _AppointmentItem_get_ConferenceServerPassword(This,ConferenceServerPassword)	\
    ( (This)->lpVtbl -> get_ConferenceServerPassword(This,ConferenceServerPassword) ) 

#define _AppointmentItem_put_ConferenceServerPassword(This,ConferenceServerPassword)	\
    ( (This)->lpVtbl -> put_ConferenceServerPassword(This,ConferenceServerPassword) ) 

#define _AppointmentItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _AppointmentItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _AppointmentItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _AppointmentItem_get_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> get_InternetCodepage(This,InternetCodepage) ) 

#define _AppointmentItem_put_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> put_InternetCodepage(This,InternetCodepage) ) 

#define _AppointmentItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _AppointmentItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _AppointmentItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _AppointmentItem_get_MeetingWorkspaceURL(This,MeetingWorkspaceURL)	\
    ( (This)->lpVtbl -> get_MeetingWorkspaceURL(This,MeetingWorkspaceURL) ) 

#define _AppointmentItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _AppointmentItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _AppointmentItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _AppointmentItem_get_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> get_SendUsingAccount(This,SendUsingAccount) ) 

#define _AppointmentItem_put_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> put_SendUsingAccount(This,SendUsingAccount) ) 

#define _AppointmentItem_get_GlobalAppointmentID(This,GlobalAppointmentID)	\
    ( (This)->lpVtbl -> get_GlobalAppointmentID(This,GlobalAppointmentID) ) 

#define _AppointmentItem_get_ForceUpdateToAllAttendees(This,ForceUpdateToAllAttendees)	\
    ( (This)->lpVtbl -> get_ForceUpdateToAllAttendees(This,ForceUpdateToAllAttendees) ) 

#define _AppointmentItem_put_ForceUpdateToAllAttendees(This,ForceUpdateToAllAttendees)	\
    ( (This)->lpVtbl -> put_ForceUpdateToAllAttendees(This,ForceUpdateToAllAttendees) ) 

#define _AppointmentItem_get_StartUTC(This,StartUTC)	\
    ( (This)->lpVtbl -> get_StartUTC(This,StartUTC) ) 

#define _AppointmentItem_put_StartUTC(This,StartUTC)	\
    ( (This)->lpVtbl -> put_StartUTC(This,StartUTC) ) 

#define _AppointmentItem_get_EndUTC(This,EndUTC)	\
    ( (This)->lpVtbl -> get_EndUTC(This,EndUTC) ) 

#define _AppointmentItem_put_EndUTC(This,EndUTC)	\
    ( (This)->lpVtbl -> put_EndUTC(This,EndUTC) ) 

#define _AppointmentItem_get_StartInStartTimeZone(This,StartInStartTimeZone)	\
    ( (This)->lpVtbl -> get_StartInStartTimeZone(This,StartInStartTimeZone) ) 

#define _AppointmentItem_put_StartInStartTimeZone(This,StartInStartTimeZone)	\
    ( (This)->lpVtbl -> put_StartInStartTimeZone(This,StartInStartTimeZone) ) 

#define _AppointmentItem_get_EndInEndTimeZone(This,EndInEndTimeZone)	\
    ( (This)->lpVtbl -> get_EndInEndTimeZone(This,EndInEndTimeZone) ) 

#define _AppointmentItem_put_EndInEndTimeZone(This,EndInEndTimeZone)	\
    ( (This)->lpVtbl -> put_EndInEndTimeZone(This,EndInEndTimeZone) ) 

#define _AppointmentItem_get_StartTimeZone(This,StartTimeZone)	\
    ( (This)->lpVtbl -> get_StartTimeZone(This,StartTimeZone) ) 

#define _AppointmentItem_put_StartTimeZone(This,StartTimeZone)	\
    ( (This)->lpVtbl -> put_StartTimeZone(This,StartTimeZone) ) 

#define _AppointmentItem_get_EndTimeZone(This,EndTimeZone)	\
    ( (This)->lpVtbl -> get_EndTimeZone(This,EndTimeZone) ) 

#define _AppointmentItem_put_EndTimeZone(This,EndTimeZone)	\
    ( (This)->lpVtbl -> put_EndTimeZone(This,EndTimeZone) ) 

#define _AppointmentItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _AppointmentItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _AppointmentItem_CopyTo(This,DestinationFolder,CopyOptions,Item)	\
    ( (This)->lpVtbl -> CopyTo(This,DestinationFolder,CopyOptions,Item) ) 

#define _AppointmentItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _AppointmentItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#define _AppointmentItem_GetOrganizer(This,Organizer)	\
    ( (This)->lpVtbl -> GetOrganizer(This,Organizer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_AutoResolvedWinner_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);


void __RPC_STUB _AppointmentItem_get_AutoResolvedWinner_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_Conflicts_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ Conflicts **Conflicts);


void __RPC_STUB _AppointmentItem_get_Conflicts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_PropertyAccessor_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ _PropertyAccessor **PropertyAccessor);


void __RPC_STUB _AppointmentItem_get_PropertyAccessor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_SendUsingAccount_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ _Account **SendUsingAccount);


void __RPC_STUB _AppointmentItem_get_SendUsingAccount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_put_SendUsingAccount_Proxy( 
    _AppointmentItem * This,
    /* [in] */ _Account *SendUsingAccount);


void __RPC_STUB _AppointmentItem_put_SendUsingAccount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_GlobalAppointmentID_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ BSTR *GlobalAppointmentID);


void __RPC_STUB _AppointmentItem_get_GlobalAppointmentID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_ForceUpdateToAllAttendees_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ VARIANT_BOOL *ForceUpdateToAllAttendees);


void __RPC_STUB _AppointmentItem_get_ForceUpdateToAllAttendees_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_put_ForceUpdateToAllAttendees_Proxy( 
    _AppointmentItem * This,
    /* [in] */ VARIANT_BOOL ForceUpdateToAllAttendees);


void __RPC_STUB _AppointmentItem_put_ForceUpdateToAllAttendees_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_StartUTC_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ DATE *StartUTC);


void __RPC_STUB _AppointmentItem_get_StartUTC_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_put_StartUTC_Proxy( 
    _AppointmentItem * This,
    /* [in] */ DATE StartUTC);


void __RPC_STUB _AppointmentItem_put_StartUTC_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_EndUTC_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ DATE *EndUTC);


void __RPC_STUB _AppointmentItem_get_EndUTC_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_put_EndUTC_Proxy( 
    _AppointmentItem * This,
    /* [in] */ DATE EndUTC);


void __RPC_STUB _AppointmentItem_put_EndUTC_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_StartInStartTimeZone_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ DATE *StartInStartTimeZone);


void __RPC_STUB _AppointmentItem_get_StartInStartTimeZone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_put_StartInStartTimeZone_Proxy( 
    _AppointmentItem * This,
    /* [in] */ DATE StartInStartTimeZone);


void __RPC_STUB _AppointmentItem_put_StartInStartTimeZone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_EndInEndTimeZone_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ DATE *EndInEndTimeZone);


void __RPC_STUB _AppointmentItem_get_EndInEndTimeZone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_put_EndInEndTimeZone_Proxy( 
    _AppointmentItem * This,
    /* [in] */ DATE EndInEndTimeZone);


void __RPC_STUB _AppointmentItem_put_EndInEndTimeZone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_StartTimeZone_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ _TimeZone **StartTimeZone);


void __RPC_STUB _AppointmentItem_get_StartTimeZone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_put_StartTimeZone_Proxy( 
    _AppointmentItem * This,
    /* [in] */ _TimeZone *StartTimeZone);


void __RPC_STUB _AppointmentItem_put_StartTimeZone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_EndTimeZone_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ _TimeZone **EndTimeZone);


void __RPC_STUB _AppointmentItem_get_EndTimeZone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_put_EndTimeZone_Proxy( 
    _AppointmentItem * This,
    /* [in] */ _TimeZone *EndTimeZone);


void __RPC_STUB _AppointmentItem_put_EndTimeZone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_GetConversation_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ _Conversation **Conversation);


void __RPC_STUB _AppointmentItem_GetConversation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_ConversationID_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ BSTR *ConversationID);


void __RPC_STUB _AppointmentItem_get_ConversationID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_CopyTo_Proxy( 
    _AppointmentItem * This,
    /* [in] */ MAPIFolder *DestinationFolder,
    /* [in] */ OlAppointmentCopyOptions CopyOptions,
    /* [retval][out] */ _AppointmentItem **Item);


void __RPC_STUB _AppointmentItem_CopyTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_get_RTFBody_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ VARIANT *RTFBody);


void __RPC_STUB _AppointmentItem_get_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_put_RTFBody_Proxy( 
    _AppointmentItem * This,
    /* [in] */ VARIANT RTFBody);


void __RPC_STUB _AppointmentItem_put_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _AppointmentItem_GetOrganizer_Proxy( 
    _AppointmentItem * This,
    /* [retval][out] */ AddressEntry **Organizer);


void __RPC_STUB _AppointmentItem_GetOrganizer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* ___AppointmentItem_INTERFACE_DEFINED__ */


#ifndef ___MeetingItem_INTERFACE_DEFINED__
#define ___MeetingItem_INTERFACE_DEFINED__

/* interface _MeetingItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__MeetingItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063062-0000-0000-C000-000000000046")
    _MeetingItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoForwarded( 
            /* [retval][out] */ VARIANT_BOOL *AutoForwarded) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoForwarded( 
            /* [in] */ VARIANT_BOOL AutoForwarded) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DeferredDeliveryTime( 
            /* [retval][out] */ DATE *DeferredDeliveryTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DeferredDeliveryTime( 
            /* [in] */ DATE DeferredDeliveryTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DeleteAfterSubmit( 
            /* [retval][out] */ VARIANT_BOOL *DeleteAfterSubmit) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DeleteAfterSubmit( 
            /* [in] */ VARIANT_BOOL DeleteAfterSubmit) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExpiryTime( 
            /* [retval][out] */ DATE *ExpiryTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExpiryTime( 
            /* [in] */ DATE ExpiryTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagDueBy( 
            /* [retval][out] */ DATE *FlagDueBy) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagDueBy( 
            /* [in] */ DATE FlagDueBy) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagRequest( 
            /* [retval][out] */ BSTR *FlagRequest) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagRequest( 
            /* [in] */ BSTR FlagRequest) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagStatus( 
            /* [retval][out] */ OlFlagStatus *FlagStatus) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagStatus( 
            /* [in] */ OlFlagStatus FlagStatus) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginatorDeliveryReportRequested( 
            /* [retval][out] */ VARIANT_BOOL *OriginatorDeliveryReportRequested) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OriginatorDeliveryReportRequested( 
            /* [in] */ VARIANT_BOOL OriginatorDeliveryReportRequested) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedTime( 
            /* [retval][out] */ DATE *ReceivedTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReceivedTime( 
            /* [in] */ DATE ReceivedTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSet( 
            /* [retval][out] */ VARIANT_BOOL *ReminderSet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSet( 
            /* [in] */ VARIANT_BOOL ReminderSet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderTime( 
            /* [retval][out] */ DATE *ReminderTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderTime( 
            /* [in] */ DATE ReminderTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyRecipients( 
            /* [retval][out] */ Recipients **ReplyRecipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveSentMessageFolder( 
            /* [retval][out] */ MAPIFolder **SaveSentMessageFolder) = 0;
        
        virtual /* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_SaveSentMessageFolder( 
            /* [in] */ MAPIFolder *SaveSentMessageFolder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderName( 
            /* [retval][out] */ BSTR *SenderName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sent( 
            /* [retval][out] */ VARIANT_BOOL *Sent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SentOn( 
            /* [retval][out] */ DATE *SentOn) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Submitted( 
            /* [retval][out] */ VARIANT_BOOL *Submitted) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Forward( 
            /* [retval][out] */ _MeetingItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAssociatedAppointment( 
            /* [in] */ VARIANT_BOOL AddToCalendar,
            /* [retval][out] */ _AppointmentItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reply( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplyAll( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Send( void) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MeetingWorkspaceURL( 
            /* [retval][out] */ BSTR *MeetingWorkspaceURL) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FlagIcon( 
            /* [retval][out] */ OlFlagIcon *FlagIcon) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_FlagIcon( 
            /* [in] */ OlFlagIcon FlagIcon) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailAddress( 
            /* [retval][out] */ BSTR *SenderEmailAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailType( 
            /* [retval][out] */ BSTR *SenderEmailType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SendUsingAccount( 
            /* [retval][out] */ _Account **SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SendUsingAccount( 
            /* [in] */ _Account *SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsLatestVersion( 
            /* [retval][out] */ VARIANT_BOOL *IsLatestVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RetentionExpirationDate( 
            /* [retval][out] */ DATE *RetentionExpirationDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RetentionPolicyName( 
            /* [retval][out] */ BSTR *RetentionPolicyName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MeetingItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MeetingItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MeetingItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MeetingItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MeetingItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MeetingItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MeetingItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MeetingItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _MeetingItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _MeetingItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _MeetingItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _MeetingItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _MeetingItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _MeetingItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _MeetingItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _MeetingItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _MeetingItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _MeetingItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _MeetingItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _MeetingItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _MeetingItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _MeetingItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _MeetingItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _MeetingItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _MeetingItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _MeetingItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _MeetingItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _MeetingItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _MeetingItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _MeetingItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _MeetingItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _MeetingItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _MeetingItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _MeetingItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _MeetingItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _MeetingItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _MeetingItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _MeetingItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _MeetingItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _MeetingItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _MeetingItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _MeetingItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _MeetingItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoForwarded )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoForwarded);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoForwarded )( 
            _MeetingItem * This,
            /* [in] */ VARIANT_BOOL AutoForwarded);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DeferredDeliveryTime )( 
            _MeetingItem * This,
            /* [retval][out] */ DATE *DeferredDeliveryTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DeferredDeliveryTime )( 
            _MeetingItem * This,
            /* [in] */ DATE DeferredDeliveryTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DeleteAfterSubmit )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *DeleteAfterSubmit);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DeleteAfterSubmit )( 
            _MeetingItem * This,
            /* [in] */ VARIANT_BOOL DeleteAfterSubmit);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpiryTime )( 
            _MeetingItem * This,
            /* [retval][out] */ DATE *ExpiryTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpiryTime )( 
            _MeetingItem * This,
            /* [in] */ DATE ExpiryTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagDueBy )( 
            _MeetingItem * This,
            /* [retval][out] */ DATE *FlagDueBy);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagDueBy )( 
            _MeetingItem * This,
            /* [in] */ DATE FlagDueBy);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagRequest )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *FlagRequest);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagRequest )( 
            _MeetingItem * This,
            /* [in] */ BSTR FlagRequest);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagStatus )( 
            _MeetingItem * This,
            /* [retval][out] */ OlFlagStatus *FlagStatus);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagStatus )( 
            _MeetingItem * This,
            /* [in] */ OlFlagStatus FlagStatus);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OriginatorDeliveryReportRequested )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *OriginatorDeliveryReportRequested);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OriginatorDeliveryReportRequested )( 
            _MeetingItem * This,
            /* [in] */ VARIANT_BOOL OriginatorDeliveryReportRequested);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedTime )( 
            _MeetingItem * This,
            /* [retval][out] */ DATE *ReceivedTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReceivedTime )( 
            _MeetingItem * This,
            /* [in] */ DATE ReceivedTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _MeetingItem * This,
            /* [retval][out] */ Recipients **Recipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSet )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderSet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSet )( 
            _MeetingItem * This,
            /* [in] */ VARIANT_BOOL ReminderSet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderTime )( 
            _MeetingItem * This,
            /* [retval][out] */ DATE *ReminderTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderTime )( 
            _MeetingItem * This,
            /* [in] */ DATE ReminderTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyRecipients )( 
            _MeetingItem * This,
            /* [retval][out] */ Recipients **ReplyRecipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveSentMessageFolder )( 
            _MeetingItem * This,
            /* [retval][out] */ MAPIFolder **SaveSentMessageFolder);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_SaveSentMessageFolder )( 
            _MeetingItem * This,
            /* [in] */ MAPIFolder *SaveSentMessageFolder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderName )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *SenderName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sent )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *Sent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SentOn )( 
            _MeetingItem * This,
            /* [retval][out] */ DATE *SentOn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Submitted )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *Submitted);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Forward )( 
            _MeetingItem * This,
            /* [retval][out] */ _MeetingItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAssociatedAppointment )( 
            _MeetingItem * This,
            /* [in] */ VARIANT_BOOL AddToCalendar,
            /* [retval][out] */ _AppointmentItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reply )( 
            _MeetingItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplyAll )( 
            _MeetingItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Send )( 
            _MeetingItem * This);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _MeetingItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _MeetingItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _MeetingItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _MeetingItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _MeetingItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _MeetingItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MeetingWorkspaceURL )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *MeetingWorkspaceURL);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FlagIcon )( 
            _MeetingItem * This,
            /* [retval][out] */ OlFlagIcon *FlagIcon);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FlagIcon )( 
            _MeetingItem * This,
            /* [in] */ OlFlagIcon FlagIcon);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _MeetingItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailAddress )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *SenderEmailAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailType )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *SenderEmailType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _MeetingItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _MeetingItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SendUsingAccount )( 
            _MeetingItem * This,
            /* [retval][out] */ _Account **SendUsingAccount);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SendUsingAccount )( 
            _MeetingItem * This,
            /* [in] */ _Account *SendUsingAccount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsLatestVersion )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsLatestVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _MeetingItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _MeetingItem * This,
            /* [in] */ VARIANT RTFBody);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RetentionExpirationDate )( 
            _MeetingItem * This,
            /* [retval][out] */ DATE *RetentionExpirationDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RetentionPolicyName )( 
            _MeetingItem * This,
            /* [retval][out] */ BSTR *RetentionPolicyName);
        
        END_INTERFACE
    } _MeetingItemVtbl;

    interface _MeetingItem
    {
        CONST_VTBL struct _MeetingItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MeetingItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MeetingItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MeetingItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MeetingItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MeetingItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MeetingItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MeetingItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _MeetingItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _MeetingItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _MeetingItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _MeetingItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _MeetingItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _MeetingItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _MeetingItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _MeetingItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _MeetingItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _MeetingItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _MeetingItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _MeetingItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _MeetingItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _MeetingItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _MeetingItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _MeetingItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _MeetingItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _MeetingItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _MeetingItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _MeetingItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _MeetingItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _MeetingItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _MeetingItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _MeetingItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _MeetingItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _MeetingItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _MeetingItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _MeetingItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _MeetingItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _MeetingItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _MeetingItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _MeetingItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _MeetingItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _MeetingItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _MeetingItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _MeetingItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _MeetingItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _MeetingItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _MeetingItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _MeetingItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _MeetingItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _MeetingItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _MeetingItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _MeetingItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _MeetingItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _MeetingItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _MeetingItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _MeetingItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _MeetingItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _MeetingItem_get_AutoForwarded(This,AutoForwarded)	\
    ( (This)->lpVtbl -> get_AutoForwarded(This,AutoForwarded) ) 

#define _MeetingItem_put_AutoForwarded(This,AutoForwarded)	\
    ( (This)->lpVtbl -> put_AutoForwarded(This,AutoForwarded) ) 

#define _MeetingItem_get_DeferredDeliveryTime(This,DeferredDeliveryTime)	\
    ( (This)->lpVtbl -> get_DeferredDeliveryTime(This,DeferredDeliveryTime) ) 

#define _MeetingItem_put_DeferredDeliveryTime(This,DeferredDeliveryTime)	\
    ( (This)->lpVtbl -> put_DeferredDeliveryTime(This,DeferredDeliveryTime) ) 

#define _MeetingItem_get_DeleteAfterSubmit(This,DeleteAfterSubmit)	\
    ( (This)->lpVtbl -> get_DeleteAfterSubmit(This,DeleteAfterSubmit) ) 

#define _MeetingItem_put_DeleteAfterSubmit(This,DeleteAfterSubmit)	\
    ( (This)->lpVtbl -> put_DeleteAfterSubmit(This,DeleteAfterSubmit) ) 

#define _MeetingItem_get_ExpiryTime(This,ExpiryTime)	\
    ( (This)->lpVtbl -> get_ExpiryTime(This,ExpiryTime) ) 

#define _MeetingItem_put_ExpiryTime(This,ExpiryTime)	\
    ( (This)->lpVtbl -> put_ExpiryTime(This,ExpiryTime) ) 

#define _MeetingItem_get_FlagDueBy(This,FlagDueBy)	\
    ( (This)->lpVtbl -> get_FlagDueBy(This,FlagDueBy) ) 

#define _MeetingItem_put_FlagDueBy(This,FlagDueBy)	\
    ( (This)->lpVtbl -> put_FlagDueBy(This,FlagDueBy) ) 

#define _MeetingItem_get_FlagRequest(This,FlagRequest)	\
    ( (This)->lpVtbl -> get_FlagRequest(This,FlagRequest) ) 

#define _MeetingItem_put_FlagRequest(This,FlagRequest)	\
    ( (This)->lpVtbl -> put_FlagRequest(This,FlagRequest) ) 

#define _MeetingItem_get_FlagStatus(This,FlagStatus)	\
    ( (This)->lpVtbl -> get_FlagStatus(This,FlagStatus) ) 

#define _MeetingItem_put_FlagStatus(This,FlagStatus)	\
    ( (This)->lpVtbl -> put_FlagStatus(This,FlagStatus) ) 

#define _MeetingItem_get_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested)	\
    ( (This)->lpVtbl -> get_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested) ) 

#define _MeetingItem_put_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested)	\
    ( (This)->lpVtbl -> put_OriginatorDeliveryReportRequested(This,OriginatorDeliveryReportRequested) ) 

#define _MeetingItem_get_ReceivedTime(This,ReceivedTime)	\
    ( (This)->lpVtbl -> get_ReceivedTime(This,ReceivedTime) ) 

#define _MeetingItem_put_ReceivedTime(This,ReceivedTime)	\
    ( (This)->lpVtbl -> put_ReceivedTime(This,ReceivedTime) ) 

#define _MeetingItem_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#define _MeetingItem_get_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> get_ReminderSet(This,ReminderSet) ) 

#define _MeetingItem_put_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> put_ReminderSet(This,ReminderSet) ) 

#define _MeetingItem_get_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> get_ReminderTime(This,ReminderTime) ) 

#define _MeetingItem_put_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> put_ReminderTime(This,ReminderTime) ) 

#define _MeetingItem_get_ReplyRecipients(This,ReplyRecipients)	\
    ( (This)->lpVtbl -> get_ReplyRecipients(This,ReplyRecipients) ) 

#define _MeetingItem_get_SaveSentMessageFolder(This,SaveSentMessageFolder)	\
    ( (This)->lpVtbl -> get_SaveSentMessageFolder(This,SaveSentMessageFolder) ) 

#define _MeetingItem_putref_SaveSentMessageFolder(This,SaveSentMessageFolder)	\
    ( (This)->lpVtbl -> putref_SaveSentMessageFolder(This,SaveSentMessageFolder) ) 

#define _MeetingItem_get_SenderName(This,SenderName)	\
    ( (This)->lpVtbl -> get_SenderName(This,SenderName) ) 

#define _MeetingItem_get_Sent(This,Sent)	\
    ( (This)->lpVtbl -> get_Sent(This,Sent) ) 

#define _MeetingItem_get_SentOn(This,SentOn)	\
    ( (This)->lpVtbl -> get_SentOn(This,SentOn) ) 

#define _MeetingItem_get_Submitted(This,Submitted)	\
    ( (This)->lpVtbl -> get_Submitted(This,Submitted) ) 

#define _MeetingItem_Forward(This,Item)	\
    ( (This)->lpVtbl -> Forward(This,Item) ) 

#define _MeetingItem_GetAssociatedAppointment(This,AddToCalendar,Item)	\
    ( (This)->lpVtbl -> GetAssociatedAppointment(This,AddToCalendar,Item) ) 

#define _MeetingItem_Reply(This,Item)	\
    ( (This)->lpVtbl -> Reply(This,Item) ) 

#define _MeetingItem_ReplyAll(This,Item)	\
    ( (This)->lpVtbl -> ReplyAll(This,Item) ) 

#define _MeetingItem_Send(This)	\
    ( (This)->lpVtbl -> Send(This) ) 

#define _MeetingItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _MeetingItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _MeetingItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _MeetingItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _MeetingItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _MeetingItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _MeetingItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _MeetingItem_get_MeetingWorkspaceURL(This,MeetingWorkspaceURL)	\
    ( (This)->lpVtbl -> get_MeetingWorkspaceURL(This,MeetingWorkspaceURL) ) 

#define _MeetingItem_get_FlagIcon(This,FlagIcon)	\
    ( (This)->lpVtbl -> get_FlagIcon(This,FlagIcon) ) 

#define _MeetingItem_put_FlagIcon(This,FlagIcon)	\
    ( (This)->lpVtbl -> put_FlagIcon(This,FlagIcon) ) 

#define _MeetingItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _MeetingItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _MeetingItem_get_SenderEmailAddress(This,SenderEmailAddress)	\
    ( (This)->lpVtbl -> get_SenderEmailAddress(This,SenderEmailAddress) ) 

#define _MeetingItem_get_SenderEmailType(This,SenderEmailType)	\
    ( (This)->lpVtbl -> get_SenderEmailType(This,SenderEmailType) ) 

#define _MeetingItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _MeetingItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _MeetingItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _MeetingItem_get_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> get_SendUsingAccount(This,SendUsingAccount) ) 

#define _MeetingItem_put_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> put_SendUsingAccount(This,SendUsingAccount) ) 

#define _MeetingItem_get_IsLatestVersion(This,IsLatestVersion)	\
    ( (This)->lpVtbl -> get_IsLatestVersion(This,IsLatestVersion) ) 

#define _MeetingItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _MeetingItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#define _MeetingItem_get_RetentionExpirationDate(This,RetentionExpirationDate)	\
    ( (This)->lpVtbl -> get_RetentionExpirationDate(This,RetentionExpirationDate) ) 

#define _MeetingItem_get_RetentionPolicyName(This,RetentionPolicyName)	\
    ( (This)->lpVtbl -> get_RetentionPolicyName(This,RetentionPolicyName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MeetingItem_INTERFACE_DEFINED__ */


#ifndef __ExplorersEvents_DISPINTERFACE_DEFINED__
#define __ExplorersEvents_DISPINTERFACE_DEFINED__

/* dispinterface ExplorersEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ExplorersEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00063078-0000-0000-C000-000000000046")
    ExplorersEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ExplorersEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ExplorersEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ExplorersEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ExplorersEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ExplorersEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ExplorersEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ExplorersEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ExplorersEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ExplorersEventsVtbl;

    interface ExplorersEvents
    {
        CONST_VTBL struct ExplorersEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ExplorersEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ExplorersEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ExplorersEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ExplorersEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ExplorersEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ExplorersEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ExplorersEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ExplorersEvents_DISPINTERFACE_DEFINED__ */


#ifndef __FoldersEvents_DISPINTERFACE_DEFINED__
#define __FoldersEvents_DISPINTERFACE_DEFINED__

/* dispinterface FoldersEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_FoldersEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00063076-0000-0000-C000-000000000046")
    FoldersEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct FoldersEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FoldersEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FoldersEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FoldersEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FoldersEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FoldersEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FoldersEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FoldersEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } FoldersEventsVtbl;

    interface FoldersEvents
    {
        CONST_VTBL struct FoldersEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FoldersEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FoldersEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FoldersEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FoldersEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FoldersEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FoldersEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FoldersEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __FoldersEvents_DISPINTERFACE_DEFINED__ */


#ifndef __InspectorsEvents_DISPINTERFACE_DEFINED__
#define __InspectorsEvents_DISPINTERFACE_DEFINED__

/* dispinterface InspectorsEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_InspectorsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00063079-0000-0000-C000-000000000046")
    InspectorsEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct InspectorsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            InspectorsEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            InspectorsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            InspectorsEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            InspectorsEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            InspectorsEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            InspectorsEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            InspectorsEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } InspectorsEventsVtbl;

    interface InspectorsEvents
    {
        CONST_VTBL struct InspectorsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define InspectorsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define InspectorsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define InspectorsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define InspectorsEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define InspectorsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define InspectorsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define InspectorsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __InspectorsEvents_DISPINTERFACE_DEFINED__ */


#ifndef __ItemsEvents_DISPINTERFACE_DEFINED__
#define __ItemsEvents_DISPINTERFACE_DEFINED__

/* dispinterface ItemsEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ItemsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00063077-0000-0000-C000-000000000046")
    ItemsEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ItemsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ItemsEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ItemsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ItemsEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ItemsEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ItemsEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ItemsEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ItemsEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ItemsEventsVtbl;

    interface ItemsEvents
    {
        CONST_VTBL struct ItemsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ItemsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ItemsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ItemsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ItemsEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ItemsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ItemsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ItemsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ItemsEvents_DISPINTERFACE_DEFINED__ */


#ifndef __NameSpaceEvents_DISPINTERFACE_DEFINED__
#define __NameSpaceEvents_DISPINTERFACE_DEFINED__

/* dispinterface NameSpaceEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_NameSpaceEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006308C-0000-0000-C000-000000000046")
    NameSpaceEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct NameSpaceEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            NameSpaceEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            NameSpaceEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            NameSpaceEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            NameSpaceEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            NameSpaceEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            NameSpaceEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            NameSpaceEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } NameSpaceEventsVtbl;

    interface NameSpaceEvents
    {
        CONST_VTBL struct NameSpaceEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define NameSpaceEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define NameSpaceEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define NameSpaceEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define NameSpaceEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define NameSpaceEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define NameSpaceEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define NameSpaceEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __NameSpaceEvents_DISPINTERFACE_DEFINED__ */


#ifndef __OutlookBarGroup_INTERFACE_DEFINED__
#define __OutlookBarGroup_INTERFACE_DEFINED__

/* interface OutlookBarGroup */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_OutlookBarGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063073-0000-0000-C000-000000000046")
    OutlookBarGroup : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Shortcuts( 
            /* [retval][out] */ _OutlookBarShortcuts **Shortcuts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewType( 
            /* [retval][out] */ OlOutlookBarViewType *ViewType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ViewType( 
            /* [in] */ OlOutlookBarViewType ViewType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct OutlookBarGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutlookBarGroup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutlookBarGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutlookBarGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutlookBarGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutlookBarGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutlookBarGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutlookBarGroup * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            OutlookBarGroup * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            OutlookBarGroup * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            OutlookBarGroup * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            OutlookBarGroup * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            OutlookBarGroup * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            OutlookBarGroup * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Shortcuts )( 
            OutlookBarGroup * This,
            /* [retval][out] */ _OutlookBarShortcuts **Shortcuts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewType )( 
            OutlookBarGroup * This,
            /* [retval][out] */ OlOutlookBarViewType *ViewType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ViewType )( 
            OutlookBarGroup * This,
            /* [in] */ OlOutlookBarViewType ViewType);
        
        END_INTERFACE
    } OutlookBarGroupVtbl;

    interface OutlookBarGroup
    {
        CONST_VTBL struct OutlookBarGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutlookBarGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutlookBarGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutlookBarGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutlookBarGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutlookBarGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutlookBarGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutlookBarGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OutlookBarGroup_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define OutlookBarGroup_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define OutlookBarGroup_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define OutlookBarGroup_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define OutlookBarGroup_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define OutlookBarGroup_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define OutlookBarGroup_get_Shortcuts(This,Shortcuts)	\
    ( (This)->lpVtbl -> get_Shortcuts(This,Shortcuts) ) 

#define OutlookBarGroup_get_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> get_ViewType(This,ViewType) ) 

#define OutlookBarGroup_put_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> put_ViewType(This,ViewType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OutlookBarGroup_INTERFACE_DEFINED__ */


#ifndef ___OutlookBarShortcuts_INTERFACE_DEFINED__
#define ___OutlookBarShortcuts_INTERFACE_DEFINED__

/* interface _OutlookBarShortcuts */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OutlookBarShortcuts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063074-0000-0000-C000-000000000046")
    _OutlookBarShortcuts : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ OutlookBarShortcut **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT Target,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Index,
            /* [retval][out] */ OutlookBarShortcut **Shortcut) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OutlookBarShortcutsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OutlookBarShortcuts * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OutlookBarShortcuts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OutlookBarShortcuts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OutlookBarShortcuts * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OutlookBarShortcuts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OutlookBarShortcuts * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OutlookBarShortcuts * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _OutlookBarShortcuts * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _OutlookBarShortcuts * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _OutlookBarShortcuts * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _OutlookBarShortcuts * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _OutlookBarShortcuts * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _OutlookBarShortcuts * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ OutlookBarShortcut **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _OutlookBarShortcuts * This,
            /* [in] */ VARIANT Target,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Index,
            /* [retval][out] */ OutlookBarShortcut **Shortcut);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _OutlookBarShortcuts * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } _OutlookBarShortcutsVtbl;

    interface _OutlookBarShortcuts
    {
        CONST_VTBL struct _OutlookBarShortcutsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OutlookBarShortcuts_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OutlookBarShortcuts_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OutlookBarShortcuts_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OutlookBarShortcuts_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OutlookBarShortcuts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OutlookBarShortcuts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OutlookBarShortcuts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OutlookBarShortcuts_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _OutlookBarShortcuts_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _OutlookBarShortcuts_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _OutlookBarShortcuts_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _OutlookBarShortcuts_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _OutlookBarShortcuts_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _OutlookBarShortcuts_Add(This,Target,Name,Index,Shortcut)	\
    ( (This)->lpVtbl -> Add(This,Target,Name,Index,Shortcut) ) 

#define _OutlookBarShortcuts_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OutlookBarShortcuts_INTERFACE_DEFINED__ */


#ifndef __OutlookBarShortcut_INTERFACE_DEFINED__
#define __OutlookBarShortcut_INTERFACE_DEFINED__

/* interface OutlookBarShortcut */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_OutlookBarShortcut;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063075-0000-0000-C000-000000000046")
    OutlookBarShortcut : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ VARIANT *Target) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetIcon( 
            /* [in] */ VARIANT Icon) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct OutlookBarShortcutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutlookBarShortcut * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutlookBarShortcut * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutlookBarShortcut * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutlookBarShortcut * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutlookBarShortcut * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutlookBarShortcut * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutlookBarShortcut * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            OutlookBarShortcut * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            OutlookBarShortcut * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            OutlookBarShortcut * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            OutlookBarShortcut * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            OutlookBarShortcut * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            OutlookBarShortcut * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            OutlookBarShortcut * This,
            /* [retval][out] */ VARIANT *Target);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetIcon )( 
            OutlookBarShortcut * This,
            /* [in] */ VARIANT Icon);
        
        END_INTERFACE
    } OutlookBarShortcutVtbl;

    interface OutlookBarShortcut
    {
        CONST_VTBL struct OutlookBarShortcutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutlookBarShortcut_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutlookBarShortcut_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutlookBarShortcut_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutlookBarShortcut_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutlookBarShortcut_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutlookBarShortcut_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutlookBarShortcut_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OutlookBarShortcut_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define OutlookBarShortcut_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define OutlookBarShortcut_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define OutlookBarShortcut_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define OutlookBarShortcut_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define OutlookBarShortcut_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define OutlookBarShortcut_get_Target(This,Target)	\
    ( (This)->lpVtbl -> get_Target(This,Target) ) 

#define OutlookBarShortcut_SetIcon(This,Icon)	\
    ( (This)->lpVtbl -> SetIcon(This,Icon) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OutlookBarShortcut_INTERFACE_DEFINED__ */


#ifndef ___OutlookBarGroups_INTERFACE_DEFINED__
#define ___OutlookBarGroups_INTERFACE_DEFINED__

/* interface _OutlookBarGroups */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OutlookBarGroups;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063072-0000-0000-C000-000000000046")
    _OutlookBarGroups : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ OutlookBarGroup **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Index,
            /* [retval][out] */ OutlookBarGroup **Group) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OutlookBarGroupsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OutlookBarGroups * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OutlookBarGroups * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OutlookBarGroups * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OutlookBarGroups * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OutlookBarGroups * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OutlookBarGroups * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OutlookBarGroups * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _OutlookBarGroups * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _OutlookBarGroups * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _OutlookBarGroups * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _OutlookBarGroups * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _OutlookBarGroups * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _OutlookBarGroups * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ OutlookBarGroup **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _OutlookBarGroups * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Index,
            /* [retval][out] */ OutlookBarGroup **Group);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _OutlookBarGroups * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } _OutlookBarGroupsVtbl;

    interface _OutlookBarGroups
    {
        CONST_VTBL struct _OutlookBarGroupsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OutlookBarGroups_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OutlookBarGroups_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OutlookBarGroups_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OutlookBarGroups_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OutlookBarGroups_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OutlookBarGroups_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OutlookBarGroups_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OutlookBarGroups_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _OutlookBarGroups_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _OutlookBarGroups_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _OutlookBarGroups_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _OutlookBarGroups_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _OutlookBarGroups_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _OutlookBarGroups_Add(This,Name,Index,Group)	\
    ( (This)->lpVtbl -> Add(This,Name,Index,Group) ) 

#define _OutlookBarGroups_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OutlookBarGroups_INTERFACE_DEFINED__ */


#ifndef __OutlookBarGroupsEvents_DISPINTERFACE_DEFINED__
#define __OutlookBarGroupsEvents_DISPINTERFACE_DEFINED__

/* dispinterface OutlookBarGroupsEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OutlookBarGroupsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006307B-0000-0000-C000-000000000046")
    OutlookBarGroupsEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OutlookBarGroupsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutlookBarGroupsEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutlookBarGroupsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutlookBarGroupsEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutlookBarGroupsEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutlookBarGroupsEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutlookBarGroupsEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutlookBarGroupsEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OutlookBarGroupsEventsVtbl;

    interface OutlookBarGroupsEvents
    {
        CONST_VTBL struct OutlookBarGroupsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutlookBarGroupsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutlookBarGroupsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutlookBarGroupsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutlookBarGroupsEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutlookBarGroupsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutlookBarGroupsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutlookBarGroupsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OutlookBarGroupsEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___OutlookBarPane_INTERFACE_DEFINED__
#define ___OutlookBarPane_INTERFACE_DEFINED__

/* interface _OutlookBarPane */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OutlookBarPane;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063070-0000-0000-C000-000000000046")
    _OutlookBarPane : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Contents( 
            /* [retval][out] */ OutlookBarStorage **Contents) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentGroup( 
            /* [retval][out] */ OutlookBarGroup **CurrentGroup) = 0;
        
        virtual /* [helpcontext][hidden][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_CurrentGroup( 
            /* [in] */ OutlookBarGroup *CurrentGroup) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OutlookBarPaneVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OutlookBarPane * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OutlookBarPane * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OutlookBarPane * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OutlookBarPane * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OutlookBarPane * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OutlookBarPane * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OutlookBarPane * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _OutlookBarPane * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _OutlookBarPane * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _OutlookBarPane * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _OutlookBarPane * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Contents )( 
            _OutlookBarPane * This,
            /* [retval][out] */ OutlookBarStorage **Contents);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentGroup )( 
            _OutlookBarPane * This,
            /* [retval][out] */ OutlookBarGroup **CurrentGroup);
        
        /* [helpcontext][hidden][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_CurrentGroup )( 
            _OutlookBarPane * This,
            /* [in] */ OutlookBarGroup *CurrentGroup);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _OutlookBarPane * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _OutlookBarPane * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _OutlookBarPane * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        END_INTERFACE
    } _OutlookBarPaneVtbl;

    interface _OutlookBarPane
    {
        CONST_VTBL struct _OutlookBarPaneVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OutlookBarPane_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OutlookBarPane_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OutlookBarPane_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OutlookBarPane_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OutlookBarPane_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OutlookBarPane_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OutlookBarPane_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OutlookBarPane_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _OutlookBarPane_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _OutlookBarPane_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _OutlookBarPane_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _OutlookBarPane_get_Contents(This,Contents)	\
    ( (This)->lpVtbl -> get_Contents(This,Contents) ) 

#define _OutlookBarPane_get_CurrentGroup(This,CurrentGroup)	\
    ( (This)->lpVtbl -> get_CurrentGroup(This,CurrentGroup) ) 

#define _OutlookBarPane_putref_CurrentGroup(This,CurrentGroup)	\
    ( (This)->lpVtbl -> putref_CurrentGroup(This,CurrentGroup) ) 

#define _OutlookBarPane_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _OutlookBarPane_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _OutlookBarPane_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OutlookBarPane_INTERFACE_DEFINED__ */


#ifndef __OutlookBarStorage_INTERFACE_DEFINED__
#define __OutlookBarStorage_INTERFACE_DEFINED__

/* interface OutlookBarStorage */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_OutlookBarStorage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063071-0000-0000-C000-000000000046")
    OutlookBarStorage : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Groups( 
            /* [retval][out] */ _OutlookBarGroups **Groups) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct OutlookBarStorageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutlookBarStorage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutlookBarStorage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutlookBarStorage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutlookBarStorage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutlookBarStorage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutlookBarStorage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutlookBarStorage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            OutlookBarStorage * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            OutlookBarStorage * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            OutlookBarStorage * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            OutlookBarStorage * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Groups )( 
            OutlookBarStorage * This,
            /* [retval][out] */ _OutlookBarGroups **Groups);
        
        END_INTERFACE
    } OutlookBarStorageVtbl;

    interface OutlookBarStorage
    {
        CONST_VTBL struct OutlookBarStorageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutlookBarStorage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutlookBarStorage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutlookBarStorage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutlookBarStorage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutlookBarStorage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutlookBarStorage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutlookBarStorage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define OutlookBarStorage_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define OutlookBarStorage_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define OutlookBarStorage_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define OutlookBarStorage_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define OutlookBarStorage_get_Groups(This,Groups)	\
    ( (This)->lpVtbl -> get_Groups(This,Groups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __OutlookBarStorage_INTERFACE_DEFINED__ */


#ifndef __OutlookBarPaneEvents_DISPINTERFACE_DEFINED__
#define __OutlookBarPaneEvents_DISPINTERFACE_DEFINED__

/* dispinterface OutlookBarPaneEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OutlookBarPaneEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006307A-0000-0000-C000-000000000046")
    OutlookBarPaneEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OutlookBarPaneEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutlookBarPaneEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutlookBarPaneEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutlookBarPaneEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutlookBarPaneEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutlookBarPaneEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutlookBarPaneEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutlookBarPaneEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OutlookBarPaneEventsVtbl;

    interface OutlookBarPaneEvents
    {
        CONST_VTBL struct OutlookBarPaneEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutlookBarPaneEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutlookBarPaneEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutlookBarPaneEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutlookBarPaneEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutlookBarPaneEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutlookBarPaneEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutlookBarPaneEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OutlookBarPaneEvents_DISPINTERFACE_DEFINED__ */


#ifndef __OutlookBarShortcutsEvents_DISPINTERFACE_DEFINED__
#define __OutlookBarShortcutsEvents_DISPINTERFACE_DEFINED__

/* dispinterface OutlookBarShortcutsEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_OutlookBarShortcutsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006307C-0000-0000-C000-000000000046")
    OutlookBarShortcutsEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OutlookBarShortcutsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            OutlookBarShortcutsEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            OutlookBarShortcutsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            OutlookBarShortcutsEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            OutlookBarShortcutsEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            OutlookBarShortcutsEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            OutlookBarShortcutsEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            OutlookBarShortcutsEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } OutlookBarShortcutsEventsVtbl;

    interface OutlookBarShortcutsEvents
    {
        CONST_VTBL struct OutlookBarShortcutsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OutlookBarShortcutsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define OutlookBarShortcutsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define OutlookBarShortcutsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define OutlookBarShortcutsEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define OutlookBarShortcutsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define OutlookBarShortcutsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define OutlookBarShortcutsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __OutlookBarShortcutsEvents_DISPINTERFACE_DEFINED__ */


#ifndef __PropertyPage_INTERFACE_DEFINED__
#define __PropertyPage_INTERFACE_DEFINED__

/* interface PropertyPage */
/* [object][helpcontext][uuid] */ 


EXTERN_C const IID IID_PropertyPage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006307E-0000-0000-C000-000000000046")
    PropertyPage : public IDispatch
    {
    public:
        virtual /* [helpcontext] */ HRESULT __stdcall GetPageInfo( 
            /* [out][in] */ BSTR *HelpFile,
            /* [out][in] */ long *HelpContext) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Dirty( 
            /* [retval][out] */ VARIANT_BOOL *Dirty) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Apply( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct PropertyPageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            PropertyPage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            PropertyPage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            PropertyPage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            PropertyPage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            PropertyPage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            PropertyPage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            PropertyPage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext] */ HRESULT ( __stdcall *GetPageInfo )( 
            PropertyPage * This,
            /* [out][in] */ BSTR *HelpFile,
            /* [out][in] */ long *HelpContext);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Dirty )( 
            PropertyPage * This,
            /* [retval][out] */ VARIANT_BOOL *Dirty);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Apply )( 
            PropertyPage * This);
        
        END_INTERFACE
    } PropertyPageVtbl;

    interface PropertyPage
    {
        CONST_VTBL struct PropertyPageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define PropertyPage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define PropertyPage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define PropertyPage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define PropertyPage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define PropertyPage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define PropertyPage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define PropertyPage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define PropertyPage_GetPageInfo(This,HelpFile,HelpContext)	\
    ( (This)->lpVtbl -> GetPageInfo(This,HelpFile,HelpContext) ) 

#define PropertyPage_get_Dirty(This,Dirty)	\
    ( (This)->lpVtbl -> get_Dirty(This,Dirty) ) 

#define PropertyPage_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __PropertyPage_INTERFACE_DEFINED__ */


#ifndef __PropertyPageSite_INTERFACE_DEFINED__
#define __PropertyPageSite_INTERFACE_DEFINED__

/* interface PropertyPageSite */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_PropertyPageSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006307F-0000-0000-C000-000000000046")
    PropertyPageSite : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OnStatusChange( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct PropertyPageSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            PropertyPageSite * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            PropertyPageSite * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            PropertyPageSite * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            PropertyPageSite * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            PropertyPageSite * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            PropertyPageSite * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            PropertyPageSite * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            PropertyPageSite * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            PropertyPageSite * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            PropertyPageSite * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            PropertyPageSite * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OnStatusChange )( 
            PropertyPageSite * This);
        
        END_INTERFACE
    } PropertyPageSiteVtbl;

    interface PropertyPageSite
    {
        CONST_VTBL struct PropertyPageSiteVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define PropertyPageSite_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define PropertyPageSite_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define PropertyPageSite_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define PropertyPageSite_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define PropertyPageSite_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define PropertyPageSite_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define PropertyPageSite_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define PropertyPageSite_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define PropertyPageSite_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define PropertyPageSite_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define PropertyPageSite_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define PropertyPageSite_OnStatusChange(This)	\
    ( (This)->lpVtbl -> OnStatusChange(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __PropertyPageSite_INTERFACE_DEFINED__ */


#ifndef __Pages_INTERFACE_DEFINED__
#define __Pages_INTERFACE_DEFINED__

/* interface Pages */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Pages;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006303F-0000-0000-C000-000000000046")
    Pages : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ VARIANT Name,
            /* [retval][out] */ IDispatch **Page) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct PagesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Pages * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Pages * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Pages * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Pages * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Pages * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Pages * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Pages * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Pages * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            Pages * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            Pages * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Pages * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Pages * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            Pages * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Pages * This,
            /* [optional][in] */ VARIANT Name,
            /* [retval][out] */ IDispatch **Page);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            Pages * This,
            /* [in] */ long Index);
        
        END_INTERFACE
    } PagesVtbl;

    interface Pages
    {
        CONST_VTBL struct PagesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Pages_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Pages_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Pages_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Pages_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Pages_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Pages_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Pages_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Pages_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define Pages_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define Pages_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define Pages_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define Pages_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Pages_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define Pages_Add(This,Name,Page)	\
    ( (This)->lpVtbl -> Add(This,Name,Page) ) 

#define Pages_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Pages_INTERFACE_DEFINED__ */


#ifndef __ApplicationEvents_10_DISPINTERFACE_DEFINED__
#define __ApplicationEvents_10_DISPINTERFACE_DEFINED__

/* dispinterface ApplicationEvents_10 */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ApplicationEvents_10;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006300E-0000-0000-C000-000000000046")
    ApplicationEvents_10 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ApplicationEvents_10Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ApplicationEvents_10 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ApplicationEvents_10 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ApplicationEvents_10 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ApplicationEvents_10 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ApplicationEvents_10 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ApplicationEvents_10 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ApplicationEvents_10 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ApplicationEvents_10Vtbl;

    interface ApplicationEvents_10
    {
        CONST_VTBL struct ApplicationEvents_10Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ApplicationEvents_10_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ApplicationEvents_10_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ApplicationEvents_10_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ApplicationEvents_10_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ApplicationEvents_10_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ApplicationEvents_10_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ApplicationEvents_10_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ApplicationEvents_10_DISPINTERFACE_DEFINED__ */


#ifndef __ApplicationEvents_11_DISPINTERFACE_DEFINED__
#define __ApplicationEvents_11_DISPINTERFACE_DEFINED__

/* dispinterface ApplicationEvents_11 */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ApplicationEvents_11;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006302C-0000-0000-C000-000000000046")
    ApplicationEvents_11 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ApplicationEvents_11Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ApplicationEvents_11 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ApplicationEvents_11 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ApplicationEvents_11 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ApplicationEvents_11 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ApplicationEvents_11 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ApplicationEvents_11 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ApplicationEvents_11 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ApplicationEvents_11Vtbl;

    interface ApplicationEvents_11
    {
        CONST_VTBL struct ApplicationEvents_11Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ApplicationEvents_11_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ApplicationEvents_11_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ApplicationEvents_11_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ApplicationEvents_11_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ApplicationEvents_11_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ApplicationEvents_11_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ApplicationEvents_11_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ApplicationEvents_11_DISPINTERFACE_DEFINED__ */


#ifndef __MAPIFolderEvents_12_DISPINTERFACE_DEFINED__
#define __MAPIFolderEvents_12_DISPINTERFACE_DEFINED__

/* dispinterface MAPIFolderEvents_12 */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_MAPIFolderEvents_12;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000630F7-0000-0000-C000-000000000046")
    MAPIFolderEvents_12 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct MAPIFolderEvents_12Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            MAPIFolderEvents_12 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            MAPIFolderEvents_12 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            MAPIFolderEvents_12 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            MAPIFolderEvents_12 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            MAPIFolderEvents_12 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            MAPIFolderEvents_12 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            MAPIFolderEvents_12 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } MAPIFolderEvents_12Vtbl;

    interface MAPIFolderEvents_12
    {
        CONST_VTBL struct MAPIFolderEvents_12Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define MAPIFolderEvents_12_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define MAPIFolderEvents_12_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define MAPIFolderEvents_12_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define MAPIFolderEvents_12_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define MAPIFolderEvents_12_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define MAPIFolderEvents_12_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define MAPIFolderEvents_12_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __MAPIFolderEvents_12_DISPINTERFACE_DEFINED__ */


#ifndef __ResultsEvents_DISPINTERFACE_DEFINED__
#define __ResultsEvents_DISPINTERFACE_DEFINED__

/* dispinterface ResultsEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ResultsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006300D-0000-0000-C000-000000000046")
    ResultsEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ResultsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ResultsEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ResultsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ResultsEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ResultsEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ResultsEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ResultsEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ResultsEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ResultsEventsVtbl;

    interface ResultsEvents
    {
        CONST_VTBL struct ResultsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ResultsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ResultsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ResultsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ResultsEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ResultsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ResultsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ResultsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ResultsEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___ViewsEvents_DISPINTERFACE_DEFINED__
#define ___ViewsEvents_DISPINTERFACE_DEFINED__

/* dispinterface _ViewsEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID__ViewsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000630A5-0000-0000-C000-000000000046")
    _ViewsEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _ViewsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ViewsEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ViewsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ViewsEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ViewsEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ViewsEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ViewsEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ViewsEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ViewsEventsVtbl;

    interface _ViewsEvents
    {
        CONST_VTBL struct _ViewsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ViewsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ViewsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ViewsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ViewsEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ViewsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ViewsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ViewsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___ViewsEvents_DISPINTERFACE_DEFINED__ */


#ifndef __ReminderCollectionEvents_DISPINTERFACE_DEFINED__
#define __ReminderCollectionEvents_DISPINTERFACE_DEFINED__

/* dispinterface ReminderCollectionEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_ReminderCollectionEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000630B2-0000-0000-C000-000000000046")
    ReminderCollectionEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct ReminderCollectionEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ReminderCollectionEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ReminderCollectionEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ReminderCollectionEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ReminderCollectionEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ReminderCollectionEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ReminderCollectionEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ReminderCollectionEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ReminderCollectionEventsVtbl;

    interface ReminderCollectionEvents
    {
        CONST_VTBL struct ReminderCollectionEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ReminderCollectionEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ReminderCollectionEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ReminderCollectionEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ReminderCollectionEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ReminderCollectionEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ReminderCollectionEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ReminderCollectionEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __ReminderCollectionEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___DocumentItem_INTERFACE_DEFINED__
#define ___DocumentItem_INTERFACE_DEFINED__

/* interface _DocumentItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__DocumentItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063020-0000-0000-C000-000000000046")
    _DocumentItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _DocumentItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DocumentItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DocumentItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DocumentItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DocumentItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DocumentItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DocumentItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DocumentItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _DocumentItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _DocumentItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _DocumentItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _DocumentItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _DocumentItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _DocumentItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _DocumentItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _DocumentItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _DocumentItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _DocumentItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _DocumentItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _DocumentItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _DocumentItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _DocumentItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _DocumentItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _DocumentItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _DocumentItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _DocumentItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _DocumentItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _DocumentItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _DocumentItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _DocumentItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _DocumentItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _DocumentItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _DocumentItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _DocumentItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _DocumentItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _DocumentItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _DocumentItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _DocumentItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _DocumentItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _DocumentItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _DocumentItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _DocumentItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _DocumentItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _DocumentItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _DocumentItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _DocumentItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _DocumentItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _DocumentItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _DocumentItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _DocumentItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _DocumentItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _DocumentItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _DocumentItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _DocumentItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _DocumentItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _DocumentItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _DocumentItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        END_INTERFACE
    } _DocumentItemVtbl;

    interface _DocumentItem
    {
        CONST_VTBL struct _DocumentItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DocumentItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DocumentItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DocumentItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DocumentItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DocumentItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DocumentItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DocumentItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _DocumentItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _DocumentItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _DocumentItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _DocumentItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _DocumentItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _DocumentItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _DocumentItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _DocumentItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _DocumentItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _DocumentItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _DocumentItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _DocumentItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _DocumentItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _DocumentItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _DocumentItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _DocumentItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _DocumentItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _DocumentItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _DocumentItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _DocumentItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _DocumentItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _DocumentItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _DocumentItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _DocumentItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _DocumentItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _DocumentItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _DocumentItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _DocumentItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _DocumentItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _DocumentItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _DocumentItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _DocumentItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _DocumentItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _DocumentItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _DocumentItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _DocumentItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _DocumentItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _DocumentItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _DocumentItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _DocumentItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _DocumentItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _DocumentItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _DocumentItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _DocumentItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _DocumentItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _DocumentItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _DocumentItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _DocumentItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _DocumentItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _DocumentItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _DocumentItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _DocumentItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _DocumentItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _DocumentItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _DocumentItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _DocumentItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _DocumentItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _DocumentItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _DocumentItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DocumentItem_INTERFACE_DEFINED__ */


#ifndef ___NoteItem_INTERFACE_DEFINED__
#define ___NoteItem_INTERFACE_DEFINED__

/* interface _NoteItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NoteItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063025-0000-0000-C000-000000000046")
    _NoteItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Color( 
            /* [retval][out] */ OlNoteColor *Color) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Color( 
            /* [in] */ OlNoteColor Color) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ long *Height) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [in] */ long Height) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ long *Left) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ long Left) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ long *Top) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ long Top) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *Width) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long Width) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NoteItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NoteItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NoteItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NoteItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NoteItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NoteItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NoteItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NoteItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NoteItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NoteItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NoteItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NoteItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _NoteItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _NoteItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _NoteItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _NoteItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            _NoteItem * This,
            /* [retval][out] */ OlNoteColor *Color);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            _NoteItem * This,
            /* [in] */ OlNoteColor Color);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _NoteItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _NoteItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _NoteItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            _NoteItem * This,
            /* [retval][out] */ long *Height);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            _NoteItem * This,
            /* [in] */ long Height);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _NoteItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            _NoteItem * This,
            /* [retval][out] */ long *Left);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            _NoteItem * This,
            /* [in] */ long Left);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _NoteItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _NoteItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _NoteItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _NoteItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _NoteItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            _NoteItem * This,
            /* [retval][out] */ long *Top);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            _NoteItem * This,
            /* [in] */ long Top);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            _NoteItem * This,
            /* [retval][out] */ long *Width);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            _NoteItem * This,
            /* [in] */ long Width);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _NoteItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _NoteItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _NoteItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _NoteItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _NoteItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _NoteItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _NoteItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _NoteItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _NoteItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _NoteItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _NoteItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _NoteItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _NoteItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _NoteItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _NoteItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _NoteItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _NoteItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        END_INTERFACE
    } _NoteItemVtbl;

    interface _NoteItem
    {
        CONST_VTBL struct _NoteItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NoteItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NoteItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NoteItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NoteItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NoteItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NoteItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NoteItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NoteItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NoteItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NoteItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NoteItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NoteItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _NoteItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _NoteItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _NoteItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _NoteItem_get_Color(This,Color)	\
    ( (This)->lpVtbl -> get_Color(This,Color) ) 

#define _NoteItem_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define _NoteItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _NoteItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _NoteItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _NoteItem_get_Height(This,Height)	\
    ( (This)->lpVtbl -> get_Height(This,Height) ) 

#define _NoteItem_put_Height(This,Height)	\
    ( (This)->lpVtbl -> put_Height(This,Height) ) 

#define _NoteItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _NoteItem_get_Left(This,Left)	\
    ( (This)->lpVtbl -> get_Left(This,Left) ) 

#define _NoteItem_put_Left(This,Left)	\
    ( (This)->lpVtbl -> put_Left(This,Left) ) 

#define _NoteItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _NoteItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _NoteItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _NoteItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _NoteItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _NoteItem_get_Top(This,Top)	\
    ( (This)->lpVtbl -> get_Top(This,Top) ) 

#define _NoteItem_put_Top(This,Top)	\
    ( (This)->lpVtbl -> put_Top(This,Top) ) 

#define _NoteItem_get_Width(This,Width)	\
    ( (This)->lpVtbl -> get_Width(This,Width) ) 

#define _NoteItem_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define _NoteItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _NoteItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _NoteItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _NoteItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _NoteItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _NoteItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _NoteItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _NoteItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _NoteItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _NoteItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _NoteItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _NoteItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _NoteItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _NoteItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _NoteItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _NoteItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _NoteItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NoteItem_INTERFACE_DEFINED__ */


#ifndef __FormRegionEvents_DISPINTERFACE_DEFINED__
#define __FormRegionEvents_DISPINTERFACE_DEFINED__

/* dispinterface FormRegionEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_FormRegionEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0006305B-0000-0000-C000-000000000046")
    FormRegionEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct FormRegionEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FormRegionEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FormRegionEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FormRegionEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FormRegionEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FormRegionEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FormRegionEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FormRegionEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } FormRegionEventsVtbl;

    interface FormRegionEvents
    {
        CONST_VTBL struct FormRegionEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FormRegionEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define FormRegionEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define FormRegionEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define FormRegionEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define FormRegionEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define FormRegionEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define FormRegionEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __FormRegionEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___ViewField_INTERFACE_DEFINED__
#define ___ViewField_INTERFACE_DEFINED__

/* interface _ViewField */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ViewField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630A0-0000-0000-C000-000000000046")
    _ViewField : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewXMLSchemaName( 
            /* [retval][out] */ BSTR *ViewXMLSchemaName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ColumnFormat( 
            /* [retval][out] */ _ColumnFormat **ColumnFormat) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ViewFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ViewField * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ViewField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ViewField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ViewField * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ViewField * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ViewField * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ViewField * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ViewField * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ViewField * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ViewField * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ViewField * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewXMLSchemaName )( 
            _ViewField * This,
            /* [retval][out] */ BSTR *ViewXMLSchemaName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnFormat )( 
            _ViewField * This,
            /* [retval][out] */ _ColumnFormat **ColumnFormat);
        
        END_INTERFACE
    } _ViewFieldVtbl;

    interface _ViewField
    {
        CONST_VTBL struct _ViewFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ViewField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ViewField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ViewField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ViewField_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ViewField_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ViewField_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ViewField_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ViewField_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ViewField_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ViewField_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ViewField_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ViewField_get_ViewXMLSchemaName(This,ViewXMLSchemaName)	\
    ( (This)->lpVtbl -> get_ViewXMLSchemaName(This,ViewXMLSchemaName) ) 

#define _ViewField_get_ColumnFormat(This,ColumnFormat)	\
    ( (This)->lpVtbl -> get_ColumnFormat(This,ColumnFormat) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ViewField_INTERFACE_DEFINED__ */


#ifndef ___ColumnFormat_INTERFACE_DEFINED__
#define ___ColumnFormat_INTERFACE_DEFINED__

/* interface _ColumnFormat */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ColumnFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006309E-0000-0000-C000-000000000046")
    _ColumnFormat : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Label( 
            /* [retval][out] */ BSTR *Label) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Label( 
            /* [in] */ BSTR Label) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FieldFormat( 
            /* [retval][out] */ long *FieldFormat) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FieldFormat( 
            /* [in] */ long FieldFormat) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *Width) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long Width) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Align( 
            /* [retval][out] */ OlAlign *Align) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Align( 
            /* [in] */ OlAlign Align) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FieldType( 
            /* [retval][out] */ OlUserPropertyType *FieldType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ColumnFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ColumnFormat * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ColumnFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ColumnFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ColumnFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ColumnFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ColumnFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ColumnFormat * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ColumnFormat * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ColumnFormat * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ColumnFormat * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ColumnFormat * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Label )( 
            _ColumnFormat * This,
            /* [retval][out] */ BSTR *Label);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Label )( 
            _ColumnFormat * This,
            /* [in] */ BSTR Label);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FieldFormat )( 
            _ColumnFormat * This,
            /* [retval][out] */ long *FieldFormat);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FieldFormat )( 
            _ColumnFormat * This,
            /* [in] */ long FieldFormat);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            _ColumnFormat * This,
            /* [retval][out] */ long *Width);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            _ColumnFormat * This,
            /* [in] */ long Width);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Align )( 
            _ColumnFormat * This,
            /* [retval][out] */ OlAlign *Align);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Align )( 
            _ColumnFormat * This,
            /* [in] */ OlAlign Align);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FieldType )( 
            _ColumnFormat * This,
            /* [retval][out] */ OlUserPropertyType *FieldType);
        
        END_INTERFACE
    } _ColumnFormatVtbl;

    interface _ColumnFormat
    {
        CONST_VTBL struct _ColumnFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ColumnFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ColumnFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ColumnFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ColumnFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ColumnFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ColumnFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ColumnFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ColumnFormat_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ColumnFormat_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ColumnFormat_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ColumnFormat_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ColumnFormat_get_Label(This,Label)	\
    ( (This)->lpVtbl -> get_Label(This,Label) ) 

#define _ColumnFormat_put_Label(This,Label)	\
    ( (This)->lpVtbl -> put_Label(This,Label) ) 

#define _ColumnFormat_get_FieldFormat(This,FieldFormat)	\
    ( (This)->lpVtbl -> get_FieldFormat(This,FieldFormat) ) 

#define _ColumnFormat_put_FieldFormat(This,FieldFormat)	\
    ( (This)->lpVtbl -> put_FieldFormat(This,FieldFormat) ) 

#define _ColumnFormat_get_Width(This,Width)	\
    ( (This)->lpVtbl -> get_Width(This,Width) ) 

#define _ColumnFormat_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define _ColumnFormat_get_Align(This,Align)	\
    ( (This)->lpVtbl -> get_Align(This,Align) ) 

#define _ColumnFormat_put_Align(This,Align)	\
    ( (This)->lpVtbl -> put_Align(This,Align) ) 

#define _ColumnFormat_get_FieldType(This,FieldType)	\
    ( (This)->lpVtbl -> get_FieldType(This,FieldType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ColumnFormat_INTERFACE_DEFINED__ */


#ifndef ___ViewFields_INTERFACE_DEFINED__
#define ___ViewFields_INTERFACE_DEFINED__

/* interface _ViewFields */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ViewFields;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630A1-0000-0000-C000-000000000046")
    _ViewFields : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _ViewField **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR PropertyName,
            /* [retval][out] */ _ViewField **ViewField) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR PropertyName,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _ViewField **ViewField) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ViewFieldsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ViewFields * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ViewFields * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ViewFields * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ViewFields * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ViewFields * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ViewFields * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ViewFields * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ViewFields * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ViewFields * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ViewFields * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ViewFields * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _ViewFields * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _ViewFields * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _ViewField **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _ViewFields * This,
            /* [in] */ BSTR PropertyName,
            /* [retval][out] */ _ViewField **ViewField);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            _ViewFields * This,
            /* [in] */ BSTR PropertyName,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _ViewField **ViewField);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _ViewFields * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } _ViewFieldsVtbl;

    interface _ViewFields
    {
        CONST_VTBL struct _ViewFieldsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ViewFields_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ViewFields_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ViewFields_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ViewFields_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ViewFields_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ViewFields_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ViewFields_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ViewFields_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ViewFields_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ViewFields_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ViewFields_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ViewFields_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _ViewFields_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _ViewFields_Add(This,PropertyName,ViewField)	\
    ( (This)->lpVtbl -> Add(This,PropertyName,ViewField) ) 

#define _ViewFields_Insert(This,PropertyName,Index,ViewField)	\
    ( (This)->lpVtbl -> Insert(This,PropertyName,Index,ViewField) ) 

#define _ViewFields_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ViewFields_INTERFACE_DEFINED__ */


#ifndef ___IconView_INTERFACE_DEFINED__
#define ___IconView_INTERFACE_DEFINED__

/* interface _IconView */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__IconView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063097-0000-0000-C000-000000000046")
    _IconView : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ BSTR Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LockUserChanges( 
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LockUserChanges( 
            /* [in] */ VARIANT_BOOL LockUserChanges) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveOption( 
            /* [retval][out] */ OlViewSaveOption *SaveOption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Standard( 
            /* [retval][out] */ VARIANT_BOOL *Standard) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewType( 
            /* [retval][out] */ OlViewType *ViewType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XML( 
            /* [retval][out] */ BSTR *XML) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_XML( 
            /* [in] */ BSTR XML) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GoToDate( 
            /* [in] */ DATE Date) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Filter( 
            /* [in] */ BSTR Filter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SortFields( 
            /* [retval][out] */ _OrderFields **SortFields) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IconViewType( 
            /* [retval][out] */ OlIconViewType *IconViewType) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IconViewType( 
            /* [in] */ OlIconViewType IconViewType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IconPlacement( 
            /* [retval][out] */ OlIconViewPlacement *IconPlacement) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IconPlacement( 
            /* [in] */ OlIconViewPlacement IconPlacement) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _IconViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IconView * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IconView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IconView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IconView * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IconView * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IconView * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IconView * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _IconView * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _IconView * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _IconView * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _IconView * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            _IconView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _IconView * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _IconView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _IconView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _IconView * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            _IconView * This,
            /* [retval][out] */ BSTR *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            _IconView * This,
            /* [in] */ BSTR Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockUserChanges )( 
            _IconView * This,
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockUserChanges )( 
            _IconView * This,
            /* [in] */ VARIANT_BOOL LockUserChanges);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _IconView * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _IconView * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveOption )( 
            _IconView * This,
            /* [retval][out] */ OlViewSaveOption *SaveOption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Standard )( 
            _IconView * This,
            /* [retval][out] */ VARIANT_BOOL *Standard);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewType )( 
            _IconView * This,
            /* [retval][out] */ OlViewType *ViewType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XML )( 
            _IconView * This,
            /* [retval][out] */ BSTR *XML);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XML )( 
            _IconView * This,
            /* [in] */ BSTR XML);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GoToDate )( 
            _IconView * This,
            /* [in] */ DATE Date);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            _IconView * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            _IconView * This,
            /* [in] */ BSTR Filter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SortFields )( 
            _IconView * This,
            /* [retval][out] */ _OrderFields **SortFields);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IconViewType )( 
            _IconView * This,
            /* [retval][out] */ OlIconViewType *IconViewType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IconViewType )( 
            _IconView * This,
            /* [in] */ OlIconViewType IconViewType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IconPlacement )( 
            _IconView * This,
            /* [retval][out] */ OlIconViewPlacement *IconPlacement);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IconPlacement )( 
            _IconView * This,
            /* [in] */ OlIconViewPlacement IconPlacement);
        
        END_INTERFACE
    } _IconViewVtbl;

    interface _IconView
    {
        CONST_VTBL struct _IconViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IconView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IconView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IconView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IconView_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IconView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IconView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IconView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _IconView_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _IconView_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _IconView_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _IconView_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _IconView_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define _IconView_Copy(This,Name,SaveOption,ppview)	\
    ( (This)->lpVtbl -> Copy(This,Name,SaveOption,ppview) ) 

#define _IconView_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _IconView_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _IconView_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _IconView_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define _IconView_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define _IconView_get_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> get_LockUserChanges(This,LockUserChanges) ) 

#define _IconView_put_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> put_LockUserChanges(This,LockUserChanges) ) 

#define _IconView_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _IconView_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _IconView_get_SaveOption(This,SaveOption)	\
    ( (This)->lpVtbl -> get_SaveOption(This,SaveOption) ) 

#define _IconView_get_Standard(This,Standard)	\
    ( (This)->lpVtbl -> get_Standard(This,Standard) ) 

#define _IconView_get_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> get_ViewType(This,ViewType) ) 

#define _IconView_get_XML(This,XML)	\
    ( (This)->lpVtbl -> get_XML(This,XML) ) 

#define _IconView_put_XML(This,XML)	\
    ( (This)->lpVtbl -> put_XML(This,XML) ) 

#define _IconView_GoToDate(This,Date)	\
    ( (This)->lpVtbl -> GoToDate(This,Date) ) 

#define _IconView_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define _IconView_put_Filter(This,Filter)	\
    ( (This)->lpVtbl -> put_Filter(This,Filter) ) 

#define _IconView_get_SortFields(This,SortFields)	\
    ( (This)->lpVtbl -> get_SortFields(This,SortFields) ) 

#define _IconView_get_IconViewType(This,IconViewType)	\
    ( (This)->lpVtbl -> get_IconViewType(This,IconViewType) ) 

#define _IconView_put_IconViewType(This,IconViewType)	\
    ( (This)->lpVtbl -> put_IconViewType(This,IconViewType) ) 

#define _IconView_get_IconPlacement(This,IconPlacement)	\
    ( (This)->lpVtbl -> get_IconPlacement(This,IconPlacement) ) 

#define _IconView_put_IconPlacement(This,IconPlacement)	\
    ( (This)->lpVtbl -> put_IconPlacement(This,IconPlacement) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IconView_INTERFACE_DEFINED__ */


#ifndef ___OrderFields_INTERFACE_DEFINED__
#define ___OrderFields_INTERFACE_DEFINED__

/* interface _OrderFields */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OrderFields;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006309A-0000-0000-C000-000000000046")
    _OrderFields : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _OrderField **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR PropertyName,
            /* [optional][in] */ VARIANT IsDescending,
            /* [retval][out] */ _OrderField **OrderField) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR PropertyName,
            /* [in] */ VARIANT Index,
            /* [optional][in] */ VARIANT IsDescending,
            /* [retval][out] */ _OrderField **OrderField) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OrderFieldsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OrderFields * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OrderFields * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OrderFields * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OrderFields * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OrderFields * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OrderFields * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OrderFields * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _OrderFields * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _OrderFields * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _OrderFields * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _OrderFields * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _OrderFields * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _OrderFields * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _OrderField **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _OrderFields * This,
            /* [in] */ BSTR PropertyName,
            /* [optional][in] */ VARIANT IsDescending,
            /* [retval][out] */ _OrderField **OrderField);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _OrderFields * This,
            /* [in] */ VARIANT Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            _OrderFields * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            _OrderFields * This,
            /* [in] */ BSTR PropertyName,
            /* [in] */ VARIANT Index,
            /* [optional][in] */ VARIANT IsDescending,
            /* [retval][out] */ _OrderField **OrderField);
        
        END_INTERFACE
    } _OrderFieldsVtbl;

    interface _OrderFields
    {
        CONST_VTBL struct _OrderFieldsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OrderFields_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OrderFields_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OrderFields_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OrderFields_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OrderFields_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OrderFields_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OrderFields_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OrderFields_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _OrderFields_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _OrderFields_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _OrderFields_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _OrderFields_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _OrderFields_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _OrderFields_Add(This,PropertyName,IsDescending,OrderField)	\
    ( (This)->lpVtbl -> Add(This,PropertyName,IsDescending,OrderField) ) 

#define _OrderFields_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define _OrderFields_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#define _OrderFields_Insert(This,PropertyName,Index,IsDescending,OrderField)	\
    ( (This)->lpVtbl -> Insert(This,PropertyName,Index,IsDescending,OrderField) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OrderFields_INTERFACE_DEFINED__ */


#ifndef ___OrderField_INTERFACE_DEFINED__
#define ___OrderField_INTERFACE_DEFINED__

/* interface _OrderField */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__OrderField;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006309B-0000-0000-C000-000000000046")
    _OrderField : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewXMLSchemaName( 
            /* [retval][out] */ BSTR *ViewXMLSchemaName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDescending( 
            /* [retval][out] */ VARIANT_BOOL *IsDescending) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsDescending( 
            /* [in] */ VARIANT_BOOL IsDescending) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _OrderFieldVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OrderField * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OrderField * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OrderField * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OrderField * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OrderField * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OrderField * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OrderField * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _OrderField * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _OrderField * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _OrderField * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _OrderField * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewXMLSchemaName )( 
            _OrderField * This,
            /* [retval][out] */ BSTR *ViewXMLSchemaName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDescending )( 
            _OrderField * This,
            /* [retval][out] */ VARIANT_BOOL *IsDescending);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsDescending )( 
            _OrderField * This,
            /* [in] */ VARIANT_BOOL IsDescending);
        
        END_INTERFACE
    } _OrderFieldVtbl;

    interface _OrderField
    {
        CONST_VTBL struct _OrderFieldVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OrderField_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OrderField_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OrderField_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OrderField_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OrderField_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OrderField_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OrderField_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _OrderField_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _OrderField_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _OrderField_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _OrderField_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _OrderField_get_ViewXMLSchemaName(This,ViewXMLSchemaName)	\
    ( (This)->lpVtbl -> get_ViewXMLSchemaName(This,ViewXMLSchemaName) ) 

#define _OrderField_get_IsDescending(This,IsDescending)	\
    ( (This)->lpVtbl -> get_IsDescending(This,IsDescending) ) 

#define _OrderField_put_IsDescending(This,IsDescending)	\
    ( (This)->lpVtbl -> put_IsDescending(This,IsDescending) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OrderField_INTERFACE_DEFINED__ */


#ifndef ___CardView_INTERFACE_DEFINED__
#define ___CardView_INTERFACE_DEFINED__

/* interface _CardView */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__CardView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063098-0000-0000-C000-000000000046")
    _CardView : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ BSTR Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LockUserChanges( 
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LockUserChanges( 
            /* [in] */ VARIANT_BOOL LockUserChanges) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveOption( 
            /* [retval][out] */ OlViewSaveOption *SaveOption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Standard( 
            /* [retval][out] */ VARIANT_BOOL *Standard) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewType( 
            /* [retval][out] */ OlViewType *ViewType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XML( 
            /* [retval][out] */ BSTR *XML) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_XML( 
            /* [in] */ BSTR XML) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GoToDate( 
            /* [in] */ DATE Date) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Filter( 
            /* [in] */ BSTR Filter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SortFields( 
            /* [retval][out] */ _OrderFields **SortFields) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AllowInCellEditing( 
            /* [retval][out] */ VARIANT_BOOL *AllowInCellEditing) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AllowInCellEditing( 
            /* [in] */ VARIANT_BOOL AllowInCellEditing) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowEmptyFields( 
            /* [retval][out] */ VARIANT_BOOL *ShowEmptyFields) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowEmptyFields( 
            /* [in] */ VARIANT_BOOL ShowEmptyFields) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *Width) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long Width) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MultiLineFieldHeight( 
            /* [retval][out] */ long *MultiLineFieldHeight) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MultiLineFieldHeight( 
            /* [in] */ long MultiLineFieldHeight) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewFields( 
            /* [retval][out] */ _ViewFields **ViewFields) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HeadingsFont( 
            /* [retval][out] */ _ViewFont **HeadingsFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BodyFont( 
            /* [retval][out] */ _ViewFont **BodyFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoFormatRules( 
            /* [retval][out] */ _AutoFormatRules **AutoFormatRules) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _CardViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CardView * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CardView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CardView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CardView * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CardView * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CardView * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CardView * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _CardView * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _CardView * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _CardView * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _CardView * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            _CardView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _CardView * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _CardView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _CardView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _CardView * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            _CardView * This,
            /* [retval][out] */ BSTR *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            _CardView * This,
            /* [in] */ BSTR Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockUserChanges )( 
            _CardView * This,
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockUserChanges )( 
            _CardView * This,
            /* [in] */ VARIANT_BOOL LockUserChanges);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _CardView * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _CardView * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveOption )( 
            _CardView * This,
            /* [retval][out] */ OlViewSaveOption *SaveOption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Standard )( 
            _CardView * This,
            /* [retval][out] */ VARIANT_BOOL *Standard);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewType )( 
            _CardView * This,
            /* [retval][out] */ OlViewType *ViewType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XML )( 
            _CardView * This,
            /* [retval][out] */ BSTR *XML);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XML )( 
            _CardView * This,
            /* [in] */ BSTR XML);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GoToDate )( 
            _CardView * This,
            /* [in] */ DATE Date);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            _CardView * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            _CardView * This,
            /* [in] */ BSTR Filter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SortFields )( 
            _CardView * This,
            /* [retval][out] */ _OrderFields **SortFields);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AllowInCellEditing )( 
            _CardView * This,
            /* [retval][out] */ VARIANT_BOOL *AllowInCellEditing);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AllowInCellEditing )( 
            _CardView * This,
            /* [in] */ VARIANT_BOOL AllowInCellEditing);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowEmptyFields )( 
            _CardView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowEmptyFields);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowEmptyFields )( 
            _CardView * This,
            /* [in] */ VARIANT_BOOL ShowEmptyFields);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            _CardView * This,
            /* [retval][out] */ long *Width);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            _CardView * This,
            /* [in] */ long Width);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MultiLineFieldHeight )( 
            _CardView * This,
            /* [retval][out] */ long *MultiLineFieldHeight);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MultiLineFieldHeight )( 
            _CardView * This,
            /* [in] */ long MultiLineFieldHeight);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewFields )( 
            _CardView * This,
            /* [retval][out] */ _ViewFields **ViewFields);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HeadingsFont )( 
            _CardView * This,
            /* [retval][out] */ _ViewFont **HeadingsFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BodyFont )( 
            _CardView * This,
            /* [retval][out] */ _ViewFont **BodyFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoFormatRules )( 
            _CardView * This,
            /* [retval][out] */ _AutoFormatRules **AutoFormatRules);
        
        END_INTERFACE
    } _CardViewVtbl;

    interface _CardView
    {
        CONST_VTBL struct _CardViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CardView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CardView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CardView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CardView_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CardView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CardView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CardView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CardView_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _CardView_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _CardView_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _CardView_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _CardView_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define _CardView_Copy(This,Name,SaveOption,ppview)	\
    ( (This)->lpVtbl -> Copy(This,Name,SaveOption,ppview) ) 

#define _CardView_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _CardView_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _CardView_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _CardView_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define _CardView_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define _CardView_get_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> get_LockUserChanges(This,LockUserChanges) ) 

#define _CardView_put_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> put_LockUserChanges(This,LockUserChanges) ) 

#define _CardView_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _CardView_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _CardView_get_SaveOption(This,SaveOption)	\
    ( (This)->lpVtbl -> get_SaveOption(This,SaveOption) ) 

#define _CardView_get_Standard(This,Standard)	\
    ( (This)->lpVtbl -> get_Standard(This,Standard) ) 

#define _CardView_get_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> get_ViewType(This,ViewType) ) 

#define _CardView_get_XML(This,XML)	\
    ( (This)->lpVtbl -> get_XML(This,XML) ) 

#define _CardView_put_XML(This,XML)	\
    ( (This)->lpVtbl -> put_XML(This,XML) ) 

#define _CardView_GoToDate(This,Date)	\
    ( (This)->lpVtbl -> GoToDate(This,Date) ) 

#define _CardView_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define _CardView_put_Filter(This,Filter)	\
    ( (This)->lpVtbl -> put_Filter(This,Filter) ) 

#define _CardView_get_SortFields(This,SortFields)	\
    ( (This)->lpVtbl -> get_SortFields(This,SortFields) ) 

#define _CardView_get_AllowInCellEditing(This,AllowInCellEditing)	\
    ( (This)->lpVtbl -> get_AllowInCellEditing(This,AllowInCellEditing) ) 

#define _CardView_put_AllowInCellEditing(This,AllowInCellEditing)	\
    ( (This)->lpVtbl -> put_AllowInCellEditing(This,AllowInCellEditing) ) 

#define _CardView_get_ShowEmptyFields(This,ShowEmptyFields)	\
    ( (This)->lpVtbl -> get_ShowEmptyFields(This,ShowEmptyFields) ) 

#define _CardView_put_ShowEmptyFields(This,ShowEmptyFields)	\
    ( (This)->lpVtbl -> put_ShowEmptyFields(This,ShowEmptyFields) ) 

#define _CardView_get_Width(This,Width)	\
    ( (This)->lpVtbl -> get_Width(This,Width) ) 

#define _CardView_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define _CardView_get_MultiLineFieldHeight(This,MultiLineFieldHeight)	\
    ( (This)->lpVtbl -> get_MultiLineFieldHeight(This,MultiLineFieldHeight) ) 

#define _CardView_put_MultiLineFieldHeight(This,MultiLineFieldHeight)	\
    ( (This)->lpVtbl -> put_MultiLineFieldHeight(This,MultiLineFieldHeight) ) 

#define _CardView_get_ViewFields(This,ViewFields)	\
    ( (This)->lpVtbl -> get_ViewFields(This,ViewFields) ) 

#define _CardView_get_HeadingsFont(This,HeadingsFont)	\
    ( (This)->lpVtbl -> get_HeadingsFont(This,HeadingsFont) ) 

#define _CardView_get_BodyFont(This,BodyFont)	\
    ( (This)->lpVtbl -> get_BodyFont(This,BodyFont) ) 

#define _CardView_get_AutoFormatRules(This,AutoFormatRules)	\
    ( (This)->lpVtbl -> get_AutoFormatRules(This,AutoFormatRules) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CardView_INTERFACE_DEFINED__ */


#ifndef ___ViewFont_INTERFACE_DEFINED__
#define ___ViewFont_INTERFACE_DEFINED__

/* interface _ViewFont */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ViewFont;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006309D-0000-0000-C000-000000000046")
    _ViewFont : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Bold( 
            /* [retval][out] */ VARIANT_BOOL *Bold) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Bold( 
            /* [in] */ VARIANT_BOOL Bold) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Italic( 
            /* [retval][out] */ VARIANT_BOOL *Italic) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Italic( 
            /* [in] */ VARIANT_BOOL Italic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Size( 
            /* [in] */ long Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Strikethrough( 
            /* [retval][out] */ VARIANT_BOOL *Strikethrough) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Strikethrough( 
            /* [in] */ VARIANT_BOOL Strikethrough) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Underline( 
            /* [retval][out] */ VARIANT_BOOL *Underline) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Underline( 
            /* [in] */ VARIANT_BOOL Underline) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Color( 
            /* [retval][out] */ OlColor *Color) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Color( 
            /* [in] */ OlColor Color) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtendedColor( 
            /* [retval][out] */ OlCategoryColor *ExtendedColor) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtendedColor( 
            /* [in] */ OlCategoryColor ExtendedColor) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ViewFontVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ViewFont * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ViewFont * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ViewFont * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ViewFont * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ViewFont * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ViewFont * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ViewFont * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ViewFont * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ViewFont * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ViewFont * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ViewFont * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bold )( 
            _ViewFont * This,
            /* [retval][out] */ VARIANT_BOOL *Bold);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Bold )( 
            _ViewFont * This,
            /* [in] */ VARIANT_BOOL Bold);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Italic )( 
            _ViewFont * This,
            /* [retval][out] */ VARIANT_BOOL *Italic);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Italic )( 
            _ViewFont * This,
            /* [in] */ VARIANT_BOOL Italic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _ViewFont * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _ViewFont * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _ViewFont * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Size )( 
            _ViewFont * This,
            /* [in] */ long Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Strikethrough )( 
            _ViewFont * This,
            /* [retval][out] */ VARIANT_BOOL *Strikethrough);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Strikethrough )( 
            _ViewFont * This,
            /* [in] */ VARIANT_BOOL Strikethrough);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Underline )( 
            _ViewFont * This,
            /* [retval][out] */ VARIANT_BOOL *Underline);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Underline )( 
            _ViewFont * This,
            /* [in] */ VARIANT_BOOL Underline);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            _ViewFont * This,
            /* [retval][out] */ OlColor *Color);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            _ViewFont * This,
            /* [in] */ OlColor Color);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtendedColor )( 
            _ViewFont * This,
            /* [retval][out] */ OlCategoryColor *ExtendedColor);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtendedColor )( 
            _ViewFont * This,
            /* [in] */ OlCategoryColor ExtendedColor);
        
        END_INTERFACE
    } _ViewFontVtbl;

    interface _ViewFont
    {
        CONST_VTBL struct _ViewFontVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ViewFont_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ViewFont_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ViewFont_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ViewFont_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ViewFont_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ViewFont_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ViewFont_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ViewFont_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ViewFont_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ViewFont_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ViewFont_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ViewFont_get_Bold(This,Bold)	\
    ( (This)->lpVtbl -> get_Bold(This,Bold) ) 

#define _ViewFont_put_Bold(This,Bold)	\
    ( (This)->lpVtbl -> put_Bold(This,Bold) ) 

#define _ViewFont_get_Italic(This,Italic)	\
    ( (This)->lpVtbl -> get_Italic(This,Italic) ) 

#define _ViewFont_put_Italic(This,Italic)	\
    ( (This)->lpVtbl -> put_Italic(This,Italic) ) 

#define _ViewFont_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _ViewFont_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _ViewFont_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _ViewFont_put_Size(This,Size)	\
    ( (This)->lpVtbl -> put_Size(This,Size) ) 

#define _ViewFont_get_Strikethrough(This,Strikethrough)	\
    ( (This)->lpVtbl -> get_Strikethrough(This,Strikethrough) ) 

#define _ViewFont_put_Strikethrough(This,Strikethrough)	\
    ( (This)->lpVtbl -> put_Strikethrough(This,Strikethrough) ) 

#define _ViewFont_get_Underline(This,Underline)	\
    ( (This)->lpVtbl -> get_Underline(This,Underline) ) 

#define _ViewFont_put_Underline(This,Underline)	\
    ( (This)->lpVtbl -> put_Underline(This,Underline) ) 

#define _ViewFont_get_Color(This,Color)	\
    ( (This)->lpVtbl -> get_Color(This,Color) ) 

#define _ViewFont_put_Color(This,Color)	\
    ( (This)->lpVtbl -> put_Color(This,Color) ) 

#define _ViewFont_get_ExtendedColor(This,ExtendedColor)	\
    ( (This)->lpVtbl -> get_ExtendedColor(This,ExtendedColor) ) 

#define _ViewFont_put_ExtendedColor(This,ExtendedColor)	\
    ( (This)->lpVtbl -> put_ExtendedColor(This,ExtendedColor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ViewFont_INTERFACE_DEFINED__ */


#ifndef ___AutoFormatRules_INTERFACE_DEFINED__
#define ___AutoFormatRules_INTERFACE_DEFINED__

/* interface _AutoFormatRules */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__AutoFormatRules;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063094-0000-0000-C000-000000000046")
    _AutoFormatRules : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _AutoFormatRule **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ _AutoFormatRule **AutoFormatRule) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _AutoFormatRule **AutoFormatRule) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AutoFormatRulesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AutoFormatRules * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AutoFormatRules * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AutoFormatRules * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AutoFormatRules * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AutoFormatRules * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AutoFormatRules * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AutoFormatRules * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _AutoFormatRules * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _AutoFormatRules * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _AutoFormatRules * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _AutoFormatRules * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _AutoFormatRules * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _AutoFormatRules * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _AutoFormatRule **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _AutoFormatRules * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ _AutoFormatRule **AutoFormatRule);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            _AutoFormatRules * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _AutoFormatRule **AutoFormatRule);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _AutoFormatRules * This,
            /* [in] */ VARIANT Index);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            _AutoFormatRules * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _AutoFormatRules * This);
        
        END_INTERFACE
    } _AutoFormatRulesVtbl;

    interface _AutoFormatRules
    {
        CONST_VTBL struct _AutoFormatRulesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AutoFormatRules_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AutoFormatRules_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AutoFormatRules_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AutoFormatRules_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AutoFormatRules_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AutoFormatRules_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AutoFormatRules_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _AutoFormatRules_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _AutoFormatRules_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _AutoFormatRules_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _AutoFormatRules_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _AutoFormatRules_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _AutoFormatRules_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _AutoFormatRules_Add(This,Name,AutoFormatRule)	\
    ( (This)->lpVtbl -> Add(This,Name,AutoFormatRule) ) 

#define _AutoFormatRules_Insert(This,Name,Index,AutoFormatRule)	\
    ( (This)->lpVtbl -> Insert(This,Name,Index,AutoFormatRule) ) 

#define _AutoFormatRules_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define _AutoFormatRules_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#define _AutoFormatRules_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AutoFormatRules_INTERFACE_DEFINED__ */


#ifndef ___AutoFormatRule_INTERFACE_DEFINED__
#define ___AutoFormatRule_INTERFACE_DEFINED__

/* interface _AutoFormatRule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__AutoFormatRule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063093-0000-0000-C000-000000000046")
    _AutoFormatRule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Filter( 
            /* [in] */ BSTR Filter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *Enabled) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Font( 
            /* [retval][out] */ _ViewFont **Font) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Font( 
            /* [in] */ ViewFont	*Font) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Standard( 
            /* [retval][out] */ VARIANT_BOOL *Standard) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AutoFormatRuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AutoFormatRule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AutoFormatRule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AutoFormatRule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AutoFormatRule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AutoFormatRule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AutoFormatRule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AutoFormatRule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _AutoFormatRule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _AutoFormatRule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _AutoFormatRule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _AutoFormatRule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _AutoFormatRule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _AutoFormatRule * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            _AutoFormatRule * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            _AutoFormatRule * This,
            /* [in] */ BSTR Filter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            _AutoFormatRule * This,
            /* [retval][out] */ VARIANT_BOOL *Enabled);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            _AutoFormatRule * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Font )( 
            _AutoFormatRule * This,
            /* [retval][out] */ _ViewFont **Font);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Font )( 
            _AutoFormatRule * This,
            /* [in] */ ViewFont	*Font);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Standard )( 
            _AutoFormatRule * This,
            /* [retval][out] */ VARIANT_BOOL *Standard);
        
        END_INTERFACE
    } _AutoFormatRuleVtbl;

    interface _AutoFormatRule
    {
        CONST_VTBL struct _AutoFormatRuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AutoFormatRule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AutoFormatRule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AutoFormatRule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AutoFormatRule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AutoFormatRule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AutoFormatRule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AutoFormatRule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _AutoFormatRule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _AutoFormatRule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _AutoFormatRule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _AutoFormatRule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _AutoFormatRule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _AutoFormatRule_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _AutoFormatRule_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define _AutoFormatRule_put_Filter(This,Filter)	\
    ( (This)->lpVtbl -> put_Filter(This,Filter) ) 

#define _AutoFormatRule_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#define _AutoFormatRule_put_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,Enabled) ) 

#define _AutoFormatRule_get_Font(This,Font)	\
    ( (This)->lpVtbl -> get_Font(This,Font) ) 

#define _AutoFormatRule_put_Font(This,Font)	\
    ( (This)->lpVtbl -> put_Font(This,Font) ) 

#define _AutoFormatRule_get_Standard(This,Standard)	\
    ( (This)->lpVtbl -> get_Standard(This,Standard) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AutoFormatRule_INTERFACE_DEFINED__ */


#ifndef ___TimelineView_INTERFACE_DEFINED__
#define ___TimelineView_INTERFACE_DEFINED__

/* interface _TimelineView */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TimelineView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006309C-0000-0000-C000-000000000046")
    _TimelineView : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ BSTR Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LockUserChanges( 
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LockUserChanges( 
            /* [in] */ VARIANT_BOOL LockUserChanges) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveOption( 
            /* [retval][out] */ OlViewSaveOption *SaveOption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Standard( 
            /* [retval][out] */ VARIANT_BOOL *Standard) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewType( 
            /* [retval][out] */ OlViewType *ViewType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XML( 
            /* [retval][out] */ BSTR *XML) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_XML( 
            /* [in] */ BSTR XML) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GoToDate( 
            /* [in] */ DATE Date) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Filter( 
            /* [in] */ BSTR Filter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartField( 
            /* [retval][out] */ BSTR *StartField) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartField( 
            /* [in] */ BSTR StartField) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndField( 
            /* [retval][out] */ BSTR *EndField) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndField( 
            /* [in] */ BSTR EndField) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GroupByFields( 
            /* [retval][out] */ _OrderFields **GroupByFields) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultExpandCollapseSetting( 
            /* [retval][out] */ OlDefaultExpandCollapseSetting *DefaultExpandCollapseSetting) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultExpandCollapseSetting( 
            /* [in] */ OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowWeekNumbers( 
            /* [retval][out] */ VARIANT_BOOL *ShowWeekNumbers) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowWeekNumbers( 
            /* [in] */ VARIANT_BOOL ShowWeekNumbers) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MaxLabelWidth( 
            /* [retval][out] */ long *MaxLabelWidth) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MaxLabelWidth( 
            /* [in] */ long MaxLabelWidth) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowLabelWhenViewingByMonth( 
            /* [retval][out] */ VARIANT_BOOL *ShowLabelWhenViewingByMonth) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowLabelWhenViewingByMonth( 
            /* [in] */ VARIANT_BOOL ShowLabelWhenViewingByMonth) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UpperScaleFont( 
            /* [retval][out] */ _ViewFont **UpperScaleFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LowerScaleFont( 
            /* [retval][out] */ _ViewFont **LowerScaleFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemFont( 
            /* [retval][out] */ _ViewFont **ItemFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TimelineViewMode( 
            /* [retval][out] */ OlTimelineViewMode *TimelineViewMode) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TimelineViewMode( 
            /* [in] */ OlTimelineViewMode TimelineViewMode) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TimelineViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TimelineView * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TimelineView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TimelineView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TimelineView * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TimelineView * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TimelineView * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TimelineView * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TimelineView * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TimelineView * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TimelineView * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TimelineView * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            _TimelineView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _TimelineView * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _TimelineView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _TimelineView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _TimelineView * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            _TimelineView * This,
            /* [retval][out] */ BSTR *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            _TimelineView * This,
            /* [in] */ BSTR Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockUserChanges )( 
            _TimelineView * This,
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockUserChanges )( 
            _TimelineView * This,
            /* [in] */ VARIANT_BOOL LockUserChanges);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _TimelineView * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _TimelineView * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveOption )( 
            _TimelineView * This,
            /* [retval][out] */ OlViewSaveOption *SaveOption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Standard )( 
            _TimelineView * This,
            /* [retval][out] */ VARIANT_BOOL *Standard);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewType )( 
            _TimelineView * This,
            /* [retval][out] */ OlViewType *ViewType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XML )( 
            _TimelineView * This,
            /* [retval][out] */ BSTR *XML);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XML )( 
            _TimelineView * This,
            /* [in] */ BSTR XML);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GoToDate )( 
            _TimelineView * This,
            /* [in] */ DATE Date);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            _TimelineView * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            _TimelineView * This,
            /* [in] */ BSTR Filter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartField )( 
            _TimelineView * This,
            /* [retval][out] */ BSTR *StartField);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartField )( 
            _TimelineView * This,
            /* [in] */ BSTR StartField);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndField )( 
            _TimelineView * This,
            /* [retval][out] */ BSTR *EndField);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndField )( 
            _TimelineView * This,
            /* [in] */ BSTR EndField);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GroupByFields )( 
            _TimelineView * This,
            /* [retval][out] */ _OrderFields **GroupByFields);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultExpandCollapseSetting )( 
            _TimelineView * This,
            /* [retval][out] */ OlDefaultExpandCollapseSetting *DefaultExpandCollapseSetting);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultExpandCollapseSetting )( 
            _TimelineView * This,
            /* [in] */ OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowWeekNumbers )( 
            _TimelineView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowWeekNumbers);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowWeekNumbers )( 
            _TimelineView * This,
            /* [in] */ VARIANT_BOOL ShowWeekNumbers);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLabelWidth )( 
            _TimelineView * This,
            /* [retval][out] */ long *MaxLabelWidth);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxLabelWidth )( 
            _TimelineView * This,
            /* [in] */ long MaxLabelWidth);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowLabelWhenViewingByMonth )( 
            _TimelineView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowLabelWhenViewingByMonth);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowLabelWhenViewingByMonth )( 
            _TimelineView * This,
            /* [in] */ VARIANT_BOOL ShowLabelWhenViewingByMonth);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UpperScaleFont )( 
            _TimelineView * This,
            /* [retval][out] */ _ViewFont **UpperScaleFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LowerScaleFont )( 
            _TimelineView * This,
            /* [retval][out] */ _ViewFont **LowerScaleFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemFont )( 
            _TimelineView * This,
            /* [retval][out] */ _ViewFont **ItemFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TimelineViewMode )( 
            _TimelineView * This,
            /* [retval][out] */ OlTimelineViewMode *TimelineViewMode);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TimelineViewMode )( 
            _TimelineView * This,
            /* [in] */ OlTimelineViewMode TimelineViewMode);
        
        END_INTERFACE
    } _TimelineViewVtbl;

    interface _TimelineView
    {
        CONST_VTBL struct _TimelineViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TimelineView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TimelineView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TimelineView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TimelineView_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TimelineView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TimelineView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TimelineView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TimelineView_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TimelineView_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TimelineView_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TimelineView_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TimelineView_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define _TimelineView_Copy(This,Name,SaveOption,ppview)	\
    ( (This)->lpVtbl -> Copy(This,Name,SaveOption,ppview) ) 

#define _TimelineView_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _TimelineView_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _TimelineView_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _TimelineView_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define _TimelineView_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define _TimelineView_get_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> get_LockUserChanges(This,LockUserChanges) ) 

#define _TimelineView_put_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> put_LockUserChanges(This,LockUserChanges) ) 

#define _TimelineView_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _TimelineView_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _TimelineView_get_SaveOption(This,SaveOption)	\
    ( (This)->lpVtbl -> get_SaveOption(This,SaveOption) ) 

#define _TimelineView_get_Standard(This,Standard)	\
    ( (This)->lpVtbl -> get_Standard(This,Standard) ) 

#define _TimelineView_get_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> get_ViewType(This,ViewType) ) 

#define _TimelineView_get_XML(This,XML)	\
    ( (This)->lpVtbl -> get_XML(This,XML) ) 

#define _TimelineView_put_XML(This,XML)	\
    ( (This)->lpVtbl -> put_XML(This,XML) ) 

#define _TimelineView_GoToDate(This,Date)	\
    ( (This)->lpVtbl -> GoToDate(This,Date) ) 

#define _TimelineView_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define _TimelineView_put_Filter(This,Filter)	\
    ( (This)->lpVtbl -> put_Filter(This,Filter) ) 

#define _TimelineView_get_StartField(This,StartField)	\
    ( (This)->lpVtbl -> get_StartField(This,StartField) ) 

#define _TimelineView_put_StartField(This,StartField)	\
    ( (This)->lpVtbl -> put_StartField(This,StartField) ) 

#define _TimelineView_get_EndField(This,EndField)	\
    ( (This)->lpVtbl -> get_EndField(This,EndField) ) 

#define _TimelineView_put_EndField(This,EndField)	\
    ( (This)->lpVtbl -> put_EndField(This,EndField) ) 

#define _TimelineView_get_GroupByFields(This,GroupByFields)	\
    ( (This)->lpVtbl -> get_GroupByFields(This,GroupByFields) ) 

#define _TimelineView_get_DefaultExpandCollapseSetting(This,DefaultExpandCollapseSetting)	\
    ( (This)->lpVtbl -> get_DefaultExpandCollapseSetting(This,DefaultExpandCollapseSetting) ) 

#define _TimelineView_put_DefaultExpandCollapseSetting(This,DefaultExpandCollapseSetting)	\
    ( (This)->lpVtbl -> put_DefaultExpandCollapseSetting(This,DefaultExpandCollapseSetting) ) 

#define _TimelineView_get_ShowWeekNumbers(This,ShowWeekNumbers)	\
    ( (This)->lpVtbl -> get_ShowWeekNumbers(This,ShowWeekNumbers) ) 

#define _TimelineView_put_ShowWeekNumbers(This,ShowWeekNumbers)	\
    ( (This)->lpVtbl -> put_ShowWeekNumbers(This,ShowWeekNumbers) ) 

#define _TimelineView_get_MaxLabelWidth(This,MaxLabelWidth)	\
    ( (This)->lpVtbl -> get_MaxLabelWidth(This,MaxLabelWidth) ) 

#define _TimelineView_put_MaxLabelWidth(This,MaxLabelWidth)	\
    ( (This)->lpVtbl -> put_MaxLabelWidth(This,MaxLabelWidth) ) 

#define _TimelineView_get_ShowLabelWhenViewingByMonth(This,ShowLabelWhenViewingByMonth)	\
    ( (This)->lpVtbl -> get_ShowLabelWhenViewingByMonth(This,ShowLabelWhenViewingByMonth) ) 

#define _TimelineView_put_ShowLabelWhenViewingByMonth(This,ShowLabelWhenViewingByMonth)	\
    ( (This)->lpVtbl -> put_ShowLabelWhenViewingByMonth(This,ShowLabelWhenViewingByMonth) ) 

#define _TimelineView_get_UpperScaleFont(This,UpperScaleFont)	\
    ( (This)->lpVtbl -> get_UpperScaleFont(This,UpperScaleFont) ) 

#define _TimelineView_get_LowerScaleFont(This,LowerScaleFont)	\
    ( (This)->lpVtbl -> get_LowerScaleFont(This,LowerScaleFont) ) 

#define _TimelineView_get_ItemFont(This,ItemFont)	\
    ( (This)->lpVtbl -> get_ItemFont(This,ItemFont) ) 

#define _TimelineView_get_TimelineViewMode(This,TimelineViewMode)	\
    ( (This)->lpVtbl -> get_TimelineViewMode(This,TimelineViewMode) ) 

#define _TimelineView_put_TimelineViewMode(This,TimelineViewMode)	\
    ( (This)->lpVtbl -> put_TimelineViewMode(This,TimelineViewMode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TimelineView_INTERFACE_DEFINED__ */


#ifndef ___MailModule_INTERFACE_DEFINED__
#define ___MailModule_INTERFACE_DEFINED__

/* interface _MailModule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__MailModule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630E9-0000-0000-C000-000000000046")
    _MailModule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationModuleType( 
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationGroups( 
            /* [retval][out] */ _NavigationGroups **NavigationGroups) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MailModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MailModule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MailModule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MailModule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MailModule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MailModule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MailModule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MailModule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _MailModule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _MailModule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _MailModule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _MailModule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationModuleType )( 
            _MailModule * This,
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _MailModule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _MailModule * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _MailModule * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _MailModule * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _MailModule * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationGroups )( 
            _MailModule * This,
            /* [retval][out] */ _NavigationGroups **NavigationGroups);
        
        END_INTERFACE
    } _MailModuleVtbl;

    interface _MailModule
    {
        CONST_VTBL struct _MailModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MailModule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MailModule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MailModule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MailModule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MailModule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MailModule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MailModule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _MailModule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _MailModule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _MailModule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _MailModule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _MailModule_get_NavigationModuleType(This,NavigationModuleType)	\
    ( (This)->lpVtbl -> get_NavigationModuleType(This,NavigationModuleType) ) 

#define _MailModule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _MailModule_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _MailModule_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define _MailModule_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _MailModule_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define _MailModule_get_NavigationGroups(This,NavigationGroups)	\
    ( (This)->lpVtbl -> get_NavigationGroups(This,NavigationGroups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MailModule_INTERFACE_DEFINED__ */


#ifndef ___NavigationGroups_INTERFACE_DEFINED__
#define ___NavigationGroups_INTERFACE_DEFINED__

/* interface _NavigationGroups */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NavigationGroups;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630EF-0000-0000-C000-000000000046")
    _NavigationGroups : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _NavigationGroup **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ BSTR GroupDisplayName,
            /* [retval][out] */ _NavigationGroup **NavigationGroup) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ _NavigationGroup *Group) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetDefaultNavigationGroup( 
            /* [in] */ OlGroupType DefaultFolderGroup,
            /* [retval][out] */ _NavigationGroup **NavigationGroup) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NavigationGroupsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NavigationGroups * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NavigationGroups * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NavigationGroups * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NavigationGroups * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NavigationGroups * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NavigationGroups * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NavigationGroups * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NavigationGroups * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NavigationGroups * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NavigationGroups * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NavigationGroups * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _NavigationGroups * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _NavigationGroups * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _NavigationGroup **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Create )( 
            _NavigationGroups * This,
            /* [in] */ BSTR GroupDisplayName,
            /* [retval][out] */ _NavigationGroup **NavigationGroup);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _NavigationGroups * This,
            /* [in] */ _NavigationGroup *Group);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetDefaultNavigationGroup )( 
            _NavigationGroups * This,
            /* [in] */ OlGroupType DefaultFolderGroup,
            /* [retval][out] */ _NavigationGroup **NavigationGroup);
        
        END_INTERFACE
    } _NavigationGroupsVtbl;

    interface _NavigationGroups
    {
        CONST_VTBL struct _NavigationGroupsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NavigationGroups_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NavigationGroups_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NavigationGroups_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NavigationGroups_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NavigationGroups_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NavigationGroups_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NavigationGroups_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NavigationGroups_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NavigationGroups_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NavigationGroups_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NavigationGroups_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NavigationGroups_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _NavigationGroups_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _NavigationGroups_Create(This,GroupDisplayName,NavigationGroup)	\
    ( (This)->lpVtbl -> Create(This,GroupDisplayName,NavigationGroup) ) 

#define _NavigationGroups_Delete(This,Group)	\
    ( (This)->lpVtbl -> Delete(This,Group) ) 

#define _NavigationGroups_GetDefaultNavigationGroup(This,DefaultFolderGroup,NavigationGroup)	\
    ( (This)->lpVtbl -> GetDefaultNavigationGroup(This,DefaultFolderGroup,NavigationGroup) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NavigationGroups_INTERFACE_DEFINED__ */


#ifndef ___NavigationGroup_INTERFACE_DEFINED__
#define ___NavigationGroup_INTERFACE_DEFINED__

/* interface _NavigationGroup */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NavigationGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630F0-0000-0000-C000-000000000046")
    _NavigationGroup : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GroupType( 
            /* [retval][out] */ OlGroupType *GroupType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationFolders( 
            /* [retval][out] */ _NavigationFolders **NavigationFolders) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NavigationGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NavigationGroup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NavigationGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NavigationGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NavigationGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NavigationGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NavigationGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NavigationGroup * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NavigationGroup * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NavigationGroup * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NavigationGroup * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NavigationGroup * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GroupType )( 
            _NavigationGroup * This,
            /* [retval][out] */ OlGroupType *GroupType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationFolders )( 
            _NavigationGroup * This,
            /* [retval][out] */ _NavigationFolders **NavigationFolders);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _NavigationGroup * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _NavigationGroup * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _NavigationGroup * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _NavigationGroup * This,
            /* [in] */ long Position);
        
        END_INTERFACE
    } _NavigationGroupVtbl;

    interface _NavigationGroup
    {
        CONST_VTBL struct _NavigationGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NavigationGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NavigationGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NavigationGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NavigationGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NavigationGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NavigationGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NavigationGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NavigationGroup_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NavigationGroup_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NavigationGroup_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NavigationGroup_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NavigationGroup_get_GroupType(This,GroupType)	\
    ( (This)->lpVtbl -> get_GroupType(This,GroupType) ) 

#define _NavigationGroup_get_NavigationFolders(This,NavigationFolders)	\
    ( (This)->lpVtbl -> get_NavigationFolders(This,NavigationFolders) ) 

#define _NavigationGroup_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _NavigationGroup_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _NavigationGroup_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _NavigationGroup_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NavigationGroup_INTERFACE_DEFINED__ */


#ifndef ___NavigationFolders_INTERFACE_DEFINED__
#define ___NavigationFolders_INTERFACE_DEFINED__

/* interface _NavigationFolders */
/* [object][custom][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NavigationFolders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630F1-0000-0000-C000-000000000046")
    _NavigationFolders : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [custom][custom][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _NavigationFolder **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ MAPIFolder *Folder,
            /* [retval][out] */ _NavigationFolder **NavigationFolder) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ _NavigationFolder *RemovableFolder) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NavigationFoldersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NavigationFolders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NavigationFolders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NavigationFolders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NavigationFolders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NavigationFolders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NavigationFolders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NavigationFolders * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NavigationFolders * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NavigationFolders * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NavigationFolders * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NavigationFolders * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _NavigationFolders * This,
            /* [retval][out] */ long *Count);
        
        /* [custom][custom][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            _NavigationFolders * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ _NavigationFolder **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            _NavigationFolders * This,
            /* [in] */ MAPIFolder *Folder,
            /* [retval][out] */ _NavigationFolder **NavigationFolder);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            _NavigationFolders * This,
            /* [in] */ _NavigationFolder *RemovableFolder);
        
        END_INTERFACE
    } _NavigationFoldersVtbl;

    interface _NavigationFolders
    {
        CONST_VTBL struct _NavigationFoldersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NavigationFolders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NavigationFolders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NavigationFolders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NavigationFolders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NavigationFolders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NavigationFolders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NavigationFolders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NavigationFolders_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NavigationFolders_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NavigationFolders_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NavigationFolders_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NavigationFolders_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _NavigationFolders_Item(This,Index,Item)	\
    ( (This)->lpVtbl -> Item(This,Index,Item) ) 

#define _NavigationFolders_Add(This,Folder,NavigationFolder)	\
    ( (This)->lpVtbl -> Add(This,Folder,NavigationFolder) ) 

#define _NavigationFolders_Remove(This,RemovableFolder)	\
    ( (This)->lpVtbl -> Remove(This,RemovableFolder) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NavigationFolders_INTERFACE_DEFINED__ */


#ifndef ___NavigationFolder_INTERFACE_DEFINED__
#define ___NavigationFolder_INTERFACE_DEFINED__

/* interface _NavigationFolder */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NavigationFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630F2-0000-0000-C000-000000000046")
    _NavigationFolder : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Folder( 
            /* [retval][out] */ MAPIFolder **Folder) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsSelected( 
            /* [retval][out] */ VARIANT_BOOL *IsSelected) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsSelected( 
            /* [in] */ VARIANT_BOOL IsSelected) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsSideBySide( 
            /* [retval][out] */ VARIANT_BOOL *IsSideBySide) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsSideBySide( 
            /* [in] */ VARIANT_BOOL IsSideBySide) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsRemovable( 
            /* [retval][out] */ VARIANT_BOOL *IsRemovable) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ BSTR *DisplayName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NavigationFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NavigationFolder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NavigationFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NavigationFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NavigationFolder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NavigationFolder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NavigationFolder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NavigationFolder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NavigationFolder * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NavigationFolder * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NavigationFolder * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NavigationFolder * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Folder )( 
            _NavigationFolder * This,
            /* [retval][out] */ MAPIFolder **Folder);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsSelected )( 
            _NavigationFolder * This,
            /* [retval][out] */ VARIANT_BOOL *IsSelected);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsSelected )( 
            _NavigationFolder * This,
            /* [in] */ VARIANT_BOOL IsSelected);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsSideBySide )( 
            _NavigationFolder * This,
            /* [retval][out] */ VARIANT_BOOL *IsSideBySide);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsSideBySide )( 
            _NavigationFolder * This,
            /* [in] */ VARIANT_BOOL IsSideBySide);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _NavigationFolder * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _NavigationFolder * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsRemovable )( 
            _NavigationFolder * This,
            /* [retval][out] */ VARIANT_BOOL *IsRemovable);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )( 
            _NavigationFolder * This,
            /* [retval][out] */ BSTR *DisplayName);
        
        END_INTERFACE
    } _NavigationFolderVtbl;

    interface _NavigationFolder
    {
        CONST_VTBL struct _NavigationFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NavigationFolder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NavigationFolder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NavigationFolder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NavigationFolder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NavigationFolder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NavigationFolder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NavigationFolder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NavigationFolder_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NavigationFolder_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NavigationFolder_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NavigationFolder_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NavigationFolder_get_Folder(This,Folder)	\
    ( (This)->lpVtbl -> get_Folder(This,Folder) ) 

#define _NavigationFolder_get_IsSelected(This,IsSelected)	\
    ( (This)->lpVtbl -> get_IsSelected(This,IsSelected) ) 

#define _NavigationFolder_put_IsSelected(This,IsSelected)	\
    ( (This)->lpVtbl -> put_IsSelected(This,IsSelected) ) 

#define _NavigationFolder_get_IsSideBySide(This,IsSideBySide)	\
    ( (This)->lpVtbl -> get_IsSideBySide(This,IsSideBySide) ) 

#define _NavigationFolder_put_IsSideBySide(This,IsSideBySide)	\
    ( (This)->lpVtbl -> put_IsSideBySide(This,IsSideBySide) ) 

#define _NavigationFolder_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _NavigationFolder_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define _NavigationFolder_get_IsRemovable(This,IsRemovable)	\
    ( (This)->lpVtbl -> get_IsRemovable(This,IsRemovable) ) 

#define _NavigationFolder_get_DisplayName(This,DisplayName)	\
    ( (This)->lpVtbl -> get_DisplayName(This,DisplayName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NavigationFolder_INTERFACE_DEFINED__ */


#ifndef ___CalendarModule_INTERFACE_DEFINED__
#define ___CalendarModule_INTERFACE_DEFINED__

/* interface _CalendarModule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__CalendarModule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630EA-0000-0000-C000-000000000046")
    _CalendarModule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationModuleType( 
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationGroups( 
            /* [retval][out] */ _NavigationGroups **NavigationGroups) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _CalendarModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CalendarModule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CalendarModule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CalendarModule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CalendarModule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CalendarModule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CalendarModule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CalendarModule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _CalendarModule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _CalendarModule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _CalendarModule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _CalendarModule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationModuleType )( 
            _CalendarModule * This,
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _CalendarModule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _CalendarModule * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _CalendarModule * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _CalendarModule * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _CalendarModule * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationGroups )( 
            _CalendarModule * This,
            /* [retval][out] */ _NavigationGroups **NavigationGroups);
        
        END_INTERFACE
    } _CalendarModuleVtbl;

    interface _CalendarModule
    {
        CONST_VTBL struct _CalendarModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CalendarModule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CalendarModule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CalendarModule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CalendarModule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CalendarModule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CalendarModule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CalendarModule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CalendarModule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _CalendarModule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _CalendarModule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _CalendarModule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _CalendarModule_get_NavigationModuleType(This,NavigationModuleType)	\
    ( (This)->lpVtbl -> get_NavigationModuleType(This,NavigationModuleType) ) 

#define _CalendarModule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _CalendarModule_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _CalendarModule_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define _CalendarModule_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _CalendarModule_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define _CalendarModule_get_NavigationGroups(This,NavigationGroups)	\
    ( (This)->lpVtbl -> get_NavigationGroups(This,NavigationGroups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CalendarModule_INTERFACE_DEFINED__ */


#ifndef ___ContactsModule_INTERFACE_DEFINED__
#define ___ContactsModule_INTERFACE_DEFINED__

/* interface _ContactsModule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ContactsModule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630EB-0000-0000-C000-000000000046")
    _ContactsModule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationModuleType( 
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationGroups( 
            /* [retval][out] */ _NavigationGroups **NavigationGroups) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ContactsModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ContactsModule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ContactsModule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ContactsModule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ContactsModule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ContactsModule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ContactsModule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ContactsModule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ContactsModule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ContactsModule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ContactsModule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ContactsModule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationModuleType )( 
            _ContactsModule * This,
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _ContactsModule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _ContactsModule * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _ContactsModule * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _ContactsModule * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _ContactsModule * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationGroups )( 
            _ContactsModule * This,
            /* [retval][out] */ _NavigationGroups **NavigationGroups);
        
        END_INTERFACE
    } _ContactsModuleVtbl;

    interface _ContactsModule
    {
        CONST_VTBL struct _ContactsModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ContactsModule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ContactsModule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ContactsModule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ContactsModule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ContactsModule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ContactsModule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ContactsModule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ContactsModule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ContactsModule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ContactsModule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ContactsModule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ContactsModule_get_NavigationModuleType(This,NavigationModuleType)	\
    ( (This)->lpVtbl -> get_NavigationModuleType(This,NavigationModuleType) ) 

#define _ContactsModule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _ContactsModule_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _ContactsModule_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define _ContactsModule_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _ContactsModule_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define _ContactsModule_get_NavigationGroups(This,NavigationGroups)	\
    ( (This)->lpVtbl -> get_NavigationGroups(This,NavigationGroups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ContactsModule_INTERFACE_DEFINED__ */


#ifndef ___TasksModule_INTERFACE_DEFINED__
#define ___TasksModule_INTERFACE_DEFINED__

/* interface _TasksModule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TasksModule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630EC-0000-0000-C000-000000000046")
    _TasksModule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationModuleType( 
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationGroups( 
            /* [retval][out] */ _NavigationGroups **NavigationGroups) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TasksModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TasksModule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TasksModule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TasksModule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TasksModule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TasksModule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TasksModule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TasksModule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TasksModule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TasksModule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TasksModule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TasksModule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationModuleType )( 
            _TasksModule * This,
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _TasksModule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _TasksModule * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _TasksModule * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _TasksModule * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _TasksModule * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationGroups )( 
            _TasksModule * This,
            /* [retval][out] */ _NavigationGroups **NavigationGroups);
        
        END_INTERFACE
    } _TasksModuleVtbl;

    interface _TasksModule
    {
        CONST_VTBL struct _TasksModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TasksModule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TasksModule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TasksModule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TasksModule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TasksModule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TasksModule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TasksModule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TasksModule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TasksModule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TasksModule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TasksModule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TasksModule_get_NavigationModuleType(This,NavigationModuleType)	\
    ( (This)->lpVtbl -> get_NavigationModuleType(This,NavigationModuleType) ) 

#define _TasksModule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _TasksModule_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _TasksModule_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define _TasksModule_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _TasksModule_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define _TasksModule_get_NavigationGroups(This,NavigationGroups)	\
    ( (This)->lpVtbl -> get_NavigationGroups(This,NavigationGroups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TasksModule_INTERFACE_DEFINED__ */


#ifndef ___JournalModule_INTERFACE_DEFINED__
#define ___JournalModule_INTERFACE_DEFINED__

/* interface _JournalModule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__JournalModule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630ED-0000-0000-C000-000000000046")
    _JournalModule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationModuleType( 
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationGroups( 
            /* [retval][out] */ _NavigationGroups **NavigationGroups) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _JournalModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _JournalModule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _JournalModule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _JournalModule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _JournalModule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _JournalModule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _JournalModule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _JournalModule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _JournalModule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _JournalModule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _JournalModule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _JournalModule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationModuleType )( 
            _JournalModule * This,
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _JournalModule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _JournalModule * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _JournalModule * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _JournalModule * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _JournalModule * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationGroups )( 
            _JournalModule * This,
            /* [retval][out] */ _NavigationGroups **NavigationGroups);
        
        END_INTERFACE
    } _JournalModuleVtbl;

    interface _JournalModule
    {
        CONST_VTBL struct _JournalModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _JournalModule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _JournalModule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _JournalModule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _JournalModule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _JournalModule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _JournalModule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _JournalModule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _JournalModule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _JournalModule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _JournalModule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _JournalModule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _JournalModule_get_NavigationModuleType(This,NavigationModuleType)	\
    ( (This)->lpVtbl -> get_NavigationModuleType(This,NavigationModuleType) ) 

#define _JournalModule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _JournalModule_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _JournalModule_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define _JournalModule_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _JournalModule_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define _JournalModule_get_NavigationGroups(This,NavigationGroups)	\
    ( (This)->lpVtbl -> get_NavigationGroups(This,NavigationGroups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___JournalModule_INTERFACE_DEFINED__ */


#ifndef ___NotesModule_INTERFACE_DEFINED__
#define ___NotesModule_INTERFACE_DEFINED__

/* interface _NotesModule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__NotesModule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630EE-0000-0000-C000-000000000046")
    _NotesModule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationModuleType( 
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationGroups( 
            /* [retval][out] */ _NavigationGroups **NavigationGroups) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _NotesModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NotesModule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NotesModule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NotesModule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NotesModule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NotesModule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NotesModule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NotesModule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _NotesModule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _NotesModule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _NotesModule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _NotesModule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationModuleType )( 
            _NotesModule * This,
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _NotesModule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _NotesModule * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _NotesModule * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _NotesModule * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _NotesModule * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationGroups )( 
            _NotesModule * This,
            /* [retval][out] */ _NavigationGroups **NavigationGroups);
        
        END_INTERFACE
    } _NotesModuleVtbl;

    interface _NotesModule
    {
        CONST_VTBL struct _NotesModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NotesModule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NotesModule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NotesModule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NotesModule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NotesModule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NotesModule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NotesModule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _NotesModule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _NotesModule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _NotesModule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _NotesModule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _NotesModule_get_NavigationModuleType(This,NavigationModuleType)	\
    ( (This)->lpVtbl -> get_NavigationModuleType(This,NavigationModuleType) ) 

#define _NotesModule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _NotesModule_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _NotesModule_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define _NotesModule_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _NotesModule_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define _NotesModule_get_NavigationGroups(This,NavigationGroups)	\
    ( (This)->lpVtbl -> get_NavigationGroups(This,NavigationGroups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NotesModule_INTERFACE_DEFINED__ */


#ifndef __NavigationPaneEvents_12_DISPINTERFACE_DEFINED__
#define __NavigationPaneEvents_12_DISPINTERFACE_DEFINED__

/* dispinterface NavigationPaneEvents_12 */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_NavigationPaneEvents_12;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000630F3-0000-0000-C000-000000000046")
    NavigationPaneEvents_12 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct NavigationPaneEvents_12Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            NavigationPaneEvents_12 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            NavigationPaneEvents_12 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            NavigationPaneEvents_12 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            NavigationPaneEvents_12 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            NavigationPaneEvents_12 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            NavigationPaneEvents_12 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            NavigationPaneEvents_12 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } NavigationPaneEvents_12Vtbl;

    interface NavigationPaneEvents_12
    {
        CONST_VTBL struct NavigationPaneEvents_12Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define NavigationPaneEvents_12_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define NavigationPaneEvents_12_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define NavigationPaneEvents_12_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define NavigationPaneEvents_12_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define NavigationPaneEvents_12_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define NavigationPaneEvents_12_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define NavigationPaneEvents_12_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __NavigationPaneEvents_12_DISPINTERFACE_DEFINED__ */


#ifndef __NavigationGroupsEvents_12_DISPINTERFACE_DEFINED__
#define __NavigationGroupsEvents_12_DISPINTERFACE_DEFINED__

/* dispinterface NavigationGroupsEvents_12 */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_NavigationGroupsEvents_12;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000630F4-0000-0000-C000-000000000046")
    NavigationGroupsEvents_12 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct NavigationGroupsEvents_12Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            NavigationGroupsEvents_12 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            NavigationGroupsEvents_12 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            NavigationGroupsEvents_12 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            NavigationGroupsEvents_12 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            NavigationGroupsEvents_12 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            NavigationGroupsEvents_12 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            NavigationGroupsEvents_12 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } NavigationGroupsEvents_12Vtbl;

    interface NavigationGroupsEvents_12
    {
        CONST_VTBL struct NavigationGroupsEvents_12Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define NavigationGroupsEvents_12_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define NavigationGroupsEvents_12_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define NavigationGroupsEvents_12_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define NavigationGroupsEvents_12_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define NavigationGroupsEvents_12_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define NavigationGroupsEvents_12_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define NavigationGroupsEvents_12_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __NavigationGroupsEvents_12_DISPINTERFACE_DEFINED__ */


#ifndef ___BusinessCardView_INTERFACE_DEFINED__
#define ___BusinessCardView_INTERFACE_DEFINED__

/* interface _BusinessCardView */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__BusinessCardView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630A2-0000-0000-C000-000000000046")
    _BusinessCardView : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ BSTR Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LockUserChanges( 
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LockUserChanges( 
            /* [in] */ VARIANT_BOOL LockUserChanges) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveOption( 
            /* [retval][out] */ OlViewSaveOption *SaveOption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Standard( 
            /* [retval][out] */ VARIANT_BOOL *Standard) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewType( 
            /* [retval][out] */ OlViewType *ViewType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XML( 
            /* [retval][out] */ BSTR *XML) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_XML( 
            /* [in] */ BSTR XML) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GoToDate( 
            /* [in] */ DATE Date) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Filter( 
            /* [in] */ BSTR Filter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HeadingsFont( 
            /* [retval][out] */ _ViewFont **HeadingsFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SortFields( 
            /* [retval][out] */ _OrderFields **SortFields) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CardSize( 
            /* [retval][out] */ long *CardSize) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CardSize( 
            /* [in] */ long CardSize) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _BusinessCardViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BusinessCardView * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BusinessCardView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BusinessCardView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BusinessCardView * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BusinessCardView * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BusinessCardView * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BusinessCardView * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _BusinessCardView * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _BusinessCardView * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _BusinessCardView * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _BusinessCardView * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            _BusinessCardView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _BusinessCardView * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _BusinessCardView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _BusinessCardView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _BusinessCardView * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            _BusinessCardView * This,
            /* [retval][out] */ BSTR *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            _BusinessCardView * This,
            /* [in] */ BSTR Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockUserChanges )( 
            _BusinessCardView * This,
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockUserChanges )( 
            _BusinessCardView * This,
            /* [in] */ VARIANT_BOOL LockUserChanges);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _BusinessCardView * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _BusinessCardView * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveOption )( 
            _BusinessCardView * This,
            /* [retval][out] */ OlViewSaveOption *SaveOption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Standard )( 
            _BusinessCardView * This,
            /* [retval][out] */ VARIANT_BOOL *Standard);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewType )( 
            _BusinessCardView * This,
            /* [retval][out] */ OlViewType *ViewType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XML )( 
            _BusinessCardView * This,
            /* [retval][out] */ BSTR *XML);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XML )( 
            _BusinessCardView * This,
            /* [in] */ BSTR XML);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GoToDate )( 
            _BusinessCardView * This,
            /* [in] */ DATE Date);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            _BusinessCardView * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            _BusinessCardView * This,
            /* [in] */ BSTR Filter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HeadingsFont )( 
            _BusinessCardView * This,
            /* [retval][out] */ _ViewFont **HeadingsFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SortFields )( 
            _BusinessCardView * This,
            /* [retval][out] */ _OrderFields **SortFields);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CardSize )( 
            _BusinessCardView * This,
            /* [retval][out] */ long *CardSize);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CardSize )( 
            _BusinessCardView * This,
            /* [in] */ long CardSize);
        
        END_INTERFACE
    } _BusinessCardViewVtbl;

    interface _BusinessCardView
    {
        CONST_VTBL struct _BusinessCardViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BusinessCardView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BusinessCardView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BusinessCardView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BusinessCardView_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BusinessCardView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BusinessCardView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BusinessCardView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _BusinessCardView_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _BusinessCardView_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _BusinessCardView_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _BusinessCardView_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _BusinessCardView_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define _BusinessCardView_Copy(This,Name,SaveOption,ppview)	\
    ( (This)->lpVtbl -> Copy(This,Name,SaveOption,ppview) ) 

#define _BusinessCardView_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _BusinessCardView_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _BusinessCardView_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _BusinessCardView_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define _BusinessCardView_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define _BusinessCardView_get_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> get_LockUserChanges(This,LockUserChanges) ) 

#define _BusinessCardView_put_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> put_LockUserChanges(This,LockUserChanges) ) 

#define _BusinessCardView_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _BusinessCardView_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _BusinessCardView_get_SaveOption(This,SaveOption)	\
    ( (This)->lpVtbl -> get_SaveOption(This,SaveOption) ) 

#define _BusinessCardView_get_Standard(This,Standard)	\
    ( (This)->lpVtbl -> get_Standard(This,Standard) ) 

#define _BusinessCardView_get_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> get_ViewType(This,ViewType) ) 

#define _BusinessCardView_get_XML(This,XML)	\
    ( (This)->lpVtbl -> get_XML(This,XML) ) 

#define _BusinessCardView_put_XML(This,XML)	\
    ( (This)->lpVtbl -> put_XML(This,XML) ) 

#define _BusinessCardView_GoToDate(This,Date)	\
    ( (This)->lpVtbl -> GoToDate(This,Date) ) 

#define _BusinessCardView_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define _BusinessCardView_put_Filter(This,Filter)	\
    ( (This)->lpVtbl -> put_Filter(This,Filter) ) 

#define _BusinessCardView_get_HeadingsFont(This,HeadingsFont)	\
    ( (This)->lpVtbl -> get_HeadingsFont(This,HeadingsFont) ) 

#define _BusinessCardView_get_SortFields(This,SortFields)	\
    ( (This)->lpVtbl -> get_SortFields(This,SortFields) ) 

#define _BusinessCardView_get_CardSize(This,CardSize)	\
    ( (This)->lpVtbl -> get_CardSize(This,CardSize) ) 

#define _BusinessCardView_put_CardSize(This,CardSize)	\
    ( (This)->lpVtbl -> put_CardSize(This,CardSize) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BusinessCardView_INTERFACE_DEFINED__ */


#ifndef ___FormRegionStartup_INTERFACE_DEFINED__
#define ___FormRegionStartup_INTERFACE_DEFINED__

/* interface _FormRegionStartup */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__FormRegionStartup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063059-0000-0000-C000-000000000046")
    _FormRegionStartup : public IDispatch
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFormRegionStorage( 
            /* [in] */ BSTR FormRegionName,
            /* [in] */ IDispatch *Item,
            /* [in] */ long LCID,
            /* [in] */ OlFormRegionMode FormRegionMode,
            /* [in] */ OlFormRegionSize FormRegionSize,
            /* [retval][out] */ VARIANT *Storage) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE BeforeFormRegionShow( 
            /* [in] */ _FormRegion *FormRegion) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFormRegionManifest( 
            /* [in] */ BSTR FormRegionName,
            /* [in] */ long LCID,
            /* [retval][out] */ VARIANT *Manifest) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFormRegionIcon( 
            /* [in] */ BSTR FormRegionName,
            /* [in] */ long LCID,
            /* [in] */ OlFormRegionIcon Icon,
            /* [retval][out] */ VARIANT *Result) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _FormRegionStartupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FormRegionStartup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FormRegionStartup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FormRegionStartup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FormRegionStartup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FormRegionStartup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FormRegionStartup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FormRegionStartup * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFormRegionStorage )( 
            _FormRegionStartup * This,
            /* [in] */ BSTR FormRegionName,
            /* [in] */ IDispatch *Item,
            /* [in] */ long LCID,
            /* [in] */ OlFormRegionMode FormRegionMode,
            /* [in] */ OlFormRegionSize FormRegionSize,
            /* [retval][out] */ VARIANT *Storage);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *BeforeFormRegionShow )( 
            _FormRegionStartup * This,
            /* [in] */ _FormRegion *FormRegion);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFormRegionManifest )( 
            _FormRegionStartup * This,
            /* [in] */ BSTR FormRegionName,
            /* [in] */ long LCID,
            /* [retval][out] */ VARIANT *Manifest);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFormRegionIcon )( 
            _FormRegionStartup * This,
            /* [in] */ BSTR FormRegionName,
            /* [in] */ long LCID,
            /* [in] */ OlFormRegionIcon Icon,
            /* [retval][out] */ VARIANT *Result);
        
        END_INTERFACE
    } _FormRegionStartupVtbl;

    interface _FormRegionStartup
    {
        CONST_VTBL struct _FormRegionStartupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FormRegionStartup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FormRegionStartup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FormRegionStartup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FormRegionStartup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FormRegionStartup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FormRegionStartup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FormRegionStartup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _FormRegionStartup_GetFormRegionStorage(This,FormRegionName,Item,LCID,FormRegionMode,FormRegionSize,Storage)	\
    ( (This)->lpVtbl -> GetFormRegionStorage(This,FormRegionName,Item,LCID,FormRegionMode,FormRegionSize,Storage) ) 

#define _FormRegionStartup_BeforeFormRegionShow(This,FormRegion)	\
    ( (This)->lpVtbl -> BeforeFormRegionShow(This,FormRegion) ) 

#define _FormRegionStartup_GetFormRegionManifest(This,FormRegionName,LCID,Manifest)	\
    ( (This)->lpVtbl -> GetFormRegionManifest(This,FormRegionName,LCID,Manifest) ) 

#define _FormRegionStartup_GetFormRegionIcon(This,FormRegionName,LCID,Icon,Result)	\
    ( (This)->lpVtbl -> GetFormRegionIcon(This,FormRegionName,LCID,Icon,Result) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FormRegionStartup_INTERFACE_DEFINED__ */


#ifndef ___FormRegion_INTERFACE_DEFINED__
#define ___FormRegion_INTERFACE_DEFINED__

/* interface _FormRegion */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__FormRegion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0006305A-0000-0000-C000-000000000046")
    _FormRegion : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsExpanded( 
            /* [retval][out] */ VARIANT_BOOL *IsExpanded) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Form( 
            /* [retval][out] */ IDispatch **Form) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Detail( 
            /* [retval][out] */ BSTR *Detail) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Detail( 
            /* [in] */ BSTR Detail) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Inspector( 
            /* [retval][out] */ _Inspector **Inspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormRegionMode( 
            /* [retval][out] */ OlFormRegionMode *FormRegionMode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ long *Language) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reflow( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ BSTR *DisplayName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InternalName( 
            /* [retval][out] */ BSTR *InternalName) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetControlItemProperty( 
            /* [in] */ IDispatch *Control,
            /* [in] */ BSTR PropertyName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SuppressControlReplacement( 
            /* [retval][out] */ VARIANT_BOOL *SuppressControlReplacement) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SuppressControlReplacement( 
            /* [in] */ VARIANT_BOOL SuppressControlReplacement) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Select( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableAutoLayout( 
            /* [retval][out] */ VARIANT_BOOL *EnableAutoLayout) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableAutoLayout( 
            /* [in] */ VARIANT_BOOL EnableAutoLayout) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _FormRegionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FormRegion * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FormRegion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FormRegion * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FormRegion * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FormRegion * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FormRegion * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FormRegion * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _FormRegion * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _FormRegion * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _FormRegion * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _FormRegion * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsExpanded )( 
            _FormRegion * This,
            /* [retval][out] */ VARIANT_BOOL *IsExpanded);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Form )( 
            _FormRegion * This,
            /* [retval][out] */ IDispatch **Form);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Detail )( 
            _FormRegion * This,
            /* [retval][out] */ BSTR *Detail);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Detail )( 
            _FormRegion * This,
            /* [in] */ BSTR Detail);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            _FormRegion * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Inspector )( 
            _FormRegion * This,
            /* [retval][out] */ _Inspector **Inspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormRegionMode )( 
            _FormRegion * This,
            /* [retval][out] */ OlFormRegionMode *FormRegionMode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            _FormRegion * This,
            /* [retval][out] */ long *Language);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reflow )( 
            _FormRegion * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )( 
            _FormRegion * This,
            /* [retval][out] */ BSTR *DisplayName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InternalName )( 
            _FormRegion * This,
            /* [retval][out] */ BSTR *InternalName);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetControlItemProperty )( 
            _FormRegion * This,
            /* [in] */ IDispatch *Control,
            /* [in] */ BSTR PropertyName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressControlReplacement )( 
            _FormRegion * This,
            /* [retval][out] */ VARIANT_BOOL *SuppressControlReplacement);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressControlReplacement )( 
            _FormRegion * This,
            /* [in] */ VARIANT_BOOL SuppressControlReplacement);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            _FormRegion * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableAutoLayout )( 
            _FormRegion * This,
            /* [retval][out] */ VARIANT_BOOL *EnableAutoLayout);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableAutoLayout )( 
            _FormRegion * This,
            /* [in] */ VARIANT_BOOL EnableAutoLayout);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _FormRegion * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _FormRegion * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        END_INTERFACE
    } _FormRegionVtbl;

    interface _FormRegion
    {
        CONST_VTBL struct _FormRegionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FormRegion_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FormRegion_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FormRegion_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FormRegion_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FormRegion_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FormRegion_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FormRegion_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _FormRegion_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _FormRegion_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _FormRegion_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _FormRegion_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _FormRegion_get_IsExpanded(This,IsExpanded)	\
    ( (This)->lpVtbl -> get_IsExpanded(This,IsExpanded) ) 

#define _FormRegion_get_Form(This,Form)	\
    ( (This)->lpVtbl -> get_Form(This,Form) ) 

#define _FormRegion_get_Detail(This,Detail)	\
    ( (This)->lpVtbl -> get_Detail(This,Detail) ) 

#define _FormRegion_put_Detail(This,Detail)	\
    ( (This)->lpVtbl -> put_Detail(This,Detail) ) 

#define _FormRegion_get_Item(This,Item)	\
    ( (This)->lpVtbl -> get_Item(This,Item) ) 

#define _FormRegion_get_Inspector(This,Inspector)	\
    ( (This)->lpVtbl -> get_Inspector(This,Inspector) ) 

#define _FormRegion_get_FormRegionMode(This,FormRegionMode)	\
    ( (This)->lpVtbl -> get_FormRegionMode(This,FormRegionMode) ) 

#define _FormRegion_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define _FormRegion_Reflow(This)	\
    ( (This)->lpVtbl -> Reflow(This) ) 

#define _FormRegion_get_DisplayName(This,DisplayName)	\
    ( (This)->lpVtbl -> get_DisplayName(This,DisplayName) ) 

#define _FormRegion_get_InternalName(This,InternalName)	\
    ( (This)->lpVtbl -> get_InternalName(This,InternalName) ) 

#define _FormRegion_SetControlItemProperty(This,Control,PropertyName)	\
    ( (This)->lpVtbl -> SetControlItemProperty(This,Control,PropertyName) ) 

#define _FormRegion_get_SuppressControlReplacement(This,SuppressControlReplacement)	\
    ( (This)->lpVtbl -> get_SuppressControlReplacement(This,SuppressControlReplacement) ) 

#define _FormRegion_put_SuppressControlReplacement(This,SuppressControlReplacement)	\
    ( (This)->lpVtbl -> put_SuppressControlReplacement(This,SuppressControlReplacement) ) 

#define _FormRegion_Select(This)	\
    ( (This)->lpVtbl -> Select(This) ) 

#define _FormRegion_get_EnableAutoLayout(This,EnableAutoLayout)	\
    ( (This)->lpVtbl -> get_EnableAutoLayout(This,EnableAutoLayout) ) 

#define _FormRegion_put_EnableAutoLayout(This,EnableAutoLayout)	\
    ( (This)->lpVtbl -> put_EnableAutoLayout(This,EnableAutoLayout) ) 

#define _FormRegion_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _FormRegion_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FormRegion_INTERFACE_DEFINED__ */


#ifndef ___SolutionsModule_INTERFACE_DEFINED__
#define ___SolutionsModule_INTERFACE_DEFINED__

/* interface _SolutionsModule */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__SolutionsModule;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630FF-0000-0000-C000-000000000046")
    _SolutionsModule : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NavigationModuleType( 
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Position( 
            /* [retval][out] */ long *Position) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Position( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *Visible) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddSolution( 
            /* [in] */ MAPIFolder *Solution,
            /* [in] */ OlSolutionScope Scope) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _SolutionsModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SolutionsModule * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SolutionsModule * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SolutionsModule * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SolutionsModule * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SolutionsModule * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SolutionsModule * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SolutionsModule * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _SolutionsModule * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _SolutionsModule * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _SolutionsModule * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _SolutionsModule * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationModuleType )( 
            _SolutionsModule * This,
            /* [retval][out] */ OlNavigationModuleType *NavigationModuleType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _SolutionsModule * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            _SolutionsModule * This,
            /* [retval][out] */ long *Position);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            _SolutionsModule * This,
            /* [in] */ long Position);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _SolutionsModule * This,
            /* [retval][out] */ VARIANT_BOOL *Visible);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _SolutionsModule * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddSolution )( 
            _SolutionsModule * This,
            /* [in] */ MAPIFolder *Solution,
            /* [in] */ OlSolutionScope Scope);
        
        END_INTERFACE
    } _SolutionsModuleVtbl;

    interface _SolutionsModule
    {
        CONST_VTBL struct _SolutionsModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SolutionsModule_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SolutionsModule_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SolutionsModule_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SolutionsModule_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SolutionsModule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SolutionsModule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SolutionsModule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _SolutionsModule_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _SolutionsModule_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _SolutionsModule_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _SolutionsModule_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _SolutionsModule_get_NavigationModuleType(This,NavigationModuleType)	\
    ( (This)->lpVtbl -> get_NavigationModuleType(This,NavigationModuleType) ) 

#define _SolutionsModule_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _SolutionsModule_get_Position(This,Position)	\
    ( (This)->lpVtbl -> get_Position(This,Position) ) 

#define _SolutionsModule_put_Position(This,Position)	\
    ( (This)->lpVtbl -> put_Position(This,Position) ) 

#define _SolutionsModule_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _SolutionsModule_put_Visible(This,Visible)	\
    ( (This)->lpVtbl -> put_Visible(This,Visible) ) 

#define _SolutionsModule_AddSolution(This,Solution,Scope)	\
    ( (This)->lpVtbl -> AddSolution(This,Solution,Scope) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SolutionsModule_INTERFACE_DEFINED__ */


#ifndef ___CalendarView_INTERFACE_DEFINED__
#define ___CalendarView_INTERFACE_DEFINED__

/* interface _CalendarView */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__CalendarView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063099-0000-0000-C000-000000000046")
    _CalendarView : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ BSTR Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LockUserChanges( 
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LockUserChanges( 
            /* [in] */ VARIANT_BOOL LockUserChanges) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveOption( 
            /* [retval][out] */ OlViewSaveOption *SaveOption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Standard( 
            /* [retval][out] */ VARIANT_BOOL *Standard) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewType( 
            /* [retval][out] */ OlViewType *ViewType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XML( 
            /* [retval][out] */ BSTR *XML) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_XML( 
            /* [in] */ BSTR XML) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GoToDate( 
            /* [in] */ DATE Date) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Filter( 
            /* [in] */ BSTR Filter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartField( 
            /* [retval][out] */ BSTR *StartField) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartField( 
            /* [in] */ BSTR StartField) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EndField( 
            /* [retval][out] */ BSTR *EndField) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EndField( 
            /* [in] */ BSTR EndField) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CalendarViewMode( 
            /* [retval][out] */ OlCalendarViewMode *CalendarViewMode) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CalendarViewMode( 
            /* [in] */ OlCalendarViewMode CalendarViewMode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DayWeekTimeScale( 
            /* [retval][out] */ OlDayWeekTimeScale *DayWeekTimeScale) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DayWeekTimeScale( 
            /* [in] */ OlDayWeekTimeScale DayWeekTimeScale) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MonthShowEndTime( 
            /* [retval][out] */ VARIANT_BOOL *MonthShowEndTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MonthShowEndTime( 
            /* [in] */ VARIANT_BOOL MonthShowEndTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BoldDatesWithItems( 
            /* [retval][out] */ VARIANT_BOOL *BoldDatesWithItems) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BoldDatesWithItems( 
            /* [in] */ VARIANT_BOOL BoldDatesWithItems) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_DayWeekTimeFont( 
            /* [retval][out] */ _ViewFont **DayWeekTimeFont) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_DayWeekFont( 
            /* [retval][out] */ _ViewFont **DayWeekFont) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MonthFont( 
            /* [retval][out] */ _ViewFont **MonthFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoFormatRules( 
            /* [retval][out] */ _AutoFormatRules **AutoFormatRules) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DaysInMultiDayMode( 
            /* [retval][out] */ long *DaysInMultiDayMode) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DaysInMultiDayMode( 
            /* [in] */ long DaysInMultiDayMode) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayedDates( 
            /* [retval][out] */ VARIANT *DisplayedDates) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BoldSubjects( 
            /* [retval][out] */ VARIANT_BOOL *BoldSubjects) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BoldSubjects( 
            /* [in] */ VARIANT_BOOL BoldSubjects) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedStartTime( 
            /* [retval][out] */ DATE *SelectedStartTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectedEndTime( 
            /* [retval][out] */ DATE *SelectedEndTime) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _CalendarViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CalendarView * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CalendarView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CalendarView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CalendarView * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CalendarView * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CalendarView * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CalendarView * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _CalendarView * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _CalendarView * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _CalendarView * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _CalendarView * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            _CalendarView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _CalendarView * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _CalendarView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _CalendarView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _CalendarView * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            _CalendarView * This,
            /* [retval][out] */ BSTR *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            _CalendarView * This,
            /* [in] */ BSTR Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockUserChanges )( 
            _CalendarView * This,
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockUserChanges )( 
            _CalendarView * This,
            /* [in] */ VARIANT_BOOL LockUserChanges);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _CalendarView * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _CalendarView * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveOption )( 
            _CalendarView * This,
            /* [retval][out] */ OlViewSaveOption *SaveOption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Standard )( 
            _CalendarView * This,
            /* [retval][out] */ VARIANT_BOOL *Standard);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewType )( 
            _CalendarView * This,
            /* [retval][out] */ OlViewType *ViewType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XML )( 
            _CalendarView * This,
            /* [retval][out] */ BSTR *XML);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XML )( 
            _CalendarView * This,
            /* [in] */ BSTR XML);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GoToDate )( 
            _CalendarView * This,
            /* [in] */ DATE Date);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            _CalendarView * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            _CalendarView * This,
            /* [in] */ BSTR Filter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartField )( 
            _CalendarView * This,
            /* [retval][out] */ BSTR *StartField);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartField )( 
            _CalendarView * This,
            /* [in] */ BSTR StartField);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndField )( 
            _CalendarView * This,
            /* [retval][out] */ BSTR *EndField);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EndField )( 
            _CalendarView * This,
            /* [in] */ BSTR EndField);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CalendarViewMode )( 
            _CalendarView * This,
            /* [retval][out] */ OlCalendarViewMode *CalendarViewMode);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CalendarViewMode )( 
            _CalendarView * This,
            /* [in] */ OlCalendarViewMode CalendarViewMode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DayWeekTimeScale )( 
            _CalendarView * This,
            /* [retval][out] */ OlDayWeekTimeScale *DayWeekTimeScale);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DayWeekTimeScale )( 
            _CalendarView * This,
            /* [in] */ OlDayWeekTimeScale DayWeekTimeScale);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MonthShowEndTime )( 
            _CalendarView * This,
            /* [retval][out] */ VARIANT_BOOL *MonthShowEndTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MonthShowEndTime )( 
            _CalendarView * This,
            /* [in] */ VARIANT_BOOL MonthShowEndTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BoldDatesWithItems )( 
            _CalendarView * This,
            /* [retval][out] */ VARIANT_BOOL *BoldDatesWithItems);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BoldDatesWithItems )( 
            _CalendarView * This,
            /* [in] */ VARIANT_BOOL BoldDatesWithItems);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DayWeekTimeFont )( 
            _CalendarView * This,
            /* [retval][out] */ _ViewFont **DayWeekTimeFont);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DayWeekFont )( 
            _CalendarView * This,
            /* [retval][out] */ _ViewFont **DayWeekFont);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MonthFont )( 
            _CalendarView * This,
            /* [retval][out] */ _ViewFont **MonthFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoFormatRules )( 
            _CalendarView * This,
            /* [retval][out] */ _AutoFormatRules **AutoFormatRules);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DaysInMultiDayMode )( 
            _CalendarView * This,
            /* [retval][out] */ long *DaysInMultiDayMode);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DaysInMultiDayMode )( 
            _CalendarView * This,
            /* [in] */ long DaysInMultiDayMode);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedDates )( 
            _CalendarView * This,
            /* [retval][out] */ VARIANT *DisplayedDates);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BoldSubjects )( 
            _CalendarView * This,
            /* [retval][out] */ VARIANT_BOOL *BoldSubjects);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BoldSubjects )( 
            _CalendarView * This,
            /* [in] */ VARIANT_BOOL BoldSubjects);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedStartTime )( 
            _CalendarView * This,
            /* [retval][out] */ DATE *SelectedStartTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedEndTime )( 
            _CalendarView * This,
            /* [retval][out] */ DATE *SelectedEndTime);
        
        END_INTERFACE
    } _CalendarViewVtbl;

    interface _CalendarView
    {
        CONST_VTBL struct _CalendarViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CalendarView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CalendarView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CalendarView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CalendarView_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CalendarView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CalendarView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CalendarView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _CalendarView_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _CalendarView_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _CalendarView_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _CalendarView_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _CalendarView_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define _CalendarView_Copy(This,Name,SaveOption,ppview)	\
    ( (This)->lpVtbl -> Copy(This,Name,SaveOption,ppview) ) 

#define _CalendarView_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _CalendarView_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _CalendarView_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _CalendarView_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define _CalendarView_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define _CalendarView_get_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> get_LockUserChanges(This,LockUserChanges) ) 

#define _CalendarView_put_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> put_LockUserChanges(This,LockUserChanges) ) 

#define _CalendarView_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _CalendarView_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _CalendarView_get_SaveOption(This,SaveOption)	\
    ( (This)->lpVtbl -> get_SaveOption(This,SaveOption) ) 

#define _CalendarView_get_Standard(This,Standard)	\
    ( (This)->lpVtbl -> get_Standard(This,Standard) ) 

#define _CalendarView_get_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> get_ViewType(This,ViewType) ) 

#define _CalendarView_get_XML(This,XML)	\
    ( (This)->lpVtbl -> get_XML(This,XML) ) 

#define _CalendarView_put_XML(This,XML)	\
    ( (This)->lpVtbl -> put_XML(This,XML) ) 

#define _CalendarView_GoToDate(This,Date)	\
    ( (This)->lpVtbl -> GoToDate(This,Date) ) 

#define _CalendarView_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define _CalendarView_put_Filter(This,Filter)	\
    ( (This)->lpVtbl -> put_Filter(This,Filter) ) 

#define _CalendarView_get_StartField(This,StartField)	\
    ( (This)->lpVtbl -> get_StartField(This,StartField) ) 

#define _CalendarView_put_StartField(This,StartField)	\
    ( (This)->lpVtbl -> put_StartField(This,StartField) ) 

#define _CalendarView_get_EndField(This,EndField)	\
    ( (This)->lpVtbl -> get_EndField(This,EndField) ) 

#define _CalendarView_put_EndField(This,EndField)	\
    ( (This)->lpVtbl -> put_EndField(This,EndField) ) 

#define _CalendarView_get_CalendarViewMode(This,CalendarViewMode)	\
    ( (This)->lpVtbl -> get_CalendarViewMode(This,CalendarViewMode) ) 

#define _CalendarView_put_CalendarViewMode(This,CalendarViewMode)	\
    ( (This)->lpVtbl -> put_CalendarViewMode(This,CalendarViewMode) ) 

#define _CalendarView_get_DayWeekTimeScale(This,DayWeekTimeScale)	\
    ( (This)->lpVtbl -> get_DayWeekTimeScale(This,DayWeekTimeScale) ) 

#define _CalendarView_put_DayWeekTimeScale(This,DayWeekTimeScale)	\
    ( (This)->lpVtbl -> put_DayWeekTimeScale(This,DayWeekTimeScale) ) 

#define _CalendarView_get_MonthShowEndTime(This,MonthShowEndTime)	\
    ( (This)->lpVtbl -> get_MonthShowEndTime(This,MonthShowEndTime) ) 

#define _CalendarView_put_MonthShowEndTime(This,MonthShowEndTime)	\
    ( (This)->lpVtbl -> put_MonthShowEndTime(This,MonthShowEndTime) ) 

#define _CalendarView_get_BoldDatesWithItems(This,BoldDatesWithItems)	\
    ( (This)->lpVtbl -> get_BoldDatesWithItems(This,BoldDatesWithItems) ) 

#define _CalendarView_put_BoldDatesWithItems(This,BoldDatesWithItems)	\
    ( (This)->lpVtbl -> put_BoldDatesWithItems(This,BoldDatesWithItems) ) 

#define _CalendarView_get_DayWeekTimeFont(This,DayWeekTimeFont)	\
    ( (This)->lpVtbl -> get_DayWeekTimeFont(This,DayWeekTimeFont) ) 

#define _CalendarView_get_DayWeekFont(This,DayWeekFont)	\
    ( (This)->lpVtbl -> get_DayWeekFont(This,DayWeekFont) ) 

#define _CalendarView_get_MonthFont(This,MonthFont)	\
    ( (This)->lpVtbl -> get_MonthFont(This,MonthFont) ) 

#define _CalendarView_get_AutoFormatRules(This,AutoFormatRules)	\
    ( (This)->lpVtbl -> get_AutoFormatRules(This,AutoFormatRules) ) 

#define _CalendarView_get_DaysInMultiDayMode(This,DaysInMultiDayMode)	\
    ( (This)->lpVtbl -> get_DaysInMultiDayMode(This,DaysInMultiDayMode) ) 

#define _CalendarView_put_DaysInMultiDayMode(This,DaysInMultiDayMode)	\
    ( (This)->lpVtbl -> put_DaysInMultiDayMode(This,DaysInMultiDayMode) ) 

#define _CalendarView_get_DisplayedDates(This,DisplayedDates)	\
    ( (This)->lpVtbl -> get_DisplayedDates(This,DisplayedDates) ) 

#define _CalendarView_get_BoldSubjects(This,BoldSubjects)	\
    ( (This)->lpVtbl -> get_BoldSubjects(This,BoldSubjects) ) 

#define _CalendarView_put_BoldSubjects(This,BoldSubjects)	\
    ( (This)->lpVtbl -> put_BoldSubjects(This,BoldSubjects) ) 

#define _CalendarView_get_SelectedStartTime(This,SelectedStartTime)	\
    ( (This)->lpVtbl -> get_SelectedStartTime(This,SelectedStartTime) ) 

#define _CalendarView_get_SelectedEndTime(This,SelectedEndTime)	\
    ( (This)->lpVtbl -> get_SelectedEndTime(This,SelectedEndTime) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CalendarView_INTERFACE_DEFINED__ */


#ifndef ___TableView_INTERFACE_DEFINED__
#define ___TableView_INTERFACE_DEFINED__

/* interface _TableView */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TableView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063096-0000-0000-C000-000000000046")
    _TableView : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ BSTR Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LockUserChanges( 
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LockUserChanges( 
            /* [in] */ VARIANT_BOOL LockUserChanges) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveOption( 
            /* [retval][out] */ OlViewSaveOption *SaveOption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Standard( 
            /* [retval][out] */ VARIANT_BOOL *Standard) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewType( 
            /* [retval][out] */ OlViewType *ViewType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XML( 
            /* [retval][out] */ BSTR *XML) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_XML( 
            /* [in] */ BSTR XML) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GoToDate( 
            /* [in] */ DATE Date) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Filter( 
            /* [in] */ BSTR Filter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewFields( 
            /* [retval][out] */ _ViewFields **ViewFields) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GroupByFields( 
            /* [retval][out] */ _OrderFields **GroupByFields) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SortFields( 
            /* [retval][out] */ _OrderFields **SortFields) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MaxLinesInMultiLineView( 
            /* [retval][out] */ long *MaxLinesInMultiLineView) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MaxLinesInMultiLineView( 
            /* [in] */ long MaxLinesInMultiLineView) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutomaticGrouping( 
            /* [retval][out] */ VARIANT_BOOL *AutomaticGrouping) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutomaticGrouping( 
            /* [in] */ VARIANT_BOOL AutomaticGrouping) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultExpandCollapseSetting( 
            /* [retval][out] */ OlDefaultExpandCollapseSetting *DefaultExpandCollapseSetting) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultExpandCollapseSetting( 
            /* [in] */ OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutomaticColumnSizing( 
            /* [retval][out] */ VARIANT_BOOL *AutomaticColumnSizing) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutomaticColumnSizing( 
            /* [in] */ VARIANT_BOOL AutomaticColumnSizing) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MultiLine( 
            /* [retval][out] */ OlMultiLine *MultiLine) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MultiLine( 
            /* [in] */ OlMultiLine MultiLine) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MultiLineWidth( 
            /* [retval][out] */ long *MultiLineWidth) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MultiLineWidth( 
            /* [in] */ long MultiLineWidth) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AllowInCellEditing( 
            /* [retval][out] */ VARIANT_BOOL *AllowInCellEditing) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AllowInCellEditing( 
            /* [in] */ VARIANT_BOOL AllowInCellEditing) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowNewItemRow( 
            /* [retval][out] */ VARIANT_BOOL *ShowNewItemRow) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowNewItemRow( 
            /* [in] */ VARIANT_BOOL ShowNewItemRow) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GridLineStyle( 
            /* [retval][out] */ OlGridLineStyle *GridLineStyle) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_GridLineStyle( 
            /* [in] */ OlGridLineStyle GridLineStyle) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowItemsInGroups( 
            /* [retval][out] */ VARIANT_BOOL *ShowItemsInGroups) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowItemsInGroups( 
            /* [in] */ VARIANT_BOOL ShowItemsInGroups) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowReadingPane( 
            /* [retval][out] */ VARIANT_BOOL *ShowReadingPane) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowReadingPane( 
            /* [in] */ VARIANT_BOOL ShowReadingPane) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HideReadingPaneHeaderInfo( 
            /* [retval][out] */ VARIANT_BOOL *HideReadingPaneHeaderInfo) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HideReadingPaneHeaderInfo( 
            /* [in] */ VARIANT_BOOL HideReadingPaneHeaderInfo) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowUnreadAndFlaggedMessages( 
            /* [retval][out] */ VARIANT_BOOL *ShowUnreadAndFlaggedMessages) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowUnreadAndFlaggedMessages( 
            /* [in] */ VARIANT_BOOL ShowUnreadAndFlaggedMessages) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RowFont( 
            /* [retval][out] */ _ViewFont **RowFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ColumnFont( 
            /* [retval][out] */ _ViewFont **ColumnFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoPreviewFont( 
            /* [retval][out] */ _ViewFont **AutoPreviewFont) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoPreview( 
            /* [retval][out] */ OlAutoPreview *AutoPreview) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoPreview( 
            /* [in] */ OlAutoPreview AutoPreview) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoFormatRules( 
            /* [retval][out] */ _AutoFormatRules **AutoFormatRules) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetTable( 
            /* [retval][out] */ _Table **Table) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowConversationByDate( 
            /* [retval][out] */ VARIANT_BOOL *ShowConversationByDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowConversationByDate( 
            /* [in] */ VARIANT_BOOL ShowConversationByDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowFullConversations( 
            /* [retval][out] */ VARIANT_BOOL *ShowFullConversations) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowFullConversations( 
            /* [in] */ VARIANT_BOOL ShowFullConversations) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AlwaysExpandConversation( 
            /* [retval][out] */ VARIANT_BOOL *AlwaysExpandConversation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AlwaysExpandConversation( 
            /* [in] */ VARIANT_BOOL AlwaysExpandConversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowConversationSendersAboveSubject( 
            /* [retval][out] */ VARIANT_BOOL *ShowConversationSendersAboveSubject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowConversationSendersAboveSubject( 
            /* [in] */ VARIANT_BOOL ShowConversationSendersAboveSubject) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TableViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TableView * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TableView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TableView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TableView * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TableView * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TableView * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TableView * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TableView * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TableView * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TableView * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TableView * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            _TableView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _TableView * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _TableView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _TableView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _TableView * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            _TableView * This,
            /* [retval][out] */ BSTR *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            _TableView * This,
            /* [in] */ BSTR Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockUserChanges )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockUserChanges )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL LockUserChanges);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _TableView * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _TableView * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveOption )( 
            _TableView * This,
            /* [retval][out] */ OlViewSaveOption *SaveOption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Standard )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *Standard);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewType )( 
            _TableView * This,
            /* [retval][out] */ OlViewType *ViewType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XML )( 
            _TableView * This,
            /* [retval][out] */ BSTR *XML);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XML )( 
            _TableView * This,
            /* [in] */ BSTR XML);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GoToDate )( 
            _TableView * This,
            /* [in] */ DATE Date);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            _TableView * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            _TableView * This,
            /* [in] */ BSTR Filter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewFields )( 
            _TableView * This,
            /* [retval][out] */ _ViewFields **ViewFields);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GroupByFields )( 
            _TableView * This,
            /* [retval][out] */ _OrderFields **GroupByFields);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SortFields )( 
            _TableView * This,
            /* [retval][out] */ _OrderFields **SortFields);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLinesInMultiLineView )( 
            _TableView * This,
            /* [retval][out] */ long *MaxLinesInMultiLineView);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxLinesInMultiLineView )( 
            _TableView * This,
            /* [in] */ long MaxLinesInMultiLineView);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutomaticGrouping )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *AutomaticGrouping);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutomaticGrouping )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL AutomaticGrouping);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultExpandCollapseSetting )( 
            _TableView * This,
            /* [retval][out] */ OlDefaultExpandCollapseSetting *DefaultExpandCollapseSetting);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultExpandCollapseSetting )( 
            _TableView * This,
            /* [in] */ OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutomaticColumnSizing )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *AutomaticColumnSizing);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutomaticColumnSizing )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL AutomaticColumnSizing);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MultiLine )( 
            _TableView * This,
            /* [retval][out] */ OlMultiLine *MultiLine);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MultiLine )( 
            _TableView * This,
            /* [in] */ OlMultiLine MultiLine);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MultiLineWidth )( 
            _TableView * This,
            /* [retval][out] */ long *MultiLineWidth);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MultiLineWidth )( 
            _TableView * This,
            /* [in] */ long MultiLineWidth);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AllowInCellEditing )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *AllowInCellEditing);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AllowInCellEditing )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL AllowInCellEditing);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowNewItemRow )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowNewItemRow);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowNewItemRow )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL ShowNewItemRow);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GridLineStyle )( 
            _TableView * This,
            /* [retval][out] */ OlGridLineStyle *GridLineStyle);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GridLineStyle )( 
            _TableView * This,
            /* [in] */ OlGridLineStyle GridLineStyle);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowItemsInGroups )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowItemsInGroups);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowItemsInGroups )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL ShowItemsInGroups);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowReadingPane )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowReadingPane);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowReadingPane )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL ShowReadingPane);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HideReadingPaneHeaderInfo )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *HideReadingPaneHeaderInfo);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HideReadingPaneHeaderInfo )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL HideReadingPaneHeaderInfo);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowUnreadAndFlaggedMessages )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowUnreadAndFlaggedMessages);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowUnreadAndFlaggedMessages )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL ShowUnreadAndFlaggedMessages);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RowFont )( 
            _TableView * This,
            /* [retval][out] */ _ViewFont **RowFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnFont )( 
            _TableView * This,
            /* [retval][out] */ _ViewFont **ColumnFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoPreviewFont )( 
            _TableView * This,
            /* [retval][out] */ _ViewFont **AutoPreviewFont);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoPreview )( 
            _TableView * This,
            /* [retval][out] */ OlAutoPreview *AutoPreview);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoPreview )( 
            _TableView * This,
            /* [in] */ OlAutoPreview AutoPreview);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoFormatRules )( 
            _TableView * This,
            /* [retval][out] */ _AutoFormatRules **AutoFormatRules);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetTable )( 
            _TableView * This,
            /* [retval][out] */ _Table **Table);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowConversationByDate )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowConversationByDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowConversationByDate )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL ShowConversationByDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowFullConversations )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowFullConversations);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowFullConversations )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL ShowFullConversations);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AlwaysExpandConversation )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *AlwaysExpandConversation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AlwaysExpandConversation )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL AlwaysExpandConversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowConversationSendersAboveSubject )( 
            _TableView * This,
            /* [retval][out] */ VARIANT_BOOL *ShowConversationSendersAboveSubject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowConversationSendersAboveSubject )( 
            _TableView * This,
            /* [in] */ VARIANT_BOOL ShowConversationSendersAboveSubject);
        
        END_INTERFACE
    } _TableViewVtbl;

    interface _TableView
    {
        CONST_VTBL struct _TableViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TableView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TableView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TableView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TableView_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TableView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TableView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TableView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TableView_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TableView_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TableView_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TableView_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TableView_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define _TableView_Copy(This,Name,SaveOption,ppview)	\
    ( (This)->lpVtbl -> Copy(This,Name,SaveOption,ppview) ) 

#define _TableView_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _TableView_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _TableView_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _TableView_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define _TableView_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define _TableView_get_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> get_LockUserChanges(This,LockUserChanges) ) 

#define _TableView_put_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> put_LockUserChanges(This,LockUserChanges) ) 

#define _TableView_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _TableView_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _TableView_get_SaveOption(This,SaveOption)	\
    ( (This)->lpVtbl -> get_SaveOption(This,SaveOption) ) 

#define _TableView_get_Standard(This,Standard)	\
    ( (This)->lpVtbl -> get_Standard(This,Standard) ) 

#define _TableView_get_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> get_ViewType(This,ViewType) ) 

#define _TableView_get_XML(This,XML)	\
    ( (This)->lpVtbl -> get_XML(This,XML) ) 

#define _TableView_put_XML(This,XML)	\
    ( (This)->lpVtbl -> put_XML(This,XML) ) 

#define _TableView_GoToDate(This,Date)	\
    ( (This)->lpVtbl -> GoToDate(This,Date) ) 

#define _TableView_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define _TableView_put_Filter(This,Filter)	\
    ( (This)->lpVtbl -> put_Filter(This,Filter) ) 

#define _TableView_get_ViewFields(This,ViewFields)	\
    ( (This)->lpVtbl -> get_ViewFields(This,ViewFields) ) 

#define _TableView_get_GroupByFields(This,GroupByFields)	\
    ( (This)->lpVtbl -> get_GroupByFields(This,GroupByFields) ) 

#define _TableView_get_SortFields(This,SortFields)	\
    ( (This)->lpVtbl -> get_SortFields(This,SortFields) ) 

#define _TableView_get_MaxLinesInMultiLineView(This,MaxLinesInMultiLineView)	\
    ( (This)->lpVtbl -> get_MaxLinesInMultiLineView(This,MaxLinesInMultiLineView) ) 

#define _TableView_put_MaxLinesInMultiLineView(This,MaxLinesInMultiLineView)	\
    ( (This)->lpVtbl -> put_MaxLinesInMultiLineView(This,MaxLinesInMultiLineView) ) 

#define _TableView_get_AutomaticGrouping(This,AutomaticGrouping)	\
    ( (This)->lpVtbl -> get_AutomaticGrouping(This,AutomaticGrouping) ) 

#define _TableView_put_AutomaticGrouping(This,AutomaticGrouping)	\
    ( (This)->lpVtbl -> put_AutomaticGrouping(This,AutomaticGrouping) ) 

#define _TableView_get_DefaultExpandCollapseSetting(This,DefaultExpandCollapseSetting)	\
    ( (This)->lpVtbl -> get_DefaultExpandCollapseSetting(This,DefaultExpandCollapseSetting) ) 

#define _TableView_put_DefaultExpandCollapseSetting(This,DefaultExpandCollapseSetting)	\
    ( (This)->lpVtbl -> put_DefaultExpandCollapseSetting(This,DefaultExpandCollapseSetting) ) 

#define _TableView_get_AutomaticColumnSizing(This,AutomaticColumnSizing)	\
    ( (This)->lpVtbl -> get_AutomaticColumnSizing(This,AutomaticColumnSizing) ) 

#define _TableView_put_AutomaticColumnSizing(This,AutomaticColumnSizing)	\
    ( (This)->lpVtbl -> put_AutomaticColumnSizing(This,AutomaticColumnSizing) ) 

#define _TableView_get_MultiLine(This,MultiLine)	\
    ( (This)->lpVtbl -> get_MultiLine(This,MultiLine) ) 

#define _TableView_put_MultiLine(This,MultiLine)	\
    ( (This)->lpVtbl -> put_MultiLine(This,MultiLine) ) 

#define _TableView_get_MultiLineWidth(This,MultiLineWidth)	\
    ( (This)->lpVtbl -> get_MultiLineWidth(This,MultiLineWidth) ) 

#define _TableView_put_MultiLineWidth(This,MultiLineWidth)	\
    ( (This)->lpVtbl -> put_MultiLineWidth(This,MultiLineWidth) ) 

#define _TableView_get_AllowInCellEditing(This,AllowInCellEditing)	\
    ( (This)->lpVtbl -> get_AllowInCellEditing(This,AllowInCellEditing) ) 

#define _TableView_put_AllowInCellEditing(This,AllowInCellEditing)	\
    ( (This)->lpVtbl -> put_AllowInCellEditing(This,AllowInCellEditing) ) 

#define _TableView_get_ShowNewItemRow(This,ShowNewItemRow)	\
    ( (This)->lpVtbl -> get_ShowNewItemRow(This,ShowNewItemRow) ) 

#define _TableView_put_ShowNewItemRow(This,ShowNewItemRow)	\
    ( (This)->lpVtbl -> put_ShowNewItemRow(This,ShowNewItemRow) ) 

#define _TableView_get_GridLineStyle(This,GridLineStyle)	\
    ( (This)->lpVtbl -> get_GridLineStyle(This,GridLineStyle) ) 

#define _TableView_put_GridLineStyle(This,GridLineStyle)	\
    ( (This)->lpVtbl -> put_GridLineStyle(This,GridLineStyle) ) 

#define _TableView_get_ShowItemsInGroups(This,ShowItemsInGroups)	\
    ( (This)->lpVtbl -> get_ShowItemsInGroups(This,ShowItemsInGroups) ) 

#define _TableView_put_ShowItemsInGroups(This,ShowItemsInGroups)	\
    ( (This)->lpVtbl -> put_ShowItemsInGroups(This,ShowItemsInGroups) ) 

#define _TableView_get_ShowReadingPane(This,ShowReadingPane)	\
    ( (This)->lpVtbl -> get_ShowReadingPane(This,ShowReadingPane) ) 

#define _TableView_put_ShowReadingPane(This,ShowReadingPane)	\
    ( (This)->lpVtbl -> put_ShowReadingPane(This,ShowReadingPane) ) 

#define _TableView_get_HideReadingPaneHeaderInfo(This,HideReadingPaneHeaderInfo)	\
    ( (This)->lpVtbl -> get_HideReadingPaneHeaderInfo(This,HideReadingPaneHeaderInfo) ) 

#define _TableView_put_HideReadingPaneHeaderInfo(This,HideReadingPaneHeaderInfo)	\
    ( (This)->lpVtbl -> put_HideReadingPaneHeaderInfo(This,HideReadingPaneHeaderInfo) ) 

#define _TableView_get_ShowUnreadAndFlaggedMessages(This,ShowUnreadAndFlaggedMessages)	\
    ( (This)->lpVtbl -> get_ShowUnreadAndFlaggedMessages(This,ShowUnreadAndFlaggedMessages) ) 

#define _TableView_put_ShowUnreadAndFlaggedMessages(This,ShowUnreadAndFlaggedMessages)	\
    ( (This)->lpVtbl -> put_ShowUnreadAndFlaggedMessages(This,ShowUnreadAndFlaggedMessages) ) 

#define _TableView_get_RowFont(This,RowFont)	\
    ( (This)->lpVtbl -> get_RowFont(This,RowFont) ) 

#define _TableView_get_ColumnFont(This,ColumnFont)	\
    ( (This)->lpVtbl -> get_ColumnFont(This,ColumnFont) ) 

#define _TableView_get_AutoPreviewFont(This,AutoPreviewFont)	\
    ( (This)->lpVtbl -> get_AutoPreviewFont(This,AutoPreviewFont) ) 

#define _TableView_get_AutoPreview(This,AutoPreview)	\
    ( (This)->lpVtbl -> get_AutoPreview(This,AutoPreview) ) 

#define _TableView_put_AutoPreview(This,AutoPreview)	\
    ( (This)->lpVtbl -> put_AutoPreview(This,AutoPreview) ) 

#define _TableView_get_AutoFormatRules(This,AutoFormatRules)	\
    ( (This)->lpVtbl -> get_AutoFormatRules(This,AutoFormatRules) ) 

#define _TableView_GetTable(This,Table)	\
    ( (This)->lpVtbl -> GetTable(This,Table) ) 

#define _TableView_get_ShowConversationByDate(This,ShowConversationByDate)	\
    ( (This)->lpVtbl -> get_ShowConversationByDate(This,ShowConversationByDate) ) 

#define _TableView_put_ShowConversationByDate(This,ShowConversationByDate)	\
    ( (This)->lpVtbl -> put_ShowConversationByDate(This,ShowConversationByDate) ) 

#define _TableView_get_ShowFullConversations(This,ShowFullConversations)	\
    ( (This)->lpVtbl -> get_ShowFullConversations(This,ShowFullConversations) ) 

#define _TableView_put_ShowFullConversations(This,ShowFullConversations)	\
    ( (This)->lpVtbl -> put_ShowFullConversations(This,ShowFullConversations) ) 

#define _TableView_get_AlwaysExpandConversation(This,AlwaysExpandConversation)	\
    ( (This)->lpVtbl -> get_AlwaysExpandConversation(This,AlwaysExpandConversation) ) 

#define _TableView_put_AlwaysExpandConversation(This,AlwaysExpandConversation)	\
    ( (This)->lpVtbl -> put_AlwaysExpandConversation(This,AlwaysExpandConversation) ) 

#define _TableView_get_ShowConversationSendersAboveSubject(This,ShowConversationSendersAboveSubject)	\
    ( (This)->lpVtbl -> get_ShowConversationSendersAboveSubject(This,ShowConversationSendersAboveSubject) ) 

#define _TableView_put_ShowConversationSendersAboveSubject(This,ShowConversationSendersAboveSubject)	\
    ( (This)->lpVtbl -> put_ShowConversationSendersAboveSubject(This,ShowConversationSendersAboveSubject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TableView_INTERFACE_DEFINED__ */


#ifndef ___MobileItem_INTERFACE_DEFINED__
#define ___MobileItem_INTERFACE_DEFINED__

/* interface _MobileItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__MobileItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630FE-0000-0000-C000-000000000046")
    _MobileItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLBody( 
            /* [retval][out] */ BSTR *HTMLBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HTMLBody( 
            /* [in] */ BSTR HTMLBody) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MobileFormat( 
            /* [retval][out] */ OlMobileFormat *MobileFormat) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SMILBody( 
            /* [retval][out] */ BSTR *SMILBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SMILBody( 
            /* [in] */ BSTR SMILBody) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reply( 
            /* [retval][out] */ _MobileItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplyAll( 
            /* [retval][out] */ _MobileItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Send( 
            /* [in] */ VARIANT_BOOL ForceSend) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_To( 
            /* [retval][out] */ BSTR *To) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_To( 
            /* [in] */ BSTR To) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Forward( 
            /* [retval][out] */ _MobileItem **Item) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyRecipientNames( 
            /* [retval][out] */ BSTR *ReplyRecipientNames) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyRecipients( 
            /* [retval][out] */ Recipients **ReplyRecipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Submitted( 
            /* [retval][out] */ VARIANT_BOOL *Submitted) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedTime( 
            /* [retval][out] */ DATE *ReceivedTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SendUsingAccount( 
            /* [retval][out] */ _Account **SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SendUsingAccount( 
            /* [in] */ _Account *SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sent( 
            /* [retval][out] */ VARIANT_BOOL *Sent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SentOn( 
            /* [retval][out] */ DATE *SentOn) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedByEntryID( 
            /* [retval][out] */ BSTR *ReceivedByEntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedByName( 
            /* [retval][out] */ BSTR *ReceivedByName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailAddress( 
            /* [retval][out] */ BSTR *SenderEmailAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailType( 
            /* [retval][out] */ BSTR *SenderEmailType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderName( 
            /* [retval][out] */ BSTR *SenderName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MobileItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MobileItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MobileItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MobileItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MobileItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MobileItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MobileItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MobileItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _MobileItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _MobileItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _MobileItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _MobileItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _MobileItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _MobileItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _MobileItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _MobileItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _MobileItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _MobileItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _MobileItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _MobileItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _MobileItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _MobileItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _MobileItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _MobileItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _MobileItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _MobileItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _MobileItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _MobileItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _MobileItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _MobileItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _MobileItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _MobileItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _MobileItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _MobileItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _MobileItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _MobileItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _MobileItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _MobileItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _MobileItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _MobileItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _MobileItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _MobileItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _MobileItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _MobileItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _MobileItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _MobileItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLBody )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *HTMLBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HTMLBody )( 
            _MobileItem * This,
            /* [in] */ BSTR HTMLBody);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MobileFormat )( 
            _MobileItem * This,
            /* [retval][out] */ OlMobileFormat *MobileFormat);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SMILBody )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *SMILBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SMILBody )( 
            _MobileItem * This,
            /* [in] */ BSTR SMILBody);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reply )( 
            _MobileItem * This,
            /* [retval][out] */ _MobileItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplyAll )( 
            _MobileItem * This,
            /* [retval][out] */ _MobileItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Send )( 
            _MobileItem * This,
            /* [in] */ VARIANT_BOOL ForceSend);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _MobileItem * This,
            /* [retval][out] */ Recipients **Recipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_To )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *To);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_To )( 
            _MobileItem * This,
            /* [in] */ BSTR To);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Forward )( 
            _MobileItem * This,
            /* [retval][out] */ _MobileItem **Item);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyRecipientNames )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *ReplyRecipientNames);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyRecipients )( 
            _MobileItem * This,
            /* [retval][out] */ Recipients **ReplyRecipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            _MobileItem * This,
            /* [retval][out] */ long *Count);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Submitted )( 
            _MobileItem * This,
            /* [retval][out] */ VARIANT_BOOL *Submitted);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _MobileItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedTime )( 
            _MobileItem * This,
            /* [retval][out] */ DATE *ReceivedTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SendUsingAccount )( 
            _MobileItem * This,
            /* [retval][out] */ _Account **SendUsingAccount);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SendUsingAccount )( 
            _MobileItem * This,
            /* [in] */ _Account *SendUsingAccount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sent )( 
            _MobileItem * This,
            /* [retval][out] */ VARIANT_BOOL *Sent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SentOn )( 
            _MobileItem * This,
            /* [retval][out] */ DATE *SentOn);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _MobileItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedByEntryID )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *ReceivedByEntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedByName )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *ReceivedByName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailAddress )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *SenderEmailAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailType )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *SenderEmailType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderName )( 
            _MobileItem * This,
            /* [retval][out] */ BSTR *SenderName);
        
        END_INTERFACE
    } _MobileItemVtbl;

    interface _MobileItem
    {
        CONST_VTBL struct _MobileItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MobileItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MobileItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MobileItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MobileItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MobileItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MobileItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MobileItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _MobileItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _MobileItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _MobileItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _MobileItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _MobileItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _MobileItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _MobileItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _MobileItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _MobileItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _MobileItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _MobileItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _MobileItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _MobileItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _MobileItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _MobileItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _MobileItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _MobileItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _MobileItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _MobileItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _MobileItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _MobileItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _MobileItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _MobileItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _MobileItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _MobileItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _MobileItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _MobileItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _MobileItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _MobileItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _MobileItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _MobileItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _MobileItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _MobileItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _MobileItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _MobileItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _MobileItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _MobileItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _MobileItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _MobileItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _MobileItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _MobileItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _MobileItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _MobileItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _MobileItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _MobileItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _MobileItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _MobileItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _MobileItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _MobileItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _MobileItem_get_HTMLBody(This,HTMLBody)	\
    ( (This)->lpVtbl -> get_HTMLBody(This,HTMLBody) ) 

#define _MobileItem_put_HTMLBody(This,HTMLBody)	\
    ( (This)->lpVtbl -> put_HTMLBody(This,HTMLBody) ) 

#define _MobileItem_get_MobileFormat(This,MobileFormat)	\
    ( (This)->lpVtbl -> get_MobileFormat(This,MobileFormat) ) 

#define _MobileItem_get_SMILBody(This,SMILBody)	\
    ( (This)->lpVtbl -> get_SMILBody(This,SMILBody) ) 

#define _MobileItem_put_SMILBody(This,SMILBody)	\
    ( (This)->lpVtbl -> put_SMILBody(This,SMILBody) ) 

#define _MobileItem_Reply(This,Item)	\
    ( (This)->lpVtbl -> Reply(This,Item) ) 

#define _MobileItem_ReplyAll(This,Item)	\
    ( (This)->lpVtbl -> ReplyAll(This,Item) ) 

#define _MobileItem_Send(This,ForceSend)	\
    ( (This)->lpVtbl -> Send(This,ForceSend) ) 

#define _MobileItem_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#define _MobileItem_get_To(This,To)	\
    ( (This)->lpVtbl -> get_To(This,To) ) 

#define _MobileItem_put_To(This,To)	\
    ( (This)->lpVtbl -> put_To(This,To) ) 

#define _MobileItem_Forward(This,Item)	\
    ( (This)->lpVtbl -> Forward(This,Item) ) 

#define _MobileItem_get_ReplyRecipientNames(This,ReplyRecipientNames)	\
    ( (This)->lpVtbl -> get_ReplyRecipientNames(This,ReplyRecipientNames) ) 

#define _MobileItem_get_ReplyRecipients(This,ReplyRecipients)	\
    ( (This)->lpVtbl -> get_ReplyRecipients(This,ReplyRecipients) ) 

#define _MobileItem_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define _MobileItem_get_Submitted(This,Submitted)	\
    ( (This)->lpVtbl -> get_Submitted(This,Submitted) ) 

#define _MobileItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _MobileItem_get_ReceivedTime(This,ReceivedTime)	\
    ( (This)->lpVtbl -> get_ReceivedTime(This,ReceivedTime) ) 

#define _MobileItem_get_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> get_SendUsingAccount(This,SendUsingAccount) ) 

#define _MobileItem_put_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> put_SendUsingAccount(This,SendUsingAccount) ) 

#define _MobileItem_get_Sent(This,Sent)	\
    ( (This)->lpVtbl -> get_Sent(This,Sent) ) 

#define _MobileItem_get_SentOn(This,SentOn)	\
    ( (This)->lpVtbl -> get_SentOn(This,SentOn) ) 

#define _MobileItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _MobileItem_get_ReceivedByEntryID(This,ReceivedByEntryID)	\
    ( (This)->lpVtbl -> get_ReceivedByEntryID(This,ReceivedByEntryID) ) 

#define _MobileItem_get_ReceivedByName(This,ReceivedByName)	\
    ( (This)->lpVtbl -> get_ReceivedByName(This,ReceivedByName) ) 

#define _MobileItem_get_SenderEmailAddress(This,SenderEmailAddress)	\
    ( (This)->lpVtbl -> get_SenderEmailAddress(This,SenderEmailAddress) ) 

#define _MobileItem_get_SenderEmailType(This,SenderEmailType)	\
    ( (This)->lpVtbl -> get_SenderEmailType(This,SenderEmailType) ) 

#define _MobileItem_get_SenderName(This,SenderName)	\
    ( (This)->lpVtbl -> get_SenderName(This,SenderName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MobileItem_INTERFACE_DEFINED__ */


#ifndef ___JournalItem_INTERFACE_DEFINED__
#define ___JournalItem_INTERFACE_DEFINED__

/* interface _JournalItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__JournalItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063022-0000-0000-C000-000000000046")
    _JournalItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContactNames( 
            /* [retval][out] */ BSTR *ContactNames) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContactNames( 
            /* [in] */ BSTR ContactNames) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocPosted( 
            /* [retval][out] */ VARIANT_BOOL *DocPosted) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocPosted( 
            /* [in] */ VARIANT_BOOL DocPosted) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocPrinted( 
            /* [retval][out] */ VARIANT_BOOL *DocPrinted) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocPrinted( 
            /* [in] */ VARIANT_BOOL DocPrinted) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocRouted( 
            /* [retval][out] */ VARIANT_BOOL *DocRouted) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocRouted( 
            /* [in] */ VARIANT_BOOL DocRouted) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocSaved( 
            /* [retval][out] */ VARIANT_BOOL *DocSaved) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DocSaved( 
            /* [in] */ VARIANT_BOOL DocSaved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Duration( 
            /* [retval][out] */ long *Duration) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Duration( 
            /* [in] */ long Duration) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_End( 
            /* [retval][out] */ DATE *End) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_End( 
            /* [in] */ DATE End) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR *Type) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ BSTR Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Start( 
            /* [retval][out] */ DATE *Start) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Start( 
            /* [in] */ DATE Start) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Forward( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reply( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplyAll( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartTimer( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE StopTimer( void) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _JournalItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _JournalItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _JournalItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _JournalItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _JournalItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _JournalItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _JournalItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _JournalItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _JournalItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _JournalItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _JournalItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _JournalItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _JournalItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _JournalItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _JournalItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _JournalItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _JournalItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _JournalItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _JournalItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _JournalItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _JournalItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _JournalItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _JournalItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _JournalItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _JournalItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _JournalItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _JournalItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _JournalItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _JournalItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _JournalItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _JournalItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _JournalItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _JournalItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _JournalItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _JournalItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _JournalItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _JournalItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _JournalItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _JournalItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _JournalItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _JournalItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _JournalItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _JournalItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _JournalItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _JournalItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _JournalItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContactNames )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *ContactNames);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ContactNames )( 
            _JournalItem * This,
            /* [in] */ BSTR ContactNames);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocPosted )( 
            _JournalItem * This,
            /* [retval][out] */ VARIANT_BOOL *DocPosted);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocPosted )( 
            _JournalItem * This,
            /* [in] */ VARIANT_BOOL DocPosted);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocPrinted )( 
            _JournalItem * This,
            /* [retval][out] */ VARIANT_BOOL *DocPrinted);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocPrinted )( 
            _JournalItem * This,
            /* [in] */ VARIANT_BOOL DocPrinted);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocRouted )( 
            _JournalItem * This,
            /* [retval][out] */ VARIANT_BOOL *DocRouted);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocRouted )( 
            _JournalItem * This,
            /* [in] */ VARIANT_BOOL DocRouted);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocSaved )( 
            _JournalItem * This,
            /* [retval][out] */ VARIANT_BOOL *DocSaved);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DocSaved )( 
            _JournalItem * This,
            /* [in] */ VARIANT_BOOL DocSaved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            _JournalItem * This,
            /* [retval][out] */ long *Duration);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Duration )( 
            _JournalItem * This,
            /* [in] */ long Duration);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_End )( 
            _JournalItem * This,
            /* [retval][out] */ DATE *End);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_End )( 
            _JournalItem * This,
            /* [in] */ DATE End);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *Type);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            _JournalItem * This,
            /* [in] */ BSTR Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _JournalItem * This,
            /* [retval][out] */ Recipients **Recipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Start )( 
            _JournalItem * This,
            /* [retval][out] */ DATE *Start);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Start )( 
            _JournalItem * This,
            /* [in] */ DATE Start);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Forward )( 
            _JournalItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reply )( 
            _JournalItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplyAll )( 
            _JournalItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartTimer )( 
            _JournalItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopTimer )( 
            _JournalItem * This);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _JournalItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _JournalItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _JournalItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _JournalItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _JournalItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _JournalItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _JournalItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _JournalItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _JournalItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _JournalItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _JournalItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _JournalItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        END_INTERFACE
    } _JournalItemVtbl;

    interface _JournalItem
    {
        CONST_VTBL struct _JournalItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _JournalItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _JournalItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _JournalItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _JournalItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _JournalItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _JournalItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _JournalItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _JournalItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _JournalItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _JournalItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _JournalItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _JournalItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _JournalItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _JournalItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _JournalItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _JournalItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _JournalItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _JournalItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _JournalItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _JournalItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _JournalItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _JournalItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _JournalItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _JournalItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _JournalItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _JournalItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _JournalItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _JournalItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _JournalItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _JournalItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _JournalItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _JournalItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _JournalItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _JournalItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _JournalItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _JournalItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _JournalItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _JournalItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _JournalItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _JournalItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _JournalItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _JournalItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _JournalItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _JournalItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _JournalItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _JournalItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _JournalItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _JournalItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _JournalItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _JournalItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _JournalItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _JournalItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _JournalItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _JournalItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _JournalItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _JournalItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _JournalItem_get_ContactNames(This,ContactNames)	\
    ( (This)->lpVtbl -> get_ContactNames(This,ContactNames) ) 

#define _JournalItem_put_ContactNames(This,ContactNames)	\
    ( (This)->lpVtbl -> put_ContactNames(This,ContactNames) ) 

#define _JournalItem_get_DocPosted(This,DocPosted)	\
    ( (This)->lpVtbl -> get_DocPosted(This,DocPosted) ) 

#define _JournalItem_put_DocPosted(This,DocPosted)	\
    ( (This)->lpVtbl -> put_DocPosted(This,DocPosted) ) 

#define _JournalItem_get_DocPrinted(This,DocPrinted)	\
    ( (This)->lpVtbl -> get_DocPrinted(This,DocPrinted) ) 

#define _JournalItem_put_DocPrinted(This,DocPrinted)	\
    ( (This)->lpVtbl -> put_DocPrinted(This,DocPrinted) ) 

#define _JournalItem_get_DocRouted(This,DocRouted)	\
    ( (This)->lpVtbl -> get_DocRouted(This,DocRouted) ) 

#define _JournalItem_put_DocRouted(This,DocRouted)	\
    ( (This)->lpVtbl -> put_DocRouted(This,DocRouted) ) 

#define _JournalItem_get_DocSaved(This,DocSaved)	\
    ( (This)->lpVtbl -> get_DocSaved(This,DocSaved) ) 

#define _JournalItem_put_DocSaved(This,DocSaved)	\
    ( (This)->lpVtbl -> put_DocSaved(This,DocSaved) ) 

#define _JournalItem_get_Duration(This,Duration)	\
    ( (This)->lpVtbl -> get_Duration(This,Duration) ) 

#define _JournalItem_put_Duration(This,Duration)	\
    ( (This)->lpVtbl -> put_Duration(This,Duration) ) 

#define _JournalItem_get_End(This,End)	\
    ( (This)->lpVtbl -> get_End(This,End) ) 

#define _JournalItem_put_End(This,End)	\
    ( (This)->lpVtbl -> put_End(This,End) ) 

#define _JournalItem_get_Type(This,Type)	\
    ( (This)->lpVtbl -> get_Type(This,Type) ) 

#define _JournalItem_put_Type(This,Type)	\
    ( (This)->lpVtbl -> put_Type(This,Type) ) 

#define _JournalItem_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#define _JournalItem_get_Start(This,Start)	\
    ( (This)->lpVtbl -> get_Start(This,Start) ) 

#define _JournalItem_put_Start(This,Start)	\
    ( (This)->lpVtbl -> put_Start(This,Start) ) 

#define _JournalItem_Forward(This,Item)	\
    ( (This)->lpVtbl -> Forward(This,Item) ) 

#define _JournalItem_Reply(This,Item)	\
    ( (This)->lpVtbl -> Reply(This,Item) ) 

#define _JournalItem_ReplyAll(This,Item)	\
    ( (This)->lpVtbl -> ReplyAll(This,Item) ) 

#define _JournalItem_StartTimer(This)	\
    ( (This)->lpVtbl -> StartTimer(This) ) 

#define _JournalItem_StopTimer(This)	\
    ( (This)->lpVtbl -> StopTimer(This) ) 

#define _JournalItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _JournalItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _JournalItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _JournalItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _JournalItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _JournalItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _JournalItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _JournalItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _JournalItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _JournalItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _JournalItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _JournalItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___JournalItem_INTERFACE_DEFINED__ */


#ifndef ___PostItem_INTERFACE_DEFINED__
#define ___PostItem_INTERFACE_DEFINED__

/* interface _PostItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__PostItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063024-0000-0000-C000-000000000046")
    _PostItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExpiryTime( 
            /* [retval][out] */ DATE *ExpiryTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExpiryTime( 
            /* [in] */ DATE ExpiryTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLBody( 
            /* [retval][out] */ BSTR *HTMLBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HTMLBody( 
            /* [in] */ BSTR HTMLBody) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedTime( 
            /* [retval][out] */ DATE *ReceivedTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderName( 
            /* [retval][out] */ BSTR *SenderName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SentOn( 
            /* [retval][out] */ DATE *SentOn) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearConversationIndex( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Forward( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Post( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reply( 
            /* [retval][out] */ _MailItem **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BodyFormat( 
            /* [retval][out] */ OlBodyFormat *BodyFormat) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BodyFormat( 
            /* [in] */ OlBodyFormat BodyFormat) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InternetCodepage( 
            /* [retval][out] */ long *InternetCodepage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InternetCodepage( 
            /* [in] */ long InternetCodepage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE SetACLs( 
            /* [retval][out] */ VARIANT_BOOL *AllOkay) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailAddress( 
            /* [retval][out] */ BSTR *SenderEmailAddress) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SenderEmailType( 
            /* [retval][out] */ BSTR *SenderEmailType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskSubject( 
            /* [retval][out] */ BSTR *TaskSubject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskSubject( 
            /* [in] */ BSTR TaskSubject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskDueDate( 
            /* [retval][out] */ DATE *TaskDueDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskDueDate( 
            /* [in] */ DATE TaskDueDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskStartDate( 
            /* [retval][out] */ DATE *TaskStartDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskStartDate( 
            /* [in] */ DATE TaskStartDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskCompletedDate( 
            /* [retval][out] */ DATE *TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskCompletedDate( 
            /* [in] */ DATE TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToDoTaskOrdinal( 
            /* [retval][out] */ DATE *ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToDoTaskOrdinal( 
            /* [in] */ DATE ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault( 
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderOverrideDefault( 
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderPlaySound( 
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderPlaySound( 
            /* [in] */ VARIANT_BOOL ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSet( 
            /* [retval][out] */ VARIANT_BOOL *ReminderSet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSet( 
            /* [in] */ VARIANT_BOOL ReminderSet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSoundFile( 
            /* [retval][out] */ BSTR *ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSoundFile( 
            /* [in] */ BSTR ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderTime( 
            /* [retval][out] */ DATE *ReminderTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderTime( 
            /* [in] */ DATE ReminderTime) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkAsTask( 
            /* [in] */ OlMarkInterval MarkInterval) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearTaskFlag( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsMarkedAsTask( 
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _PostItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PostItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PostItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PostItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PostItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PostItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PostItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PostItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _PostItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _PostItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _PostItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _PostItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _PostItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _PostItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _PostItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _PostItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _PostItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _PostItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _PostItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _PostItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _PostItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _PostItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _PostItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _PostItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _PostItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _PostItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _PostItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _PostItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _PostItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _PostItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _PostItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _PostItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _PostItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _PostItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _PostItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _PostItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _PostItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _PostItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _PostItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _PostItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _PostItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _PostItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _PostItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpiryTime )( 
            _PostItem * This,
            /* [retval][out] */ DATE *ExpiryTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpiryTime )( 
            _PostItem * This,
            /* [in] */ DATE ExpiryTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLBody )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *HTMLBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HTMLBody )( 
            _PostItem * This,
            /* [in] */ BSTR HTMLBody);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedTime )( 
            _PostItem * This,
            /* [retval][out] */ DATE *ReceivedTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderName )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *SenderName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SentOn )( 
            _PostItem * This,
            /* [retval][out] */ DATE *SentOn);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearConversationIndex )( 
            _PostItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Forward )( 
            _PostItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Post )( 
            _PostItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reply )( 
            _PostItem * This,
            /* [retval][out] */ _MailItem **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _PostItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _PostItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BodyFormat )( 
            _PostItem * This,
            /* [retval][out] */ OlBodyFormat *BodyFormat);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BodyFormat )( 
            _PostItem * This,
            /* [in] */ OlBodyFormat BodyFormat);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _PostItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _PostItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InternetCodepage )( 
            _PostItem * This,
            /* [retval][out] */ long *InternetCodepage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InternetCodepage )( 
            _PostItem * This,
            /* [in] */ long InternetCodepage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _PostItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _PostItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *SetACLs )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *AllOkay);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _PostItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailAddress )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *SenderEmailAddress);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SenderEmailType )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *SenderEmailType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _PostItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskSubject )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *TaskSubject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskSubject )( 
            _PostItem * This,
            /* [in] */ BSTR TaskSubject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskDueDate )( 
            _PostItem * This,
            /* [retval][out] */ DATE *TaskDueDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskDueDate )( 
            _PostItem * This,
            /* [in] */ DATE TaskDueDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskStartDate )( 
            _PostItem * This,
            /* [retval][out] */ DATE *TaskStartDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskStartDate )( 
            _PostItem * This,
            /* [in] */ DATE TaskStartDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskCompletedDate )( 
            _PostItem * This,
            /* [retval][out] */ DATE *TaskCompletedDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskCompletedDate )( 
            _PostItem * This,
            /* [in] */ DATE TaskCompletedDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToDoTaskOrdinal )( 
            _PostItem * This,
            /* [retval][out] */ DATE *ToDoTaskOrdinal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToDoTaskOrdinal )( 
            _PostItem * This,
            /* [in] */ DATE ToDoTaskOrdinal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderOverrideDefault )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderOverrideDefault )( 
            _PostItem * This,
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderPlaySound )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderPlaySound )( 
            _PostItem * This,
            /* [in] */ VARIANT_BOOL ReminderPlaySound);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSet )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderSet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSet )( 
            _PostItem * This,
            /* [in] */ VARIANT_BOOL ReminderSet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSoundFile )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *ReminderSoundFile);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSoundFile )( 
            _PostItem * This,
            /* [in] */ BSTR ReminderSoundFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderTime )( 
            _PostItem * This,
            /* [retval][out] */ DATE *ReminderTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderTime )( 
            _PostItem * This,
            /* [in] */ DATE ReminderTime);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkAsTask )( 
            _PostItem * This,
            /* [in] */ OlMarkInterval MarkInterval);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearTaskFlag )( 
            _PostItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsMarkedAsTask )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _PostItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _PostItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _PostItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _PostItem * This,
            /* [in] */ VARIANT RTFBody);
        
        END_INTERFACE
    } _PostItemVtbl;

    interface _PostItem
    {
        CONST_VTBL struct _PostItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PostItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PostItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PostItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PostItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PostItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PostItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PostItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _PostItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _PostItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _PostItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _PostItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _PostItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _PostItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _PostItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _PostItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _PostItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _PostItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _PostItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _PostItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _PostItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _PostItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _PostItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _PostItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _PostItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _PostItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _PostItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _PostItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _PostItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _PostItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _PostItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _PostItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _PostItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _PostItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _PostItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _PostItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _PostItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _PostItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _PostItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _PostItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _PostItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _PostItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _PostItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _PostItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _PostItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _PostItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _PostItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _PostItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _PostItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _PostItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _PostItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _PostItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _PostItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _PostItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _PostItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _PostItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _PostItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _PostItem_get_ExpiryTime(This,ExpiryTime)	\
    ( (This)->lpVtbl -> get_ExpiryTime(This,ExpiryTime) ) 

#define _PostItem_put_ExpiryTime(This,ExpiryTime)	\
    ( (This)->lpVtbl -> put_ExpiryTime(This,ExpiryTime) ) 

#define _PostItem_get_HTMLBody(This,HTMLBody)	\
    ( (This)->lpVtbl -> get_HTMLBody(This,HTMLBody) ) 

#define _PostItem_put_HTMLBody(This,HTMLBody)	\
    ( (This)->lpVtbl -> put_HTMLBody(This,HTMLBody) ) 

#define _PostItem_get_ReceivedTime(This,ReceivedTime)	\
    ( (This)->lpVtbl -> get_ReceivedTime(This,ReceivedTime) ) 

#define _PostItem_get_SenderName(This,SenderName)	\
    ( (This)->lpVtbl -> get_SenderName(This,SenderName) ) 

#define _PostItem_get_SentOn(This,SentOn)	\
    ( (This)->lpVtbl -> get_SentOn(This,SentOn) ) 

#define _PostItem_ClearConversationIndex(This)	\
    ( (This)->lpVtbl -> ClearConversationIndex(This) ) 

#define _PostItem_Forward(This,Item)	\
    ( (This)->lpVtbl -> Forward(This,Item) ) 

#define _PostItem_Post(This)	\
    ( (This)->lpVtbl -> Post(This) ) 

#define _PostItem_Reply(This,Item)	\
    ( (This)->lpVtbl -> Reply(This,Item) ) 

#define _PostItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _PostItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _PostItem_get_BodyFormat(This,BodyFormat)	\
    ( (This)->lpVtbl -> get_BodyFormat(This,BodyFormat) ) 

#define _PostItem_put_BodyFormat(This,BodyFormat)	\
    ( (This)->lpVtbl -> put_BodyFormat(This,BodyFormat) ) 

#define _PostItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _PostItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _PostItem_get_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> get_InternetCodepage(This,InternetCodepage) ) 

#define _PostItem_put_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> put_InternetCodepage(This,InternetCodepage) ) 

#define _PostItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _PostItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _PostItem_SetACLs(This,AllOkay)	\
    ( (This)->lpVtbl -> SetACLs(This,AllOkay) ) 

#define _PostItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _PostItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _PostItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _PostItem_get_SenderEmailAddress(This,SenderEmailAddress)	\
    ( (This)->lpVtbl -> get_SenderEmailAddress(This,SenderEmailAddress) ) 

#define _PostItem_get_SenderEmailType(This,SenderEmailType)	\
    ( (This)->lpVtbl -> get_SenderEmailType(This,SenderEmailType) ) 

#define _PostItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _PostItem_get_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> get_TaskSubject(This,TaskSubject) ) 

#define _PostItem_put_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> put_TaskSubject(This,TaskSubject) ) 

#define _PostItem_get_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> get_TaskDueDate(This,TaskDueDate) ) 

#define _PostItem_put_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> put_TaskDueDate(This,TaskDueDate) ) 

#define _PostItem_get_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> get_TaskStartDate(This,TaskStartDate) ) 

#define _PostItem_put_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> put_TaskStartDate(This,TaskStartDate) ) 

#define _PostItem_get_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> get_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _PostItem_put_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> put_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _PostItem_get_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> get_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _PostItem_put_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> put_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _PostItem_get_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> get_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _PostItem_put_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> put_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _PostItem_get_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> get_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _PostItem_put_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> put_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _PostItem_get_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> get_ReminderSet(This,ReminderSet) ) 

#define _PostItem_put_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> put_ReminderSet(This,ReminderSet) ) 

#define _PostItem_get_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> get_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _PostItem_put_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> put_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _PostItem_get_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> get_ReminderTime(This,ReminderTime) ) 

#define _PostItem_put_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> put_ReminderTime(This,ReminderTime) ) 

#define _PostItem_MarkAsTask(This,MarkInterval)	\
    ( (This)->lpVtbl -> MarkAsTask(This,MarkInterval) ) 

#define _PostItem_ClearTaskFlag(This)	\
    ( (This)->lpVtbl -> ClearTaskFlag(This) ) 

#define _PostItem_get_IsMarkedAsTask(This,IsMarkedAsTask)	\
    ( (This)->lpVtbl -> get_IsMarkedAsTask(This,IsMarkedAsTask) ) 

#define _PostItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _PostItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _PostItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _PostItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PostItem_INTERFACE_DEFINED__ */


#ifndef ___TaskItem_INTERFACE_DEFINED__
#define ___TaskItem_INTERFACE_DEFINED__

/* interface _TaskItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TaskItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063035-0000-0000-C000-000000000046")
    _TaskItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActualWork( 
            /* [retval][out] */ long *ActualWork) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ActualWork( 
            /* [in] */ long ActualWork) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CardData( 
            /* [retval][out] */ BSTR *CardData) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CardData( 
            /* [in] */ BSTR CardData) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Complete( 
            /* [retval][out] */ VARIANT_BOOL *Complete) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Complete( 
            /* [in] */ VARIANT_BOOL Complete) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Contacts( 
            /* [retval][out] */ BSTR *Contacts) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Contacts( 
            /* [in] */ BSTR Contacts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContactNames( 
            /* [retval][out] */ BSTR *ContactNames) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContactNames( 
            /* [in] */ BSTR ContactNames) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DateCompleted( 
            /* [retval][out] */ DATE *DateCompleted) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DateCompleted( 
            /* [in] */ DATE DateCompleted) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DelegationState( 
            /* [retval][out] */ OlTaskDelegationState *DelegationState) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Delegator( 
            /* [retval][out] */ BSTR *Delegator) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DueDate( 
            /* [retval][out] */ DATE *DueDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DueDate( 
            /* [in] */ DATE DueDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsRecurring( 
            /* [retval][out] */ VARIANT_BOOL *IsRecurring) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Ordinal( 
            /* [retval][out] */ long *Ordinal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Ordinal( 
            /* [in] */ long Ordinal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Owner( 
            /* [retval][out] */ BSTR *Owner) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Owner( 
            /* [in] */ BSTR Owner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Ownership( 
            /* [retval][out] */ OlTaskOwnership *Ownership) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PercentComplete( 
            /* [retval][out] */ long *PercentComplete) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PercentComplete( 
            /* [in] */ long PercentComplete) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ Recipients **Recipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderTime( 
            /* [retval][out] */ DATE *ReminderTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderTime( 
            /* [in] */ DATE ReminderTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault( 
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderOverrideDefault( 
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderPlaySound( 
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderPlaySound( 
            /* [in] */ VARIANT_BOOL ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSet( 
            /* [retval][out] */ VARIANT_BOOL *ReminderSet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSet( 
            /* [in] */ VARIANT_BOOL ReminderSet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSoundFile( 
            /* [retval][out] */ BSTR *ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSoundFile( 
            /* [in] */ BSTR ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ResponseState( 
            /* [retval][out] */ OlTaskResponse *ResponseState) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Role( 
            /* [retval][out] */ BSTR *Role) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Role( 
            /* [in] */ BSTR Role) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SchedulePlusPriority( 
            /* [retval][out] */ BSTR *SchedulePlusPriority) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SchedulePlusPriority( 
            /* [in] */ BSTR SchedulePlusPriority) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartDate( 
            /* [retval][out] */ DATE *StartDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StartDate( 
            /* [in] */ DATE StartDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ OlTaskStatus *Status) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Status( 
            /* [in] */ OlTaskStatus Status) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StatusOnCompletionRecipients( 
            /* [retval][out] */ BSTR *StatusOnCompletionRecipients) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StatusOnCompletionRecipients( 
            /* [in] */ BSTR StatusOnCompletionRecipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StatusUpdateRecipients( 
            /* [retval][out] */ BSTR *StatusUpdateRecipients) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StatusUpdateRecipients( 
            /* [in] */ BSTR StatusUpdateRecipients) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TeamTask( 
            /* [retval][out] */ VARIANT_BOOL *TeamTask) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TeamTask( 
            /* [in] */ VARIANT_BOOL TeamTask) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TotalWork( 
            /* [retval][out] */ long *TotalWork) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TotalWork( 
            /* [in] */ long TotalWork) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Assign( 
            /* [retval][out] */ _TaskItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CancelResponseState( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearRecurrencePattern( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRecurrencePattern( 
            /* [retval][out] */ RecurrencePattern **RecurrencPattern) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkComplete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Respond( 
            /* [in] */ OlTaskResponse Response,
            /* [in] */ VARIANT fNoUI,
            /* [in] */ VARIANT fAdditionalTextDialog,
            /* [retval][out] */ _TaskItem **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Send( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SkipRecurrence( 
            /* [retval][out] */ VARIANT_BOOL *flg) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE StatusReport( 
            /* [retval][out] */ IDispatch **StatusReport) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InternetCodepage( 
            /* [retval][out] */ long *InternetCodepage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InternetCodepage( 
            /* [in] */ long InternetCodepage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SendUsingAccount( 
            /* [retval][out] */ _Account **SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SendUsingAccount( 
            /* [in] */ _Account *SendUsingAccount) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToDoTaskOrdinal( 
            /* [retval][out] */ DATE *ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToDoTaskOrdinal( 
            /* [in] */ DATE ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TaskItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TaskItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TaskItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TaskItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TaskItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TaskItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TaskItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TaskItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TaskItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TaskItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TaskItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TaskItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _TaskItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _TaskItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _TaskItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _TaskItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _TaskItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _TaskItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _TaskItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _TaskItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _TaskItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _TaskItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _TaskItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _TaskItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _TaskItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _TaskItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _TaskItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _TaskItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _TaskItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _TaskItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _TaskItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _TaskItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _TaskItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _TaskItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _TaskItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _TaskItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _TaskItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _TaskItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _TaskItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _TaskItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _TaskItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _TaskItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _TaskItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActualWork )( 
            _TaskItem * This,
            /* [retval][out] */ long *ActualWork);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ActualWork )( 
            _TaskItem * This,
            /* [in] */ long ActualWork);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CardData )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *CardData);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CardData )( 
            _TaskItem * This,
            /* [in] */ BSTR CardData);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Complete )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *Complete);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Complete )( 
            _TaskItem * This,
            /* [in] */ VARIANT_BOOL Complete);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Contacts )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *Contacts);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Contacts )( 
            _TaskItem * This,
            /* [in] */ BSTR Contacts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContactNames )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *ContactNames);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ContactNames )( 
            _TaskItem * This,
            /* [in] */ BSTR ContactNames);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DateCompleted )( 
            _TaskItem * This,
            /* [retval][out] */ DATE *DateCompleted);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DateCompleted )( 
            _TaskItem * This,
            /* [in] */ DATE DateCompleted);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DelegationState )( 
            _TaskItem * This,
            /* [retval][out] */ OlTaskDelegationState *DelegationState);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Delegator )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *Delegator);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DueDate )( 
            _TaskItem * This,
            /* [retval][out] */ DATE *DueDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DueDate )( 
            _TaskItem * This,
            /* [in] */ DATE DueDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsRecurring )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsRecurring);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Ordinal )( 
            _TaskItem * This,
            /* [retval][out] */ long *Ordinal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Ordinal )( 
            _TaskItem * This,
            /* [in] */ long Ordinal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Owner )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *Owner);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Owner )( 
            _TaskItem * This,
            /* [in] */ BSTR Owner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Ownership )( 
            _TaskItem * This,
            /* [retval][out] */ OlTaskOwnership *Ownership);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            _TaskItem * This,
            /* [retval][out] */ long *PercentComplete);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PercentComplete )( 
            _TaskItem * This,
            /* [in] */ long PercentComplete);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Recipients )( 
            _TaskItem * This,
            /* [retval][out] */ Recipients **Recipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderTime )( 
            _TaskItem * This,
            /* [retval][out] */ DATE *ReminderTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderTime )( 
            _TaskItem * This,
            /* [in] */ DATE ReminderTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderOverrideDefault )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderOverrideDefault )( 
            _TaskItem * This,
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderPlaySound )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderPlaySound )( 
            _TaskItem * This,
            /* [in] */ VARIANT_BOOL ReminderPlaySound);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSet )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderSet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSet )( 
            _TaskItem * This,
            /* [in] */ VARIANT_BOOL ReminderSet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSoundFile )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *ReminderSoundFile);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSoundFile )( 
            _TaskItem * This,
            /* [in] */ BSTR ReminderSoundFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ResponseState )( 
            _TaskItem * This,
            /* [retval][out] */ OlTaskResponse *ResponseState);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Role )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *Role);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Role )( 
            _TaskItem * This,
            /* [in] */ BSTR Role);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SchedulePlusPriority )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *SchedulePlusPriority);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SchedulePlusPriority )( 
            _TaskItem * This,
            /* [in] */ BSTR SchedulePlusPriority);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartDate )( 
            _TaskItem * This,
            /* [retval][out] */ DATE *StartDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StartDate )( 
            _TaskItem * This,
            /* [in] */ DATE StartDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            _TaskItem * This,
            /* [retval][out] */ OlTaskStatus *Status);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Status )( 
            _TaskItem * This,
            /* [in] */ OlTaskStatus Status);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StatusOnCompletionRecipients )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *StatusOnCompletionRecipients);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StatusOnCompletionRecipients )( 
            _TaskItem * This,
            /* [in] */ BSTR StatusOnCompletionRecipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StatusUpdateRecipients )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *StatusUpdateRecipients);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StatusUpdateRecipients )( 
            _TaskItem * This,
            /* [in] */ BSTR StatusUpdateRecipients);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TeamTask )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *TeamTask);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TeamTask )( 
            _TaskItem * This,
            /* [in] */ VARIANT_BOOL TeamTask);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TotalWork )( 
            _TaskItem * This,
            /* [retval][out] */ long *TotalWork);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TotalWork )( 
            _TaskItem * This,
            /* [in] */ long TotalWork);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Assign )( 
            _TaskItem * This,
            /* [retval][out] */ _TaskItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CancelResponseState )( 
            _TaskItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearRecurrencePattern )( 
            _TaskItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRecurrencePattern )( 
            _TaskItem * This,
            /* [retval][out] */ RecurrencePattern **RecurrencPattern);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkComplete )( 
            _TaskItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Respond )( 
            _TaskItem * This,
            /* [in] */ OlTaskResponse Response,
            /* [in] */ VARIANT fNoUI,
            /* [in] */ VARIANT fAdditionalTextDialog,
            /* [retval][out] */ _TaskItem **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Send )( 
            _TaskItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SkipRecurrence )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *flg);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StatusReport )( 
            _TaskItem * This,
            /* [retval][out] */ IDispatch **StatusReport);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _TaskItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _TaskItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _TaskItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _TaskItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InternetCodepage )( 
            _TaskItem * This,
            /* [retval][out] */ long *InternetCodepage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InternetCodepage )( 
            _TaskItem * This,
            /* [in] */ long InternetCodepage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _TaskItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _TaskItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _TaskItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _TaskItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SendUsingAccount )( 
            _TaskItem * This,
            /* [retval][out] */ _Account **SendUsingAccount);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SendUsingAccount )( 
            _TaskItem * This,
            /* [in] */ _Account *SendUsingAccount);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToDoTaskOrdinal )( 
            _TaskItem * This,
            /* [retval][out] */ DATE *ToDoTaskOrdinal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToDoTaskOrdinal )( 
            _TaskItem * This,
            /* [in] */ DATE ToDoTaskOrdinal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _TaskItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _TaskItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _TaskItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _TaskItem * This,
            /* [in] */ VARIANT RTFBody);
        
        END_INTERFACE
    } _TaskItemVtbl;

    interface _TaskItem
    {
        CONST_VTBL struct _TaskItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TaskItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TaskItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TaskItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TaskItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TaskItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TaskItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TaskItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TaskItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TaskItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TaskItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TaskItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TaskItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _TaskItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _TaskItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _TaskItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _TaskItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _TaskItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _TaskItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _TaskItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _TaskItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _TaskItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _TaskItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _TaskItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _TaskItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _TaskItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _TaskItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _TaskItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _TaskItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _TaskItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _TaskItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _TaskItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _TaskItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _TaskItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _TaskItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _TaskItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _TaskItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _TaskItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _TaskItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _TaskItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _TaskItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _TaskItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _TaskItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _TaskItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _TaskItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _TaskItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _TaskItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _TaskItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _TaskItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _TaskItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _TaskItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _TaskItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _TaskItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _TaskItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _TaskItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _TaskItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _TaskItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _TaskItem_get_ActualWork(This,ActualWork)	\
    ( (This)->lpVtbl -> get_ActualWork(This,ActualWork) ) 

#define _TaskItem_put_ActualWork(This,ActualWork)	\
    ( (This)->lpVtbl -> put_ActualWork(This,ActualWork) ) 

#define _TaskItem_get_CardData(This,CardData)	\
    ( (This)->lpVtbl -> get_CardData(This,CardData) ) 

#define _TaskItem_put_CardData(This,CardData)	\
    ( (This)->lpVtbl -> put_CardData(This,CardData) ) 

#define _TaskItem_get_Complete(This,Complete)	\
    ( (This)->lpVtbl -> get_Complete(This,Complete) ) 

#define _TaskItem_put_Complete(This,Complete)	\
    ( (This)->lpVtbl -> put_Complete(This,Complete) ) 

#define _TaskItem_get_Contacts(This,Contacts)	\
    ( (This)->lpVtbl -> get_Contacts(This,Contacts) ) 

#define _TaskItem_put_Contacts(This,Contacts)	\
    ( (This)->lpVtbl -> put_Contacts(This,Contacts) ) 

#define _TaskItem_get_ContactNames(This,ContactNames)	\
    ( (This)->lpVtbl -> get_ContactNames(This,ContactNames) ) 

#define _TaskItem_put_ContactNames(This,ContactNames)	\
    ( (This)->lpVtbl -> put_ContactNames(This,ContactNames) ) 

#define _TaskItem_get_DateCompleted(This,DateCompleted)	\
    ( (This)->lpVtbl -> get_DateCompleted(This,DateCompleted) ) 

#define _TaskItem_put_DateCompleted(This,DateCompleted)	\
    ( (This)->lpVtbl -> put_DateCompleted(This,DateCompleted) ) 

#define _TaskItem_get_DelegationState(This,DelegationState)	\
    ( (This)->lpVtbl -> get_DelegationState(This,DelegationState) ) 

#define _TaskItem_get_Delegator(This,Delegator)	\
    ( (This)->lpVtbl -> get_Delegator(This,Delegator) ) 

#define _TaskItem_get_DueDate(This,DueDate)	\
    ( (This)->lpVtbl -> get_DueDate(This,DueDate) ) 

#define _TaskItem_put_DueDate(This,DueDate)	\
    ( (This)->lpVtbl -> put_DueDate(This,DueDate) ) 

#define _TaskItem_get_IsRecurring(This,IsRecurring)	\
    ( (This)->lpVtbl -> get_IsRecurring(This,IsRecurring) ) 

#define _TaskItem_get_Ordinal(This,Ordinal)	\
    ( (This)->lpVtbl -> get_Ordinal(This,Ordinal) ) 

#define _TaskItem_put_Ordinal(This,Ordinal)	\
    ( (This)->lpVtbl -> put_Ordinal(This,Ordinal) ) 

#define _TaskItem_get_Owner(This,Owner)	\
    ( (This)->lpVtbl -> get_Owner(This,Owner) ) 

#define _TaskItem_put_Owner(This,Owner)	\
    ( (This)->lpVtbl -> put_Owner(This,Owner) ) 

#define _TaskItem_get_Ownership(This,Ownership)	\
    ( (This)->lpVtbl -> get_Ownership(This,Ownership) ) 

#define _TaskItem_get_PercentComplete(This,PercentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,PercentComplete) ) 

#define _TaskItem_put_PercentComplete(This,PercentComplete)	\
    ( (This)->lpVtbl -> put_PercentComplete(This,PercentComplete) ) 

#define _TaskItem_get_Recipients(This,Recipients)	\
    ( (This)->lpVtbl -> get_Recipients(This,Recipients) ) 

#define _TaskItem_get_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> get_ReminderTime(This,ReminderTime) ) 

#define _TaskItem_put_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> put_ReminderTime(This,ReminderTime) ) 

#define _TaskItem_get_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> get_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _TaskItem_put_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> put_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _TaskItem_get_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> get_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _TaskItem_put_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> put_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _TaskItem_get_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> get_ReminderSet(This,ReminderSet) ) 

#define _TaskItem_put_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> put_ReminderSet(This,ReminderSet) ) 

#define _TaskItem_get_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> get_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _TaskItem_put_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> put_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _TaskItem_get_ResponseState(This,ResponseState)	\
    ( (This)->lpVtbl -> get_ResponseState(This,ResponseState) ) 

#define _TaskItem_get_Role(This,Role)	\
    ( (This)->lpVtbl -> get_Role(This,Role) ) 

#define _TaskItem_put_Role(This,Role)	\
    ( (This)->lpVtbl -> put_Role(This,Role) ) 

#define _TaskItem_get_SchedulePlusPriority(This,SchedulePlusPriority)	\
    ( (This)->lpVtbl -> get_SchedulePlusPriority(This,SchedulePlusPriority) ) 

#define _TaskItem_put_SchedulePlusPriority(This,SchedulePlusPriority)	\
    ( (This)->lpVtbl -> put_SchedulePlusPriority(This,SchedulePlusPriority) ) 

#define _TaskItem_get_StartDate(This,StartDate)	\
    ( (This)->lpVtbl -> get_StartDate(This,StartDate) ) 

#define _TaskItem_put_StartDate(This,StartDate)	\
    ( (This)->lpVtbl -> put_StartDate(This,StartDate) ) 

#define _TaskItem_get_Status(This,Status)	\
    ( (This)->lpVtbl -> get_Status(This,Status) ) 

#define _TaskItem_put_Status(This,Status)	\
    ( (This)->lpVtbl -> put_Status(This,Status) ) 

#define _TaskItem_get_StatusOnCompletionRecipients(This,StatusOnCompletionRecipients)	\
    ( (This)->lpVtbl -> get_StatusOnCompletionRecipients(This,StatusOnCompletionRecipients) ) 

#define _TaskItem_put_StatusOnCompletionRecipients(This,StatusOnCompletionRecipients)	\
    ( (This)->lpVtbl -> put_StatusOnCompletionRecipients(This,StatusOnCompletionRecipients) ) 

#define _TaskItem_get_StatusUpdateRecipients(This,StatusUpdateRecipients)	\
    ( (This)->lpVtbl -> get_StatusUpdateRecipients(This,StatusUpdateRecipients) ) 

#define _TaskItem_put_StatusUpdateRecipients(This,StatusUpdateRecipients)	\
    ( (This)->lpVtbl -> put_StatusUpdateRecipients(This,StatusUpdateRecipients) ) 

#define _TaskItem_get_TeamTask(This,TeamTask)	\
    ( (This)->lpVtbl -> get_TeamTask(This,TeamTask) ) 

#define _TaskItem_put_TeamTask(This,TeamTask)	\
    ( (This)->lpVtbl -> put_TeamTask(This,TeamTask) ) 

#define _TaskItem_get_TotalWork(This,TotalWork)	\
    ( (This)->lpVtbl -> get_TotalWork(This,TotalWork) ) 

#define _TaskItem_put_TotalWork(This,TotalWork)	\
    ( (This)->lpVtbl -> put_TotalWork(This,TotalWork) ) 

#define _TaskItem_Assign(This,Item)	\
    ( (This)->lpVtbl -> Assign(This,Item) ) 

#define _TaskItem_CancelResponseState(This)	\
    ( (This)->lpVtbl -> CancelResponseState(This) ) 

#define _TaskItem_ClearRecurrencePattern(This)	\
    ( (This)->lpVtbl -> ClearRecurrencePattern(This) ) 

#define _TaskItem_GetRecurrencePattern(This,RecurrencPattern)	\
    ( (This)->lpVtbl -> GetRecurrencePattern(This,RecurrencPattern) ) 

#define _TaskItem_MarkComplete(This)	\
    ( (This)->lpVtbl -> MarkComplete(This) ) 

#define _TaskItem_Respond(This,Response,fNoUI,fAdditionalTextDialog,Item)	\
    ( (This)->lpVtbl -> Respond(This,Response,fNoUI,fAdditionalTextDialog,Item) ) 

#define _TaskItem_Send(This)	\
    ( (This)->lpVtbl -> Send(This) ) 

#define _TaskItem_SkipRecurrence(This,flg)	\
    ( (This)->lpVtbl -> SkipRecurrence(This,flg) ) 

#define _TaskItem_StatusReport(This,StatusReport)	\
    ( (This)->lpVtbl -> StatusReport(This,StatusReport) ) 

#define _TaskItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _TaskItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _TaskItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _TaskItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _TaskItem_get_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> get_InternetCodepage(This,InternetCodepage) ) 

#define _TaskItem_put_InternetCodepage(This,InternetCodepage)	\
    ( (This)->lpVtbl -> put_InternetCodepage(This,InternetCodepage) ) 

#define _TaskItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _TaskItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _TaskItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _TaskItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _TaskItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _TaskItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _TaskItem_get_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> get_SendUsingAccount(This,SendUsingAccount) ) 

#define _TaskItem_put_SendUsingAccount(This,SendUsingAccount)	\
    ( (This)->lpVtbl -> put_SendUsingAccount(This,SendUsingAccount) ) 

#define _TaskItem_get_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> get_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _TaskItem_put_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> put_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _TaskItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _TaskItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _TaskItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _TaskItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _TaskItem_get_PropertyAccessor_Proxy( 
    _TaskItem * This,
    /* [retval][out] */ _PropertyAccessor **PropertyAccessor);


void __RPC_STUB _TaskItem_get_PropertyAccessor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _TaskItem_get_SendUsingAccount_Proxy( 
    _TaskItem * This,
    /* [retval][out] */ _Account **SendUsingAccount);


void __RPC_STUB _TaskItem_get_SendUsingAccount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _TaskItem_put_SendUsingAccount_Proxy( 
    _TaskItem * This,
    /* [in] */ _Account *SendUsingAccount);


void __RPC_STUB _TaskItem_put_SendUsingAccount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _TaskItem_get_ToDoTaskOrdinal_Proxy( 
    _TaskItem * This,
    /* [retval][out] */ DATE *ToDoTaskOrdinal);


void __RPC_STUB _TaskItem_get_ToDoTaskOrdinal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _TaskItem_put_ToDoTaskOrdinal_Proxy( 
    _TaskItem * This,
    /* [in] */ DATE ToDoTaskOrdinal);


void __RPC_STUB _TaskItem_put_ToDoTaskOrdinal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _TaskItem_GetConversation_Proxy( 
    _TaskItem * This,
    /* [retval][out] */ _Conversation **Conversation);


void __RPC_STUB _TaskItem_GetConversation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _TaskItem_get_ConversationID_Proxy( 
    _TaskItem * This,
    /* [retval][out] */ BSTR *ConversationID);


void __RPC_STUB _TaskItem_get_ConversationID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _TaskItem_get_RTFBody_Proxy( 
    _TaskItem * This,
    /* [retval][out] */ VARIANT *RTFBody);


void __RPC_STUB _TaskItem_get_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _TaskItem_put_RTFBody_Proxy( 
    _TaskItem * This,
    /* [in] */ VARIANT RTFBody);


void __RPC_STUB _TaskItem_put_RTFBody_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* ___TaskItem_INTERFACE_DEFINED__ */


#ifndef __AccountSelectorEvents_DISPINTERFACE_DEFINED__
#define __AccountSelectorEvents_DISPINTERFACE_DEFINED__

/* dispinterface AccountSelectorEvents */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_AccountSelectorEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00063104-0000-0000-C000-000000000046")
    AccountSelectorEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct AccountSelectorEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AccountSelectorEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AccountSelectorEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AccountSelectorEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AccountSelectorEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AccountSelectorEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AccountSelectorEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AccountSelectorEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } AccountSelectorEventsVtbl;

    interface AccountSelectorEvents
    {
        CONST_VTBL struct AccountSelectorEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AccountSelectorEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AccountSelectorEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AccountSelectorEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AccountSelectorEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AccountSelectorEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AccountSelectorEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AccountSelectorEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __AccountSelectorEvents_DISPINTERFACE_DEFINED__ */


#ifndef ___DistListItem_INTERFACE_DEFINED__
#define ___DistListItem_INTERFACE_DEFINED__

/* interface _DistListItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__DistListItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063081-0000-0000-C000-000000000046")
    _DistListItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DLName( 
            /* [retval][out] */ BSTR *DLName) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DLName( 
            /* [in] */ BSTR DLName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MemberCount( 
            /* [retval][out] */ long *MemberCount) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_CheckSum( 
            /* [retval][out] */ long *CheckSum) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ VARIANT *Members) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Members( 
            /* [in] */ VARIANT Members) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OneOffMembers( 
            /* [retval][out] */ VARIANT *OneOffMembers) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OneOffMembers( 
            /* [in] */ VARIANT OneOffMembers) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddMembers( 
            /* [in] */ Recipients *Recipients) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveMembers( 
            /* [in] */ Recipients *Recipients) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetMember( 
            /* [in] */ long Index,
            /* [retval][out] */ Recipient **Recipient) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddMember( 
            /* [in] */ Recipient *Recipient) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveMember( 
            /* [in] */ Recipient *Recipient) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskSubject( 
            /* [retval][out] */ BSTR *TaskSubject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskSubject( 
            /* [in] */ BSTR TaskSubject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskDueDate( 
            /* [retval][out] */ DATE *TaskDueDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskDueDate( 
            /* [in] */ DATE TaskDueDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskStartDate( 
            /* [retval][out] */ DATE *TaskStartDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskStartDate( 
            /* [in] */ DATE TaskStartDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TaskCompletedDate( 
            /* [retval][out] */ DATE *TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TaskCompletedDate( 
            /* [in] */ DATE TaskCompletedDate) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToDoTaskOrdinal( 
            /* [retval][out] */ DATE *ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ToDoTaskOrdinal( 
            /* [in] */ DATE ToDoTaskOrdinal) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderOverrideDefault( 
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderOverrideDefault( 
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderPlaySound( 
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderPlaySound( 
            /* [in] */ VARIANT_BOOL ReminderPlaySound) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSet( 
            /* [retval][out] */ VARIANT_BOOL *ReminderSet) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSet( 
            /* [in] */ VARIANT_BOOL ReminderSet) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderSoundFile( 
            /* [retval][out] */ BSTR *ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderSoundFile( 
            /* [in] */ BSTR ReminderSoundFile) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReminderTime( 
            /* [retval][out] */ DATE *ReminderTime) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReminderTime( 
            /* [in] */ DATE ReminderTime) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkAsTask( 
            /* [in] */ OlMarkInterval MarkInterval) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearTaskFlag( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsMarkedAsTask( 
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _DistListItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DistListItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DistListItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DistListItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DistListItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DistListItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DistListItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DistListItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _DistListItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _DistListItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _DistListItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _DistListItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _DistListItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _DistListItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _DistListItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _DistListItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _DistListItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _DistListItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _DistListItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _DistListItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _DistListItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _DistListItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _DistListItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _DistListItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _DistListItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _DistListItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _DistListItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _DistListItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _DistListItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _DistListItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _DistListItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _DistListItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _DistListItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _DistListItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _DistListItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _DistListItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _DistListItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _DistListItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _DistListItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _DistListItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _DistListItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _DistListItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _DistListItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DLName )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *DLName);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DLName )( 
            _DistListItem * This,
            /* [in] */ BSTR DLName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MemberCount )( 
            _DistListItem * This,
            /* [retval][out] */ long *MemberCount);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CheckSum )( 
            _DistListItem * This,
            /* [retval][out] */ long *CheckSum);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT *Members);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Members )( 
            _DistListItem * This,
            /* [in] */ VARIANT Members);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OneOffMembers )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT *OneOffMembers);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OneOffMembers )( 
            _DistListItem * This,
            /* [in] */ VARIANT OneOffMembers);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _DistListItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddMembers )( 
            _DistListItem * This,
            /* [in] */ Recipients *Recipients);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveMembers )( 
            _DistListItem * This,
            /* [in] */ Recipients *Recipients);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetMember )( 
            _DistListItem * This,
            /* [in] */ long Index,
            /* [retval][out] */ Recipient **Recipient);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _DistListItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _DistListItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddMember )( 
            _DistListItem * This,
            /* [in] */ Recipient *Recipient);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveMember )( 
            _DistListItem * This,
            /* [in] */ Recipient *Recipient);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _DistListItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _DistListItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _DistListItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _DistListItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _DistListItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskSubject )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *TaskSubject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskSubject )( 
            _DistListItem * This,
            /* [in] */ BSTR TaskSubject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskDueDate )( 
            _DistListItem * This,
            /* [retval][out] */ DATE *TaskDueDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskDueDate )( 
            _DistListItem * This,
            /* [in] */ DATE TaskDueDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskStartDate )( 
            _DistListItem * This,
            /* [retval][out] */ DATE *TaskStartDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskStartDate )( 
            _DistListItem * This,
            /* [in] */ DATE TaskStartDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TaskCompletedDate )( 
            _DistListItem * This,
            /* [retval][out] */ DATE *TaskCompletedDate);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TaskCompletedDate )( 
            _DistListItem * This,
            /* [in] */ DATE TaskCompletedDate);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToDoTaskOrdinal )( 
            _DistListItem * This,
            /* [retval][out] */ DATE *ToDoTaskOrdinal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ToDoTaskOrdinal )( 
            _DistListItem * This,
            /* [in] */ DATE ToDoTaskOrdinal);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderOverrideDefault )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderOverrideDefault);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderOverrideDefault )( 
            _DistListItem * This,
            /* [in] */ VARIANT_BOOL ReminderOverrideDefault);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderPlaySound )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderPlaySound);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderPlaySound )( 
            _DistListItem * This,
            /* [in] */ VARIANT_BOOL ReminderPlaySound);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSet )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT_BOOL *ReminderSet);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSet )( 
            _DistListItem * This,
            /* [in] */ VARIANT_BOOL ReminderSet);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderSoundFile )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *ReminderSoundFile);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderSoundFile )( 
            _DistListItem * This,
            /* [in] */ BSTR ReminderSoundFile);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderTime )( 
            _DistListItem * This,
            /* [retval][out] */ DATE *ReminderTime);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderTime )( 
            _DistListItem * This,
            /* [in] */ DATE ReminderTime);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkAsTask )( 
            _DistListItem * This,
            /* [in] */ OlMarkInterval MarkInterval);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearTaskFlag )( 
            _DistListItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsMarkedAsTask )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsMarkedAsTask);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _DistListItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _DistListItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _DistListItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _DistListItem * This,
            /* [in] */ VARIANT RTFBody);
        
        END_INTERFACE
    } _DistListItemVtbl;

    interface _DistListItem
    {
        CONST_VTBL struct _DistListItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DistListItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DistListItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DistListItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DistListItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DistListItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DistListItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DistListItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _DistListItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _DistListItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _DistListItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _DistListItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _DistListItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _DistListItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _DistListItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _DistListItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _DistListItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _DistListItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _DistListItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _DistListItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _DistListItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _DistListItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _DistListItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _DistListItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _DistListItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _DistListItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _DistListItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _DistListItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _DistListItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _DistListItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _DistListItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _DistListItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _DistListItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _DistListItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _DistListItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _DistListItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _DistListItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _DistListItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _DistListItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _DistListItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _DistListItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _DistListItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _DistListItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _DistListItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _DistListItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _DistListItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _DistListItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _DistListItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _DistListItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _DistListItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _DistListItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _DistListItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _DistListItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _DistListItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _DistListItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _DistListItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _DistListItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _DistListItem_get_DLName(This,DLName)	\
    ( (This)->lpVtbl -> get_DLName(This,DLName) ) 

#define _DistListItem_put_DLName(This,DLName)	\
    ( (This)->lpVtbl -> put_DLName(This,DLName) ) 

#define _DistListItem_get_MemberCount(This,MemberCount)	\
    ( (This)->lpVtbl -> get_MemberCount(This,MemberCount) ) 

#define _DistListItem_get_CheckSum(This,CheckSum)	\
    ( (This)->lpVtbl -> get_CheckSum(This,CheckSum) ) 

#define _DistListItem_get_Members(This,Members)	\
    ( (This)->lpVtbl -> get_Members(This,Members) ) 

#define _DistListItem_put_Members(This,Members)	\
    ( (This)->lpVtbl -> put_Members(This,Members) ) 

#define _DistListItem_get_OneOffMembers(This,OneOffMembers)	\
    ( (This)->lpVtbl -> get_OneOffMembers(This,OneOffMembers) ) 

#define _DistListItem_put_OneOffMembers(This,OneOffMembers)	\
    ( (This)->lpVtbl -> put_OneOffMembers(This,OneOffMembers) ) 

#define _DistListItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _DistListItem_AddMembers(This,Recipients)	\
    ( (This)->lpVtbl -> AddMembers(This,Recipients) ) 

#define _DistListItem_RemoveMembers(This,Recipients)	\
    ( (This)->lpVtbl -> RemoveMembers(This,Recipients) ) 

#define _DistListItem_GetMember(This,Index,Recipient)	\
    ( (This)->lpVtbl -> GetMember(This,Index,Recipient) ) 

#define _DistListItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _DistListItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _DistListItem_AddMember(This,Recipient)	\
    ( (This)->lpVtbl -> AddMember(This,Recipient) ) 

#define _DistListItem_RemoveMember(This,Recipient)	\
    ( (This)->lpVtbl -> RemoveMember(This,Recipient) ) 

#define _DistListItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _DistListItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _DistListItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _DistListItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _DistListItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _DistListItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _DistListItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _DistListItem_get_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> get_TaskSubject(This,TaskSubject) ) 

#define _DistListItem_put_TaskSubject(This,TaskSubject)	\
    ( (This)->lpVtbl -> put_TaskSubject(This,TaskSubject) ) 

#define _DistListItem_get_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> get_TaskDueDate(This,TaskDueDate) ) 

#define _DistListItem_put_TaskDueDate(This,TaskDueDate)	\
    ( (This)->lpVtbl -> put_TaskDueDate(This,TaskDueDate) ) 

#define _DistListItem_get_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> get_TaskStartDate(This,TaskStartDate) ) 

#define _DistListItem_put_TaskStartDate(This,TaskStartDate)	\
    ( (This)->lpVtbl -> put_TaskStartDate(This,TaskStartDate) ) 

#define _DistListItem_get_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> get_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _DistListItem_put_TaskCompletedDate(This,TaskCompletedDate)	\
    ( (This)->lpVtbl -> put_TaskCompletedDate(This,TaskCompletedDate) ) 

#define _DistListItem_get_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> get_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _DistListItem_put_ToDoTaskOrdinal(This,ToDoTaskOrdinal)	\
    ( (This)->lpVtbl -> put_ToDoTaskOrdinal(This,ToDoTaskOrdinal) ) 

#define _DistListItem_get_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> get_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _DistListItem_put_ReminderOverrideDefault(This,ReminderOverrideDefault)	\
    ( (This)->lpVtbl -> put_ReminderOverrideDefault(This,ReminderOverrideDefault) ) 

#define _DistListItem_get_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> get_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _DistListItem_put_ReminderPlaySound(This,ReminderPlaySound)	\
    ( (This)->lpVtbl -> put_ReminderPlaySound(This,ReminderPlaySound) ) 

#define _DistListItem_get_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> get_ReminderSet(This,ReminderSet) ) 

#define _DistListItem_put_ReminderSet(This,ReminderSet)	\
    ( (This)->lpVtbl -> put_ReminderSet(This,ReminderSet) ) 

#define _DistListItem_get_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> get_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _DistListItem_put_ReminderSoundFile(This,ReminderSoundFile)	\
    ( (This)->lpVtbl -> put_ReminderSoundFile(This,ReminderSoundFile) ) 

#define _DistListItem_get_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> get_ReminderTime(This,ReminderTime) ) 

#define _DistListItem_put_ReminderTime(This,ReminderTime)	\
    ( (This)->lpVtbl -> put_ReminderTime(This,ReminderTime) ) 

#define _DistListItem_MarkAsTask(This,MarkInterval)	\
    ( (This)->lpVtbl -> MarkAsTask(This,MarkInterval) ) 

#define _DistListItem_ClearTaskFlag(This)	\
    ( (This)->lpVtbl -> ClearTaskFlag(This) ) 

#define _DistListItem_get_IsMarkedAsTask(This,IsMarkedAsTask)	\
    ( (This)->lpVtbl -> get_IsMarkedAsTask(This,IsMarkedAsTask) ) 

#define _DistListItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _DistListItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _DistListItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _DistListItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DistListItem_INTERFACE_DEFINED__ */


#ifndef ___ReportItem_INTERFACE_DEFINED__
#define ___ReportItem_INTERFACE_DEFINED__

/* interface _ReportItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ReportItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063026-0000-0000-C000-000000000046")
    _ReportItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RetentionPolicyName( 
            /* [retval][out] */ BSTR *RetentionPolicyName) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RetentionExpirationDate( 
            /* [retval][out] */ DATE *RetentionExpirationDate) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ReportItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ReportItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ReportItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ReportItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ReportItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ReportItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ReportItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ReportItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ReportItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ReportItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ReportItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ReportItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _ReportItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _ReportItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _ReportItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _ReportItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _ReportItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _ReportItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _ReportItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _ReportItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _ReportItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _ReportItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _ReportItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _ReportItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _ReportItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _ReportItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _ReportItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _ReportItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _ReportItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _ReportItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _ReportItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _ReportItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _ReportItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _ReportItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _ReportItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _ReportItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _ReportItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _ReportItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _ReportItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _ReportItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _ReportItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _ReportItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _ReportItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _ReportItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _ReportItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _ReportItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _ReportItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _ReportItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _ReportItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _ReportItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _ReportItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _ReportItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _ReportItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _ReportItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _ReportItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _ReportItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _ReportItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RetentionPolicyName )( 
            _ReportItem * This,
            /* [retval][out] */ BSTR *RetentionPolicyName);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RetentionExpirationDate )( 
            _ReportItem * This,
            /* [retval][out] */ DATE *RetentionExpirationDate);
        
        END_INTERFACE
    } _ReportItemVtbl;

    interface _ReportItem
    {
        CONST_VTBL struct _ReportItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ReportItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ReportItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ReportItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ReportItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ReportItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ReportItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ReportItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ReportItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ReportItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ReportItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ReportItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ReportItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _ReportItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _ReportItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _ReportItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _ReportItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _ReportItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _ReportItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _ReportItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _ReportItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _ReportItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _ReportItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _ReportItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _ReportItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _ReportItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _ReportItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _ReportItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _ReportItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _ReportItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _ReportItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _ReportItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _ReportItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _ReportItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _ReportItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _ReportItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _ReportItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _ReportItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _ReportItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _ReportItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _ReportItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _ReportItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _ReportItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _ReportItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _ReportItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _ReportItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _ReportItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _ReportItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _ReportItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _ReportItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _ReportItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _ReportItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _ReportItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _ReportItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _ReportItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _ReportItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _ReportItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _ReportItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _ReportItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _ReportItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _ReportItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _ReportItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _ReportItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _ReportItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _ReportItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _ReportItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _ReportItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _ReportItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _ReportItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _ReportItem_get_RetentionPolicyName(This,RetentionPolicyName)	\
    ( (This)->lpVtbl -> get_RetentionPolicyName(This,RetentionPolicyName) ) 

#define _ReportItem_get_RetentionExpirationDate(This,RetentionExpirationDate)	\
    ( (This)->lpVtbl -> get_RetentionExpirationDate(This,RetentionExpirationDate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ReportItem_INTERFACE_DEFINED__ */


#ifndef ___RemoteItem_INTERFACE_DEFINED__
#define ___RemoteItem_INTERFACE_DEFINED__

/* interface _RemoteItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__RemoteItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063023-0000-0000-C000-000000000046")
    _RemoteItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasAttachment( 
            /* [retval][out] */ VARIANT_BOOL *HasAttachment) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RemoteMessageClass( 
            /* [retval][out] */ BSTR *RemoteMessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TransferSize( 
            /* [retval][out] */ long *TransferSize) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TransferTime( 
            /* [retval][out] */ long *TransferTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _RemoteItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RemoteItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RemoteItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RemoteItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RemoteItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RemoteItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RemoteItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RemoteItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _RemoteItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _RemoteItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _RemoteItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _RemoteItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _RemoteItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _RemoteItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _RemoteItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _RemoteItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _RemoteItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _RemoteItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _RemoteItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _RemoteItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _RemoteItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _RemoteItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _RemoteItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _RemoteItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _RemoteItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _RemoteItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _RemoteItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _RemoteItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _RemoteItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _RemoteItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _RemoteItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _RemoteItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _RemoteItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _RemoteItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _RemoteItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _RemoteItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _RemoteItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _RemoteItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _RemoteItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _RemoteItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _RemoteItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _RemoteItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _RemoteItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _RemoteItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _RemoteItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _RemoteItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasAttachment )( 
            _RemoteItem * This,
            /* [retval][out] */ VARIANT_BOOL *HasAttachment);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RemoteMessageClass )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *RemoteMessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransferSize )( 
            _RemoteItem * This,
            /* [retval][out] */ long *TransferSize);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransferTime )( 
            _RemoteItem * This,
            /* [retval][out] */ long *TransferTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _RemoteItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _RemoteItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _RemoteItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _RemoteItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _RemoteItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _RemoteItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _RemoteItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _RemoteItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _RemoteItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _RemoteItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _RemoteItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _RemoteItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        END_INTERFACE
    } _RemoteItemVtbl;

    interface _RemoteItem
    {
        CONST_VTBL struct _RemoteItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RemoteItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RemoteItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RemoteItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RemoteItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RemoteItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RemoteItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RemoteItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _RemoteItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _RemoteItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _RemoteItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _RemoteItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _RemoteItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _RemoteItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _RemoteItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _RemoteItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _RemoteItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _RemoteItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _RemoteItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _RemoteItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _RemoteItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _RemoteItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _RemoteItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _RemoteItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _RemoteItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _RemoteItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _RemoteItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _RemoteItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _RemoteItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _RemoteItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _RemoteItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _RemoteItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _RemoteItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _RemoteItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _RemoteItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _RemoteItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _RemoteItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _RemoteItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _RemoteItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _RemoteItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _RemoteItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _RemoteItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _RemoteItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _RemoteItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _RemoteItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _RemoteItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _RemoteItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _RemoteItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _RemoteItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _RemoteItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _RemoteItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _RemoteItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _RemoteItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _RemoteItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _RemoteItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _RemoteItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _RemoteItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _RemoteItem_get_HasAttachment(This,HasAttachment)	\
    ( (This)->lpVtbl -> get_HasAttachment(This,HasAttachment) ) 

#define _RemoteItem_get_RemoteMessageClass(This,RemoteMessageClass)	\
    ( (This)->lpVtbl -> get_RemoteMessageClass(This,RemoteMessageClass) ) 

#define _RemoteItem_get_TransferSize(This,TransferSize)	\
    ( (This)->lpVtbl -> get_TransferSize(This,TransferSize) ) 

#define _RemoteItem_get_TransferTime(This,TransferTime)	\
    ( (This)->lpVtbl -> get_TransferTime(This,TransferTime) ) 

#define _RemoteItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _RemoteItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _RemoteItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _RemoteItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _RemoteItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _RemoteItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _RemoteItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _RemoteItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _RemoteItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _RemoteItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _RemoteItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _RemoteItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RemoteItem_INTERFACE_DEFINED__ */


#ifndef ___TaskRequestItem_INTERFACE_DEFINED__
#define ___TaskRequestItem_INTERFACE_DEFINED__

/* interface _TaskRequestItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TaskRequestItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063036-0000-0000-C000-000000000046")
    _TaskRequestItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAssociatedTask( 
            /* [in] */ VARIANT_BOOL AddToTaskList,
            /* [retval][out] */ _TaskItem **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TaskRequestItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TaskRequestItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TaskRequestItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TaskRequestItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TaskRequestItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TaskRequestItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TaskRequestItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TaskRequestItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TaskRequestItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TaskRequestItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TaskRequestItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TaskRequestItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _TaskRequestItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _TaskRequestItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _TaskRequestItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _TaskRequestItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _TaskRequestItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _TaskRequestItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _TaskRequestItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _TaskRequestItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _TaskRequestItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _TaskRequestItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _TaskRequestItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _TaskRequestItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _TaskRequestItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _TaskRequestItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _TaskRequestItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _TaskRequestItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _TaskRequestItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _TaskRequestItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _TaskRequestItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _TaskRequestItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _TaskRequestItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _TaskRequestItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _TaskRequestItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _TaskRequestItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _TaskRequestItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _TaskRequestItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _TaskRequestItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _TaskRequestItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _TaskRequestItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _TaskRequestItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _TaskRequestItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _TaskRequestItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _TaskRequestItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _TaskRequestItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAssociatedTask )( 
            _TaskRequestItem * This,
            /* [in] */ VARIANT_BOOL AddToTaskList,
            /* [retval][out] */ _TaskItem **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _TaskRequestItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _TaskRequestItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _TaskRequestItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _TaskRequestItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _TaskRequestItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _TaskRequestItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _TaskRequestItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _TaskRequestItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _TaskRequestItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _TaskRequestItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _TaskRequestItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _TaskRequestItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _TaskRequestItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _TaskRequestItem * This,
            /* [in] */ VARIANT RTFBody);
        
        END_INTERFACE
    } _TaskRequestItemVtbl;

    interface _TaskRequestItem
    {
        CONST_VTBL struct _TaskRequestItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TaskRequestItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TaskRequestItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TaskRequestItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TaskRequestItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TaskRequestItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TaskRequestItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TaskRequestItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TaskRequestItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TaskRequestItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TaskRequestItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TaskRequestItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TaskRequestItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _TaskRequestItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _TaskRequestItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _TaskRequestItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _TaskRequestItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _TaskRequestItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _TaskRequestItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _TaskRequestItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _TaskRequestItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _TaskRequestItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _TaskRequestItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _TaskRequestItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _TaskRequestItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _TaskRequestItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _TaskRequestItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _TaskRequestItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _TaskRequestItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _TaskRequestItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _TaskRequestItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _TaskRequestItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _TaskRequestItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _TaskRequestItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _TaskRequestItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _TaskRequestItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _TaskRequestItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _TaskRequestItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _TaskRequestItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _TaskRequestItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _TaskRequestItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _TaskRequestItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _TaskRequestItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _TaskRequestItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _TaskRequestItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _TaskRequestItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _TaskRequestItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _TaskRequestItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _TaskRequestItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _TaskRequestItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _TaskRequestItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _TaskRequestItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _TaskRequestItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _TaskRequestItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _TaskRequestItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _TaskRequestItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _TaskRequestItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _TaskRequestItem_GetAssociatedTask(This,AddToTaskList,Item)	\
    ( (This)->lpVtbl -> GetAssociatedTask(This,AddToTaskList,Item) ) 

#define _TaskRequestItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _TaskRequestItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _TaskRequestItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _TaskRequestItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _TaskRequestItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _TaskRequestItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _TaskRequestItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _TaskRequestItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _TaskRequestItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _TaskRequestItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _TaskRequestItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _TaskRequestItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _TaskRequestItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _TaskRequestItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TaskRequestItem_INTERFACE_DEFINED__ */


#ifndef ___TaskRequestAcceptItem_INTERFACE_DEFINED__
#define ___TaskRequestAcceptItem_INTERFACE_DEFINED__

/* interface _TaskRequestAcceptItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TaskRequestAcceptItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063038-0000-0000-C000-000000000046")
    _TaskRequestAcceptItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAssociatedTask( 
            /* [in] */ VARIANT_BOOL AddToTaskList,
            /* [retval][out] */ _TaskItem **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TaskRequestAcceptItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TaskRequestAcceptItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TaskRequestAcceptItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TaskRequestAcceptItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TaskRequestAcceptItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _TaskRequestAcceptItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _TaskRequestAcceptItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _TaskRequestAcceptItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _TaskRequestAcceptItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAssociatedTask )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ VARIANT_BOOL AddToTaskList,
            /* [retval][out] */ _TaskItem **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _TaskRequestAcceptItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _TaskRequestAcceptItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _TaskRequestAcceptItem * This,
            /* [in] */ VARIANT RTFBody);
        
        END_INTERFACE
    } _TaskRequestAcceptItemVtbl;

    interface _TaskRequestAcceptItem
    {
        CONST_VTBL struct _TaskRequestAcceptItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TaskRequestAcceptItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TaskRequestAcceptItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TaskRequestAcceptItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TaskRequestAcceptItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TaskRequestAcceptItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TaskRequestAcceptItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TaskRequestAcceptItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TaskRequestAcceptItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TaskRequestAcceptItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TaskRequestAcceptItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TaskRequestAcceptItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TaskRequestAcceptItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _TaskRequestAcceptItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _TaskRequestAcceptItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _TaskRequestAcceptItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _TaskRequestAcceptItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _TaskRequestAcceptItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _TaskRequestAcceptItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _TaskRequestAcceptItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _TaskRequestAcceptItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _TaskRequestAcceptItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _TaskRequestAcceptItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _TaskRequestAcceptItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _TaskRequestAcceptItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _TaskRequestAcceptItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _TaskRequestAcceptItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _TaskRequestAcceptItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _TaskRequestAcceptItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _TaskRequestAcceptItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _TaskRequestAcceptItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _TaskRequestAcceptItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _TaskRequestAcceptItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _TaskRequestAcceptItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _TaskRequestAcceptItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _TaskRequestAcceptItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _TaskRequestAcceptItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _TaskRequestAcceptItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _TaskRequestAcceptItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _TaskRequestAcceptItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _TaskRequestAcceptItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _TaskRequestAcceptItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _TaskRequestAcceptItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _TaskRequestAcceptItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _TaskRequestAcceptItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _TaskRequestAcceptItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _TaskRequestAcceptItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _TaskRequestAcceptItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _TaskRequestAcceptItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _TaskRequestAcceptItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _TaskRequestAcceptItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _TaskRequestAcceptItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _TaskRequestAcceptItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _TaskRequestAcceptItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _TaskRequestAcceptItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _TaskRequestAcceptItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _TaskRequestAcceptItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _TaskRequestAcceptItem_GetAssociatedTask(This,AddToTaskList,Item)	\
    ( (This)->lpVtbl -> GetAssociatedTask(This,AddToTaskList,Item) ) 

#define _TaskRequestAcceptItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _TaskRequestAcceptItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _TaskRequestAcceptItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _TaskRequestAcceptItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _TaskRequestAcceptItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _TaskRequestAcceptItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _TaskRequestAcceptItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _TaskRequestAcceptItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _TaskRequestAcceptItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _TaskRequestAcceptItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _TaskRequestAcceptItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _TaskRequestAcceptItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _TaskRequestAcceptItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _TaskRequestAcceptItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TaskRequestAcceptItem_INTERFACE_DEFINED__ */


#ifndef ___TaskRequestDeclineItem_INTERFACE_DEFINED__
#define ___TaskRequestDeclineItem_INTERFACE_DEFINED__

/* interface _TaskRequestDeclineItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TaskRequestDeclineItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063039-0000-0000-C000-000000000046")
    _TaskRequestDeclineItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAssociatedTask( 
            /* [in] */ VARIANT_BOOL AddToTaskList,
            /* [retval][out] */ _TaskItem **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TaskRequestDeclineItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TaskRequestDeclineItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TaskRequestDeclineItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TaskRequestDeclineItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TaskRequestDeclineItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _TaskRequestDeclineItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _TaskRequestDeclineItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _TaskRequestDeclineItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _TaskRequestDeclineItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAssociatedTask )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ VARIANT_BOOL AddToTaskList,
            /* [retval][out] */ _TaskItem **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _TaskRequestDeclineItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _TaskRequestDeclineItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _TaskRequestDeclineItem * This,
            /* [in] */ VARIANT RTFBody);
        
        END_INTERFACE
    } _TaskRequestDeclineItemVtbl;

    interface _TaskRequestDeclineItem
    {
        CONST_VTBL struct _TaskRequestDeclineItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TaskRequestDeclineItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TaskRequestDeclineItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TaskRequestDeclineItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TaskRequestDeclineItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TaskRequestDeclineItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TaskRequestDeclineItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TaskRequestDeclineItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TaskRequestDeclineItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TaskRequestDeclineItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TaskRequestDeclineItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TaskRequestDeclineItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TaskRequestDeclineItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _TaskRequestDeclineItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _TaskRequestDeclineItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _TaskRequestDeclineItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _TaskRequestDeclineItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _TaskRequestDeclineItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _TaskRequestDeclineItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _TaskRequestDeclineItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _TaskRequestDeclineItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _TaskRequestDeclineItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _TaskRequestDeclineItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _TaskRequestDeclineItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _TaskRequestDeclineItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _TaskRequestDeclineItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _TaskRequestDeclineItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _TaskRequestDeclineItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _TaskRequestDeclineItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _TaskRequestDeclineItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _TaskRequestDeclineItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _TaskRequestDeclineItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _TaskRequestDeclineItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _TaskRequestDeclineItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _TaskRequestDeclineItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _TaskRequestDeclineItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _TaskRequestDeclineItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _TaskRequestDeclineItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _TaskRequestDeclineItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _TaskRequestDeclineItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _TaskRequestDeclineItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _TaskRequestDeclineItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _TaskRequestDeclineItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _TaskRequestDeclineItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _TaskRequestDeclineItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _TaskRequestDeclineItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _TaskRequestDeclineItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _TaskRequestDeclineItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _TaskRequestDeclineItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _TaskRequestDeclineItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _TaskRequestDeclineItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _TaskRequestDeclineItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _TaskRequestDeclineItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _TaskRequestDeclineItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _TaskRequestDeclineItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _TaskRequestDeclineItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _TaskRequestDeclineItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _TaskRequestDeclineItem_GetAssociatedTask(This,AddToTaskList,Item)	\
    ( (This)->lpVtbl -> GetAssociatedTask(This,AddToTaskList,Item) ) 

#define _TaskRequestDeclineItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _TaskRequestDeclineItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _TaskRequestDeclineItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _TaskRequestDeclineItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _TaskRequestDeclineItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _TaskRequestDeclineItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _TaskRequestDeclineItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _TaskRequestDeclineItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _TaskRequestDeclineItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _TaskRequestDeclineItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _TaskRequestDeclineItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _TaskRequestDeclineItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _TaskRequestDeclineItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _TaskRequestDeclineItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TaskRequestDeclineItem_INTERFACE_DEFINED__ */


#ifndef ___TaskRequestUpdateItem_INTERFACE_DEFINED__
#define ___TaskRequestUpdateItem_INTERFACE_DEFINED__

/* interface _TaskRequestUpdateItem */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__TaskRequestUpdateItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063037-0000-0000-C000-000000000046")
    _TaskRequestUpdateItem : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Actions( 
            /* [retval][out] */ Actions **Actions) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ Attachments **Attachments) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BillingInformation( 
            /* [retval][out] */ BSTR *BillingInformation) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_BillingInformation( 
            /* [in] */ BSTR BillingInformation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ BSTR *Body) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ BSTR Body) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Categories( 
            /* [retval][out] */ BSTR *Categories) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Categories( 
            /* [in] */ BSTR Categories) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Companies( 
            /* [retval][out] */ BSTR *Companies) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Companies( 
            /* [in] */ BSTR Companies) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationIndex( 
            /* [retval][out] */ BSTR *ConversationIndex) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreationTime( 
            /* [retval][out] */ DATE *CreationTime) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryID( 
            /* [retval][out] */ BSTR *EntryID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormDescription( 
            /* [retval][out] */ FormDescription **FormDescription) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GetInspector( 
            /* [retval][out] */ _Inspector **GetInspector) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ OlImportance *Importance) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ OlImportance Importance) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LastModificationTime( 
            /* [retval][out] */ DATE *LastModificationTime) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MAPIOBJECT( 
            /* [retval][out] */ IUnknown **MAPIOBJECT) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageClass( 
            /* [retval][out] */ BSTR *MessageClass) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageClass( 
            /* [in] */ BSTR MessageClass) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mileage( 
            /* [retval][out] */ BSTR *Mileage) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mileage( 
            /* [in] */ BSTR Mileage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NoAging( 
            /* [retval][out] */ VARIANT_BOOL *NoAging) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_NoAging( 
            /* [in] */ VARIANT_BOOL NoAging) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookInternalVersion( 
            /* [retval][out] */ long *OutlookInternalVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OutlookVersion( 
            /* [retval][out] */ BSTR *OutlookVersion) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [retval][out] */ VARIANT_BOOL *Saved) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sensitivity( 
            /* [retval][out] */ OlSensitivity *Sensitivity) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sensitivity( 
            /* [in] */ OlSensitivity Sensitivity) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long *Size) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR *Subject) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR Subject) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UnRead( 
            /* [retval][out] */ VARIANT_BOOL *UnRead) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UnRead( 
            /* [in] */ VARIANT_BOOL UnRead) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserProperties( 
            /* [retval][out] */ UserProperties **UserProperties) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ OlInspectorClose SaveMode) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Display( 
            /* [optional][in] */ VARIANT Modal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAssociatedTask( 
            /* [in] */ VARIANT_BOOL AddToTaskList,
            /* [retval][out] */ _TaskItem **Item) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Links( 
            /* [retval][out] */ Links **Links) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DownloadState( 
            /* [retval][out] */ OlDownloadState *DownloadState) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowCategoriesDialog( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ItemProperties( 
            /* [retval][out] */ ItemProperties **ItemProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MarkForDownload( 
            /* [retval][out] */ OlRemoteStatus *MarkForDownload) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MarkForDownload( 
            /* [in] */ OlRemoteStatus MarkForDownload) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsConflict( 
            /* [retval][out] */ VARIANT_BOOL *IsConflict) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoResolvedWinner( 
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Conflicts( 
            /* [retval][out] */ Conflicts **Conflicts) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyAccessor( 
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTFBody( 
            /* [retval][out] */ VARIANT *RTFBody) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RTFBody( 
            /* [in] */ VARIANT RTFBody) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TaskRequestUpdateItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TaskRequestUpdateItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TaskRequestUpdateItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TaskRequestUpdateItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TaskRequestUpdateItem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ Actions **Actions);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ Attachments **Attachments);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BillingInformation )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *BillingInformation);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BillingInformation )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ BSTR BillingInformation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *Body);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Body )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ BSTR Body);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Categories )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *Categories);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Categories )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ BSTR Categories);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Companies )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *Companies);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Companies )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ BSTR Companies);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationIndex )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *ConversationIndex);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreationTime )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ DATE *CreationTime);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryID )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *EntryID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormDescription )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ FormDescription **FormDescription);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GetInspector )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ _Inspector **GetInspector);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Importance )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ OlImportance *Importance);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Importance )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ OlImportance Importance);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastModificationTime )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ DATE *LastModificationTime);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MAPIOBJECT )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ IUnknown **MAPIOBJECT);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MessageClass )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *MessageClass);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MessageClass )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ BSTR MessageClass);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mileage )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *Mileage);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mileage )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ BSTR Mileage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NoAging )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ VARIANT_BOOL *NoAging);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NoAging )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ VARIANT_BOOL NoAging);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookInternalVersion )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ long *OutlookInternalVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutlookVersion )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *OutlookVersion);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ VARIANT_BOOL *Saved);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitivity )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ OlSensitivity *Sensitivity);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitivity )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ OlSensitivity Sensitivity);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ long *Size);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *Subject);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ BSTR Subject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnRead )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ VARIANT_BOOL *UnRead);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UnRead )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ VARIANT_BOOL UnRead);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserProperties )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ UserProperties **UserProperties);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ OlInspectorClose SaveMode);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _TaskRequestUpdateItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Display )( 
            _TaskRequestUpdateItem * This,
            /* [optional][in] */ VARIANT Modal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ MAPIFolder *DestFldr,
            /* [retval][out] */ IDispatch **Item);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _TaskRequestUpdateItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _TaskRequestUpdateItem * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ BSTR Path,
            /* [optional][in] */ VARIANT Type);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAssociatedTask )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ VARIANT_BOOL AddToTaskList,
            /* [retval][out] */ _TaskItem **Item);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Links )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ Links **Links);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadState )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ OlDownloadState *DownloadState);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCategoriesDialog )( 
            _TaskRequestUpdateItem * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ItemProperties )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ ItemProperties **ItemProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MarkForDownload )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ OlRemoteStatus *MarkForDownload);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MarkForDownload )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ OlRemoteStatus MarkForDownload);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsConflict )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ VARIANT_BOOL *IsConflict);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoResolvedWinner )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ VARIANT_BOOL *AutoResolvedWinner);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Conflicts )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ Conflicts **Conflicts);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyAccessor )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ _PropertyAccessor **PropertyAccessor);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTFBody )( 
            _TaskRequestUpdateItem * This,
            /* [retval][out] */ VARIANT *RTFBody);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RTFBody )( 
            _TaskRequestUpdateItem * This,
            /* [in] */ VARIANT RTFBody);
        
        END_INTERFACE
    } _TaskRequestUpdateItemVtbl;

    interface _TaskRequestUpdateItem
    {
        CONST_VTBL struct _TaskRequestUpdateItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TaskRequestUpdateItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TaskRequestUpdateItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TaskRequestUpdateItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TaskRequestUpdateItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TaskRequestUpdateItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TaskRequestUpdateItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TaskRequestUpdateItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _TaskRequestUpdateItem_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _TaskRequestUpdateItem_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _TaskRequestUpdateItem_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _TaskRequestUpdateItem_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _TaskRequestUpdateItem_get_Actions(This,Actions)	\
    ( (This)->lpVtbl -> get_Actions(This,Actions) ) 

#define _TaskRequestUpdateItem_get_Attachments(This,Attachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,Attachments) ) 

#define _TaskRequestUpdateItem_get_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> get_BillingInformation(This,BillingInformation) ) 

#define _TaskRequestUpdateItem_put_BillingInformation(This,BillingInformation)	\
    ( (This)->lpVtbl -> put_BillingInformation(This,BillingInformation) ) 

#define _TaskRequestUpdateItem_get_Body(This,Body)	\
    ( (This)->lpVtbl -> get_Body(This,Body) ) 

#define _TaskRequestUpdateItem_put_Body(This,Body)	\
    ( (This)->lpVtbl -> put_Body(This,Body) ) 

#define _TaskRequestUpdateItem_get_Categories(This,Categories)	\
    ( (This)->lpVtbl -> get_Categories(This,Categories) ) 

#define _TaskRequestUpdateItem_put_Categories(This,Categories)	\
    ( (This)->lpVtbl -> put_Categories(This,Categories) ) 

#define _TaskRequestUpdateItem_get_Companies(This,Companies)	\
    ( (This)->lpVtbl -> get_Companies(This,Companies) ) 

#define _TaskRequestUpdateItem_put_Companies(This,Companies)	\
    ( (This)->lpVtbl -> put_Companies(This,Companies) ) 

#define _TaskRequestUpdateItem_get_ConversationIndex(This,ConversationIndex)	\
    ( (This)->lpVtbl -> get_ConversationIndex(This,ConversationIndex) ) 

#define _TaskRequestUpdateItem_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _TaskRequestUpdateItem_get_CreationTime(This,CreationTime)	\
    ( (This)->lpVtbl -> get_CreationTime(This,CreationTime) ) 

#define _TaskRequestUpdateItem_get_EntryID(This,EntryID)	\
    ( (This)->lpVtbl -> get_EntryID(This,EntryID) ) 

#define _TaskRequestUpdateItem_get_FormDescription(This,FormDescription)	\
    ( (This)->lpVtbl -> get_FormDescription(This,FormDescription) ) 

#define _TaskRequestUpdateItem_get_GetInspector(This,GetInspector)	\
    ( (This)->lpVtbl -> get_GetInspector(This,GetInspector) ) 

#define _TaskRequestUpdateItem_get_Importance(This,Importance)	\
    ( (This)->lpVtbl -> get_Importance(This,Importance) ) 

#define _TaskRequestUpdateItem_put_Importance(This,Importance)	\
    ( (This)->lpVtbl -> put_Importance(This,Importance) ) 

#define _TaskRequestUpdateItem_get_LastModificationTime(This,LastModificationTime)	\
    ( (This)->lpVtbl -> get_LastModificationTime(This,LastModificationTime) ) 

#define _TaskRequestUpdateItem_get_MAPIOBJECT(This,MAPIOBJECT)	\
    ( (This)->lpVtbl -> get_MAPIOBJECT(This,MAPIOBJECT) ) 

#define _TaskRequestUpdateItem_get_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> get_MessageClass(This,MessageClass) ) 

#define _TaskRequestUpdateItem_put_MessageClass(This,MessageClass)	\
    ( (This)->lpVtbl -> put_MessageClass(This,MessageClass) ) 

#define _TaskRequestUpdateItem_get_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> get_Mileage(This,Mileage) ) 

#define _TaskRequestUpdateItem_put_Mileage(This,Mileage)	\
    ( (This)->lpVtbl -> put_Mileage(This,Mileage) ) 

#define _TaskRequestUpdateItem_get_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> get_NoAging(This,NoAging) ) 

#define _TaskRequestUpdateItem_put_NoAging(This,NoAging)	\
    ( (This)->lpVtbl -> put_NoAging(This,NoAging) ) 

#define _TaskRequestUpdateItem_get_OutlookInternalVersion(This,OutlookInternalVersion)	\
    ( (This)->lpVtbl -> get_OutlookInternalVersion(This,OutlookInternalVersion) ) 

#define _TaskRequestUpdateItem_get_OutlookVersion(This,OutlookVersion)	\
    ( (This)->lpVtbl -> get_OutlookVersion(This,OutlookVersion) ) 

#define _TaskRequestUpdateItem_get_Saved(This,Saved)	\
    ( (This)->lpVtbl -> get_Saved(This,Saved) ) 

#define _TaskRequestUpdateItem_get_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> get_Sensitivity(This,Sensitivity) ) 

#define _TaskRequestUpdateItem_put_Sensitivity(This,Sensitivity)	\
    ( (This)->lpVtbl -> put_Sensitivity(This,Sensitivity) ) 

#define _TaskRequestUpdateItem_get_Size(This,Size)	\
    ( (This)->lpVtbl -> get_Size(This,Size) ) 

#define _TaskRequestUpdateItem_get_Subject(This,Subject)	\
    ( (This)->lpVtbl -> get_Subject(This,Subject) ) 

#define _TaskRequestUpdateItem_put_Subject(This,Subject)	\
    ( (This)->lpVtbl -> put_Subject(This,Subject) ) 

#define _TaskRequestUpdateItem_get_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> get_UnRead(This,UnRead) ) 

#define _TaskRequestUpdateItem_put_UnRead(This,UnRead)	\
    ( (This)->lpVtbl -> put_UnRead(This,UnRead) ) 

#define _TaskRequestUpdateItem_get_UserProperties(This,UserProperties)	\
    ( (This)->lpVtbl -> get_UserProperties(This,UserProperties) ) 

#define _TaskRequestUpdateItem_Close(This,SaveMode)	\
    ( (This)->lpVtbl -> Close(This,SaveMode) ) 

#define _TaskRequestUpdateItem_Copy(This,Item)	\
    ( (This)->lpVtbl -> Copy(This,Item) ) 

#define _TaskRequestUpdateItem_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _TaskRequestUpdateItem_Display(This,Modal)	\
    ( (This)->lpVtbl -> Display(This,Modal) ) 

#define _TaskRequestUpdateItem_Move(This,DestFldr,Item)	\
    ( (This)->lpVtbl -> Move(This,DestFldr,Item) ) 

#define _TaskRequestUpdateItem_PrintOut(This)	\
    ( (This)->lpVtbl -> PrintOut(This) ) 

#define _TaskRequestUpdateItem_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _TaskRequestUpdateItem_SaveAs(This,Path,Type)	\
    ( (This)->lpVtbl -> SaveAs(This,Path,Type) ) 

#define _TaskRequestUpdateItem_GetAssociatedTask(This,AddToTaskList,Item)	\
    ( (This)->lpVtbl -> GetAssociatedTask(This,AddToTaskList,Item) ) 

#define _TaskRequestUpdateItem_get_Links(This,Links)	\
    ( (This)->lpVtbl -> get_Links(This,Links) ) 

#define _TaskRequestUpdateItem_get_DownloadState(This,DownloadState)	\
    ( (This)->lpVtbl -> get_DownloadState(This,DownloadState) ) 

#define _TaskRequestUpdateItem_ShowCategoriesDialog(This)	\
    ( (This)->lpVtbl -> ShowCategoriesDialog(This) ) 

#define _TaskRequestUpdateItem_get_ItemProperties(This,ItemProperties)	\
    ( (This)->lpVtbl -> get_ItemProperties(This,ItemProperties) ) 

#define _TaskRequestUpdateItem_get_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> get_MarkForDownload(This,MarkForDownload) ) 

#define _TaskRequestUpdateItem_put_MarkForDownload(This,MarkForDownload)	\
    ( (This)->lpVtbl -> put_MarkForDownload(This,MarkForDownload) ) 

#define _TaskRequestUpdateItem_get_IsConflict(This,IsConflict)	\
    ( (This)->lpVtbl -> get_IsConflict(This,IsConflict) ) 

#define _TaskRequestUpdateItem_get_AutoResolvedWinner(This,AutoResolvedWinner)	\
    ( (This)->lpVtbl -> get_AutoResolvedWinner(This,AutoResolvedWinner) ) 

#define _TaskRequestUpdateItem_get_Conflicts(This,Conflicts)	\
    ( (This)->lpVtbl -> get_Conflicts(This,Conflicts) ) 

#define _TaskRequestUpdateItem_get_PropertyAccessor(This,PropertyAccessor)	\
    ( (This)->lpVtbl -> get_PropertyAccessor(This,PropertyAccessor) ) 

#define _TaskRequestUpdateItem_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _TaskRequestUpdateItem_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _TaskRequestUpdateItem_get_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> get_RTFBody(This,RTFBody) ) 

#define _TaskRequestUpdateItem_put_RTFBody(This,RTFBody)	\
    ( (This)->lpVtbl -> put_RTFBody(This,RTFBody) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TaskRequestUpdateItem_INTERFACE_DEFINED__ */


#ifndef ___ConversationHeader_INTERFACE_DEFINED__
#define ___ConversationHeader_INTERFACE_DEFINED__

/* interface _ConversationHeader */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__ConversationHeader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00063107-0000-0000-C000-000000000046")
    _ConversationHeader : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConversation( 
            /* [retval][out] */ _Conversation **Conversation) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationID( 
            /* [retval][out] */ BSTR *ConversationID) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConversationTopic( 
            /* [retval][out] */ BSTR *ConversationTopic) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetItems( 
            /* [retval][out] */ _SimpleItems **SimpleItems) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ConversationHeaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ConversationHeader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ConversationHeader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ConversationHeader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ConversationHeader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ConversationHeader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ConversationHeader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ConversationHeader * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _ConversationHeader * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _ConversationHeader * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _ConversationHeader * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _ConversationHeader * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConversation )( 
            _ConversationHeader * This,
            /* [retval][out] */ _Conversation **Conversation);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationID )( 
            _ConversationHeader * This,
            /* [retval][out] */ BSTR *ConversationID);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConversationTopic )( 
            _ConversationHeader * This,
            /* [retval][out] */ BSTR *ConversationTopic);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetItems )( 
            _ConversationHeader * This,
            /* [retval][out] */ _SimpleItems **SimpleItems);
        
        END_INTERFACE
    } _ConversationHeaderVtbl;

    interface _ConversationHeader
    {
        CONST_VTBL struct _ConversationHeaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ConversationHeader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ConversationHeader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ConversationHeader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ConversationHeader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ConversationHeader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ConversationHeader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ConversationHeader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ConversationHeader_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _ConversationHeader_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _ConversationHeader_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _ConversationHeader_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _ConversationHeader_GetConversation(This,Conversation)	\
    ( (This)->lpVtbl -> GetConversation(This,Conversation) ) 

#define _ConversationHeader_get_ConversationID(This,ConversationID)	\
    ( (This)->lpVtbl -> get_ConversationID(This,ConversationID) ) 

#define _ConversationHeader_get_ConversationTopic(This,ConversationTopic)	\
    ( (This)->lpVtbl -> get_ConversationTopic(This,ConversationTopic) ) 

#define _ConversationHeader_GetItems(This,SimpleItems)	\
    ( (This)->lpVtbl -> GetItems(This,SimpleItems) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ConversationHeader_INTERFACE_DEFINED__ */


#ifndef ___PeopleView_INTERFACE_DEFINED__
#define ___PeopleView_INTERFACE_DEFINED__

/* interface _PeopleView */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__PeopleView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000630A3-0000-0000-C000-000000000046")
    _PeopleView : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ _Application **Application) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ OlObjectClass *Class) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ _NameSpace **Session) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **Parent) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Apply( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR *Language) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Language( 
            /* [in] */ BSTR Language) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LockUserChanges( 
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LockUserChanges( 
            /* [in] */ VARIANT_BOOL LockUserChanges) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *Name) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveOption( 
            /* [retval][out] */ OlViewSaveOption *SaveOption) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Standard( 
            /* [retval][out] */ VARIANT_BOOL *Standard) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ViewType( 
            /* [retval][out] */ OlViewType *ViewType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XML( 
            /* [retval][out] */ BSTR *XML) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_XML( 
            /* [in] */ BSTR XML) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GoToDate( 
            /* [in] */ DATE Date) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filter( 
            /* [retval][out] */ BSTR *Filter) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Filter( 
            /* [in] */ BSTR Filter) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SortFields( 
            /* [retval][out] */ _OrderFields **SortFields) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _PeopleViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PeopleView * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PeopleView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PeopleView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PeopleView * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PeopleView * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PeopleView * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PeopleView * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _PeopleView * This,
            /* [retval][out] */ _Application **Application);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Class )( 
            _PeopleView * This,
            /* [retval][out] */ OlObjectClass *Class);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            _PeopleView * This,
            /* [retval][out] */ _NameSpace **Session);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _PeopleView * This,
            /* [retval][out] */ IDispatch **Parent);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Apply )( 
            _PeopleView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _PeopleView * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ OlViewSaveOption SaveOption,
            /* [retval][out] */ View **ppview);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _PeopleView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            _PeopleView * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _PeopleView * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            _PeopleView * This,
            /* [retval][out] */ BSTR *Language);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            _PeopleView * This,
            /* [in] */ BSTR Language);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LockUserChanges )( 
            _PeopleView * This,
            /* [retval][out] */ VARIANT_BOOL *LockUserChanges);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LockUserChanges )( 
            _PeopleView * This,
            /* [in] */ VARIANT_BOOL LockUserChanges);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _PeopleView * This,
            /* [retval][out] */ BSTR *Name);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _PeopleView * This,
            /* [in] */ BSTR Name);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveOption )( 
            _PeopleView * This,
            /* [retval][out] */ OlViewSaveOption *SaveOption);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Standard )( 
            _PeopleView * This,
            /* [retval][out] */ VARIANT_BOOL *Standard);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ViewType )( 
            _PeopleView * This,
            /* [retval][out] */ OlViewType *ViewType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XML )( 
            _PeopleView * This,
            /* [retval][out] */ BSTR *XML);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XML )( 
            _PeopleView * This,
            /* [in] */ BSTR XML);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GoToDate )( 
            _PeopleView * This,
            /* [in] */ DATE Date);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filter )( 
            _PeopleView * This,
            /* [retval][out] */ BSTR *Filter);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Filter )( 
            _PeopleView * This,
            /* [in] */ BSTR Filter);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SortFields )( 
            _PeopleView * This,
            /* [retval][out] */ _OrderFields **SortFields);
        
        END_INTERFACE
    } _PeopleViewVtbl;

    interface _PeopleView
    {
        CONST_VTBL struct _PeopleViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PeopleView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PeopleView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PeopleView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PeopleView_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PeopleView_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PeopleView_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PeopleView_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _PeopleView_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#define _PeopleView_get_Class(This,Class)	\
    ( (This)->lpVtbl -> get_Class(This,Class) ) 

#define _PeopleView_get_Session(This,Session)	\
    ( (This)->lpVtbl -> get_Session(This,Session) ) 

#define _PeopleView_get_Parent(This,Parent)	\
    ( (This)->lpVtbl -> get_Parent(This,Parent) ) 

#define _PeopleView_Apply(This)	\
    ( (This)->lpVtbl -> Apply(This) ) 

#define _PeopleView_Copy(This,Name,SaveOption,ppview)	\
    ( (This)->lpVtbl -> Copy(This,Name,SaveOption,ppview) ) 

#define _PeopleView_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define _PeopleView_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define _PeopleView_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define _PeopleView_get_Language(This,Language)	\
    ( (This)->lpVtbl -> get_Language(This,Language) ) 

#define _PeopleView_put_Language(This,Language)	\
    ( (This)->lpVtbl -> put_Language(This,Language) ) 

#define _PeopleView_get_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> get_LockUserChanges(This,LockUserChanges) ) 

#define _PeopleView_put_LockUserChanges(This,LockUserChanges)	\
    ( (This)->lpVtbl -> put_LockUserChanges(This,LockUserChanges) ) 

#define _PeopleView_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define _PeopleView_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define _PeopleView_get_SaveOption(This,SaveOption)	\
    ( (This)->lpVtbl -> get_SaveOption(This,SaveOption) ) 

#define _PeopleView_get_Standard(This,Standard)	\
    ( (This)->lpVtbl -> get_Standard(This,Standard) ) 

#define _PeopleView_get_ViewType(This,ViewType)	\
    ( (This)->lpVtbl -> get_ViewType(This,ViewType) ) 

#define _PeopleView_get_XML(This,XML)	\
    ( (This)->lpVtbl -> get_XML(This,XML) ) 

#define _PeopleView_put_XML(This,XML)	\
    ( (This)->lpVtbl -> put_XML(This,XML) ) 

#define _PeopleView_GoToDate(This,Date)	\
    ( (This)->lpVtbl -> GoToDate(This,Date) ) 

#define _PeopleView_get_Filter(This,Filter)	\
    ( (This)->lpVtbl -> get_Filter(This,Filter) ) 

#define _PeopleView_put_Filter(This,Filter)	\
    ( (This)->lpVtbl -> put_Filter(This,Filter) ) 

#define _PeopleView_get_SortFields(This,SortFields)	\
    ( (This)->lpVtbl -> get_SortFields(This,SortFields) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PeopleView_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID__RecipientControl;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F023-0000-0000-C000-000000000046")
_RecipientControl;
#endif

EXTERN_C const CLSID CLSID__DocSiteControl;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F024-0000-0000-C000-000000000046")
_DocSiteControl;
#endif

EXTERN_C const CLSID CLSID_OlkTextBox;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F068-0000-0000-C000-000000000046")
OlkTextBox;
#endif

EXTERN_C const CLSID CLSID_OlkLabel;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F067-0000-0000-C000-000000000046")
OlkLabel;
#endif

EXTERN_C const CLSID CLSID_OlkCommandButton;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F04A-0000-0000-C000-000000000046")
OlkCommandButton;
#endif

EXTERN_C const CLSID CLSID_OlkCheckBox;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F04C-0000-0000-C000-000000000046")
OlkCheckBox;
#endif

EXTERN_C const CLSID CLSID_OlkOptionButton;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F04B-0000-0000-C000-000000000046")
OlkOptionButton;
#endif

EXTERN_C const CLSID CLSID_OlkComboBox;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F04D-0000-0000-C000-000000000046")
OlkComboBox;
#endif

EXTERN_C const CLSID CLSID_OlkListBox;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F04E-0000-0000-C000-000000000046")
OlkListBox;
#endif

EXTERN_C const CLSID CLSID_OlkInfoBar;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F054-0000-0000-C000-000000000046")
OlkInfoBar;
#endif

EXTERN_C const CLSID CLSID_OlkContactPhoto;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F04F-0000-0000-C000-000000000046")
OlkContactPhoto;
#endif

EXTERN_C const CLSID CLSID_OlkBusinessCardControl;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F050-0000-0000-C000-000000000046")
OlkBusinessCardControl;
#endif

EXTERN_C const CLSID CLSID_OlkPageControl;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F055-0000-0000-C000-000000000046")
OlkPageControl;
#endif

EXTERN_C const CLSID CLSID_OlkDateControl;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F056-0000-0000-C000-000000000046")
OlkDateControl;
#endif

EXTERN_C const CLSID CLSID_OlkTimeControl;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F051-0000-0000-C000-000000000046")
OlkTimeControl;
#endif

EXTERN_C const CLSID CLSID_OlkCategory;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F053-0000-0000-C000-000000000046")
OlkCategory;
#endif

EXTERN_C const CLSID CLSID_OlkFrameHeader;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F057-0000-0000-C000-000000000046")
OlkFrameHeader;
#endif

EXTERN_C const CLSID CLSID_OlkSenderPhoto;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F058-0000-0000-C000-000000000046")
OlkSenderPhoto;
#endif

EXTERN_C const CLSID CLSID_PropertyAccessor;

#ifdef __cplusplus

class DECLSPEC_UUID("0006102D-0000-0000-C000-000000000046")
PropertyAccessor;
#endif

EXTERN_C const CLSID CLSID_NavigationModule;

#ifdef __cplusplus

class DECLSPEC_UUID("000610E8-0000-0000-C000-000000000046")
NavigationModule;
#endif

EXTERN_C const CLSID CLSID_NavigationModules;

#ifdef __cplusplus

class DECLSPEC_UUID("000610E7-0000-0000-C000-000000000046")
NavigationModules;
#endif

EXTERN_C const CLSID CLSID_Store;

#ifdef __cplusplus

class DECLSPEC_UUID("000610C7-0000-0000-C000-000000000046")
Store;
#endif

EXTERN_C const CLSID CLSID_Rules;

#ifdef __cplusplus

class DECLSPEC_UUID("000610CC-0000-0000-C000-000000000046")
Rules;
#endif

EXTERN_C const CLSID CLSID_RuleActions;

#ifdef __cplusplus

class DECLSPEC_UUID("000610CE-0000-0000-C000-000000000046")
RuleActions;
#endif

EXTERN_C const CLSID CLSID_MoveOrCopyRuleAction;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D0-0000-0000-C000-000000000046")
MoveOrCopyRuleAction;
#endif

EXTERN_C const CLSID CLSID_RuleAction;

#ifdef __cplusplus

class DECLSPEC_UUID("000610CF-0000-0000-C000-000000000046")
RuleAction;
#endif

EXTERN_C const CLSID CLSID_SendRuleAction;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D1-0000-0000-C000-000000000046")
SendRuleAction;
#endif

EXTERN_C const CLSID CLSID_AssignToCategoryRuleAction;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D4-0000-0000-C000-000000000046")
AssignToCategoryRuleAction;
#endif

EXTERN_C const CLSID CLSID_PlaySoundRuleAction;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D5-0000-0000-C000-000000000046")
PlaySoundRuleAction;
#endif

EXTERN_C const CLSID CLSID_MarkAsTaskRuleAction;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D6-0000-0000-C000-000000000046")
MarkAsTaskRuleAction;
#endif

EXTERN_C const CLSID CLSID_NewItemAlertRuleAction;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D7-0000-0000-C000-000000000046")
NewItemAlertRuleAction;
#endif

EXTERN_C const CLSID CLSID_RuleConditions;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D8-0000-0000-C000-000000000046")
RuleConditions;
#endif

EXTERN_C const CLSID CLSID_RuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D9-0000-0000-C000-000000000046")
RuleCondition;
#endif

EXTERN_C const CLSID CLSID_ImportanceRuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610DA-0000-0000-C000-000000000046")
ImportanceRuleCondition;
#endif

EXTERN_C const CLSID CLSID_AccountRuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610DB-0000-0000-C000-000000000046")
AccountRuleCondition;
#endif

EXTERN_C const CLSID CLSID_Account;

#ifdef __cplusplus

class DECLSPEC_UUID("000610C5-0000-0000-C000-000000000046")
Account;
#endif

EXTERN_C const CLSID CLSID_TextRuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610E0-0000-0000-C000-000000000046")
TextRuleCondition;
#endif

EXTERN_C const CLSID CLSID_CategoryRuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610DC-0000-0000-C000-000000000046")
CategoryRuleCondition;
#endif

EXTERN_C const CLSID CLSID_FormNameRuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610DD-0000-0000-C000-000000000046")
FormNameRuleCondition;
#endif

EXTERN_C const CLSID CLSID_ToOrFromRuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610DE-0000-0000-C000-000000000046")
ToOrFromRuleCondition;
#endif

EXTERN_C const CLSID CLSID_AddressRuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610FA-0000-0000-C000-000000000046")
AddressRuleCondition;
#endif

EXTERN_C const CLSID CLSID_SenderInAddressListRuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610DF-0000-0000-C000-000000000046")
SenderInAddressListRuleCondition;
#endif

EXTERN_C const CLSID CLSID_FromRssFeedRuleCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("000610FB-0000-0000-C000-000000000046")
FromRssFeedRuleCondition;
#endif

EXTERN_C const CLSID CLSID_Rule;

#ifdef __cplusplus

class DECLSPEC_UUID("000610CD-0000-0000-C000-000000000046")
Rule;
#endif

EXTERN_C const CLSID CLSID_Categories;

#ifdef __cplusplus

class DECLSPEC_UUID("000610E4-0000-0000-C000-000000000046")
Categories;
#endif

EXTERN_C const CLSID CLSID_Category;

#ifdef __cplusplus

class DECLSPEC_UUID("000610E3-0000-0000-C000-000000000046")
Category;
#endif

EXTERN_C const CLSID CLSID_Table;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D2-0000-0000-C000-000000000046")
Table;
#endif

EXTERN_C const CLSID CLSID_Row;

#ifdef __cplusplus

class DECLSPEC_UUID("000610D3-0000-0000-C000-000000000046")
Row;
#endif

EXTERN_C const CLSID CLSID_Columns;

#ifdef __cplusplus

class DECLSPEC_UUID("000610E1-0000-0000-C000-000000000046")
Columns;
#endif

EXTERN_C const CLSID CLSID_Column;

#ifdef __cplusplus

class DECLSPEC_UUID("000610E5-0000-0000-C000-000000000046")
Column;
#endif

EXTERN_C const CLSID CLSID_CalendarSharing;

#ifdef __cplusplus

class DECLSPEC_UUID("000610E2-0000-0000-C000-000000000046")
CalendarSharing;
#endif

EXTERN_C const CLSID CLSID_MailItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061033-0000-0000-C000-000000000046")
MailItem;
#endif

EXTERN_C const CLSID CLSID_ContactItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061031-0000-0000-C000-000000000046")
ContactItem;
#endif

EXTERN_C const CLSID CLSID_SimpleItems;

#ifdef __cplusplus

class DECLSPEC_UUID("00061102-0000-0000-C000-000000000046")
SimpleItems;
#endif

EXTERN_C const CLSID CLSID_UserDefinedProperties;

#ifdef __cplusplus

class DECLSPEC_UUID("00061047-0000-0000-C000-000000000046")
UserDefinedProperties;
#endif

EXTERN_C const CLSID CLSID_UserDefinedProperty;

#ifdef __cplusplus

class DECLSPEC_UUID("0006105C-0000-0000-C000-000000000046")
UserDefinedProperty;
#endif

EXTERN_C const CLSID CLSID_ExchangeUser;

#ifdef __cplusplus

class DECLSPEC_UUID("000610C9-0000-0000-C000-000000000046")
ExchangeUser;
#endif

EXTERN_C const CLSID CLSID_ExchangeDistributionList;

#ifdef __cplusplus

class DECLSPEC_UUID("000610CA-0000-0000-C000-000000000046")
ExchangeDistributionList;
#endif

EXTERN_C const CLSID CLSID_SyncObject;

#ifdef __cplusplus

class DECLSPEC_UUID("00063084-0000-0000-C000-000000000046")
SyncObject;
#endif

EXTERN_C const CLSID CLSID_Accounts;

#ifdef __cplusplus

class DECLSPEC_UUID("000610C4-0000-0000-C000-000000000046")
Accounts;
#endif

EXTERN_C const CLSID CLSID_Stores;

#ifdef __cplusplus

class DECLSPEC_UUID("000610C6-0000-0000-C000-000000000046")
Stores;
#endif

EXTERN_C const CLSID CLSID_SelectNamesDialog;

#ifdef __cplusplus

class DECLSPEC_UUID("000610C8-0000-0000-C000-000000000046")
SelectNamesDialog;
#endif

EXTERN_C const CLSID CLSID_SharingItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061067-0000-0000-C000-000000000046")
SharingItem;
#endif

EXTERN_C const CLSID CLSID_Explorer;

#ifdef __cplusplus

class DECLSPEC_UUID("00063050-0000-0000-C000-000000000046")
Explorer;
#endif

EXTERN_C const CLSID CLSID_Inspector;

#ifdef __cplusplus

class DECLSPEC_UUID("00063058-0000-0000-C000-000000000046")
Inspector;
#endif

EXTERN_C const CLSID CLSID_TimeZones;

#ifdef __cplusplus

class DECLSPEC_UUID("000610FC-0000-0000-C000-000000000046")
TimeZones;
#endif

EXTERN_C const CLSID CLSID_OlkTimeZoneControl;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F059-0000-0000-C000-000000000046")
OlkTimeZoneControl;
#endif

EXTERN_C const CLSID CLSID_AppointmentItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061030-0000-0000-C000-000000000046")
AppointmentItem;
#endif

EXTERN_C const CLSID CLSID_MeetingItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061036-0000-0000-C000-000000000046")
MeetingItem;
#endif

EXTERN_C const CLSID CLSID_AttachmentSelection;

#ifdef __cplusplus

class DECLSPEC_UUID("000610F9-0000-0000-C000-000000000046")
AttachmentSelection;
#endif

EXTERN_C const CLSID CLSID_Folder;

#ifdef __cplusplus

class DECLSPEC_UUID("000610F7-0000-0000-C000-000000000046")
Folder;
#endif

EXTERN_C const CLSID CLSID_ColumnFormat;

#ifdef __cplusplus

class DECLSPEC_UUID("0006109E-0000-0000-C000-000000000046")
ColumnFormat;
#endif

EXTERN_C const CLSID CLSID_ViewField;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F09F-0000-0000-C000-000000000046")
ViewField;
#endif

EXTERN_C const CLSID CLSID_OrderFields;

#ifdef __cplusplus

class DECLSPEC_UUID("0006109A-0000-0000-C000-000000000046")
OrderFields;
#endif

EXTERN_C const CLSID CLSID_OrderField;

#ifdef __cplusplus

class DECLSPEC_UUID("0006109B-0000-0000-C000-000000000046")
OrderField;
#endif

EXTERN_C const CLSID CLSID_ViewFields;

#ifdef __cplusplus

class DECLSPEC_UUID("000610A1-0000-0000-C000-000000000046")
ViewFields;
#endif

EXTERN_C const CLSID CLSID_ViewFont;

#ifdef __cplusplus

class DECLSPEC_UUID("0006109D-0000-0000-C000-000000000046")
ViewFont;
#endif

EXTERN_C const CLSID CLSID_AutoFormatRules;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F0A2-0000-0000-C000-000000000046")
AutoFormatRules;
#endif

EXTERN_C const CLSID CLSID_AutoFormatRule;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F0A1-0000-0000-C000-000000000046")
AutoFormatRule;
#endif

EXTERN_C const CLSID CLSID_NavigationFolders;

#ifdef __cplusplus

class DECLSPEC_UUID("000610F1-0000-0000-C000-000000000046")
NavigationFolders;
#endif

EXTERN_C const CLSID CLSID_NavigationFolder;

#ifdef __cplusplus

class DECLSPEC_UUID("000610F2-0000-0000-C000-000000000046")
NavigationFolder;
#endif

EXTERN_C const CLSID CLSID_NavigationGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("000610F0-0000-0000-C000-000000000046")
NavigationGroup;
#endif

EXTERN_C const CLSID CLSID_FormRegion;

#ifdef __cplusplus

class DECLSPEC_UUID("0006315A-0000-0000-C000-000000000046")
FormRegion;
#endif

EXTERN_C const CLSID CLSID_MobileItem;

#ifdef __cplusplus

class DECLSPEC_UUID("000610FE-0000-0000-C000-000000000046")
MobileItem;
#endif

EXTERN_C const CLSID CLSID_TaskItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061032-0000-0000-C000-000000000046")
TaskItem;
#endif

EXTERN_C const CLSID CLSID_Application;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F03A-0000-0000-C000-000000000046")
Application;
#endif

EXTERN_C const CLSID CLSID_DistListItem;

#ifdef __cplusplus

class DECLSPEC_UUID("0006103C-0000-0000-C000-000000000046")
DistListItem;
#endif

EXTERN_C const CLSID CLSID_DocumentItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061061-0000-0000-C000-000000000046")
DocumentItem;
#endif

EXTERN_C const CLSID CLSID_Explorers;

#ifdef __cplusplus

class DECLSPEC_UUID("00063053-0000-0000-C000-000000000046")
Explorers;
#endif

EXTERN_C const CLSID CLSID_Inspectors;

#ifdef __cplusplus

class DECLSPEC_UUID("00063054-0000-0000-C000-000000000046")
Inspectors;
#endif

EXTERN_C const CLSID CLSID_Folders;

#ifdef __cplusplus

class DECLSPEC_UUID("00063051-0000-0000-C000-000000000046")
Folders;
#endif

EXTERN_C const CLSID CLSID_Items;

#ifdef __cplusplus

class DECLSPEC_UUID("00063052-0000-0000-C000-000000000046")
Items;
#endif

EXTERN_C const CLSID CLSID_JournalItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061037-0000-0000-C000-000000000046")
JournalItem;
#endif

EXTERN_C const CLSID CLSID_NameSpace;

#ifdef __cplusplus

class DECLSPEC_UUID("0006308B-0000-0000-C000-000000000046")
NameSpace;
#endif

EXTERN_C const CLSID CLSID_NoteItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061034-0000-0000-C000-000000000046")
NoteItem;
#endif

EXTERN_C const CLSID CLSID_OutlookBarGroups;

#ifdef __cplusplus

class DECLSPEC_UUID("00063056-0000-0000-C000-000000000046")
OutlookBarGroups;
#endif

EXTERN_C const CLSID CLSID_OutlookBarPane;

#ifdef __cplusplus

class DECLSPEC_UUID("00063055-0000-0000-C000-000000000046")
OutlookBarPane;
#endif

EXTERN_C const CLSID CLSID_OutlookBarShortcuts;

#ifdef __cplusplus

class DECLSPEC_UUID("00063057-0000-0000-C000-000000000046")
OutlookBarShortcuts;
#endif

EXTERN_C const CLSID CLSID_PostItem;

#ifdef __cplusplus

class DECLSPEC_UUID("0006103A-0000-0000-C000-000000000046")
PostItem;
#endif

EXTERN_C const CLSID CLSID_RemoteItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061060-0000-0000-C000-000000000046")
RemoteItem;
#endif

EXTERN_C const CLSID CLSID_ReportItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061035-0000-0000-C000-000000000046")
ReportItem;
#endif

EXTERN_C const CLSID CLSID_TaskRequestAcceptItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061052-0000-0000-C000-000000000046")
TaskRequestAcceptItem;
#endif

EXTERN_C const CLSID CLSID_TaskRequestDeclineItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061053-0000-0000-C000-000000000046")
TaskRequestDeclineItem;
#endif

EXTERN_C const CLSID CLSID_TaskRequestItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061050-0000-0000-C000-000000000046")
TaskRequestItem;
#endif

EXTERN_C const CLSID CLSID_TaskRequestUpdateItem;

#ifdef __cplusplus

class DECLSPEC_UUID("00061051-0000-0000-C000-000000000046")
TaskRequestUpdateItem;
#endif

EXTERN_C const CLSID CLSID_Results;

#ifdef __cplusplus

class DECLSPEC_UUID("00061039-0000-0000-C000-000000000046")
Results;
#endif

EXTERN_C const CLSID CLSID_Views;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F027-0000-0000-C000-000000000046")
Views;
#endif

EXTERN_C const CLSID CLSID_Reminder;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F028-0000-0000-C000-000000000046")
Reminder;
#endif

EXTERN_C const CLSID CLSID_Reminders;

#ifdef __cplusplus

class DECLSPEC_UUID("0006F029-0000-0000-C000-000000000046")
Reminders;
#endif

EXTERN_C const CLSID CLSID_StorageItem;

#ifdef __cplusplus

class DECLSPEC_UUID("000610CB-0000-0000-C000-000000000046")
StorageItem;
#endif

EXTERN_C const CLSID CLSID_NavigationPane;

#ifdef __cplusplus

class DECLSPEC_UUID("000610F3-0000-0000-C000-000000000046")
NavigationPane;
#endif

EXTERN_C const CLSID CLSID_NavigationGroups;

#ifdef __cplusplus

class DECLSPEC_UUID("000610F4-0000-0000-C000-000000000046")
NavigationGroups;
#endif

EXTERN_C const CLSID CLSID_DoNotUseMeFolder;

#ifdef __cplusplus

class DECLSPEC_UUID("000610F8-0000-0000-C000-000000000046")
DoNotUseMeFolder;
#endif

EXTERN_C const CLSID CLSID_TimelineView;

#ifdef __cplusplus

class DECLSPEC_UUID("00062001-0000-0000-C000-000000000046")
TimelineView;
#endif

EXTERN_C const CLSID CLSID_MailModule;

#ifdef __cplusplus

class DECLSPEC_UUID("000610E9-0000-0000-C000-000000000046")
MailModule;
#endif

EXTERN_C const CLSID CLSID_CalendarModule;

#ifdef __cplusplus

class DECLSPEC_UUID("000610EA-0000-0000-C000-000000000046")
CalendarModule;
#endif

EXTERN_C const CLSID CLSID_ContactsModule;

#ifdef __cplusplus

class DECLSPEC_UUID("000610EB-0000-0000-C000-000000000046")
ContactsModule;
#endif

EXTERN_C const CLSID CLSID_TasksModule;

#ifdef __cplusplus

class DECLSPEC_UUID("000610EC-0000-0000-C000-000000000046")
TasksModule;
#endif

EXTERN_C const CLSID CLSID_JournalModule;

#ifdef __cplusplus

class DECLSPEC_UUID("000610ED-0000-0000-C000-000000000046")
JournalModule;
#endif

EXTERN_C const CLSID CLSID_NotesModule;

#ifdef __cplusplus

class DECLSPEC_UUID("000610EE-0000-0000-C000-000000000046")
NotesModule;
#endif

EXTERN_C const CLSID CLSID_TableView;

#ifdef __cplusplus

class DECLSPEC_UUID("00062000-0000-0000-C000-000000000046")
TableView;
#endif

EXTERN_C const CLSID CLSID_IconView;

#ifdef __cplusplus

class DECLSPEC_UUID("00062004-0000-0000-C000-000000000046")
IconView;
#endif

EXTERN_C const CLSID CLSID_CardView;

#ifdef __cplusplus

class DECLSPEC_UUID("00062002-0000-0000-C000-000000000046")
CardView;
#endif

EXTERN_C const CLSID CLSID_CalendarView;

#ifdef __cplusplus

class DECLSPEC_UUID("00062003-0000-0000-C000-000000000046")
CalendarView;
#endif

EXTERN_C const CLSID CLSID_BusinessCardView;

#ifdef __cplusplus

class DECLSPEC_UUID("0006200B-0000-0000-C000-000000000046")
BusinessCardView;
#endif

EXTERN_C const CLSID CLSID_FormRegionStartup;

#ifdef __cplusplus

class DECLSPEC_UUID("00061059-0000-0000-C000-000000000046")
FormRegionStartup;
#endif

EXTERN_C const CLSID CLSID_TimeZone;

#ifdef __cplusplus

class DECLSPEC_UUID("000610FD-0000-0000-C000-000000000046")
TimeZone;
#endif

EXTERN_C const CLSID CLSID_SolutionsModule;

#ifdef __cplusplus

class DECLSPEC_UUID("000610FF-0000-0000-C000-000000000046")
SolutionsModule;
#endif

EXTERN_C const CLSID CLSID_Conversation;

#ifdef __cplusplus

class DECLSPEC_UUID("00061101-0000-0000-C000-000000000046")
Conversation;
#endif

EXTERN_C const CLSID CLSID_AccountSelector;

#ifdef __cplusplus

class DECLSPEC_UUID("00061103-0000-0000-C000-000000000046")
AccountSelector;
#endif

EXTERN_C const CLSID CLSID_ConversationHeader;

#ifdef __cplusplus

class DECLSPEC_UUID("00061107-0000-0000-C000-000000000046")
ConversationHeader;
#endif

EXTERN_C const CLSID CLSID_PeopleView;

#ifdef __cplusplus

class DECLSPEC_UUID("0006200C-0000-0000-C000-000000000046")
PeopleView;
#endif
#endif /* __Outlook_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


