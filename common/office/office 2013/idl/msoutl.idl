// Generated .IDL file (by the OLE/COM Object Viewer)
// 
// typelib filename: MSOUTL.OLB

[
  uuid(00062FFF-0000-0000-C000-000000000046),
  version(9.5),
  helpstring("Microsoft Outlook 15.0 Object Library"),
  helpfile("VBAOL11.CHM"),
  helpcontext(0x00501278),
  custom(DE77BA64-517C-11D1-A2DA-0000F8773CE9, 134218323),
  custom(DE77BA63-517C-11D1-A2DA-0000F8773CE9, 1348931950),
  custom(DE77BA65-517C-11D1-A2DA-0000F8773CE9, "Created by MIDL version 8.00.0595 at Sat Sep 29 08:19:09 2012"),
  custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, "Microsoft.Office.Interop.Outlook.dll")

]
library Outlook
{
    // TLib :     // TLib : Microsoft Office 15.0 Object Library : {2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}
    importlib("..\tlb\MSO.tlb");
    // TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}
    importlib("stdole2.tlb");

    // Forward declare all types defined in this typelib
    interface _IRecipientControl;
    dispinterface _DRecipientControl;
    dispinterface _DRecipientControlEvents;
    interface _IDocSiteControl;
    dispinterface _DDocSiteControl;
    dispinterface _DDocSiteControlEvents;
    interface OlkControl;
    interface _OlkTextBox;
    dispinterface OlkTextBoxEvents;
    interface _OlkLabel;
    dispinterface OlkLabelEvents;
    interface _OlkCommandButton;
    dispinterface OlkCommandButtonEvents;
    interface _OlkCheckBox;
    dispinterface OlkCheckBoxEvents;
    interface _OlkOptionButton;
    dispinterface OlkOptionButtonEvents;
    interface _OlkComboBox;
    dispinterface OlkComboBoxEvents;
    interface _OlkListBox;
    dispinterface OlkListBoxEvents;
    interface _OlkInfoBar;
    dispinterface OlkInfoBarEvents;
    interface _OlkContactPhoto;
    dispinterface OlkContactPhotoEvents;
    interface _OlkBusinessCardControl;
    dispinterface OlkBusinessCardControlEvents;
    interface _OlkPageControl;
    dispinterface OlkPageControlEvents;
    interface _OlkDateControl;
    dispinterface OlkDateControlEvents;
    interface _OlkTimeControl;
    dispinterface OlkTimeControlEvents;
    interface _OlkCategory;
    dispinterface OlkCategoryEvents;
    interface _OlkFrameHeader;
    dispinterface OlkFrameHeaderEvents;
    interface _OlkSenderPhoto;
    dispinterface OlkSenderPhotoEvents;
    interface _TimeZone;
    interface _Application;
    interface _NameSpace;
    interface Recipient;
    interface AddressEntry;
    interface AddressEntries;
    interface _ContactItem;
    interface Actions;
    interface Action;
    interface Attachments;
    interface Attachment;
    interface _PropertyAccessor;
    interface FormDescription;
    interface _Inspector;
    interface _AttachmentSelection;
    interface Selection;
    interface UserProperties;
    interface UserProperty;
    interface MAPIFolder;
    interface _Folders;
    interface _Items;
    interface _Explorer;
    interface Panes;
    interface _NavigationPane;
    interface _NavigationModule;
    interface _NavigationModules;
    interface _AccountSelector;
    interface _Account;
    interface _Store;
    interface _Rules;
    interface _Rule;
    interface _RuleActions;
    interface _RuleAction;
    interface _MoveOrCopyRuleAction;
    interface _SendRuleAction;
    interface Recipients;
    interface _AssignToCategoryRuleAction;
    interface _PlaySoundRuleAction;
    interface _MarkAsTaskRuleAction;
    interface _NewItemAlertRuleAction;
    interface _RuleConditions;
    interface _RuleCondition;
    interface _ImportanceRuleCondition;
    interface _AccountRuleCondition;
    interface _TextRuleCondition;
    interface _CategoryRuleCondition;
    interface _FormNameRuleCondition;
    interface _ToOrFromRuleCondition;
    interface _AddressRuleCondition;
    interface _SenderInAddressListRuleCondition;
    interface AddressList;
    interface _FromRssFeedRuleCondition;
    interface _Categories;
    interface _Category;
    interface View;
    interface _Views;
    interface _StorageItem;
    interface _Table;
    interface _Row;
    interface _Columns;
    interface _Column;
    interface _CalendarSharing;
    interface _MailItem;
    interface Links;
    interface Link;
    interface ItemProperties;
    interface ItemProperty;
    interface Conflicts;
    interface Conflict;
    dispinterface ItemEvents;
    dispinterface ItemEvents_10;
    interface _Conversation;
    interface _SimpleItems;
    interface _UserDefinedProperties;
    interface _UserDefinedProperty;
    interface _ExchangeUser;
    interface _ExchangeDistributionList;
    interface AddressLists;
    interface SyncObjects;
    interface _SyncObject;
    dispinterface SyncObjectEvents;
    interface _Accounts;
    dispinterface AccountsEvents;
    interface _Stores;
    dispinterface StoresEvents_12;
    interface _SelectNamesDialog;
    interface _SharingItem;
    interface _Explorers;
    dispinterface ExplorerEvents;
    dispinterface ExplorerEvents_10;
    interface _Inspectors;
    dispinterface InspectorEvents;
    dispinterface InspectorEvents_10;
    interface Search;
    interface _Results;
    interface _Reminders;
    interface _Reminder;
    interface _TimeZones;
    interface _OlkTimeZoneControl;
    dispinterface OlkTimeZoneControlEvents;
    dispinterface ApplicationEvents;
    interface PropertyPages;
    interface RecurrencePattern;
    interface Exceptions;
    interface Exception;
    interface _AppointmentItem;
    interface _MeetingItem;
    dispinterface ExplorersEvents;
    dispinterface FoldersEvents;
    dispinterface InspectorsEvents;
    dispinterface ItemsEvents;
    dispinterface NameSpaceEvents;
    interface OutlookBarGroup;
    interface _OutlookBarShortcuts;
    interface OutlookBarShortcut;
    interface _OutlookBarGroups;
    dispinterface OutlookBarGroupsEvents;
    interface _OutlookBarPane;
    interface OutlookBarStorage;
    dispinterface OutlookBarPaneEvents;
    dispinterface OutlookBarShortcutsEvents;
    interface PropertyPage;
    interface PropertyPageSite;
    interface Pages;
    dispinterface ApplicationEvents_10;
    dispinterface ApplicationEvents_11;
    dispinterface MAPIFolderEvents_12;
    dispinterface ResultsEvents;
    dispinterface _ViewsEvents;
    dispinterface ReminderCollectionEvents;
    interface _DocumentItem;
    interface _NoteItem;
    dispinterface FormRegionEvents;
    interface _ViewField;
    interface _ColumnFormat;
    interface _ViewFields;
    interface _IconView;
    interface _OrderFields;
    interface _OrderField;
    interface _CardView;
    interface _ViewFont;
    interface _AutoFormatRules;
    interface _AutoFormatRule;
    interface _TimelineView;
    interface _MailModule;
    interface _NavigationGroups;
    interface _NavigationGroup;
    interface _NavigationFolders;
    interface _NavigationFolder;
    interface _CalendarModule;
    interface _ContactsModule;
    interface _TasksModule;
    interface _JournalModule;
    interface _NotesModule;
    dispinterface NavigationPaneEvents_12;
    dispinterface NavigationGroupsEvents_12;
    interface _BusinessCardView;
    interface _FormRegionStartup;
    interface _FormRegion;
    interface _SolutionsModule;
    interface _CalendarView;
    interface _TableView;
    interface _MobileItem;
    interface _JournalItem;
    interface _PostItem;
    interface _TaskItem;
    dispinterface AccountSelectorEvents;
    interface _DistListItem;
    interface _ReportItem;
    interface _RemoteItem;
    interface _TaskRequestItem;
    interface _TaskRequestAcceptItem;
    interface _TaskRequestDeclineItem;
    interface _TaskRequestUpdateItem;
    interface _ConversationHeader;
    interface _PeopleView;

	typedef [uuid(1BA5FCB6-05E9-4721-979D-3CE2C9084479), helpcontext(0x000f4253)]
    enum {
        olMousePointerDefault = 0,
        olMousePointerArrow = 1,
        olMousePointerCross = 2,
        olMousePointerIBeam = 3,
        olMousePointerSizeNESW = 6,
        olMousePointerSizeNS = 7,
        olMousePointerSizeNWSE = 8,
        olMousePointerSizeWE = 9,
        olMousePointerUpArrow = 10,
        olMousePointerHourGlass = 11,
        olMousePointerNoDrop = 12,
        olMousePointerAppStarting = 13,
        olMousePointerHelp = 14,
        olMousePointerSizeAll = 15,
        olMousePointerCustom = 99
    } OlMousePointer;

typedef [uuid(D1788312-EDEE-4673-AE33-B3C3BC0753EA), helpcontext(0x000f4254)]
    enum {
        olScrollBarsNone = 0,
        olScrollBarsHorizontal = 1,
        olScrollBarsVertical = 2,
        olScrollBarsBoth = 3
    } OlScrollBars;


typedef [uuid(AA3E840F-7079-4AA4-91A9-6F3546DA6A95), helpcontext(0x000f4255)]
    enum {
        olBackStyleTransparent = 0,
        olBackStyleOpaque = 1
    } OlBackStyle;


typedef [uuid(0B17239E-C724-444B-ACB1-579893197A3C), helpcontext(0x000f4256)]
    enum {
        olBorderStyleNone = 0,
        olBorderStyleSingle = 1
    } OlBorderStyle;


typedef [uuid(7E29FD73-540B-4F03-A890-53C6B0AE7DD1), helpcontext(0x000f4257)]
    enum {
        olEnterFieldBehaviorSelectAll = 0,
        olEnterFieldBehaviorRecallSelection = 1
    } OlEnterFieldBehavior;


typedef [uuid(25B06F72-02C5-4AF8-8366-28C2C65CB035), helpcontext(0x000f4258)]
    enum {
        olDragBehaviorDisabled = 0,
        olDragBehaviorEnabled = 1
    } OlDragBehavior;


typedef [uuid(382F8459-84AD-4CEB-8705-A8F8E2DC15E1), helpcontext(0x000f4259)]
    enum {
        olComboBoxStyleCombo = 0,
        olComboBoxStyleList = 2
    } OlComboBoxStyle;


typedef [uuid(35A805A1-009F-4307-A6D9-3654104862B5), helpcontext(0x000f425a)]
    enum {
        olAlignmentLeft = 0,
        olAlignmentRight = 1
    } OlAlignment;


typedef [uuid(5A0FB768-AAF4-4E8C-9C57-89ACA8B6249F), helpcontext(0x000f425b)]
    enum {
        olMultiSelectSingle = 0,
        olMultiSelectMulti = 1,
        olMultiSelectExtended = 2
    } OlMultiSelect;


typedef [uuid(03FADFE8-2527-46C3-9CCD-DBBBCD05156B), helpcontext(0x000f425c)]
    enum {
        olTextAlignLeft = 1,
        olTextAlignCenter = 2,
        olTextAlignRight = 3
    } OlTextAlign;


typedef [uuid(73628D00-B812-419F-8212-3D62079E22DB), helpcontext(0x000f425d)]
    enum {
        olMatchEntryFirstLetter = 0,
        olMatchEntryComplete = 1,
        olMatchEntryNone = 2
    } OlMatchEntry;


typedef [uuid(35D15973-23ED-4504-866B-C0B5C937A058), helpcontext(0x000f425e)]
    enum {
        olPageTypePlanner = 0,
        olPageTypeTracker = 1
    } OlPageType;


typedef [uuid(4FD8B708-E730-49B5-BDD3-B807F48E5B83), helpcontext(0x000f425f)]
    enum {
        olTimeStyleTimeOnly = 0,
        olTimeStyleTimeDuration = 1,
        olTimeStyleShortDuration = 4
    } OlTimeStyle;


typedef [uuid(B791AC59-1E79-4007-A6A1-4A4FE62F8D03), helpcontext(0x000f4260)]
    enum {
        olShiftStateShiftMask = 1,
        olShiftStateCtrlMask = 2,
        olShiftStateAltMask = 4
    } OlShiftState;


typedef [uuid(0DCB2F52-1065-4FD4-BC45-1C11E6D1B279), helpcontext(0x000f4261)]
    enum {
        olMouseButtonLeft = 1,
        olMouseButtonRight = 2,
        olMouseButtonMiddle = 4
    } OlMouseButton;


typedef [uuid(0BEAB7D8-3BA8-4960-899B-096FCE2EE60F), helpcontext(0x000f4433)]
    enum {
        olPictureAlignmentLeft = 0,
        olPictureAlignmentTop = 1
    } OlPictureAlignment;


typedef [uuid(BA5537F4-8941-4E26-871E-0D53D647B9FC), helpcontext(0x000f4453)]
    enum {
        olAppointmentTimeFieldNone = 1,
        olAppointmentTimeFieldStart = 2,
        olAppointmentTimeFieldEnd = 3
    } OlAppointmentTimeField;


typedef [uuid(634EE3C4-6BCB-4BD6-8997-30C9DB02E223), helpcontext(0x000f445a)]
    enum {
        olHorizontalLayoutAlignLeft = 0,
        olHorizontalLayoutAlignCenter = 1,
        olHorizontalLayoutAlignRight = 2,
        olHorizontalLayoutGrow = 3
    } OlHorizontalLayout;


typedef [uuid(EA33F29D-6159-4E76-8A14-BCEAA808FA91), helpcontext(0x000f445b)]
    enum {
        olVerticalLayoutAlignTop = 0,
        olVerticalLayoutAlignMiddle = 1,
        olVerticalLayoutAlignBottom = 2,
        olVerticalLayoutGrow = 3
    } OlVerticalLayout;


typedef [helpcontext(0x00000c01)]
    enum {
        olApplication = 0,
        olNamespace = 1,
        olFolder = 2,
        olRecipient = 4,
        olAttachment = 5,
        olAddressList = 7,
        olAddressEntry = 8,
        olFolders = 15,
        olItems = 16,
        olRecipients = 17,
        olAttachments = 18,
        olAddressLists = 20,
        olAddressEntries = 21,
        olAppointment = 26,
        olMeetingRequest = 53,
        olMeetingCancellation = 54,
        olMeetingResponseNegative = 55,
        olMeetingResponsePositive = 56,
        olMeetingResponseTentative = 57,
        olRecurrencePattern = 28,
        olExceptions = 29,
        olException = 30,
        olAction = 32,
        olActions = 33,
        olExplorer = 34,
        olInspector = 35,
        olPages = 36,
        olFormDescription = 37,
        olUserProperties = 38,
        olUserProperty = 39,
        olContact = 40,
        olDocument = 41,
        olJournal = 42,
        olMail = 43,
        olNote = 44,
        olPost = 45,
        olReport = 46,
        olRemote = 47,
        olTask = 48,
        olTaskRequest = 49,
        olTaskRequestUpdate = 50,
        olTaskRequestAccept = 51,
        olTaskRequestDecline = 52,
        olExplorers = 60,
        olInspectors = 61,
        olPanes = 62,
        olOutlookBarPane = 63,
        olOutlookBarStorage = 64,
        olOutlookBarGroups = 65,
        olOutlookBarGroup = 66,
        olOutlookBarShortcuts = 67,
        olOutlookBarShortcut = 68,
        olDistributionList = 69,
        olPropertyPageSite = 70,
        olPropertyPages = 71,
        olSyncObject = 72,
        olSyncObjects = 73,
        olSelection = 74,
        olLink = 75,
        olLinks = 76,
        olSearch = 77,
        olResults = 78,
        olViews = 79,
        olView = 80,
        olItemProperties = 98,
        olItemProperty = 99,
        olReminders = 100,
        olReminder = 101,
        olConflict = 102,
        olConflicts = 103,
        olSharing = 104,
        olAccount = 105,
        olAccounts = 106,
        olStore = 107,
        olStores = 108,
        olSelectNamesDialog = 109,
        olExchangeUser = 110,
        olExchangeDistributionList = 111,
        olPropertyAccessor = 112,
        olStorageItem = 113,
        olRules = 114,
        olRule = 115,
        olRuleActions = 116,
        olRuleAction = 117,
        olMoveOrCopyRuleAction = 118,
        olSendRuleAction = 119,
        olTable = 120,
        olRow = 121,
        olAssignToCategoryRuleAction = 122,
        olPlaySoundRuleAction = 123,
        olMarkAsTaskRuleAction = 124,
        olNewItemAlertRuleAction = 125,
        olRuleConditions = 126,
        olRuleCondition = 127,
        olImportanceRuleCondition = 128,
        olFormRegion = 129,
        olCategoryRuleCondition = 130,
        olFormNameRuleCondition = 131,
        olFromRuleCondition = 132,
        olSenderInAddressListRuleCondition = 133,
        olTextRuleCondition = 134,
        olAccountRuleCondition = 135,
        olClassTableView = 136,
        olClassIconView = 137,
        olClassCardView = 138,
        olClassCalendarView = 139,
        olClassTimeLineView = 140,
        olViewFields = 141,
        olViewField = 142,
        olOrderField = 144,
        olOrderFields = 145,
        olViewFont = 146,
        olAutoFormatRule = 147,
        olAutoFormatRules = 148,
        olColumnFormat = 149,
        olColumns = 150,
        olCalendarSharing = 151,
        olCategory = 152,
        olCategories = 153,
        olColumn = 154,
        olClassNavigationPane = 155,
        olNavigationModules = 156,
        olNavigationModule = 157,
        olMailModule = 158,
        olCalendarModule = 159,
        olContactsModule = 160,
        olTasksModule = 161,
        olJournalModule = 162,
        olNotesModule = 163,
        olNavigationGroups = 164,
        olNavigationGroup = 165,
        olNavigationFolders = 166,
        olNavigationFolder = 167,
        olClassBusinessCardView = 168,
        olAttachmentSelection = 169,
        olAddressRuleCondition = 170,
        olUserDefinedProperty = 171,
        olUserDefinedProperties = 172,
        olFromRssFeedRuleCondition = 173,
        olClassTimeZone = 174,
        olClassTimeZones = 175,
        olMobile = 176,
        olSolutionsModule = 177,
        olConversation = 178,
        olSimpleItems = 179,
        olOutspace = 180,
        olMeetingForwardNotification = 181,
        olConversationHeader = 182,
        olClassPeopleView = 183
    } OlObjectClass;


typedef [helpcontext(0x00000bf0)]
    enum {
        olUser = 0,
        olDistList = 1,
        olForum = 2,
        olAgent = 3,
        olOrganization = 4,
        olPrivateDistList = 5,
        olRemoteUser = 6
    } OlDisplayType;


typedef [helpcontext(0x00000be8)]
    enum {
        olReply = 0,
        olReplyAll = 1,
        olForward = 2,
        olReplyFolder = 3,
        olRespond = 4
    } OlActionCopyLike;


typedef [helpcontext(0x00000be9)]
    enum {
        olOmitOriginalText = 0,
        olEmbedOriginalItem = 1,
        olIncludeOriginalText = 2,
        olIndentOriginalText = 3,
        olLinkOriginalItem = 4,
        olUserPreference = 5,
        olReplyTickOriginalText = 1000
    } OlActionReplyStyle;


typedef [helpcontext(0x00000bea)]
    enum {
        olOpen = 0,
        olSend = 1,
        olPrompt = 2
    } OlActionResponseStyle;


typedef [helpcontext(0x00000beb)]
    enum {
        olDontShow = 0,
        olMenu = 1,
        olMenuAndToolbar = 2
    } OlActionShowOn;


typedef [helpcontext(0x00000bec)]
    enum {
        olByValue = 1,
        olByReference = 4,
        olEmbeddeditem = 5,
        olOLE = 6
    } OlAttachmentType;


typedef [helpcontext(0x00000cbd)]
    enum {
        olAttachmentBlockLevelNone = 0,
        olAttachmentBlockLevelOpen = 1
    } OlAttachmentBlockLevel;


typedef [helpcontext(0x00000bf4)]
    enum {
        olDefaultRegistry = 0,
        olPersonalRegistry = 2,
        olFolderRegistry = 3,
        olOrganizationRegistry = 4
    } OlFormRegistry;


typedef [helpcontext(0x00000bf1)]
    enum {
        olEditorText = 1,
        olEditorHTML = 2,
        olEditorRTF = 3,
        olEditorWord = 4
    } OlEditorType;


typedef [helpcontext(0x00000bf7)]
    enum {
        olSave = 0,
        olDiscard = 1,
        olPromptForSave = 2
    } OlInspectorClose;


typedef [helpcontext(0x00000c12)]
    enum {
        olMaximized = 0,
        olMinimized = 1,
        olNormalWindow = 2
    } OlWindowState;


typedef [helpcontext(0x00000d98)]
    enum {
        olViewList = 0,
        olToDoBarTaskList = 1,
        olToDoBarAppointmentList = 2,
        olDailyTaskList = 3,
        olAttachmentWell = 4
    } OlSelectionLocation;


typedef [helpcontext(0x00000dca)]
    enum {
        olConversationHeaders = 1
    } OlSelectionContents;


typedef [helpcontext(0x00000bf6)]
    enum {
        olImportanceLow = 0,
        olImportanceNormal = 1,
        olImportanceHigh = 2
    } OlImportance;


typedef [helpcontext(0x00000c09)]
    enum {
        olNormal = 0,
        olPersonal = 1,
        olPrivate = 2,
        olConfidential = 3
    } OlSensitivity;


typedef [helpcontext(0x00000c11)]
    enum {
        olOutlookInternal = 0,
        olText = 1,
        olNumber = 3,
        olDateTime = 5,
        olYesNo = 6,
        olDuration = 7,
        olKeywords = 11,
        olPercent = 12,
        olCurrency = 14,
        olFormula = 18,
        olCombination = 19,
        olInteger = 20,
        olEnumeration = 21,
        olSmartFrom = 22
    } OlUserPropertyType;


typedef [helpcontext(0x00000bf8)]
    enum {
        olMailItem = 0,
        olAppointmentItem = 1,
        olContactItem = 2,
        olTaskItem = 3,
        olJournalItem = 4,
        olNoteItem = 5,
        olPostItem = 6,
        olDistributionListItem = 7,
        olMobileItemSMS = 11,
        olMobileItemMMS = 12
    } OlItemType;


typedef [helpcontext(0x00000c03)]
    enum {
        olOutlookBar = 1,
        olFolderList = 2,
        olPreview = 3,
        olNavigationPane = 4,
        olToDoBar = 5
    } OlPane;


typedef [helpcontext(0x00000c49)]
    enum {
        olModuleMail = 0,
        olModuleCalendar = 1,
        olModuleContacts = 2,
        olModuleTasks = 3,
        olModuleJournal = 4,
        olModuleNotes = 5,
        olModuleFolderList = 6,
        olModuleShortcuts = 7,
        olModuleSolutions = 8
    } OlNavigationModuleType;


typedef [helpcontext(0x00000cb0)]
    enum {
        olSearchScopeCurrentFolder = 0,
        olSearchScopeAllFolders = 1,
        olSearchScopeAllOutlookItems = 2,
        olSearchScopeSubfolders = 3,
        olSearchScopeCurrentStore = 4
    } OlSearchScope;


typedef [helpcontext(0x00000c21)]
    enum {
        olExchange = 0,
        olImap = 1,
        olPop3 = 2,
        olHttp = 3,
        olEas = 4,
        olOtherAccount = 5
    } OlAccountType;


typedef [helpcontext(0x00000ce6)]
    enum {
        olAutoDiscoverConnectionUnknown = 0,
        olAutoDiscoverConnectionExternal = 1,
        olAutoDiscoverConnectionInternal = 2,
        olAutoDiscoverConnectionInternalDomain = 3
    } OlAutoDiscoverConnectionMode;


typedef [helpcontext(0x00000c22)]
    enum {
        olPrimaryExchangeMailbox = 0,
        olExchangeMailbox = 1,
        olExchangePublicFolder = 2,
        olNotExchange = 3,
        olAdditionalExchangeMailbox = 4
    } OlExchangeStoreType;


typedef [helpcontext(0x00000c28)]
    enum {
        olRuleReceive = 0,
        olRuleSend = 1
    } OlRuleType;


typedef [helpcontext(0x00000c29)]
    enum {
        olRuleActionUnknown = 0,
        olRuleActionMoveToFolder = 1,
        olRuleActionAssignToCategory = 2,
        olRuleActionDelete = 3,
        olRuleActionDeletePermanently = 4,
        olRuleActionCopyToFolder = 5,
        olRuleActionForward = 6,
        olRuleActionForwardAsAttachment = 7,
        olRuleActionRedirect = 8,
        olRuleActionServerReply = 9,
        olRuleActionTemplate = 10,
        olRuleActionFlagForActionInDays = 11,
        olRuleActionFlagColor = 12,
        olRuleActionFlagClear = 13,
        olRuleActionImportance = 14,
        olRuleActionSensitivity = 15,
        olRuleActionPrint = 16,
        olRuleActionPlaySound = 17,
        olRuleActionStartApplication = 18,
        olRuleActionMarkRead = 19,
        olRuleActionRunScript = 20,
        olRuleActionStop = 21,
        olRuleActionCustomAction = 22,
        olRuleActionNewItemAlert = 23,
        olRuleActionDesktopAlert = 24,
        olRuleActionNotifyRead = 25,
        olRuleActionNotifyDelivery = 26,
        olRuleActionCcMessage = 27,
        olRuleActionDefer = 28,
        olRuleActionMarkAsTask = 29,
        olRuleActionClearCategories = 30
    } OlRuleActionType;


typedef [helpcontext(0x00000c2b)]
    enum {
        olMarkToday = 0,
        olMarkTomorrow = 1,
        olMarkThisWeek = 2,
        olMarkNextWeek = 3,
        olMarkNoDate = 4,
        olMarkComplete = 5
    } OlMarkInterval;


typedef [helpcontext(0x00000c2c)]
    enum {
        olConditionUnknown = 0,
        olConditionFrom = 1,
        olConditionSubject = 2,
        olConditionAccount = 3,
        olConditionOnlyToMe = 4,
        olConditionTo = 5,
        olConditionImportance = 6,
        olConditionSensitivity = 7,
        olConditionFlaggedForAction = 8,
        olConditionCc = 9,
        olConditionToOrCc = 10,
        olConditionNotTo = 11,
        olConditionSentTo = 12,
        olConditionBody = 13,
        olConditionBodyOrSubject = 14,
        olConditionMessageHeader = 15,
        olConditionRecipientAddress = 16,
        olConditionSenderAddress = 17,
        olConditionCategory = 18,
        olConditionOOF = 19,
        olConditionHasAttachment = 20,
        olConditionSizeRange = 21,
        olConditionDateRange = 22,
        olConditionFormName = 23,
        olConditionProperty = 24,
        olConditionSenderInAddressBook = 25,
        olConditionMeetingInviteOrUpdate = 26,
        olConditionLocalMachineOnly = 27,
        olConditionOtherMachine = 28,
        olConditionAnyCategory = 29,
        olConditionFromRssFeed = 30,
        olConditionFromAnyRssFeed = 31
    } OlRuleConditionType;


typedef [helpcontext(0x00000c25)]
    enum {
        olExchangeGlobalAddressList = 0,
        olExchangeContainer = 1,
        olOutlookAddressList = 2,
        olOutlookLdapAddressList = 3,
        olCustomAddressList = 4
    } OlAddressListType;


typedef [helpcontext(0x00000c4c)]
    enum {
        olSpecialFolderAllTasks = 0,
        olSpecialFolderReminders = 1
    } OlSpecialFolders;


typedef [helpcontext(0x00000bef)]
    enum {
        olFolderDeletedItems = 3,
        olFolderOutbox = 4,
        olFolderSentMail = 5,
        olFolderInbox = 6,
        olFolderCalendar = 9,
        olFolderContacts = 10,
        olFolderJournal = 11,
        olFolderNotes = 12,
        olFolderTasks = 13,
        olFolderDrafts = 16,
        olPublicFoldersAllPublicFolders = 18,
        olFolderConflicts = 19,
        olFolderSyncIssues = 20,
        olFolderLocalFailures = 21,
        olFolderServerFailures = 22,
        olFolderJunk = 23,
        olFolderRssFeeds = 25,
        olFolderToDo = 28,
        olFolderManagedEmail = 29,
        olFolderSuggestedContacts = 30
    } OlDefaultFolders;


typedef [helpcontext(0x00000c2f)]
    enum {
        olCategoryColorNone = 0,
        olCategoryColorRed = 1,
        olCategoryColorOrange = 2,
        olCategoryColorPeach = 3,
        olCategoryColorYellow = 4,
        olCategoryColorGreen = 5,
        olCategoryColorTeal = 6,
        olCategoryColorOlive = 7,
        olCategoryColorBlue = 8,
        olCategoryColorPurple = 9,
        olCategoryColorMaroon = 10,
        olCategoryColorSteel = 11,
        olCategoryColorDarkSteel = 12,
        olCategoryColorGray = 13,
        olCategoryColorDarkGray = 14,
        olCategoryColorBlack = 15,
        olCategoryColorDarkRed = 16,
        olCategoryColorDarkOrange = 17,
        olCategoryColorDarkPeach = 18,
        olCategoryColorDarkYellow = 19,
        olCategoryColorDarkGreen = 20,
        olCategoryColorDarkTeal = 21,
        olCategoryColorDarkOlive = 22,
        olCategoryColorDarkBlue = 23,
        olCategoryColorDarkPurple = 24,
        olCategoryColorDarkMaroon = 25
    } OlCategoryColor;


typedef [helpcontext(0x00000c30)]
    enum {
        olCategoryShortcutKeyNone = 0,
        olCategoryShortcutKeyCtrlF2 = 1,
        olCategoryShortcutKeyCtrlF3 = 2,
        olCategoryShortcutKeyCtrlF4 = 3,
        olCategoryShortcutKeyCtrlF5 = 4,
        olCategoryShortcutKeyCtrlF6 = 5,
        olCategoryShortcutKeyCtrlF7 = 6,
        olCategoryShortcutKeyCtrlF8 = 7,
        olCategoryShortcutKeyCtrlF9 = 8,
        olCategoryShortcutKeyCtrlF10 = 9,
        olCategoryShortcutKeyCtrlF11 = 10,
        olCategoryShortcutKeyCtrlF12 = 11
    } OlCategoryShortcutKey;


typedef [helpcontext(0x00000c1a)]
    enum {
        olNoExchange = 0,
        olOffline = 100,
        olCachedOffline = 200,
        olDisconnected = 300,
        olCachedDisconnected = 400,
        olCachedConnectedHeaders = 500,
        olCachedConnectedDrizzle = 600,
        olCachedConnectedFull = 700,
        olOnline = 800
    } OlExchangeConnectionMode;


typedef [helpcontext(0x00000c17)]
    enum {
        olViewSaveOptionThisFolderEveryone = 0,
        olViewSaveOptionThisFolderOnlyMe = 1,
        olViewSaveOptionAllFoldersOfType = 2
    } OlViewSaveOption;


typedef [helpcontext(0x00000c18)]
    enum {
        olTableView = 0,
        olCardView = 1,
        olCalendarView = 2,
        olIconView = 3,
        olTimelineView = 4,
        olBusinessCardView = 5,
        olDailyTaskListView = 6,
        olPeopleView = 7
    } OlViewType;


typedef [helpcontext(0x00000c1b)]
    enum {
        olNoItemCount = 0,
        olShowUnreadItemCount = 1,
        olShowTotalItemCount = 2
    } OlShowItemCount;


typedef [helpcontext(0x00000c27)]
    enum {
        olIdentifyBySubject = 0,
        olIdentifyByEntryID = 1,
        olIdentifyByMessageClass = 2
    } OlStorageIdentifierType;


typedef [helpcontext(0x00000c2d)]
    enum {
        olCalendarMailFormatDailySchedule = 0,
        olCalendarMailFormatEventList = 1
    } OlCalendarMailFormat;


typedef [helpcontext(0x00000bf2)]
    enum {
        olNoFlag = 0,
        olFlagComplete = 1,
        olFlagMarked = 2
    } OlFlagStatus;


typedef [helpcontext(0x00000c06)]
    enum {
        olRemoteStatusNone = 0,
        olUnMarked = 1,
        olMarkedForDownload = 2,
        olMarkedForCopy = 3,
        olMarkedForDelete = 4
    } OlRemoteStatus;


typedef [helpcontext(0x00000c14)]
    enum {
        olFormatUnspecified = 0,
        olFormatPlain = 1,
        olFormatHTML = 2,
        olFormatRichText = 3
    } OlBodyFormat;


typedef [helpcontext(0x00000c15)]
    enum {
        olHeaderOnly = 0,
        olFullItem = 1
    } OlDownloadState;


typedef [helpcontext(0x00000c19)]
    enum {
        olNoFlagIcon = 0,
        olPurpleFlagIcon = 1,
        olOrangeFlagIcon = 2,
        olGreenFlagIcon = 3,
        olYellowFlagIcon = 4,
        olBlueFlagIcon = 5,
        olRedFlagIcon = 6
    } OlFlagIcon;


typedef [helpcontext(0x00000c1d)]
    enum {
        olUnrestricted = 0,
        olDoNotForward = 1,
        olPermissionTemplate = 2
    } OlPermission;


typedef [helpcontext(0x00000c1e)]
    enum {
        olUnknown = 0,
        olWindows = 1,
        olPassport = 2
    } OlPermissionService;


typedef [helpcontext(0x00000d5c)]
    enum {
        olDoNotDelete = 0,
        olAlwaysDelete = 1,
        olAlwaysDeleteUnsupported = 2
    } OlAlwaysDeleteConversation;


typedef [helpcontext(0x00000c2e)]
    enum {
        olFreeBusyOnly = 0,
        olFreeBusyAndSubject = 1,
        olFullDetails = 2
    } OlCalendarDetail;


typedef [helpcontext(0x00000bf5)]
    enum {
        olUnspecified = 0,
        olFemale = 1,
        olMale = 2
    } OlGender;


typedef [helpcontext(0x00000bfa)]
    enum {
        olNone = 0,
        olHome = 1,
        olBusiness = 2,
        olOther = 3
    } OlMailingAddress;


typedef [helpcontext(0x00000c4e)]
    enum {
        olContactPhoneAssistant = 0,
        olContactPhoneBusiness = 1,
        olContactPhoneBusiness2 = 2,
        olContactPhoneBusinessFax = 3,
        olContactPhoneCallback = 4,
        olContactPhoneCar = 5,
        olContactPhoneCompany = 6,
        olContactPhoneHome = 7,
        olContactPhoneHome2 = 8,
        olContactPhoneHomeFax = 9,
        olContactPhoneISDN = 10,
        olContactPhoneMobile = 11,
        olContactPhoneOther = 12,
        olContactPhoneOtherFax = 13,
        olContactPhonePager = 14,
        olContactPhonePrimary = 15,
        olContactPhoneRadio = 16,
        olContactPhoneTelex = 17,
        olContactPhoneTTYTTD = 18
    } OlContactPhoneNumber;


typedef [helpcontext(0x00000c9f)]
    enum {
        olBusinessCardTypeOutlook = 0,
        olBusinessCardTypeInterConnect = 1
    } OlBusinessCardType;


typedef [helpcontext(0x00000c26)]
    enum {
        olExchangeUserAddressEntry = 0,
        olExchangeDistributionListAddressEntry = 1,
        olExchangePublicFolderAddressEntry = 2,
        olExchangeAgentAddressEntry = 3,
        olExchangeOrganizationAddressEntry = 4,
        olExchangeRemoteUserAddressEntry = 5,
        olOutlookContactAddressEntry = 10,
        olOutlookDistributionListAddressEntry = 11,
        olLdapAddressEntry = 20,
        olSmtpAddressEntry = 30,
        olOtherAddressEntry = 40
    } OlAddressEntryUserType;


typedef [helpcontext(0x00000c07)]
    enum {
        olResponseNone = 0,
        olResponseOrganized = 1,
        olResponseTentative = 2,
        olResponseAccepted = 3,
        olResponseDeclined = 4,
        olResponseNotResponded = 5
    } OlResponseStatus;


typedef [helpcontext(0x00000c10)]
    enum {
        olTrackingNone = 0,
        olTrackingDelivered = 1,
        olTrackingNotDelivered = 2,
        olTrackingNotRead = 3,
        olTrackingRecallFailure = 4,
        olTrackingRecallSuccess = 5,
        olTrackingRead = 6,
        olTrackingReplied = 7
    } OlTrackingStatus;


typedef [helpcontext(0x00000c13)]
    enum {
        olSyncStopped = 0,
        olSyncStarted = 1
    } OlSyncState;


typedef [helpcontext(0x00000c1c)]
    enum {
        olStoreDefault = 1,
        olStoreUnicode = 2,
        olStoreANSI = 3
    } OlStoreType;


typedef [helpcontext(0x00000c24)]
    enum {
        olShowNone = 0,
        olShowTo = 1,
        olShowToCc = 2,
        olShowToCcBcc = 3
    } OlRecipientSelectors;


typedef [helpcontext(0x00000c23)]
    enum {
        olDefaultMail = 1,
        olDefaultMeeting = 2,
        olDefaultSharingRequest = 4,
        olDefaultTask = 3,
        olDefaultMembers = 5,
        olDefaultDelegates = 6,
        olDefaultSingleName = 7,
        olDefaultPickRooms = 8
    } OlDefaultSelectNamesDisplayMode;


typedef [helpcontext(0x00000c4a)]
    enum {
        olProviderUnknown = 0,
        olProviderExchange = 1,
        olProviderWebCal = 2,
        olProviderPubCal = 3,
        olProviderICal = 4,
        olProviderSharePoint = 5,
        olProviderRSS = 6,
        olProviderFederate = 7
    } OlSharingProvider;


typedef [helpcontext(0x00000c4b)]
    enum {
        olSharingMsgTypeUnknown = 0,
        olSharingMsgTypeRequest = 1,
        olSharingMsgTypeInvite = 2,
        olSharingMsgTypeInviteAndRequest = 3,
        olSharingMsgTypeResponseAllow = 4,
        olSharingMsgTypeResponseDeny = 5
    } OlSharingMsgType;


typedef [helpcontext(0x00000bf3)]
    enum {
        olFolderDisplayNormal = 0,
        olFolderDisplayFolderOnly = 1,
        olFolderDisplayNoNavigation = 2
    } OlFolderDisplayMode;


typedef [helpcontext(0x00000c4d)]
    enum {
        olWeak = 0,
        olStrong = 1
    } OlReferenceType;


typedef [helpcontext(0x00000bed)]
    enum {
        olFree = 0,
        olTentative = 1,
        olBusy = 2,
        olOutOfOffice = 3,
        olWorkingElsewhere = 4
    } OlBusyStatus;


typedef [helpcontext(0x00000bee)]
    enum {
        olSunday = 1,
        olMonday = 2,
        olTuesday = 4,
        olWednesday = 8,
        olThursday = 16,
        olFriday = 32,
        olSaturday = 64
    } OlDaysOfWeek;


typedef [helpcontext(0x00000bf9)]
    enum {
        olAssociatedContact = 1
    } OlJournalRecipientType;


typedef [helpcontext(0x00000bfb)]
    enum {
        olOriginator = 0,
        olTo = 1,
        olCC = 2,
        olBCC = 3
    } OlMailRecipientType;


typedef [helpcontext(0x00000bfc)]
    enum {
        olOrganizer = 0,
        olRequired = 1,
        olOptional = 2,
        olResource = 3
    } OlMeetingRecipientType;


typedef [helpcontext(0x00000bfd)]
    enum {
        olMeetingTentative = 2,
        olMeetingAccepted = 3,
        olMeetingDeclined = 4
    } OlMeetingResponse;


typedef [helpcontext(0x00000bfe)]
    enum {
        olNonMeeting = 0,
        olMeeting = 1,
        olMeetingReceived = 3,
        olMeetingCanceled = 5,
        olMeetingReceivedAndCanceled = 7
    } OlMeetingStatus;


typedef [helpcontext(0x00000bff)]
    enum {
        olNetMeeting = 0,
        olNetShow = 1,
        olExchangeConferencing = 2
    } OlNetMeetingType;


typedef [helpcontext(0x00000c00)]
    enum {
        olBlue = 0,
        olGreen = 1,
        olPink = 2,
        olYellow = 3,
        olWhite = 4
    } OlNoteColor;


typedef [helpcontext(0x00000c02)]
    enum {
        olLargeIcon = 0,
        olSmallIcon = 1
    } OlOutlookBarViewType;


typedef [helpcontext(0x00000c04)]
    enum {
        olApptNotRecurring = 0,
        olApptMaster = 1,
        olApptOccurrence = 2,
        olApptException = 3
    } OlRecurrenceState;


typedef [helpcontext(0x00000c05)]
    enum {
        olRecursDaily = 0,
        olRecursWeekly = 1,
        olRecursMonthly = 2,
        olRecursMonthNth = 3,
        olRecursYearly = 5,
        olRecursYearNth = 6
    } OlRecurrenceType;


typedef [helpcontext(0x00000c08)]
    enum {
        olTXT = 0,
        olRTF = 1,
        olTemplate = 2,
        olMSG = 3,
        olDoc = 4,
        olHTML = 5,
        olVCard = 6,
        olVCal = 7,
        olICal = 8,
        olMSGUnicode = 9,
        olMHTML = 10
    } OlSaveAsType;


typedef [helpcontext(0x00000c0a)]
    enum {
        olSortNone = 0,
        olAscending = 1,
        olDescending = 2
    } OlSortOrder;


typedef [helpcontext(0x00000c0b)]
    enum {
        olTaskNotDelegated = 0,
        olTaskDelegationUnknown = 1,
        olTaskDelegationAccepted = 2,
        olTaskDelegationDeclined = 3
    } OlTaskDelegationState;


typedef [helpcontext(0x00000c0c)]
    enum {
        olNewTask = 0,
        olDelegatedTask = 1,
        olOwnTask = 2
    } OlTaskOwnership;


typedef [helpcontext(0x00000c0d)]
    enum {
        olUpdate = 2,
        olFinalStatus = 3
    } OlTaskRecipientType;


typedef [helpcontext(0x00000c0e)]
    enum {
        olTaskSimple = 0,
        olTaskAssign = 1,
        olTaskAccept = 2,
        olTaskDecline = 3
    } OlTaskResponse;


typedef [helpcontext(0x00000c0f)]
    enum {
        olTaskNotStarted = 0,
        olTaskInProgress = 1,
        olTaskComplete = 2,
        olTaskWaiting = 3,
        olTaskDeferred = 4
    } OlTaskStatus;


typedef [helpcontext(0x00000c16)]
    enum {
        olExcelWorkSheetItem = 8,
        olWordDocumentItem = 9,
        olPowerPointShowItem = 10
    } OlOfficeDocItemsType;


typedef [helpcontext(0x00000c1f)]
    enum {
        olFormRegionRead = 0,
        olFormRegionCompose = 1,
        olFormRegionPreview = 2
    } OlFormRegionMode;


typedef [helpcontext(0x00000c20)]
    enum {
        olFormRegionTypeSeparate = 0,
        olFormRegionTypeAdjoining = 1
    } OlFormRegionSize;


typedef [helpcontext(0x00000c2a)]
    enum {
        olRuleExecuteAllMessages = 0,
        olRuleExecuteReadMessages = 1,
        olRuleExecuteUnreadMessages = 2
    } OlRuleExecuteOption;


typedef [helpcontext(0x00000c31)]
    enum {
        olAllExpanded = 0,
        olAllCollapsed = 1,
        olLastViewed = 2
    } OlDefaultExpandCollapseSetting;


typedef [helpcontext(0x00000c32)]
    enum {
        olWidthMultiLine = 0,
        olAlwaysSingleLine = 1,
        olAlwaysMultiLine = 2
    } OlMultiLine;


typedef [helpcontext(0x00000c33)]
    enum {
        olGridLineNone = 0,
        olGridLineSmallDots = 1,
        olGridLineLargeDots = 2,
        olGridLineDashes = 3,
        olGridLineSolid = 4
    } OlGridLineStyle;


typedef [helpcontext(0x00000c34)]
    enum {
        olIconViewLarge = 0,
        olIconViewSmall = 1,
        olIconViewList = 2
    } OlIconViewType;


typedef [helpcontext(0x00000c35)]
    enum {
        olIconDoNotArrange = 0,
        olIconLineUp = 1,
        olIconAutoArrange = 2,
        olIconSortAndAutoArrange = 3
    } OlIconViewPlacement;


typedef [helpcontext(0x00000c36)]
    enum {
        olCalendarViewDay = 0,
        olCalendarViewWeek = 1,
        olCalendarViewMonth = 2,
        olCalendarViewMultiDay = 3,
        olCalendarView5DayWeek = 4
    } OlCalendarViewMode;


typedef [helpcontext(0x00000c37)]
    enum {
        olTimeScale5Minutes = 0,
        olTimeScale6Minutes = 1,
        olTimeScale10Minutes = 2,
        olTimeScale15Minutes = 3,
        olTimeScale30Minutes = 4,
        olTimeScale60Minutes = 5
    } OlDayWeekTimeScale;


typedef [helpcontext(0x00000c38)]
    enum {
        olTimelineViewDay = 0,
        olTimelineViewWeek = 1,
        olTimelineViewMonth = 2
    } OlTimelineViewMode;


typedef [helpcontext(0x00000c39)]
    enum {
        olAutoPreviewAll = 0,
        olAutoPreviewUnread = 1,
        olAutoPreviewNone = 2
    } OlAutoPreview;


typedef [helpcontext(0x00000c3a)]
    enum {
        olAutoColor = 0,
        olColorBlack = 1,
        olColorMaroon = 2,
        olColorGreen = 3,
        olColorOlive = 4,
        olColorNavy = 5,
        olColorPurple = 6,
        olColorTeal = 7,
        olColorGray = 8,
        olColorSilver = 9,
        olColorRed = 10,
        olColorLime = 11,
        olColorYellow = 12,
        olColorBlue = 13,
        olColorFuchsia = 14,
        olColorAqua = 15,
        olColorWhite = 16
    } OlColor;


typedef [helpcontext(0x00000c3b)]
    enum {
        olAlignLeft = 0,
        olAlignCenter = 1,
        olAlignRight = 2
    } OlAlign;


typedef [helpcontext(0x00000c3c)]
    enum {
        olFormatCurrencyDecimal = 1,
        olFormatCurrencyNonDecimal = 2
    } OlFormatCurrency;


typedef [helpcontext(0x00000c3d)]
    enum {
        olFormatDateTimeLongDayDateTime = 1,
        olFormatDateTimeShortDateTime = 2,
        olFormatDateTimeShortDayDateTime = 3,
        olFormatDateTimeShortDayMonthDateTime = 4,
        OlFormatDateTimeLongDayDate = 5,
        olFormatDateTimeLongDate = 6,
        olFormatDateTimeLongDateReversed = 7,
        olFormatDateTimeShortDate = 8,
        olFormatDateTimeShortDateNumOnly = 9,
        olFormatDateTimeShortDayMonth = 10,
        olFormatDateTimeShortMonthYear = 11,
        olFormatDateTimeShortMonthYearNumOnly = 12,
        olFormatDateTimeShortDayDate = 13,
        olFormatDateTimeLongTime = 15,
        olFormatDateTimeShortTime = 16,
        olFormatDateTimeBestFit = 17
    } OlFormatDateTime;


typedef [helpcontext(0x00000c3e)]
    enum {
        olFormatDurationShort = 1,
        olFormatDurationLong = 2,
        olFormatDurationShortBusiness = 3,
        olFormatDurationLongBusiness = 4
    } OlFormatDuration;


typedef [helpcontext(0x00000c3f)]
    enum {
        olFormatIntegerPlain = 1,
        olFormatIntegerComputer1 = 2,
        olFormatIntegerComputer2 = 3,
        olFormatIntegerComputer3 = 4
    } OlFormatInteger;


typedef [helpcontext(0x00000c40)]
    enum {
        olFormatKeywordsText = 1
    } OlFormatKeywords;


typedef [helpcontext(0x00000c41)]
    enum {
        olFormatNumberAllDigits = 1,
        olFormatNumberTruncated = 2,
        olFormatNumber1Decimal = 3,
        olFormatNumber2Decimal = 4,
        olFormatNumberScientific = 5,
        olFormatNumberComputer1 = 6,
        olFormatNumberComputer2 = 7,
        olFormatNumberComputer3 = 8,
        olFormatNumberRaw = 9
    } OlFormatNumber;


typedef [helpcontext(0x00000c42)]
    enum {
        olFormatPercentRounded = 1,
        olFormatPercent1Decimal = 2,
        olFormatPercent2Decimal = 3,
        olFormatPercentAllDigits = 4
    } OlFormatPercent;


typedef [helpcontext(0x00000c43)]
    enum {
        olFormatYesNoYesNo = 1,
        olFormatYesNoOnOff = 2,
        olFormatYesNoTrueFalse = 3,
        olFormatYesNoIcon = 4
    } OlFormatYesNo;


typedef [helpcontext(0x00000c44)]
    enum {
        olFormatEnumBitmap = 1,
        olFormatEnumText = 2
    } OlFormatEnumeration;


typedef [helpcontext(0x00000c45)]
    enum {
        olFormatSmartFromFromTo = 1,
        olFormatSmartFromFromOnly = 2
    } OlFormatSmartFrom;


typedef [helpcontext(0x00000c46)]
    enum {
        olItemContextMenu = 0,
        olViewContextMenu = 1,
        olFolderContextMenu = 2,
        olAttachmentContextMenu = 3,
        olStoreContextMenu = 4,
        olShortcutContextMenu = 5
    } OlContextMenu;


typedef [helpcontext(0x00000c47)]
    enum {
        olFormatTextText = 1
    } OlFormatText;


typedef [helpcontext(0x00000c48)]
    enum {
        olCustomFoldersGroup = 0,
        olMyFoldersGroup = 1,
        olPeopleFoldersGroup = 2,
        olOtherFoldersGroup = 3,
        olFavoriteFoldersGroup = 4,
        olRoomsGroup = 5,
        olReadOnlyGroup = 6
    } OlGroupType;


typedef [helpcontext(0x00000caf)]
    enum {
        olUserItems = 0,
        olHiddenItems = 1
    } OlTableContents;


typedef [helpcontext(0x00000cea)]
    enum {
        olFormRegionIconDefault = 1,
        olFormRegionIconUnread = 2,
        olFormRegionIconRead = 3,
        olFormRegionIconReplied = 4,
        olFormRegionIconForwarded = 5,
        olFormRegionIconUnsent = 6,
        olFormRegionIconSubmitted = 7,
        olFormRegionIconSigned = 8,
        olFormRegionIconEncrypted = 9,
        olFormRegionIconWindow = 10,
        olFormRegionIconPage = 11,
        olFormRegionIconRecurring = 12
    } OlFormRegionIcon;


typedef [helpcontext(0x00000d1e)]
    enum {
        olHideInDefaultModules = 0,
        olShowInDefaultModules = 1
    } OlSolutionScope;


typedef [helpcontext(0x00000d2c)]
    enum {
        olSMS = 0,
        olMMS = 1
    } OlMobileFormat;


typedef [helpcontext(0x00000db9)]
    enum {
        olPromptUser = 0,
        olCreateAppointment = 1,
        olCopyAsAccept = 2
    } OlAppointmentCopyOptions;



    [
      odl,
      uuid(D87E7E16-6897-11CE-A6C0-00AA00608FAA),
      helpcontext(0x000f4241)
    ]
    interface _IRecipientControl : IDispatch {
        [propget, helpcontext(0x000f4242)]
        HRESULT _stdcall Enabled([out, retval] char* Enabled);
        [propput, helpcontext(0x000f4242)]
        HRESULT _stdcall Enabled([in] char Enabled);
        [propget, helpcontext(0x000f4243)]
        HRESULT _stdcall BackColor([out, retval] long* BackColor);
        [propput, helpcontext(0x000f4243)]
        HRESULT _stdcall BackColor([in] long BackColor);
        [propget, helpcontext(0x000f4244)]
        HRESULT _stdcall ForeColor([out, retval] long* ForeColor);
        [propput, helpcontext(0x000f4244)]
        HRESULT _stdcall ForeColor([in] long ForeColor);
        [propget, helpcontext(0x000f4245)]
        HRESULT _stdcall ReadOnly([out, retval] char* ReadOnly);
        [propput, helpcontext(0x000f4245)]
        HRESULT _stdcall ReadOnly([in] char ReadOnly);
        [propget, helpcontext(0x000f4246)]
        HRESULT _stdcall Font([out, retval] IDispatch** Font);
        [propput, helpcontext(0x000f4246)]
        HRESULT _stdcall Font([in] IDispatch* Font);
        [propget, helpcontext(0x000f4247)]
        HRESULT _stdcall SpecialEffect([out, retval] long* Effect);
        [propput, helpcontext(0x000f4247)]
        HRESULT _stdcall SpecialEffect([in] long Effect);
    };

    [
      uuid(0006F025-0000-0000-C000-000000000046),
      helpcontext(0x000f4248)
    ]
    dispinterface _DRecipientControl {
        properties:
        methods:
            [id(0x60000000), restricted]
            void QueryInterface(
                            [in] GUID* riid, 
                            [out] void** ppvObj);
            [id(0x60000001), restricted]
            unsigned long AddRef();
            [id(0x60000002), restricted]
            unsigned long Release();
            [id(0x60010000), restricted]
            void GetTypeInfoCount([out] unsigned int* pctinfo);
            [id(0x60010001), restricted]
            void GetTypeInfo(
                            [in] unsigned int itinfo, 
                            [in] unsigned long lcid, 
                            [out] void** pptinfo);
            [id(0x60010002), restricted]
            void GetIDsOfNames(
                            [in] GUID* riid, 
                            [in] char** rgszNames, 
                            [in] unsigned int cNames, 
                            [in] unsigned long lcid, 
                            [out] long* rgdispid);
            [id(0x60010003), restricted]
            void Invoke(
                            [in] long dispidMember, 
                            [in] GUID* riid, 
                            [in] unsigned long lcid, 
                            [in] unsigned short wFlags, 
                            [in] DISPPARAMS* pdispparams, 
                            [out] VARIANT* pvarResult, 
                            [out] EXCEPINFO* pexcepinfo, 
                            [out] unsigned int* puArgErr);
            [id(0xfffffdfe), propget, helpcontext(0x000f4242)]
            char Enabled();
            [id(0xfffffdfe), propput, helpcontext(0x000f4242)]
            void Enabled([in] char rhs);
            [id(0xfffffe0b), propget, helpcontext(0x000f4243)]
            long BackColor();
            [id(0xfffffe0b), propput, helpcontext(0x000f4243)]
            void BackColor([in] long rhs);
            [id(0xfffffdff), propget, helpcontext(0x000f4244)]
            long ForeColor();
            [id(0xfffffdff), propput, helpcontext(0x000f4244)]
            void ForeColor([in] long rhs);
            [id(0x8001f008), propget, helpcontext(0x000f4245)]
            char ReadOnly();
            [id(0x8001f008), propput, helpcontext(0x000f4245)]
            void ReadOnly([in] char rhs);
            [id(0xfffffe00), propget, helpcontext(0x000f4246)]
            IDispatch* Font();
            [id(0xfffffe00), propput, helpcontext(0x000f4246)]
            void Font([in] IDispatch* rhs);
            [id(0x0000000c), propget, helpcontext(0x000f4247)]
            long SpecialEffect();
            [id(0x0000000c), propput, helpcontext(0x000f4247)]
            void SpecialEffect([in] long rhs);
    };

    [
      uuid(D87E7E17-6897-11CE-A6C0-00AA00608FAA),
      helpcontext(0x000f4249)
    ]
    dispinterface _DRecipientControlEvents {
        properties:
        methods:
    };

    [
      uuid(0006F023-0000-0000-C000-000000000046),
      helpcontext(0x000f424a),
      control
    ]
    coclass _RecipientControl {
        [default] dispinterface _DRecipientControl;
        [default, source] dispinterface _DRecipientControlEvents;
    };

    [
      odl,
      uuid(43507DD0-811D-11CE-B565-00AA00608FAA),
      helpcontext(0x000f424b)
    ]
    interface _IDocSiteControl : IDispatch {
        [propget, helpcontext(0x000f424c)]
        HRESULT _stdcall ReadOnly([out, retval] char* ReadOnly);
        [propput, helpcontext(0x000f424c)]
        HRESULT _stdcall ReadOnly([in] char ReadOnly);
        [propget, helpcontext(0x000f424d)]
        HRESULT _stdcall SuppressAttachments([out, retval] char* SuppressAttachments);
        [propput, helpcontext(0x000f424d)]
        HRESULT _stdcall SuppressAttachments([in] char SuppressAttachments);
    };

    [
      uuid(0006F026-0000-0000-C000-000000000046),
      helpcontext(0x000f424e)
    ]
    dispinterface _DDocSiteControl {
        properties:
        methods:
            [id(0x60000000), restricted]
            void QueryInterface(
                            [in] GUID* riid, 
                            [out] void** ppvObj);
            [id(0x60000001), restricted]
            unsigned long AddRef();
            [id(0x60000002), restricted]
            unsigned long Release();
            [id(0x60010000), restricted]
            void GetTypeInfoCount([out] unsigned int* pctinfo);
            [id(0x60010001), restricted]
            void GetTypeInfo(
                            [in] unsigned int itinfo, 
                            [in] unsigned long lcid, 
                            [out] void** pptinfo);
            [id(0x60010002), restricted]
            void GetIDsOfNames(
                            [in] GUID* riid, 
                            [in] char** rgszNames, 
                            [in] unsigned int cNames, 
                            [in] unsigned long lcid, 
                            [out] long* rgdispid);
            [id(0x60010003), restricted]
            void Invoke(
                            [in] long dispidMember, 
                            [in] GUID* riid, 
                            [in] unsigned long lcid, 
                            [in] unsigned short wFlags, 
                            [in] DISPPARAMS* pdispparams, 
                            [out] VARIANT* pvarResult, 
                            [out] EXCEPINFO* pexcepinfo, 
                            [out] unsigned int* puArgErr);
            [id(0x8001f008), propget, helpcontext(0x000f424c)]
            char ReadOnly();
            [id(0x8001f008), propput, helpcontext(0x000f424c)]
            void ReadOnly([in] char rhs);
            [id(0x0000fbe3), propget, helpcontext(0x000f424d)]
            char SuppressAttachments();
            [id(0x0000fbe3), propput, helpcontext(0x000f424d)]
            void SuppressAttachments([in] char rhs);
    };

    [
      uuid(50BB9B50-811D-11CE-B565-00AA00608FAA),
      helpcontext(0x000f424f)
    ]
    dispinterface _DDocSiteControlEvents {
        properties:
        methods:
    };

    [
      uuid(0006F024-0000-0000-C000-000000000046),
      helpcontext(0x000f4250),
      control
    ]
    coclass _DocSiteControl {
        [default] dispinterface _DDocSiteControl;
        [default, source] dispinterface _DDocSiteControlEvents;
    };


    


    [
      odl,
      uuid(00067366-0000-0000-C000-000000000046),
      helpcontext(0x000f443e),
      dual,
      oleautomation
    ]
    interface OlkControl : IDispatch {
        [id(0x8001f001), propget, helpcontext(0x000f4436)]
        HRESULT ItemProperty([out, retval] BSTR* ItemProperty);
        [id(0x8001f001), propput, helpcontext(0x000f4436)]
        HRESULT ItemProperty([in] BSTR ItemProperty);
        [id(0x8001f003), propget, helpcontext(0x000f4437)]
        HRESULT ControlProperty([out, retval] BSTR* ControlProperty);
        [id(0x8001f003), propput, helpcontext(0x000f4437)]
        HRESULT ControlProperty([in] BSTR ControlProperty);
        [id(0x8001f004), propget, helpcontext(0x000f4438)]
        HRESULT PossibleValues([out, retval] BSTR* PossibleValues);
        [id(0x8001f004), propput, helpcontext(0x000f4438)]
        HRESULT PossibleValues([in] BSTR PossibleValues);
        [id(0x8001f002), propget, helpcontext(0x000f445e)]
        HRESULT Format([out, retval] long* Format);
        [id(0x8001f002), propput, helpcontext(0x000f445e)]
        HRESULT Format([in] long Format);
        [id(0x8001f011), propget, helpcontext(0x000f445f)]
        HRESULT EnableAutoLayout([out, retval] VARIANT_BOOL* EnableAutoLayout);
        [id(0x8001f011), propput, helpcontext(0x000f445f)]
        HRESULT EnableAutoLayout([in] VARIANT_BOOL EnableAutoLayout);
        [id(0x8001f012), propget, helpcontext(0x000f4460)]
        HRESULT MinimumWidth([out, retval] long* MinimumWidth);
        [id(0x8001f012), propput, helpcontext(0x000f4460)]
        HRESULT MinimumWidth([in] long MinimumWidth);
        [id(0x8001f013), propget, helpcontext(0x000f443c)]
        HRESULT MinimumHeight([out, retval] long* MinimumHeight);
        [id(0x8001f013), propput, helpcontext(0x000f443c)]
        HRESULT MinimumHeight([in] long MinimumHeight);
        [id(0x8001f014), propget, helpcontext(0x000f445c)]
        HRESULT HorizontalLayout([out, retval] OlHorizontalLayout* HorizontalLayout);
        [id(0x8001f014), propput, helpcontext(0x000f445c)]
        HRESULT HorizontalLayout([in] OlHorizontalLayout HorizontalLayout);
        [id(0x8001f015), propget, helpcontext(0x000f445d)]
        HRESULT VerticalLayout([out, retval] OlVerticalLayout* VerticalLayout);
        [id(0x8001f015), propput, helpcontext(0x000f445d)]
        HRESULT VerticalLayout([in] OlVerticalLayout VerticalLayout);
    };

    [
      odl,
      uuid(000672DA-0000-0000-C000-000000000046),
      helpcontext(0x000f4262),
      dual,
      oleautomation
    ]
    interface _OlkTextBox : IDispatch {
        [id(0xfffffe0c), propget, helpcontext(0x000f4263)]
        HRESULT AutoSize([out, retval] VARIANT_BOOL* AutoSize);
        [id(0xfffffe0c), propput, helpcontext(0x000f4263)]
        HRESULT AutoSize([in] VARIANT_BOOL AutoSize);
        [id(0x000000d9), propget, helpcontext(0x000f4264)]
        HRESULT AutoTab([out, retval] VARIANT_BOOL* AutoTab);
        [id(0x000000d9), propput, helpcontext(0x000f4264)]
        HRESULT AutoTab([in] VARIANT_BOOL AutoTab);
        [id(0x000000da), propget, helpcontext(0x000f4265)]
        HRESULT AutoWordSelect([out, retval] VARIANT_BOOL* AutoWordSelect);
        [id(0x000000da), propput, helpcontext(0x000f4265)]
        HRESULT AutoWordSelect([in] VARIANT_BOOL AutoWordSelect);
        [id(0xfffffe0b), propget, helpcontext(0x000f4266)]
        HRESULT BackColor([out, retval] OLE_COLOR* BackColor);
        [id(0xfffffe0b), propput, helpcontext(0x000f4266)]
        HRESULT BackColor([in] OLE_COLOR BackColor);
        [id(0xfffffe08), propget, helpcontext(0x000f4268)]
        HRESULT BorderStyle([out, retval] OlBorderStyle* BorderStyle);
        [id(0xfffffe08), propput, helpcontext(0x000f4268)]
        HRESULT BorderStyle([in] OlBorderStyle BorderStyle);
        [id(0x000000e1), propget, helpcontext(0x000f4269)]
        HRESULT DragBehavior([out, retval] OlDragBehavior* DragBehavior);
        [id(0x000000e1), propput, helpcontext(0x000f4269)]
        HRESULT DragBehavior([in] OlDragBehavior DragBehavior);
        [id(0xfffffdfe), propget, helpcontext(0x000f426a)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f426a)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x000000e0), propget, helpcontext(0x000f426b)]
        HRESULT EnterFieldBehavior([out, retval] OlEnterFieldBehavior* EnterFieldBehavior);
        [id(0x000000e0), propput, helpcontext(0x000f426b)]
        HRESULT EnterFieldBehavior([in] OlEnterFieldBehavior EnterFieldBehavior);
        [id(0xfffffde0), propget, helpcontext(0x000f426c)]
        HRESULT EnterKeyBehavior([out, retval] VARIANT_BOOL* EnterKeyBehavior);
        [id(0xfffffde0), propput, helpcontext(0x000f426c)]
        HRESULT EnterKeyBehavior([in] VARIANT_BOOL EnterKeyBehavior);
        [id(0xfffffe00), propget, helpcontext(0x000f426d)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdff), propget, helpcontext(0x000f426e)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f426e)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0x000000cf), propget, helpcontext(0x000f426f)]
        HRESULT HideSelection([out, retval] VARIANT_BOOL* HideSelection);
        [id(0x000000cf), propput, helpcontext(0x000f426f)]
        HRESULT HideSelection([in] VARIANT_BOOL HideSelection);
        [id(0x0000025c), propget, helpcontext(0x000f4270)]
        HRESULT IntegralHeight([out, retval] VARIANT_BOOL* IntegralHeight);
        [id(0x0000025c), propput, helpcontext(0x000f4270)]
        HRESULT IntegralHeight([in] VARIANT_BOOL IntegralHeight);
        [id(0x0000000a), propget, helpcontext(0x000f4271)]
        HRESULT Locked([out, retval] VARIANT_BOOL* Locked);
        [id(0x0000000a), propput, helpcontext(0x000f4271)]
        HRESULT Locked([in] VARIANT_BOOL Locked);
        [id(0xfffffdeb), propget, helpcontext(0x000f4272)]
        HRESULT MaxLength([out, retval] long* MaxLength);
        [id(0xfffffdeb), propput, helpcontext(0x000f4272)]
        HRESULT MaxLength([in] long MaxLength);
        [id(0xfffffdf6), propget, helpcontext(0x000f4273)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f4273)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f4274)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f4274)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0xfffffde7), propget, helpcontext(0x000f4275)]
        HRESULT MultiLine([out, retval] VARIANT_BOOL* MultiLine);
        [id(0xfffffde7), propput, helpcontext(0x000f4275)]
        HRESULT MultiLine([in] VARIANT_BOOL MultiLine);
        [id(0xfffffdea), propget, helpcontext(0x000f4276)]
        HRESULT PasswordChar([out, retval] BSTR* PasswordChar);
        [id(0xfffffdea), propput, helpcontext(0x000f4276)]
        HRESULT PasswordChar([in] BSTR PasswordChar);
        [id(0xfffffde9), propget, helpcontext(0x000f4277)]
        HRESULT Scrollbars([out, retval] OlScrollBars* Scrollbars);
        [id(0xfffffde9), propput, helpcontext(0x000f4277)]
        HRESULT Scrollbars([in] OlScrollBars Scrollbars);
        [id(0x000000dc), propget, helpcontext(0x000f4278)]
        HRESULT SelectionMargin([out, retval] VARIANT_BOOL* SelectionMargin);
        [id(0x000000dc), propput, helpcontext(0x000f4278)]
        HRESULT SelectionMargin([in] VARIANT_BOOL SelectionMargin);
        [id(0xfffffddf), propget, helpcontext(0x000f4279)]
        HRESULT TabKeyBehavior([out, retval] VARIANT_BOOL* TabKeyBehavior);
        [id(0xfffffddf), propput, helpcontext(0x000f4279)]
        HRESULT TabKeyBehavior([in] VARIANT_BOOL TabKeyBehavior);
        [id(0xfffffdfb), propget, helpcontext(0x000f427a)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(0xfffffdfb), propput, helpcontext(0x000f427a)]
        HRESULT Text([in] BSTR Text);
        [id(0x00002714), propget, helpcontext(0x000f427b)]
        HRESULT TextAlign([out, retval] OlTextAlign* TextAlign);
        [id(0x00002714), propput, helpcontext(0x000f427b)]
        HRESULT TextAlign([in] OlTextAlign TextAlign);
        [id(00000000), propget, helpcontext(0x000f427c)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x000f427c)]
        HRESULT Value([in] VARIANT Value);
        [id(0xfffffde8), propget, helpcontext(0x000f427d)]
        HRESULT WordWrap([out, retval] VARIANT_BOOL* WordWrap);
        [id(0xfffffde8), propput, helpcontext(0x000f427d)]
        HRESULT WordWrap([in] VARIANT_BOOL WordWrap);
        [id(0xfffffddd), propget, helpcontext(0x000f427e)]
        HRESULT SelStart([out, retval] long* SelStart);
        [id(0xfffffddd), propput, helpcontext(0x000f427e)]
        HRESULT SelStart([in] long SelStart);
        [id(0xfffffddc), propget, helpcontext(0x000f427f)]
        HRESULT SelLength([out, retval] long* SelLength);
        [id(0xfffffddc), propput, helpcontext(0x000f427f)]
        HRESULT SelLength([in] long SelLength);
        [id(0xfffffdde), propget, helpcontext(0x000f4280)]
        HRESULT SelText([out, retval] BSTR* SelText);
        [id(0x00000015), helpcontext(0x000f4281)]
        HRESULT Cut();
        [id(0x00000016), helpcontext(0x000f4282)]
        HRESULT Copy();
        [id(0x00000018), helpcontext(0x000f4283)]
        HRESULT Paste();
        [id(0xfffffdd6), helpcontext(0x000f4284)]
        HRESULT Clear();
        [id(0x0000fc0c), propget, hidden, helpcontext(0x000f442f)]
        HRESULT EnableRichText([out, retval] VARIANT_BOOL* EnableRichText);
        [id(0x0000fc0c), propput, hidden, helpcontext(0x000f442f)]
        HRESULT EnableRichText([in] VARIANT_BOOL EnableRichText);
    };

    [
      uuid(000672E6-0000-0000-C000-000000000046),
      helpcontext(0x000f4286)
    ]
    dispinterface OlkTextBoxEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f4287)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f4288)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f4289)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f428a)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f428b)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f428c)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f428d)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f428e)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f428f)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f4290)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f4291)]
            void Change();
            [id(0x80018200), helpcontext(0x000f4292)]
            void AfterUpdate();
            [id(0x80018201), helpcontext(0x000f4293)]
            void BeforeUpdate([in] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006F068-0000-0000-C000-000000000046),
      helpstring("Outlook TextBox"),
      helpcontext(0x000f4294),
      control
    ]
    coclass OlkTextBox {
        [default] interface _OlkTextBox;
        [default, source] dispinterface OlkTextBoxEvents;
    };

    [
      odl,
      uuid(000672D9-0000-0000-C000-000000000046),
      helpcontext(0x000f4295),
      dual,
      oleautomation
    ]
    interface _OlkLabel : IDispatch {
        [id(0xfffffde1), propget, helpcontext(0x000f4296)]
        HRESULT Accelerator([out, retval] BSTR* AcceleratorChar);
        [id(0xfffffde1), propput, helpcontext(0x000f4296)]
        HRESULT Accelerator([in] BSTR AcceleratorChar);
        [id(0xfffffe0c), propget, helpcontext(0x000f4297)]
        HRESULT AutoSize([out, retval] VARIANT_BOOL* AutoSize);
        [id(0xfffffe0c), propput, helpcontext(0x000f4297)]
        HRESULT AutoSize([in] VARIANT_BOOL AutoSize);
        [id(0xfffffe0b), propget, helpcontext(0x000f4298)]
        HRESULT BackColor([out, retval] OLE_COLOR* BackColor);
        [id(0xfffffe0b), propput, helpcontext(0x000f4298)]
        HRESULT BackColor([in] OLE_COLOR BackColor);
        [id(0xfffffe0a), propget, helpcontext(0x000f4299)]
        HRESULT BackStyle([out, retval] OlBackStyle* BackStyle);
        [id(0xfffffe0a), propput, helpcontext(0x000f4299)]
        HRESULT BackStyle([in] OlBackStyle BackStyle);
        [id(0xfffffe08), propget, helpcontext(0x000f429a)]
        HRESULT BorderStyle([out, retval] OlBorderStyle* BorderStyle);
        [id(0xfffffe08), propput, helpcontext(0x000f429a)]
        HRESULT BorderStyle([in] OlBorderStyle BorderStyle);
        [id(0xfffffdfa), propget, helpcontext(0x000f429b)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0xfffffdfa), propput, helpcontext(0x000f429b)]
        HRESULT Caption([in] BSTR Caption);
        [id(0xfffffdfe), propget, helpcontext(0x000f429c)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f429c)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0xfffffe00), propget, helpcontext(0x000f429d)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdff), propget, helpcontext(0x000f429e)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f429e)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0xfffffdf6), propget, helpcontext(0x000f429f)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f429f)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f42a0)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f42a0)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0x00002714), propget, helpcontext(0x000f42a1)]
        HRESULT TextAlign([out, retval] OlTextAlign* TextAlign);
        [id(0x00002714), propput, helpcontext(0x000f42a1)]
        HRESULT TextAlign([in] OlTextAlign TextAlign);
        [id(0xfffffde8), propget, helpcontext(0x000f42a2)]
        HRESULT WordWrap([out, retval] VARIANT_BOOL* WordWrap);
        [id(0xfffffde8), propput, helpcontext(0x000f42a2)]
        HRESULT WordWrap([in] VARIANT_BOOL WordWrap);
        [id(00000000), propget, hidden, helpcontext(0x000f42a3)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, hidden, helpcontext(0x000f42a3)]
        HRESULT Value([in] VARIANT Value);
        [id(0x0000fc19), propget, helpcontext(0x000f4431)]
        HRESULT UseHeaderColor([out, retval] VARIANT_BOOL* UseHeaderColor);
        [id(0x0000fc19), propput, helpcontext(0x000f4431)]
        HRESULT UseHeaderColor([in] VARIANT_BOOL UseHeaderColor);
    };

    [
      uuid(000672E5-0000-0000-C000-000000000046),
      helpcontext(0x000f42a5)
    ]
    dispinterface OlkLabelEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f42a6)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f42a7)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f42a8)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f42a9)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f42aa)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
    };

    [
      uuid(0006F067-0000-0000-C000-000000000046),
      helpcontext(0x000f42ab),
      control
    ]
    coclass OlkLabel {
        [default] interface _OlkLabel;
        [default, source] dispinterface OlkLabelEvents;
    };

    [
      odl,
      uuid(000672DB-0000-0000-C000-000000000046),
      helpcontext(0x000f42ac),
      dual,
      oleautomation
    ]
    interface _OlkCommandButton : IDispatch {
        [id(0xfffffde1), propget, helpcontext(0x000f42ad)]
        HRESULT Accelerator([out, retval] BSTR* AcceleratorChar);
        [id(0xfffffde1), propput, helpcontext(0x000f42ad)]
        HRESULT Accelerator([in] BSTR AcceleratorChar);
        [id(0xfffffe0c), propget, helpcontext(0x000f42ae)]
        HRESULT AutoSize([out, retval] VARIANT_BOOL* AutoSize);
        [id(0xfffffe0c), propput, helpcontext(0x000f42ae)]
        HRESULT AutoSize([in] VARIANT_BOOL AutoSize);
        [id(0xfffffdfa), propget, helpcontext(0x000f42af)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0xfffffdfa), propput, helpcontext(0x000f42af)]
        HRESULT Caption([in] BSTR Caption);
        [id(0xfffffdfe), propget, helpcontext(0x000f42b0)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f42b0)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0xfffffe00), propget, helpcontext(0x000f42b1)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdf6), propget, helpcontext(0x000f42b2)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f42b2)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f42b3)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f42b3)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0xfffffde8), propget, helpcontext(0x000f42b4)]
        HRESULT WordWrap([out, retval] VARIANT_BOOL* WordWrap);
        [id(0xfffffde8), propput, helpcontext(0x000f42b4)]
        HRESULT WordWrap([in] VARIANT_BOOL WordWrap);
        [id(0x00002714), propget, helpcontext(0x000f42b5)]
        HRESULT TextAlign([out, retval] OlTextAlign* TextAlign);
        [id(0x00002714), propput, helpcontext(0x000f42b5)]
        HRESULT TextAlign([in] OlTextAlign TextAlign);
        [id(0xfffffdf5), propget, helpcontext(0x000f4430)]
        HRESULT Picture([out, retval] Picture** Picture);
        [id(0xfffffdf5), propput, helpcontext(0x000f4430)]
        HRESULT Picture([in] Picture* Picture);
        [id(0x0000001a), propget, helpcontext(0x000f4434)]
        HRESULT PictureAlignment([out, retval] OlPictureAlignment* PictureAlignment);
        [id(0x0000001a), propput, helpcontext(0x000f4434)]
        HRESULT PictureAlignment([in] OlPictureAlignment PictureAlignment);
        [id(0x0000fc20), propget, helpcontext(0x000f4435)]
        HRESULT DisplayDropArrow([out, retval] VARIANT_BOOL* DisplayDropArrow);
        [id(0x0000fc20), propput, helpcontext(0x000f4435)]
        HRESULT DisplayDropArrow([in] VARIANT_BOOL DisplayDropArrow);
    };

    [
      uuid(000672E0-0000-0000-C000-000000000046),
      helpcontext(0x000f42b7)
    ]
    dispinterface OlkCommandButtonEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f42b8)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f42b9)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f42ba)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f42bb)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f42bc)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f42bd)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f42be)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f42bf)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f42c0)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f42c1)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x80018200), helpcontext(0x000f42c2)]
            void AfterUpdate();
            [id(0x80018201), helpcontext(0x000f42c3)]
            void BeforeUpdate([in] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006F04A-0000-0000-C000-000000000046),
      helpcontext(0x000f42c4),
      control
    ]
    coclass OlkCommandButton {
        [default] interface _OlkCommandButton;
        [default, source] dispinterface OlkCommandButtonEvents;
    };

    [
      odl,
      uuid(000672DD-0000-0000-C000-000000000046),
      helpcontext(0x000f42c5),
      dual,
      oleautomation
    ]
    interface _OlkCheckBox : IDispatch {
        [id(0xfffffde1), propget, helpcontext(0x000f42c6)]
        HRESULT Accelerator([out, retval] BSTR* AcceleratorChar);
        [id(0xfffffde1), propput, helpcontext(0x000f42c6)]
        HRESULT Accelerator([in] BSTR AcceleratorChar);
        [id(0x000002c6), propget, helpcontext(0x000f42c7)]
        HRESULT Alignment([out, retval] OlAlignment* Alignment);
        [id(0x000002c6), propput, helpcontext(0x000f42c7)]
        HRESULT Alignment([in] OlAlignment Alignment);
        [id(0xfffffe0b), propget, helpcontext(0x000f42c8)]
        HRESULT BackColor([out, retval] OLE_COLOR* BackColor);
        [id(0xfffffe0b), propput, helpcontext(0x000f42c8)]
        HRESULT BackColor([in] OLE_COLOR BackColor);
        [id(0xfffffe0a), propget, helpcontext(0x000f42c9)]
        HRESULT BackStyle([out, retval] OlBackStyle* BackStyle);
        [id(0xfffffe0a), propput, helpcontext(0x000f42c9)]
        HRESULT BackStyle([in] OlBackStyle BackStyle);
        [id(0xfffffdfa), propget, helpcontext(0x000f42ca)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0xfffffdfa), propput, helpcontext(0x000f42ca)]
        HRESULT Caption([in] BSTR Caption);
        [id(0xfffffdfe), propget, helpcontext(0x000f42cb)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f42cb)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0xfffffe00), propget, helpcontext(0x000f42cc)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdff), propget, helpcontext(0x000f42cd)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f42cd)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0xfffffdf6), propget, helpcontext(0x000f42ce)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f42ce)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f42cf)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f42cf)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0x000002bc), propget, helpcontext(0x000f42d0)]
        HRESULT TripleState([out, retval] VARIANT_BOOL* TripleState);
        [id(0x000002bc), propput, helpcontext(0x000f42d0)]
        HRESULT TripleState([in] VARIANT_BOOL TripleState);
        [id(00000000), propget, helpcontext(0x000f42d1)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x000f42d1)]
        HRESULT Value([in] VARIANT Value);
        [id(0xfffffde8), propget, helpcontext(0x000f42d2)]
        HRESULT WordWrap([out, retval] VARIANT_BOOL* WordWrap);
        [id(0xfffffde8), propput, helpcontext(0x000f42d2)]
        HRESULT WordWrap([in] VARIANT_BOOL WordWrap);
    };

    [
      uuid(000672E2-0000-0000-C000-000000000046),
      helpcontext(0x000f42d4)
    ]
    dispinterface OlkCheckBoxEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f42d5)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f42d6)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f42d7)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f42d8)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f42d9)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f42da)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f42db)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f42dc)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f42dd)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f42de)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f42df)]
            void Change();
            [id(0x80018200), helpcontext(0x000f42e0)]
            void AfterUpdate();
            [id(0x80018201), helpcontext(0x000f42e1)]
            void BeforeUpdate([in] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006F04C-0000-0000-C000-000000000046),
      helpcontext(0x000f42e2),
      control
    ]
    coclass OlkCheckBox {
        [default] interface _OlkCheckBox;
        [default, source] dispinterface OlkCheckBoxEvents;
    };

    [
      odl,
      uuid(000672DC-0000-0000-C000-000000000046),
      helpcontext(0x000f42e3),
      dual,
      oleautomation
    ]
    interface _OlkOptionButton : IDispatch {
        [id(0xfffffde1), propget, helpcontext(0x000f42e4)]
        HRESULT Accelerator([out, retval] BSTR* AcceleratorChar);
        [id(0xfffffde1), propput, helpcontext(0x000f42e4)]
        HRESULT Accelerator([in] BSTR AcceleratorChar);
        [id(0x000002c6), propget, helpcontext(0x000f42e5)]
        HRESULT Alignment([out, retval] OlAlignment* Alignment);
        [id(0x000002c6), propput, helpcontext(0x000f42e5)]
        HRESULT Alignment([in] OlAlignment Alignment);
        [id(0xfffffe0b), propget, helpcontext(0x000f42e6)]
        HRESULT BackColor([out, retval] OLE_COLOR* BackColor);
        [id(0xfffffe0b), propput, helpcontext(0x000f42e6)]
        HRESULT BackColor([in] OLE_COLOR BackColor);
        [id(0xfffffe0a), propget, helpcontext(0x000f42e7)]
        HRESULT BackStyle([out, retval] OlBackStyle* BackStyle);
        [id(0xfffffe0a), propput, helpcontext(0x000f42e7)]
        HRESULT BackStyle([in] OlBackStyle BackStyle);
        [id(0xfffffdfa), propget, helpcontext(0x000f42e8)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0xfffffdfa), propput, helpcontext(0x000f42e8)]
        HRESULT Caption([in] BSTR Caption);
        [id(0xfffffdfe), propget, helpcontext(0x000f42e9)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f42e9)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0xfffffe00), propget, helpcontext(0x000f42ea)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdff), propget, helpcontext(0x000f42eb)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f42eb)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0xfffffde3), propget, helpcontext(0x000f42ec)]
        HRESULT GroupName([out, retval] BSTR* GroupName);
        [id(0xfffffde3), propput, helpcontext(0x000f42ec)]
        HRESULT GroupName([in] BSTR GroupName);
        [id(0xfffffdf6), propget, helpcontext(0x000f42ed)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f42ed)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f42ee)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f42ee)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(00000000), propget, helpcontext(0x000f42ef)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x000f42ef)]
        HRESULT Value([in] VARIANT Value);
        [id(0xfffffde8), propget, helpcontext(0x000f42f0)]
        HRESULT WordWrap([out, retval] VARIANT_BOOL* WordWrap);
        [id(0xfffffde8), propput, helpcontext(0x000f42f0)]
        HRESULT WordWrap([in] VARIANT_BOOL WordWrap);
    };

    [
      uuid(000672E1-0000-0000-C000-000000000046),
      helpcontext(0x000f42f2)
    ]
    dispinterface OlkOptionButtonEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f42f3)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f42f4)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f42f5)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f42f6)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f42f7)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f42f8)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f42f9)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f42fa)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f42fb)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f42fc)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f42fd)]
            void Change();
            [id(0x80018200), helpcontext(0x000f42fe)]
            void AfterUpdate();
            [id(0x80018201), helpcontext(0x000f42ff)]
            void BeforeUpdate([in] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006F04B-0000-0000-C000-000000000046),
      helpcontext(0x000f4300),
      control
    ]
    coclass OlkOptionButton {
        [default] interface _OlkOptionButton;
        [default, source] dispinterface OlkOptionButtonEvents;
    };

    [
      odl,
      uuid(000672DE-0000-0000-C000-000000000046),
      helpcontext(0x000f4301),
      dual,
      oleautomation
    ]
    interface _OlkComboBox : IDispatch {
        [id(0xfffffe0c), propget, helpcontext(0x000f4302)]
        HRESULT AutoSize([out, retval] VARIANT_BOOL* AutoSize);
        [id(0xfffffe0c), propput, helpcontext(0x000f4302)]
        HRESULT AutoSize([in] VARIANT_BOOL AutoSize);
        [id(0x000000d9), propget, helpcontext(0x000f4303)]
        HRESULT AutoTab([out, retval] VARIANT_BOOL* AutoTab);
        [id(0x000000d9), propput, helpcontext(0x000f4303)]
        HRESULT AutoTab([in] VARIANT_BOOL AutoTab);
        [id(0x000000da), propget, helpcontext(0x000f4304)]
        HRESULT AutoWordSelect([out, retval] VARIANT_BOOL* AutoWordSelect);
        [id(0x000000da), propput, helpcontext(0x000f4304)]
        HRESULT AutoWordSelect([in] VARIANT_BOOL AutoWordSelect);
        [id(0xfffffe0b), propget, helpcontext(0x000f4305)]
        HRESULT BackColor([out, retval] OLE_COLOR* BackColor);
        [id(0xfffffe0b), propput, helpcontext(0x000f4305)]
        HRESULT BackColor([in] OLE_COLOR BackColor);
        [id(0xfffffe08), propget, helpcontext(0x000f4306)]
        HRESULT BorderStyle([out, retval] OlBorderStyle* BorderStyle);
        [id(0xfffffe08), propput, helpcontext(0x000f4306)]
        HRESULT BorderStyle([in] OlBorderStyle BorderStyle);
        [id(0x000000e1), propget, helpcontext(0x000f4307)]
        HRESULT DragBehavior([out, retval] OlDragBehavior* DragBehavior);
        [id(0x000000e1), propput, helpcontext(0x000f4307)]
        HRESULT DragBehavior([in] OlDragBehavior DragBehavior);
        [id(0xfffffdfe), propget, helpcontext(0x000f4308)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f4308)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x000000e0), propget, helpcontext(0x000f4309)]
        HRESULT EnterFieldBehavior([out, retval] OlEnterFieldBehavior* EnterFieldBehavior);
        [id(0x000000e0), propput, helpcontext(0x000f4309)]
        HRESULT EnterFieldBehavior([in] OlEnterFieldBehavior EnterFieldBehavior);
        [id(0xfffffe00), propget, helpcontext(0x000f430a)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdff), propget, helpcontext(0x000f430b)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f430b)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0x000000cf), propget, helpcontext(0x000f430c)]
        HRESULT HideSelection([out, retval] VARIANT_BOOL* HideSelection);
        [id(0x000000cf), propput, helpcontext(0x000f430c)]
        HRESULT HideSelection([in] VARIANT_BOOL HideSelection);
        [id(0x0000000a), propget, helpcontext(0x000f430f)]
        HRESULT Locked([out, retval] VARIANT_BOOL* Locked);
        [id(0x0000000a), propput, helpcontext(0x000f430f)]
        HRESULT Locked([in] VARIANT_BOOL Locked);
        [id(0xfffffdeb), propget, helpcontext(0x000f4312)]
        HRESULT MaxLength([out, retval] long* MaxLength);
        [id(0xfffffdeb), propput, helpcontext(0x000f4312)]
        HRESULT MaxLength([in] long MaxLength);
        [id(0xfffffdf6), propget, helpcontext(0x000f4313)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f4313)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f4314)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f4314)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0x000000dc), propget, helpcontext(0x000f4315)]
        HRESULT SelectionMargin([out, retval] VARIANT_BOOL* SelectionMargin);
        [id(0x000000dc), propput, helpcontext(0x000f4315)]
        HRESULT SelectionMargin([in] VARIANT_BOOL SelectionMargin);
        [id(0x00000134), propget, helpcontext(0x000f4316)]
        HRESULT Style([out, retval] OlComboBoxStyle* Style);
        [id(0x00000134), propput, helpcontext(0x000f4316)]
        HRESULT Style([in] OlComboBoxStyle Style);
        [id(0xfffffdfb), propget, helpcontext(0x000f4317)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(0xfffffdfb), propput, helpcontext(0x000f4317)]
        HRESULT Text([in] BSTR Text);
        [id(0x00002714), propget, helpcontext(0x000f4318)]
        HRESULT TextAlign([out, retval] OlTextAlign* TextAlign);
        [id(0x00002714), propput, helpcontext(0x000f4318)]
        HRESULT TextAlign([in] OlTextAlign TextAlign);
        [id(0x00000263), propget, helpcontext(0x000f4319)]
        HRESULT TopIndex([out, retval] long* TopIndex);
        [id(0x00000263), propput, helpcontext(0x000f4319)]
        HRESULT TopIndex([in] long TopIndex);
        [id(00000000), propget, helpcontext(0x000f431a)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x000f431a)]
        HRESULT Value([in] VARIANT Value);
        [id(0xfffffdf2), propget, helpcontext(0x000f431b)]
        HRESULT ListIndex([out, retval] long* ListIndex);
        [id(0xfffffdf2), propput, helpcontext(0x000f431b)]
        HRESULT ListIndex([in] long ListIndex);
        [id(0xfffffded), propget, helpcontext(0x000f431c)]
        HRESULT ListCount([out, retval] long* ListCount);
        [id(0xfffffddd), propget, helpcontext(0x000f431d)]
        HRESULT SelStart([out, retval] long* SelStart);
        [id(0xfffffddd), propput, helpcontext(0x000f431d)]
        HRESULT SelStart([in] long SelStart);
        [id(0xfffffddc), propget, helpcontext(0x000f431e)]
        HRESULT SelLength([out, retval] long* SelLength);
        [id(0xfffffddc), propput, helpcontext(0x000f431e)]
        HRESULT SelLength([in] long SelLength);
        [id(0xfffffdde), propget, helpcontext(0x000f431f)]
        HRESULT SelText([out, retval] BSTR* SelText);
        [id(0x00002109), helpcontext(0x000f4320)]
        HRESULT GetItem(
                        [in] long Index, 
                        [out, retval] BSTR* Item);
        [id(0x0000fbde), helpcontext(0x000f4321)]
        HRESULT SetItem(
                        [in] long Index, 
                        [in] BSTR Item);
        [id(0x00000015), helpcontext(0x000f4322)]
        HRESULT Cut();
        [id(0x00000016), helpcontext(0x000f4323)]
        HRESULT Copy();
        [id(0x00000018), helpcontext(0x000f4324)]
        HRESULT Paste();
        [id(0xfffffdd6), helpcontext(0x000f4325)]
        HRESULT Clear();
        [id(0xfffffdd7), helpcontext(0x000f4326)]
        HRESULT AddItem(
                        [in] BSTR ItemText, 
                        [in, optional] VARIANT Index);
        [id(0xfffffdd5), helpcontext(0x000f4327)]
        HRESULT RemoveItem([in] long Index);
        [id(0x000003e9), helpcontext(0x000f4328)]
        HRESULT DropDown();
    };

    [
      uuid(000672E3-0000-0000-C000-000000000046),
      helpcontext(0x000f432a)
    ]
    dispinterface OlkComboBoxEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f432b)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f432c)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f432d)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f432e)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f432f)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f4330)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f4331)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f4332)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f4333)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f4334)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f4335)]
            void Change();
            [id(0x000007d2), helpcontext(0x000f4336)]
            void DropButtonClick();
            [id(0x80018200), helpcontext(0x000f4337)]
            void AfterUpdate();
            [id(0x80018201), helpcontext(0x000f4338)]
            void BeforeUpdate([in] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006F04D-0000-0000-C000-000000000046),
      helpcontext(0x000f4339),
      control
    ]
    coclass OlkComboBox {
        [default] interface _OlkComboBox;
        [default, source] dispinterface OlkComboBoxEvents;
    };

    [
      odl,
      uuid(000672DF-0000-0000-C000-000000000046),
      helpcontext(0x000f433a),
      dual,
      oleautomation
    ]
    interface _OlkListBox : IDispatch {
        [id(0xfffffe08), propget, helpcontext(0x000f433b)]
        HRESULT BorderStyle([out, retval] OlBorderStyle* BorderStyle);
        [id(0xfffffe08), propput, helpcontext(0x000f433b)]
        HRESULT BorderStyle([in] OlBorderStyle BorderStyle);
        [id(0xfffffe0b), propget, helpcontext(0x000f433c)]
        HRESULT BackColor([out, retval] OLE_COLOR* BackColor);
        [id(0xfffffe0b), propput, helpcontext(0x000f433c)]
        HRESULT BackColor([in] OLE_COLOR BackColor);
        [id(0xfffffdfe), propget, helpcontext(0x000f433d)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f433d)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0xfffffe00), propget, helpcontext(0x000f433e)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdff), propget, helpcontext(0x000f433f)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f433f)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0x0000000a), propget, helpcontext(0x000f4341)]
        HRESULT Locked([out, retval] VARIANT_BOOL* Locked);
        [id(0x0000000a), propput, helpcontext(0x000f4341)]
        HRESULT Locked([in] VARIANT_BOOL Locked);
        [id(0x000001f8), propget, helpcontext(0x000f4342)]
        HRESULT MatchEntry([out, retval] OlMatchEntry* MatchEntry);
        [id(0x000001f8), propput, helpcontext(0x000f4342)]
        HRESULT MatchEntry([in] OlMatchEntry MatchEntry);
        [id(0xfffffdf6), propget, helpcontext(0x000f4343)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f4343)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f4344)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f4344)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0xfffffdec), propget, helpcontext(0x000f4345)]
        HRESULT MultiSelect([out, retval] OlMultiSelect* MultiSelect);
        [id(0xfffffdec), propput, helpcontext(0x000f4345)]
        HRESULT MultiSelect([in] OlMultiSelect MultiSelect);
        [id(0xfffffdfb), propget, helpcontext(0x000f4346)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(0xfffffdfb), propput, helpcontext(0x000f4346)]
        HRESULT Text([in] BSTR Text);
        [id(0x00002714), propget, helpcontext(0x000f4347)]
        HRESULT TextAlign([out, retval] OlTextAlign* TextAlign);
        [id(0x00002714), propput, helpcontext(0x000f4347)]
        HRESULT TextAlign([in] OlTextAlign TextAlign);
        [id(0x00000263), propget, helpcontext(0x000f4348)]
        HRESULT TopIndex([out, retval] long* TopIndex);
        [id(0x00000263), propput, helpcontext(0x000f4348)]
        HRESULT TopIndex([in] long TopIndex);
        [id(00000000), propget, helpcontext(0x000f4349)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x000f4349)]
        HRESULT Value([in] VARIANT Value);
        [id(0xfffffdf2), propget, helpcontext(0x000f434a)]
        HRESULT ListIndex([out, retval] long* ListIndex);
        [id(0xfffffdf2), propput, helpcontext(0x000f434a)]
        HRESULT ListIndex([in] long ListIndex);
        [id(0xfffffded), propget, helpcontext(0x000f434b)]
        HRESULT ListCount([out, retval] long* ListCount);
        [id(0x00002109), helpcontext(0x000f434c)]
        HRESULT GetItem(
                        [in] long Index, 
                        [out, retval] BSTR* Item);
        [id(0x0000fbde), helpcontext(0x000f434d)]
        HRESULT SetItem(
                        [in] long Index, 
                        [in] BSTR Item);
        [id(0x0000fbdf), helpcontext(0x000f434e)]
        HRESULT GetSelected(
                        [in] long Index, 
                        [out, retval] VARIANT_BOOL* Selected);
        [id(0x0000fbe0), helpcontext(0x000f434f)]
        HRESULT SetSelected(
                        [in] long Index, 
                        [in] VARIANT_BOOL Selected);
        [id(0x00000016), helpcontext(0x000f4351)]
        HRESULT Copy();
        [id(0xfffffdd6), helpcontext(0x000f4353)]
        HRESULT Clear();
        [id(0xfffffdd7), helpcontext(0x000f4354)]
        HRESULT AddItem(
                        [in] BSTR ItemText, 
                        [in, optional] VARIANT Index);
        [id(0xfffffdd5), helpcontext(0x000f4355)]
        HRESULT RemoveItem([in] long Index);
    };

    [
      uuid(000672E4-0000-0000-C000-000000000046),
      helpcontext(0x000f4357)
    ]
    dispinterface OlkListBoxEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f4358)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f4359)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f435a)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f435b)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f435c)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f435d)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f435e)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f435f)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f4360)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f4361)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f4362)]
            void Change();
            [id(0x80018200), helpcontext(0x000f4363)]
            void AfterUpdate();
            [id(0x80018201), helpcontext(0x000f4364)]
            void BeforeUpdate([in] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006F04E-0000-0000-C000-000000000046),
      helpcontext(0x000f4365),
      control
    ]
    coclass OlkListBox {
        [default] interface _OlkListBox;
        [default, source] dispinterface OlkListBoxEvents;
    };

    [
      odl,
      uuid(000672F6-0000-0000-C000-000000000046),
      helpcontext(0x000f4366),
      dual,
      oleautomation
    ]
    interface _OlkInfoBar : IDispatch {
        [id(0xfffffdf6), propget, helpcontext(0x000f4367)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f4367)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f4368)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f4368)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
    };

    [
      uuid(000672F7-0000-0000-C000-000000000046),
      helpcontext(0x000f436a)
    ]
    dispinterface OlkInfoBarEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f436b)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f436c)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f436d)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f436e)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f436f)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
    };

    [
      uuid(0006F054-0000-0000-C000-000000000046),
      helpcontext(0x000f4370),
      control
    ]
    coclass OlkInfoBar {
        [default] interface _OlkInfoBar;
        [default, source] dispinterface OlkInfoBarEvents;
    };

    [
      odl,
      uuid(000672EB-0000-0000-C000-000000000046),
      helpcontext(0x000f4371),
      dual,
      oleautomation
    ]
    interface _OlkContactPhoto : IDispatch {
        [id(0xfffffdfe), propget, helpcontext(0x000f4372)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f4372)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0xfffffdf6), propget, helpcontext(0x000f4373)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f4373)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f4374)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f4374)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
    };

    [
      uuid(000672EC-0000-0000-C000-000000000046),
      helpcontext(0x000f4376)
    ]
    dispinterface OlkContactPhotoEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f4377)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f4378)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f4379)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f437a)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f437b)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f437c)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f437d)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f437e)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f437f)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f4380)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f4381)]
            void Change();
    };

    [
      uuid(0006F04F-0000-0000-C000-000000000046),
      helpcontext(0x000f4382),
      control
    ]
    coclass OlkContactPhoto {
        [default] interface _OlkContactPhoto;
        [default, source] dispinterface OlkContactPhotoEvents;
    };

    [
      odl,
      uuid(000672ED-0000-0000-C000-000000000046),
      helpcontext(0x000f4383),
      dual,
      oleautomation
    ]
    interface _OlkBusinessCardControl : IDispatch {
        [id(0xfffffdf6), propget, helpcontext(0x000f4384)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f4384)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f4385)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f4385)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
    };

    [
      uuid(000672EE-0000-0000-C000-000000000046),
      helpcontext(0x000f4387)
    ]
    dispinterface OlkBusinessCardControlEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f4388)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f4389)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f438a)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f438b)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f438c)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
    };

    [
      uuid(0006F050-0000-0000-C000-000000000046),
      helpcontext(0x000f438d),
      control
    ]
    coclass OlkBusinessCardControl {
        [default] interface _OlkBusinessCardControl;
        [default, source] dispinterface OlkBusinessCardControlEvents;
    };

    [
      odl,
      uuid(000672F8-0000-0000-C000-000000000046),
      helpcontext(0x000f438e),
      dual,
      oleautomation
    ]
    interface _OlkPageControl : IDispatch {
        [id(0x0000fbd1), propget, helpcontext(0x000f4390)]
        HRESULT Page([out, retval] OlPageType* PageID);
        [id(0x0000fbd1), propput, helpcontext(0x000f4390)]
        HRESULT Page([in] OlPageType PageID);
    };

    [
      uuid(000672F9-0000-0000-C000-000000000046),
      helpcontext(0x000f4392)
    ]
    dispinterface OlkPageControlEvents {
        properties:
        methods:
    };

    [
      uuid(0006F055-0000-0000-C000-000000000046),
      helpcontext(0x000f4393),
      control
    ]
    coclass OlkPageControl {
        [default] interface _OlkPageControl;
        [default, source] dispinterface OlkPageControlEvents;
    };

    [
      odl,
      uuid(000672FA-0000-0000-C000-000000000046),
      helpcontext(0x000f4394),
      dual,
      oleautomation
    ]
    interface _OlkDateControl : IDispatch {
        [id(0xfffffe0c), propget, helpcontext(0x000f4395)]
        HRESULT AutoSize([out, retval] VARIANT_BOOL* AutoSize);
        [id(0xfffffe0c), propput, helpcontext(0x000f4395)]
        HRESULT AutoSize([in] VARIANT_BOOL AutoSize);
        [id(0x000000da), propget, helpcontext(0x000f4396)]
        HRESULT AutoWordSelect([out, retval] VARIANT_BOOL* AutoWordSelect);
        [id(0x000000da), propput, helpcontext(0x000f4396)]
        HRESULT AutoWordSelect([in] VARIANT_BOOL AutoWordSelect);
        [id(0xfffffe0b), propget, helpcontext(0x000f4397)]
        HRESULT BackColor([out, retval] OLE_COLOR* BackColor);
        [id(0xfffffe0b), propput, helpcontext(0x000f4397)]
        HRESULT BackColor([in] OLE_COLOR BackColor);
        [id(0xfffffe0a), propget, helpcontext(0x000f4398)]
        HRESULT BackStyle([out, retval] OlBackStyle* BackStyle);
        [id(0xfffffe0a), propput, helpcontext(0x000f4398)]
        HRESULT BackStyle([in] OlBackStyle BackStyle);
        [id(0x0000fbd2), propget, helpcontext(0x000f4399)]
        HRESULT Date([out, retval] DATE* Date);
        [id(0x0000fbd2), propput, helpcontext(0x000f4399)]
        HRESULT Date([in] DATE Date);
        [id(0xfffffdfe), propget, helpcontext(0x000f439b)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f439b)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x000000e0), propget, helpcontext(0x000f439c)]
        HRESULT EnterFieldBehavior([out, retval] OlEnterFieldBehavior* EnterFieldBehavior);
        [id(0x000000e0), propput, helpcontext(0x000f439c)]
        HRESULT EnterFieldBehavior([in] OlEnterFieldBehavior EnterFieldBehavior);
        [id(0xfffffe00), propget, helpcontext(0x000f439d)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdff), propget, helpcontext(0x000f439e)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f439e)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0x000000cf), propget, helpcontext(0x000f439f)]
        HRESULT HideSelection([out, retval] VARIANT_BOOL* HideSelection);
        [id(0x000000cf), propput, helpcontext(0x000f439f)]
        HRESULT HideSelection([in] VARIANT_BOOL HideSelection);
        [id(0x0000000a), propget, helpcontext(0x000f43a0)]
        HRESULT Locked([out, retval] VARIANT_BOOL* Locked);
        [id(0x0000000a), propput, helpcontext(0x000f43a0)]
        HRESULT Locked([in] VARIANT_BOOL Locked);
        [id(0xfffffdf6), propget, helpcontext(0x000f43a1)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f43a1)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f43a2)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f43a2)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0x0000fbd3), propget, helpcontext(0x000f43a3)]
        HRESULT ShowNoneButton([out, retval] VARIANT_BOOL* ShowNoneButton);
        [id(0x0000fbd3), propput, helpcontext(0x000f43a3)]
        HRESULT ShowNoneButton([in] VARIANT_BOOL ShowNoneButton);
        [id(0xfffffdfb), propget, helpcontext(0x000f43a4)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(0xfffffdfb), propput, helpcontext(0x000f43a4)]
        HRESULT Text([in] BSTR Text);
        [id(0x00002714), propget, helpcontext(0x000f43a5)]
        HRESULT TextAlign([out, retval] OlTextAlign* TextAlign);
        [id(0x00002714), propput, helpcontext(0x000f43a5)]
        HRESULT TextAlign([in] OlTextAlign TextAlign);
        [id(00000000), propget, helpcontext(0x000f43a6)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x000f43a6)]
        HRESULT Value([in] VARIANT Value);
        [id(0x000003e9), helpcontext(0x000f43a7)]
        HRESULT DropDown();
    };

    [
      uuid(000672FB-0000-0000-C000-000000000046),
      helpcontext(0x000f43a9)
    ]
    dispinterface OlkDateControlEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f43aa)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f43ab)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f43ac)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f43ad)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f43ae)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f43af)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f43b0)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f43b1)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f43b2)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f43b3)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f43b4)]
            void Change();
            [id(0x000007d2), helpcontext(0x000f43b5)]
            void DropButtonClick();
            [id(0x80018200), helpcontext(0x000f43b6)]
            void AfterUpdate();
            [id(0x80018201), helpcontext(0x000f43b7)]
            void BeforeUpdate([in] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006F056-0000-0000-C000-000000000046),
      helpcontext(0x000f43b8),
      control
    ]
    coclass OlkDateControl {
        [default] interface _OlkDateControl;
        [default, source] dispinterface OlkDateControlEvents;
    };

    [
      odl,
      uuid(000672EF-0000-0000-C000-000000000046),
      helpcontext(0x000f43b9),
      dual,
      oleautomation
    ]
    interface _OlkTimeControl : IDispatch {
        [id(0xfffffe0c), propget, helpcontext(0x000f43ba)]
        HRESULT AutoSize([out, retval] VARIANT_BOOL* AutoSize);
        [id(0xfffffe0c), propput, helpcontext(0x000f43ba)]
        HRESULT AutoSize([in] VARIANT_BOOL AutoSize);
        [id(0x000000da), propget, helpcontext(0x000f43bb)]
        HRESULT AutoWordSelect([out, retval] VARIANT_BOOL* AutoWordSelect);
        [id(0x000000da), propput, helpcontext(0x000f43bb)]
        HRESULT AutoWordSelect([in] VARIANT_BOOL AutoWordSelect);
        [id(0xfffffe0b), propget, helpcontext(0x000f43bc)]
        HRESULT BackColor([out, retval] OLE_COLOR* BackColor);
        [id(0xfffffe0b), propput, helpcontext(0x000f43bc)]
        HRESULT BackColor([in] OLE_COLOR BackColor);
        [id(0xfffffe0a), propget, helpcontext(0x000f43bd)]
        HRESULT BackStyle([out, retval] OlBackStyle* BackStyle);
        [id(0xfffffe0a), propput, helpcontext(0x000f43bd)]
        HRESULT BackStyle([in] OlBackStyle BackStyle);
        [id(0xfffffdfe), propget, helpcontext(0x000f43bf)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f43bf)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x000000e0), propget, helpcontext(0x000f43c0)]
        HRESULT EnterFieldBehavior([out, retval] OlEnterFieldBehavior* EnterFieldBehavior);
        [id(0x000000e0), propput, helpcontext(0x000f43c0)]
        HRESULT EnterFieldBehavior([in] OlEnterFieldBehavior EnterFieldBehavior);
        [id(0xfffffe00), propget, helpcontext(0x000f43c1)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdff), propget, helpcontext(0x000f43c2)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f43c2)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0x000000cf), propget, helpcontext(0x000f43c3)]
        HRESULT HideSelection([out, retval] VARIANT_BOOL* HideSelection);
        [id(0x000000cf), propput, helpcontext(0x000f43c3)]
        HRESULT HideSelection([in] VARIANT_BOOL HideSelection);
        [id(0x0000000a), propget, helpcontext(0x000f43c4)]
        HRESULT Locked([out, retval] VARIANT_BOOL* Locked);
        [id(0x0000000a), propput, helpcontext(0x000f43c4)]
        HRESULT Locked([in] VARIANT_BOOL Locked);
        [id(0xfffffdf6), propget, helpcontext(0x000f43c5)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f43c5)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f43c6)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f43c6)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0x0000fbd4), propget, helpcontext(0x000f43c7)]
        HRESULT ReferenceTime([out, retval] DATE* ReferenceTime);
        [id(0x0000fbd4), propput, helpcontext(0x000f43c7)]
        HRESULT ReferenceTime([in] DATE ReferenceTime);
        [id(0x0000fbd5), propget, helpcontext(0x000f43c8)]
        HRESULT Style([out, retval] OlTimeStyle* TimeStyle);
        [id(0x0000fbd5), propput, helpcontext(0x000f43c8)]
        HRESULT Style([in] OlTimeStyle TimeStyle);
        [id(0x0000fbd2), propget, helpcontext(0x000f43c9)]
        HRESULT Time([out, retval] DATE* Time);
        [id(0x0000fbd2), propput, helpcontext(0x000f43c9)]
        HRESULT Time([in] DATE Time);
        [id(0xfffffdfb), propget, helpcontext(0x000f43ca)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(0xfffffdfb), propput, helpcontext(0x000f43ca)]
        HRESULT Text([in] BSTR Text);
        [id(0x00002714), propget, helpcontext(0x000f43cb)]
        HRESULT TextAlign([out, retval] OlTextAlign* TextAlign);
        [id(0x00002714), propput, helpcontext(0x000f43cb)]
        HRESULT TextAlign([in] OlTextAlign TextAlign);
        [id(00000000), propget, helpcontext(0x000f43cc)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x000f43cc)]
        HRESULT Value([in] VARIANT Value);
        [id(0x0000fbdb), propget, helpcontext(0x000f43cd)]
        HRESULT IntervalTime([out, retval] DATE* IntervalTime);
        [id(0x0000fbdb), propput, helpcontext(0x000f43cd)]
        HRESULT IntervalTime([in] DATE IntervalTime);
        [id(0x000003e9), helpcontext(0x000f43ce)]
        HRESULT DropDown();
    };

    [
      uuid(000672F0-0000-0000-C000-000000000046),
      helpcontext(0x000f43d0)
    ]
    dispinterface OlkTimeControlEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f43d1)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f43d2)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f43d3)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f43d4)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f43d5)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f43d6)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f43d7)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f43d8)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f43d9)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f43da)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f43db)]
            void Change();
            [id(0x000007d2), helpcontext(0x000f43dc)]
            void DropButtonClick();
            [id(0x80018200), helpcontext(0x000f43dd)]
            void AfterUpdate();
            [id(0x80018201), helpcontext(0x000f43de)]
            void BeforeUpdate([in] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006F051-0000-0000-C000-000000000046),
      helpcontext(0x000f43df),
      control
    ]
    coclass OlkTimeControl {
        [default] interface _OlkTimeControl;
        [default, source] dispinterface OlkTimeControlEvents;
    };

    [
      odl,
      uuid(000672F4-0000-0000-C000-000000000046),
      helpcontext(0x000f43f6),
      dual,
      oleautomation
    ]
    interface _OlkCategory : IDispatch {
        [id(0xfffffe0c), propget, helpcontext(0x000f43f7)]
        HRESULT AutoSize([out, retval] VARIANT_BOOL* AutoSize);
        [id(0xfffffe0c), propput, helpcontext(0x000f43f7)]
        HRESULT AutoSize([in] VARIANT_BOOL AutoSize);
        [id(0xfffffe0b), propget, helpcontext(0x000f43f8)]
        HRESULT BackColor([out, retval] OLE_COLOR* BackColor);
        [id(0xfffffe0b), propput, helpcontext(0x000f43f8)]
        HRESULT BackColor([in] OLE_COLOR BackColor);
        [id(0xfffffe0a), propget, helpcontext(0x000f43f9)]
        HRESULT BackStyle([out, retval] OlBackStyle* BackStyle);
        [id(0xfffffe0a), propput, helpcontext(0x000f43f9)]
        HRESULT BackStyle([in] OlBackStyle BackStyle);
        [id(0xfffffdfe), propget, helpcontext(0x000f43fa)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f43fa)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0xfffffdff), propget, helpcontext(0x000f43fb)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f43fb)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0xfffffdf6), propget, helpcontext(0x000f43fc)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f43fc)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f43fd)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f43fd)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
    };

    [
      uuid(000672F5-0000-0000-C000-000000000046),
      helpcontext(0x000f4400)
    ]
    dispinterface OlkCategoryEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f4401)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f4402)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f4403)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f4404)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f4405)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f4406)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f4407)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f4408)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f4409)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f440a)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f440b)]
            void Change();
    };

    [
      uuid(0006F053-0000-0000-C000-000000000046),
      helpcontext(0x000f440c),
      control
    ]
    coclass OlkCategory {
        [default] interface _OlkCategory;
        [default, source] dispinterface OlkCategoryEvents;
    };

    [
      odl,
      uuid(00067352-0000-0000-C000-000000000046),
      helpcontext(0x000f442d),
      dual,
      oleautomation
    ]
    interface _OlkFrameHeader : IDispatch {
        [id(0x000002c6), propget, helpcontext(0x000f442e)]
        HRESULT Alignment([out, retval] OlAlignment* Alignment);
        [id(0x000002c6), propput, helpcontext(0x000f442e)]
        HRESULT Alignment([in] OlAlignment Alignment);
        [id(0xfffffdfa), propget, helpcontext(0x000f440e)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0xfffffdfa), propput, helpcontext(0x000f440e)]
        HRESULT Caption([in] BSTR Caption);
        [id(0xfffffe00), propget, helpcontext(0x000f440f)]
        HRESULT Font([out, retval] Font** Font);
        [id(0xfffffdff), propget, helpcontext(0x000f4410)]
        HRESULT ForeColor([out, retval] OLE_COLOR* ForeColor);
        [id(0xfffffdff), propput, helpcontext(0x000f4410)]
        HRESULT ForeColor([in] OLE_COLOR ForeColor);
        [id(0xfffffdfe), propget, helpcontext(0x000f4411)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f4411)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0xfffffdf6), propget, helpcontext(0x000f4412)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f4412)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f4413)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f4413)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
    };

    [
      uuid(00067353-0000-0000-C000-000000000046),
      helpcontext(0x000f4416)
    ]
    dispinterface OlkFrameHeaderEvents {
        properties:
        methods:
    };

    [
      uuid(0006F057-0000-0000-C000-000000000046),
      helpcontext(0x000f441c),
      control
    ]
    coclass OlkFrameHeader {
        [default] interface _OlkFrameHeader;
        [default, source] dispinterface OlkFrameHeaderEvents;
    };

    [
      odl,
      uuid(00067355-0000-0000-C000-000000000046),
      helpcontext(0x000f441d),
      dual,
      oleautomation
    ]
    interface _OlkSenderPhoto : IDispatch {
        [id(0xfffffdfe), propget, helpcontext(0x000f441e)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f441e)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0xfffffdf6), propget, helpcontext(0x000f441f)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f441f)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f4420)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f4420)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0x0000fbe5), propget, helpcontext(0x000f4421)]
        HRESULT PreferredWidth([out, retval] long* PreferredWidth);
        [id(0x0000fbe6), propget, helpcontext(0x000f4422)]
        HRESULT PreferredHeight([out, retval] long* PreferredHeight);
    };

    [
      uuid(00067356-0000-0000-C000-000000000046),
      helpcontext(0x000f4424)
    ]
    dispinterface OlkSenderPhotoEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f4425)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f4426)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f4427)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f4428)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f4429)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x00000002), helpcontext(0x000f442c)]
            void Change();
    };

    [
      uuid(0006F058-0000-0000-C000-000000000046),
      helpcontext(0x000f4432),
      control
    ]
    coclass OlkSenderPhoto {
        [default] interface _OlkSenderPhoto;
        [default, source] dispinterface OlkSenderPhotoEvents;
    };

    [
      odl,
      uuid(000630FD-0000-0000-C000-000000000046),
      helpcontext(0x00000ccd),
      dual,
      oleautomation
    ]
    interface _TimeZone : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000cce)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000ccf)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000cd0)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000cd1)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002102), propget, helpcontext(0x00000cd2)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fc2b), propget, helpcontext(0x00000cd3)]
        HRESULT DaylightDesignation([out, retval] BSTR* DaylightDesignation);
        [id(0x0000fc2c), propget, helpcontext(0x00000cd4)]
        HRESULT StandardDesignation([out, retval] BSTR* StandardDesignation);
        [id(0x0000fc21), propget, helpcontext(0x00000cd5)]
        HRESULT Bias([out, retval] long* Bias);
        [id(0x0000fc22), propget, helpcontext(0x00000cd6)]
        HRESULT StandardBias([out, retval] long* StandardBias);
        [id(0x0000fc23), propget, helpcontext(0x00000cd7)]
        HRESULT DaylightBias([out, retval] long* DaylightBias);
        [id(0x0000fc24), propget, helpcontext(0x00000cd8)]
        HRESULT StandardDate([out, retval] DATE* StandardDate);
        [id(0x0000fc25), propget, helpcontext(0x00000cd9)]
        HRESULT DaylightDate([out, retval] DATE* DaylightDate);
        [id(0x0000fc32), propget, helpcontext(0x00000ce8)]
        HRESULT ID([out, retval] BSTR* ID);
    };

    [
      odl,
      uuid(00063001-0000-0000-C000-000000000046),
      helpcontext(0x000002c0),
      dual,
      oleautomation
    ]
    interface _Application : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000002c1)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000002c2)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000002c3)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000002c4)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000114), propget, hidden, helpcontext(0x000002c5)]
        HRESULT Assistant([out, retval] Assistant** Assistant);
        [id(0x00003001), propget, helpcontext(0x000002c6)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00000116), propget, helpcontext(0x000002c7)]
        HRESULT Version([out, retval] BSTR* Version);
        [id(0x00000111), helpcontext(0x000002c8)]
        HRESULT ActiveExplorer([out, retval] _Explorer** ActiveExplorer);
        [id(0x00000112), helpcontext(0x000002c9)]
        HRESULT ActiveInspector([out, retval] _Inspector** ActiveInspector);
        [id(0x0000010a), helpcontext(0x000002ca)]
        HRESULT CreateItem(
                        [in] OlItemType ItemType, 
                        [out, retval] IDispatch** Item);
        [id(0x0000010b), helpcontext(0x000002cb)]
        HRESULT CreateItemFromTemplate(
                        [in] BSTR TemplatePath, 
                        [in, optional] VARIANT InFolder, 
                        [out, retval] IDispatch** Item);
        [id(0x00000115), helpcontext(0x000002cc)]
        HRESULT CreateObject(
                        [in] BSTR ObjectName, 
                        [out, retval] IDispatch** Object);
        [id(0x00000110), helpcontext(0x000002cd)]
        HRESULT GetNamespace(
                        [in] BSTR Type, 
                        [out, retval] _NameSpace** NameSpace);
        [id(0x00000113), helpcontext(0x000002ce)]
        HRESULT Quit();
        [id(0x00000118), propget, helpcontext(0x000002cf)]
        HRESULT COMAddIns([out, retval] COMAddIns** COMAddIns);
        [id(0x00000119), propget, helpcontext(0x000002d0)]
        HRESULT Explorers([out, retval] _Explorers** Explorers);
        [id(0x0000011a), propget, helpcontext(0x000002d1)]
        HRESULT Inspectors([out, retval] _Inspectors** Inspectors);
        [id(0x0000011b), propget, helpcontext(0x000002d2)]
        HRESULT LanguageSettings([out, retval] LanguageSettings** LanguageSettings);
        [id(0x0000011c), propget, helpcontext(0x000002d3)]
        HRESULT ProductCode([out, retval] BSTR* ProductCode);
        [id(0x0000011d), propget, hidden, helpcontext(0x000002d4)]
        HRESULT AnswerWizard([out, retval] AnswerWizard** AnswerWizard);
        [id(0x0000011e), propget, hidden, helpcontext(0x000002d5)]
        HRESULT FeatureInstall([out, retval] MsoFeatureInstall* FeatureInstall);
        [id(0x0000011e), propput, hidden, helpcontext(0x000002d5)]
        HRESULT FeatureInstall([in] MsoFeatureInstall FeatureInstall);
        [id(0x0000011f), helpcontext(0x000002d6)]
        HRESULT ActiveWindow([out, retval] IDispatch** ActiveWindow);
        [id(0x0000fa62), helpcontext(0x000002d7)]
        HRESULT CopyFile(
                        [in] BSTR FilePath, 
                        [in] BSTR DestFolderPath, 
                        [out, retval] IDispatch** DocItem);
        [id(0x0000fa65), helpcontext(0x000002d8)]
        HRESULT AdvancedSearch(
                        [in] BSTR Scope, 
                        [in, optional] VARIANT Filter, 
                        [in, optional] VARIANT SearchSubFolders, 
                        [in, optional] VARIANT Tag, 
                        [out, retval] Search** AdvancedSearch);
        [id(0x0000fa6c), helpcontext(0x000002d9)]
        HRESULT IsSearchSynchronous(
                        [in] BSTR LookInFolders, 
                        [out, retval] VARIANT_BOOL* IsSearchSynchronous);
        [id(0x0000fa48), hidden, helpcontext(0x000002da)]
        HRESULT GetNewNickNames([in] VARIANT* pvar);
        [id(0x0000fa99), propget, helpcontext(0x000002db)]
        HRESULT Reminders([out, retval] _Reminders** Reminders);
        [id(0x0000fad6), propget, helpcontext(0x000002dc)]
        HRESULT DefaultProfileName([out, retval] BSTR* DefaultProfileName);
        [id(0x0000fbf3), propget, helpcontext(0x000002dd)]
        HRESULT IsTrusted([out, retval] VARIANT_BOOL* IsTrusted);
        [id(0x0000fbd6), helpcontext(0x000002de)]
        HRESULT GetObjectReference(
                        [in] IDispatch* Item, 
                        [in] OlReferenceType ReferenceType, 
                        [out, retval] IDispatch** NewObject);
        [id(0x0000fc08), propget, helpcontext(0x00000bd5)]
        HRESULT Assistance([out, retval] IAssistance** Assistance);
        [id(0x0000fc29), propget, helpcontext(0x00000cc6)]
        HRESULT TimeZones([out, retval] _TimeZones** TimeZones);
        [id(0x0000fc65), propget, helpcontext(0x00000d93)]
        HRESULT PickerDialog([out, retval] PickerDialog** PickerDialog);
        [id(0x0000fc7f), helpcontext(0x00000dc1)]
        HRESULT RefreshFormRegionDefinition([in] BSTR RegionName);
    };

    


    [
      odl,
      uuid(00063002-0000-0000-C000-000000000046),
      helpcontext(0x000002ef),
      dual,
      oleautomation
    ]
    interface _NameSpace : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000002f0)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000002f1)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000002f2)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000002f3)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002101), propget, helpcontext(0x000002f4)]
        HRESULT CurrentUser([out, retval] Recipient** CurrentUser);
        [id(0x00002103), propget, helpcontext(0x000002f5)]
        HRESULT Folders([out, retval] _Folders** Folders);
        [id(0x00002104), propget, helpcontext(0x000002f6)]
        HRESULT Type([out, retval] BSTR* Type);
        [id(0x0000210d), propget, helpcontext(0x000002f7)]
        HRESULT AddressLists([out, retval] AddressLists** AddressLists);
        [id(0x0000210a), helpcontext(0x000002f8)]
        HRESULT CreateRecipient(
                        [in] BSTR RecipientName, 
                        [out, retval] Recipient** Recipient);
        [id(0x0000210b), helpcontext(0x000002f9)]
        HRESULT GetDefaultFolder(
                        [in] OlDefaultFolders FolderType, 
                        [out, retval] MAPIFolder** Folder);
        [id(0x00002108), helpcontext(0x000002fa)]
        HRESULT GetFolderFromID(
                        [in] BSTR EntryIDFolder, 
                        [in, optional] VARIANT EntryIDStore, 
                        [out, retval] MAPIFolder** Folder);
        [id(0x00002109), helpcontext(0x000002fb)]
        HRESULT GetItemFromID(
                        [in] BSTR EntryIDItem, 
                        [in, optional] VARIANT EntryIDStore, 
                        [out, retval] IDispatch** Item);
        [id(0x00002107), helpcontext(0x000002fc)]
        HRESULT GetRecipientFromID(
                        [in] BSTR EntryID, 
                        [out, retval] Recipient** Recipient);
        [id(0x0000210c), helpcontext(0x000002fd)]
        HRESULT GetSharedDefaultFolder(
                        [in] Recipient* Recipient, 
                        [in] OlDefaultFolders FolderType, 
                        [out, retval] MAPIFolder** Folder);
        [id(0x00002106), helpcontext(0x000002fe)]
        HRESULT Logoff();
        [id(0x00002105), helpcontext(0x000002ff)]
        HRESULT Logon(
                        [in, optional] VARIANT Profile, 
                        [in, optional] VARIANT Password, 
                        [in, optional] VARIANT ShowDialog, 
                        [in, optional] VARIANT NewSession);
        [id(0x0000210e), helpcontext(0x00000300)]
        HRESULT PickFolder([out, retval] MAPIFolder** Folder);
        [id(0x00002117), hidden, helpcontext(0x00000301)]
        HRESULT RefreshRemoteHeaders();
        [id(0x00002118), propget, helpcontext(0x00000302)]
        HRESULT SyncObjects([out, retval] SyncObjects** SyncObjects);
        [id(0x00002119), helpcontext(0x00000303)]
        HRESULT AddStore([in] VARIANT Store);
        [id(0x0000211a), helpcontext(0x00000304)]
        HRESULT RemoveStore([in] MAPIFolder* Folder);
        [id(0x0000fa4c), propget, helpcontext(0x00000305)]
        HRESULT Offline([out, retval] VARIANT_BOOL* Offline);
        [id(0x0000fa0d), helpcontext(0x00000306)]
        HRESULT Dial([in, optional] VARIANT ContactItem);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000307)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000fac1), propget, helpcontext(0x00000308)]
        HRESULT ExchangeConnectionMode([out, retval] OlExchangeConnectionMode* ExchangeConnectionMode);
        [id(0x0000fac5), helpcontext(0x00000309)]
        HRESULT AddStoreEx(
                        [in] VARIANT Store, 
                        [in] OlStoreType Type);
        [id(0x0000fad0), propget, helpcontext(0x0000030a)]
        HRESULT Accounts([out, retval] _Accounts** Accounts);
        [id(0x0000fad5), propget, helpcontext(0x0000030b)]
        HRESULT CurrentProfileName([out, retval] BSTR* CurrentProfileName);
        [id(0x0000fad8), propget, helpcontext(0x0000030c)]
        HRESULT Stores([out, retval] _Stores** Stores);
        [id(0x0000fae1), helpcontext(0x0000030d)]
        HRESULT GetSelectNamesDialog([out, retval] _SelectNamesDialog** SelectNamesDialog);
        [id(0x0000fad7), helpcontext(0x0000030e)]
        HRESULT SendAndReceive([in] VARIANT_BOOL showProgressDialog);
        [id(0x0000faec), propget, helpcontext(0x0000030f)]
        HRESULT DefaultStore([out, retval] _Store** DefaultStore);
        [id(0x0000fb04), helpcontext(0x00000310)]
        HRESULT GetAddressEntryFromID(
                        [in] BSTR ID, 
                        [out, retval] AddressEntry** AddressEntry);
        [id(0x0000fb05), helpcontext(0x00000311)]
        HRESULT GetGlobalAddressList([out, retval] AddressList** globalAddressList);
        [id(0x0000fb06), helpcontext(0x00000312)]
        HRESULT GetStoreFromID(
                        [in] BSTR ID, 
                        [out, retval] _Store** Store);
        [id(0x0000fba5), propget, helpcontext(0x00000313)]
        HRESULT Categories([out, retval] _Categories** Categories);
        [id(0x0000fbf6), helpcontext(0x00000314)]
        HRESULT OpenSharedFolder(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Name, 
                        [in, optional] VARIANT DownloadAttachments, 
                        [in, optional] VARIANT UseTTL, 
                        [out, retval] MAPIFolder** ret);
        [id(0x0000fbf7), helpcontext(0x00000315)]
        HRESULT OpenSharedItem(
                        [in] BSTR Path, 
                        [out, retval] IDispatch** Item);
        [id(0x0000fbe4), helpcontext(0x00000316)]
        HRESULT CreateSharingItem(
                        [in] VARIANT Context, 
                        [in, optional] VARIANT Provider, 
                        [out, retval] _SharingItem** Item);
        [id(0x0000fc05), propget, helpcontext(0x00000317)]
        HRESULT ExchangeMailboxServerName([out, retval] BSTR* ExchangeMailboxServerName);
        [id(0x0000fc04), propget, helpcontext(0x00000318)]
        HRESULT ExchangeMailboxServerVersion([out, retval] BSTR* ExchangeMailboxServerVersion);
        [id(0x0000fbfc), helpcontext(0x0000031a)]
        HRESULT CompareEntryIDs(
                        [in] BSTR FirstEntryID, 
                        [in] BSTR SecondEntryID, 
                        [out, retval] VARIANT_BOOL* Result);
        [id(0x0000fc03), propget, helpcontext(0x00000cbf)]
        HRESULT AutoDiscoverXml([out, retval] BSTR* AutoDiscoverXml);
        [id(0x0000fc2e), propget, helpcontext(0x00000ce7)]
        HRESULT AutoDiscoverConnectionMode([out, retval] OlAutoDiscoverConnectionMode* AutoDiscoverConnectionMode);
        [id(0x0000fc85), helpcontext(0x00000dd0)]
        HRESULT CreateContactCard(
                        [in] AddressEntry* AddressEntry, 
                        [out, retval] ContactCard** Card);
    };

    [
      odl,
      uuid(00063045-0000-0000-C000-000000000046),
      helpcontext(0x00000923),
      dual,
      oleautomation
    ]
    interface Recipient : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000924)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000925)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000926)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000006d), propget, helpcontext(0x00000927)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003003), propget, helpcontext(0x00000928)]
        HRESULT Address([out, retval] BSTR* Address);
        [id(0x00000079), propget, helpcontext(0x00000929)]
        HRESULT AddressEntry([out, retval] AddressEntry** AddressEntry);
        [id(0x00000079), propputref, helpcontext(0x00000929)]
        HRESULT AddressEntry([in] AddressEntry* AddressEntry);
        [id(0x0000006a), propget, helpcontext(0x0000092a)]
        HRESULT AutoResponse([out, retval] BSTR* AutoResponse);
        [id(0x0000006a), propput, helpcontext(0x0000092a)]
        HRESULT AutoResponse([in] BSTR AutoResponse);
        [id(0x00003900), propget, helpcontext(0x0000092b)]
        HRESULT DisplayType([out, retval] OlDisplayType* DisplayType);
        [id(0x0000f01e), propget, helpcontext(0x0000092c)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000005b), propget, helpcontext(0x0000092d)]
        HRESULT Index([out, retval] long* Index);
        [id(0x00000066), propget, helpcontext(0x0000092e)]
        HRESULT MeetingResponseStatus([out, retval] OlResponseStatus* MeetingResponseStatus);
        [id(0x00003001), propget, helpcontext(0x0000092f)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00000064), propget, helpcontext(0x00000930)]
        HRESULT Resolved([out, retval] VARIANT_BOOL* Resolved);
        [id(0x00000076), propget, helpcontext(0x00000931)]
        HRESULT TrackingStatus([out, retval] OlTrackingStatus* TrackingStatus);
        [id(0x00000076), propput, helpcontext(0x00000931)]
        HRESULT TrackingStatus([in] OlTrackingStatus TrackingStatus);
        [id(0x00000077), propget, helpcontext(0x00000932)]
        HRESULT TrackingStatusTime([out, retval] DATE* TrackingStatusTime);
        [id(0x00000077), propput, helpcontext(0x00000932)]
        HRESULT TrackingStatusTime([in] DATE TrackingStatusTime);
        [id(0x00000c15), propget, helpcontext(0x00000933)]
        HRESULT Type([out, retval] long* Type);
        [id(0x00000c15), propput, helpcontext(0x00000933)]
        HRESULT Type([in] long Type);
        [id(0x0000006e), helpcontext(0x00000934)]
        HRESULT Delete();
        [id(0x0000006f), helpcontext(0x00000935)]
        HRESULT FreeBusy(
                        [in] DATE Start, 
                        [in] long MinPerChar, 
                        [in, optional] VARIANT CompleteFormat, 
                        [out, retval] BSTR* FreeBusyInfo);
        [id(0x00000071), helpcontext(0x00000936)]
        HRESULT Resolve([out, retval] VARIANT_BOOL* Success);
        [id(0x0000fafd), propget, helpcontext(0x00000937)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc74), propget, helpcontext(0x00000d94)]
        HRESULT Sendable([out, retval] VARIANT_BOOL* Sendable);
        [id(0x0000fc74), propput, helpcontext(0x00000d94)]
        HRESULT Sendable([in] VARIANT_BOOL Sendable);
    };

    [
      odl,
      uuid(0006304B-0000-0000-C000-000000000046),
      helpcontext(0x000007f5),
      dual,
      oleautomation
    ]
    interface AddressEntry : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000007f6)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000007f7)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000007f8)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000007f9)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003003), propget, helpcontext(0x000007fa)]
        HRESULT Address([out, retval] BSTR* Address);
        [id(0x00003003), propput, helpcontext(0x000007fa)]
        HRESULT Address([in] BSTR Address);
        [id(0x00003900), propget, helpcontext(0x000007fb)]
        HRESULT DisplayType([out, retval] OlDisplayType* DisplayType);
        [id(0x0000f01e), propget, helpcontext(0x000007fc)]
        HRESULT ID([out, retval] BSTR* ID);
        [id(0x00000303), propget, hidden, helpcontext(0x000007fd)]
        HRESULT Manager([out, retval] AddressEntry** Manager);
        [id(0x0000f100), propget, hidden, helpcontext(0x000007fe)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000f100), propput, hidden, helpcontext(0x000007fe)]
        HRESULT MAPIOBJECT([in] IUnknown* MAPIOBJECT);
        [id(0x00000304), propget, hidden, helpcontext(0x000007ff)]
        HRESULT Members([out, retval] AddressEntries** Members);
        [id(0x00003001), propget, helpcontext(0x00000800)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00003001), propput, helpcontext(0x00000800)]
        HRESULT Name([in] BSTR Name);
        [id(0x00003002), propget, helpcontext(0x00000801)]
        HRESULT Type([out, retval] BSTR* Type);
        [id(0x00003002), propput, helpcontext(0x00000801)]
        HRESULT Type([in] BSTR Type);
        [id(0x00000302), helpcontext(0x00000802)]
        HRESULT Delete();
        [id(0x00000301), helpcontext(0x00000803)]
        HRESULT Details([in, optional] VARIANT HWnd);
        [id(0x00000306), helpcontext(0x00000804)]
        HRESULT GetFreeBusy(
                        [in] DATE Start, 
                        [in] long MinPerChar, 
                        [in, optional] VARIANT CompleteFormat, 
                        [out, retval] BSTR* FreeBusyInfo);
        [id(0x00000300), helpcontext(0x00000805)]
        HRESULT Update(
                        [in, optional] VARIANT MakePermanent, 
                        [in, optional] VARIANT Refresh);
        [id(0x00000307), hidden, helpcontext(0x00000806)]
        HRESULT UpdateFreeBusy();
        [id(0x0000faf0), helpcontext(0x00000807)]
        HRESULT GetContact([out, retval] _ContactItem** ret);
        [id(0x0000faf1), helpcontext(0x00000808)]
        HRESULT GetExchangeUser([out, retval] _ExchangeUser** ret);
        [id(0x0000faf2), propget, helpcontext(0x00000809)]
        HRESULT AddressEntryUserType([out, retval] OlAddressEntryUserType* AddressEntryUserType);
        [id(0x0000faef), helpcontext(0x0000080a)]
        HRESULT GetExchangeDistributionList([out, retval] _ExchangeDistributionList** ret);
        [id(0x0000fafd), propget, helpcontext(0x0000080b)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
    };

    


    [
      odl,
      uuid(0006304A-0000-0000-C000-000000000046),
      helpcontext(0x00000018),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface AddressEntries : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000019)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000001a)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000001b)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000001c)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000001d)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000001e),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] AddressEntry** Item);
        [id(0x0000005a), propget, hidden, helpcontext(0x0000001f)]
        HRESULT RawTable([out, retval] IUnknown** RawTable);
        [id(0x0000005f), helpcontext(0x00000020)]
        HRESULT Add(
                        [in] BSTR Type, 
                        [in, optional] VARIANT Name, 
                        [in, optional] VARIANT Address, 
                        [out, retval] AddressEntry** Entry);
        [id(0x00000056), helpcontext(0x00000021)]
        HRESULT GetFirst([out, retval] AddressEntry** AddressEntry);
        [id(0x00000058), helpcontext(0x00000022)]
        HRESULT GetLast([out, retval] AddressEntry** AddressEntry);
        [id(0x00000057), helpcontext(0x00000023)]
        HRESULT GetNext([out, retval] AddressEntry** AddressEntry);
        [id(0x00000059), helpcontext(0x00000024)]
        HRESULT GetPrevious([out, retval] AddressEntry** AddressEntry);
        [id(0x00000061), helpcontext(0x00000025)]
        HRESULT Sort(
                        [in, optional] VARIANT Property, 
                        [in, optional] VARIANT Order);
    };

    [
      odl,
      uuid(00063021-0000-0000-C000-000000000046),
      helpcontext(0x0000039d),
      dual,
      oleautomation
    ]
    interface _ContactItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000039e)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000039f)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000003a0)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000003a1)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x000003a2)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x000003a3)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x000003a4)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x000003a4)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x000003a5)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x000003a5)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x000003a6)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x000003a6)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x000003a7)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x000003a7)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x000003a8)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x000003a9)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x000003aa)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x000003ab)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x000003ac)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x000003ad)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x000003ae)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x000003ae)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x000003af)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x000003b0)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x000003b1)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x000003b1)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x000003b2)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x000003b2)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x000003b3)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x000003b3)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x000003b4)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x000003b5)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x000003b6)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x000003b7)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x000003b7)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x000003b8)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x000003b9)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x000003b9)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x000003ba)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x000003ba)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x000003bb)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x000003bc)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x000003bd)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x000003be)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x000003bf)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x000003c0)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x000003c1)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x000003c2)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x000003c3)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x00003a00), propget, helpcontext(0x000003c4)]
        HRESULT Account([out, retval] BSTR* Account);
        [id(0x00003a00), propput, helpcontext(0x000003c4)]
        HRESULT Account([in] BSTR Account);
        [id(0x00003a41), propget, helpcontext(0x000003c5)]
        HRESULT Anniversary([out, retval] DATE* Anniversary);
        [id(0x00003a41), propput, helpcontext(0x000003c5)]
        HRESULT Anniversary([in] DATE Anniversary);
        [id(0x00003a30), propget, helpcontext(0x000003c6)]
        HRESULT AssistantName([out, retval] BSTR* AssistantName);
        [id(0x00003a30), propput, helpcontext(0x000003c6)]
        HRESULT AssistantName([in] BSTR AssistantName);
        [id(0x00003a2e), propget, helpcontext(0x000003c7)]
        HRESULT AssistantTelephoneNumber([out, retval] BSTR* AssistantTelephoneNumber);
        [id(0x00003a2e), propput, helpcontext(0x000003c7)]
        HRESULT AssistantTelephoneNumber([in] BSTR AssistantTelephoneNumber);
        [id(0x00003a42), propget, helpcontext(0x000003c8)]
        HRESULT Birthday([out, retval] DATE* Birthday);
        [id(0x00003a42), propput, helpcontext(0x000003c8)]
        HRESULT Birthday([in] DATE Birthday);
        [id(0x00003a1b), propget, helpcontext(0x000003c9)]
        HRESULT Business2TelephoneNumber([out, retval] BSTR* Business2TelephoneNumber);
        [id(0x00003a1b), propput, helpcontext(0x000003c9)]
        HRESULT Business2TelephoneNumber([in] BSTR Business2TelephoneNumber);
        [id(0x0000801b), propget, helpcontext(0x000003ca)]
        HRESULT BusinessAddress([out, retval] BSTR* BusinessAddress);
        [id(0x0000801b), propput, helpcontext(0x000003ca)]
        HRESULT BusinessAddress([in] BSTR BusinessAddress);
        [id(0x00008046), propget, helpcontext(0x000003cb)]
        HRESULT BusinessAddressCity([out, retval] BSTR* BusinessAddressCity);
        [id(0x00008046), propput, helpcontext(0x000003cb)]
        HRESULT BusinessAddressCity([in] BSTR BusinessAddressCity);
        [id(0x00008049), propget, helpcontext(0x000003cc)]
        HRESULT BusinessAddressCountry([out, retval] BSTR* BusinessAddressCountry);
        [id(0x00008049), propput, helpcontext(0x000003cc)]
        HRESULT BusinessAddressCountry([in] BSTR BusinessAddressCountry);
        [id(0x00008048), propget, helpcontext(0x000003cd)]
        HRESULT BusinessAddressPostalCode([out, retval] BSTR* BusinessAddressPostalCode);
        [id(0x00008048), propput, helpcontext(0x000003cd)]
        HRESULT BusinessAddressPostalCode([in] BSTR BusinessAddressPostalCode);
        [id(0x0000804a), propget, helpcontext(0x000003ce)]
        HRESULT BusinessAddressPostOfficeBox([out, retval] BSTR* BusinessAddressPostOfficeBox);
        [id(0x0000804a), propput, helpcontext(0x000003ce)]
        HRESULT BusinessAddressPostOfficeBox([in] BSTR BusinessAddressPostOfficeBox);
        [id(0x00008047), propget, helpcontext(0x000003cf)]
        HRESULT BusinessAddressState([out, retval] BSTR* BusinessAddressState);
        [id(0x00008047), propput, helpcontext(0x000003cf)]
        HRESULT BusinessAddressState([in] BSTR BusinessAddressState);
        [id(0x00008045), propget, helpcontext(0x000003d0)]
        HRESULT BusinessAddressStreet([out, retval] BSTR* BusinessAddressStreet);
        [id(0x00008045), propput, helpcontext(0x000003d0)]
        HRESULT BusinessAddressStreet([in] BSTR BusinessAddressStreet);
        [id(0x00003a24), propget, helpcontext(0x000003d1)]
        HRESULT BusinessFaxNumber([out, retval] BSTR* BusinessFaxNumber);
        [id(0x00003a24), propput, helpcontext(0x000003d1)]
        HRESULT BusinessFaxNumber([in] BSTR BusinessFaxNumber);
        [id(0x00003a51), propget, helpcontext(0x000003d2)]
        HRESULT BusinessHomePage([out, retval] BSTR* BusinessHomePage);
        [id(0x00003a51), propput, helpcontext(0x000003d2)]
        HRESULT BusinessHomePage([in] BSTR BusinessHomePage);
        [id(0x00003a08), propget, helpcontext(0x000003d3)]
        HRESULT BusinessTelephoneNumber([out, retval] BSTR* BusinessTelephoneNumber);
        [id(0x00003a08), propput, helpcontext(0x000003d3)]
        HRESULT BusinessTelephoneNumber([in] BSTR BusinessTelephoneNumber);
        [id(0x00003a02), propget, helpcontext(0x000003d4)]
        HRESULT CallbackTelephoneNumber([out, retval] BSTR* CallbackTelephoneNumber);
        [id(0x00003a02), propput, helpcontext(0x000003d4)]
        HRESULT CallbackTelephoneNumber([in] BSTR CallbackTelephoneNumber);
        [id(0x00003a1e), propget, helpcontext(0x000003d5)]
        HRESULT CarTelephoneNumber([out, retval] BSTR* CarTelephoneNumber);
        [id(0x00003a1e), propput, helpcontext(0x000003d5)]
        HRESULT CarTelephoneNumber([in] BSTR CarTelephoneNumber);
        [id(0x0000800c), propget, helpcontext(0x000003d6)]
        HRESULT Children([out, retval] BSTR* Children);
        [id(0x0000800c), propput, helpcontext(0x000003d6)]
        HRESULT Children([in] BSTR Children);
        [id(0x00008018), propget, helpcontext(0x000003d7)]
        HRESULT CompanyAndFullName([out, retval] BSTR* CompanyAndFullName);
        [id(0x00008032), propget, helpcontext(0x000003d8)]
        HRESULT CompanyLastFirstNoSpace([out, retval] BSTR* CompanyLastFirstNoSpace);
        [id(0x00008033), propget, helpcontext(0x000003d9)]
        HRESULT CompanyLastFirstSpaceOnly([out, retval] BSTR* CompanyLastFirstSpaceOnly);
        [id(0x00003a57), propget, helpcontext(0x000003da)]
        HRESULT CompanyMainTelephoneNumber([out, retval] BSTR* CompanyMainTelephoneNumber);
        [id(0x00003a57), propput, helpcontext(0x000003da)]
        HRESULT CompanyMainTelephoneNumber([in] BSTR CompanyMainTelephoneNumber);
        [id(0x00003a16), propget, helpcontext(0x000003db)]
        HRESULT CompanyName([out, retval] BSTR* CompanyName);
        [id(0x00003a16), propput, helpcontext(0x000003db)]
        HRESULT CompanyName([in] BSTR CompanyName);
        [id(0x00003a49), propget, helpcontext(0x000003dc)]
        HRESULT ComputerNetworkName([out, retval] BSTR* ComputerNetworkName);
        [id(0x00003a49), propput, helpcontext(0x000003dc)]
        HRESULT ComputerNetworkName([in] BSTR ComputerNetworkName);
        [id(0x00003a4a), propget, helpcontext(0x000003dd)]
        HRESULT CustomerID([out, retval] BSTR* CustomerID);
        [id(0x00003a4a), propput, helpcontext(0x000003dd)]
        HRESULT CustomerID([in] BSTR CustomerID);
        [id(0x00003a18), propget, helpcontext(0x000003de)]
        HRESULT Department([out, retval] BSTR* Department);
        [id(0x00003a18), propput, helpcontext(0x000003de)]
        HRESULT Department([in] BSTR Department);
        [id(0x00008083), propget, helpcontext(0x000003df)]
        HRESULT Email1Address([out, retval] BSTR* Email1Address);
        [id(0x00008083), propput, helpcontext(0x000003df)]
        HRESULT Email1Address([in] BSTR Email1Address);
        [id(0x00008082), propget, helpcontext(0x000003e0)]
        HRESULT Email1AddressType([out, retval] BSTR* Email1AddressType);
        [id(0x00008082), propput, helpcontext(0x000003e0)]
        HRESULT Email1AddressType([in] BSTR Email1AddressType);
        [id(0x00008080), propget, helpcontext(0x000003e1)]
        HRESULT Email1DisplayName([out, retval] BSTR* Email1DisplayName);
        [id(0x00008085), propget, helpcontext(0x000003e2)]
        HRESULT Email1EntryID([out, retval] BSTR* Email1EntryID);
        [id(0x00008093), propget, helpcontext(0x000003e3)]
        HRESULT Email2Address([out, retval] BSTR* Email2Address);
        [id(0x00008093), propput, helpcontext(0x000003e3)]
        HRESULT Email2Address([in] BSTR Email2Address);
        [id(0x00008092), propget, helpcontext(0x000003e4)]
        HRESULT Email2AddressType([out, retval] BSTR* Email2AddressType);
        [id(0x00008092), propput, helpcontext(0x000003e4)]
        HRESULT Email2AddressType([in] BSTR Email2AddressType);
        [id(0x00008090), propget, helpcontext(0x000003e5)]
        HRESULT Email2DisplayName([out, retval] BSTR* Email2DisplayName);
        [id(0x00008095), propget, helpcontext(0x000003e6)]
        HRESULT Email2EntryID([out, retval] BSTR* Email2EntryID);
        [id(0x000080a3), propget, helpcontext(0x000003e7)]
        HRESULT Email3Address([out, retval] BSTR* Email3Address);
        [id(0x000080a3), propput, helpcontext(0x000003e7)]
        HRESULT Email3Address([in] BSTR Email3Address);
        [id(0x000080a2), propget, helpcontext(0x000003e8)]
        HRESULT Email3AddressType([out, retval] BSTR* Email3AddressType);
        [id(0x000080a2), propput, helpcontext(0x000003e8)]
        HRESULT Email3AddressType([in] BSTR Email3AddressType);
        [id(0x000080a0), propget, helpcontext(0x000003e9)]
        HRESULT Email3DisplayName([out, retval] BSTR* Email3DisplayName);
        [id(0x000080a5), propget, helpcontext(0x000003ea)]
        HRESULT Email3EntryID([out, retval] BSTR* Email3EntryID);
        [id(0x00008005), propget, helpcontext(0x000003eb)]
        HRESULT FileAs([out, retval] BSTR* FileAs);
        [id(0x00008005), propput, helpcontext(0x000003eb)]
        HRESULT FileAs([in] BSTR FileAs);
        [id(0x00003a06), propget, helpcontext(0x000003ec)]
        HRESULT FirstName([out, retval] BSTR* FirstName);
        [id(0x00003a06), propput, helpcontext(0x000003ec)]
        HRESULT FirstName([in] BSTR FirstName);
        [id(0x00003a4c), propget, helpcontext(0x000003ed)]
        HRESULT FTPSite([out, retval] BSTR* FTPSite);
        [id(0x00003a4c), propput, helpcontext(0x000003ed)]
        HRESULT FTPSite([in] BSTR FTPSite);
        [id(0x00003001), propget, helpcontext(0x000003ee)]
        HRESULT FullName([out, retval] BSTR* FullName);
        [id(0x00003001), propput, helpcontext(0x000003ee)]
        HRESULT FullName([in] BSTR FullName);
        [id(0x00008019), propget, helpcontext(0x000003ef)]
        HRESULT FullNameAndCompany([out, retval] BSTR* FullNameAndCompany);
        [id(0x00003a4d), propget, helpcontext(0x000003f0)]
        HRESULT Gender([out, retval] OlGender* Gender);
        [id(0x00003a4d), propput, helpcontext(0x000003f0)]
        HRESULT Gender([in] OlGender Gender);
        [id(0x00003a07), propget, helpcontext(0x000003f1)]
        HRESULT GovernmentIDNumber([out, retval] BSTR* GovernmentIDNumber);
        [id(0x00003a07), propput, helpcontext(0x000003f1)]
        HRESULT GovernmentIDNumber([in] BSTR GovernmentIDNumber);
        [id(0x00003a43), propget, helpcontext(0x000003f2)]
        HRESULT Hobby([out, retval] BSTR* Hobby);
        [id(0x00003a43), propput, helpcontext(0x000003f2)]
        HRESULT Hobby([in] BSTR Hobby);
        [id(0x00003a2f), propget, helpcontext(0x000003f3)]
        HRESULT Home2TelephoneNumber([out, retval] BSTR* Home2TelephoneNumber);
        [id(0x00003a2f), propput, helpcontext(0x000003f3)]
        HRESULT Home2TelephoneNumber([in] BSTR Home2TelephoneNumber);
        [id(0x0000801a), propget, helpcontext(0x000003f4)]
        HRESULT HomeAddress([out, retval] BSTR* HomeAddress);
        [id(0x0000801a), propput, helpcontext(0x000003f4)]
        HRESULT HomeAddress([in] BSTR HomeAddress);
        [id(0x00003a59), propget, helpcontext(0x000003f5)]
        HRESULT HomeAddressCity([out, retval] BSTR* HomeAddressCity);
        [id(0x00003a59), propput, helpcontext(0x000003f5)]
        HRESULT HomeAddressCity([in] BSTR HomeAddressCity);
        [id(0x00003a5a), propget, helpcontext(0x000003f6)]
        HRESULT HomeAddressCountry([out, retval] BSTR* HomeAddressCountry);
        [id(0x00003a5a), propput, helpcontext(0x000003f6)]
        HRESULT HomeAddressCountry([in] BSTR HomeAddressCountry);
        [id(0x00003a5b), propget, helpcontext(0x000003f7)]
        HRESULT HomeAddressPostalCode([out, retval] BSTR* HomeAddressPostalCode);
        [id(0x00003a5b), propput, helpcontext(0x000003f7)]
        HRESULT HomeAddressPostalCode([in] BSTR HomeAddressPostalCode);
        [id(0x00003a5e), propget, helpcontext(0x000003f8)]
        HRESULT HomeAddressPostOfficeBox([out, retval] BSTR* HomeAddressPostOfficeBox);
        [id(0x00003a5e), propput, helpcontext(0x000003f8)]
        HRESULT HomeAddressPostOfficeBox([in] BSTR HomeAddressPostOfficeBox);
        [id(0x00003a5c), propget, helpcontext(0x000003f9)]
        HRESULT HomeAddressState([out, retval] BSTR* HomeAddressState);
        [id(0x00003a5c), propput, helpcontext(0x000003f9)]
        HRESULT HomeAddressState([in] BSTR HomeAddressState);
        [id(0x00003a5d), propget, helpcontext(0x000003fa)]
        HRESULT HomeAddressStreet([out, retval] BSTR* HomeAddressStreet);
        [id(0x00003a5d), propput, helpcontext(0x000003fa)]
        HRESULT HomeAddressStreet([in] BSTR HomeAddressStreet);
        [id(0x00003a25), propget, helpcontext(0x000003fb)]
        HRESULT HomeFaxNumber([out, retval] BSTR* HomeFaxNumber);
        [id(0x00003a25), propput, helpcontext(0x000003fb)]
        HRESULT HomeFaxNumber([in] BSTR HomeFaxNumber);
        [id(0x00003a09), propget, helpcontext(0x000003fc)]
        HRESULT HomeTelephoneNumber([out, retval] BSTR* HomeTelephoneNumber);
        [id(0x00003a09), propput, helpcontext(0x000003fc)]
        HRESULT HomeTelephoneNumber([in] BSTR HomeTelephoneNumber);
        [id(0x00003a0a), propget, helpcontext(0x000003fd)]
        HRESULT Initials([out, retval] BSTR* Initials);
        [id(0x00003a0a), propput, helpcontext(0x000003fd)]
        HRESULT Initials([in] BSTR Initials);
        [id(0x000080d8), propget, helpcontext(0x000003fe)]
        HRESULT InternetFreeBusyAddress([out, retval] BSTR* InternetFreeBusyAddress);
        [id(0x000080d8), propput, helpcontext(0x000003fe)]
        HRESULT InternetFreeBusyAddress([in] BSTR InternetFreeBusyAddress);
        [id(0x00003a2d), propget, helpcontext(0x000003ff)]
        HRESULT ISDNNumber([out, retval] BSTR* ISDNNumber);
        [id(0x00003a2d), propput, helpcontext(0x000003ff)]
        HRESULT ISDNNumber([in] BSTR ISDNNumber);
        [id(0x00003a17), propget, helpcontext(0x00000400)]
        HRESULT JobTitle([out, retval] BSTR* JobTitle);
        [id(0x00003a17), propput, helpcontext(0x00000400)]
        HRESULT JobTitle([in] BSTR JobTitle);
        [id(0x00008025), propget, helpcontext(0x00000401)]
        HRESULT Journal([out, retval] VARIANT_BOOL* Journal);
        [id(0x00008025), propput, helpcontext(0x00000401)]
        HRESULT Journal([in] VARIANT_BOOL Journal);
        [id(0x00003a0c), propget, helpcontext(0x00000402)]
        HRESULT Language([out, retval] BSTR* Language);
        [id(0x00003a0c), propput, helpcontext(0x00000402)]
        HRESULT Language([in] BSTR Language);
        [id(0x00008036), propget, helpcontext(0x00000403)]
        HRESULT LastFirstAndSuffix([out, retval] BSTR* LastFirstAndSuffix);
        [id(0x00008030), propget, helpcontext(0x00000404)]
        HRESULT LastFirstNoSpace([out, retval] BSTR* LastFirstNoSpace);
        [id(0x00008034), propget, helpcontext(0x00000405)]
        HRESULT LastFirstNoSpaceCompany([out, retval] BSTR* LastFirstNoSpaceCompany);
        [id(0x00008031), propget, helpcontext(0x00000406)]
        HRESULT LastFirstSpaceOnly([out, retval] BSTR* LastFirstSpaceOnly);
        [id(0x00008035), propget, helpcontext(0x00000407)]
        HRESULT LastFirstSpaceOnlyCompany([out, retval] BSTR* LastFirstSpaceOnlyCompany);
        [id(0x00003a11), propget, helpcontext(0x00000408)]
        HRESULT LastName([out, retval] BSTR* LastName);
        [id(0x00003a11), propput, helpcontext(0x00000408)]
        HRESULT LastName([in] BSTR LastName);
        [id(0x00008017), propget, helpcontext(0x00000409)]
        HRESULT LastNameAndFirstName([out, retval] BSTR* LastNameAndFirstName);
        [id(0x00003a15), propget, helpcontext(0x0000040a)]
        HRESULT MailingAddress([out, retval] BSTR* MailingAddress);
        [id(0x00003a15), propput, helpcontext(0x0000040a)]
        HRESULT MailingAddress([in] BSTR MailingAddress);
        [id(0x00003a27), propget, helpcontext(0x0000040b)]
        HRESULT MailingAddressCity([out, retval] BSTR* MailingAddressCity);
        [id(0x00003a27), propput, helpcontext(0x0000040b)]
        HRESULT MailingAddressCity([in] BSTR MailingAddressCity);
        [id(0x00003a26), propget, helpcontext(0x0000040c)]
        HRESULT MailingAddressCountry([out, retval] BSTR* MailingAddressCountry);
        [id(0x00003a26), propput, helpcontext(0x0000040c)]
        HRESULT MailingAddressCountry([in] BSTR MailingAddressCountry);
        [id(0x00003a2a), propget, helpcontext(0x0000040d)]
        HRESULT MailingAddressPostalCode([out, retval] BSTR* MailingAddressPostalCode);
        [id(0x00003a2a), propput, helpcontext(0x0000040d)]
        HRESULT MailingAddressPostalCode([in] BSTR MailingAddressPostalCode);
        [id(0x00003a2b), propget, helpcontext(0x0000040e)]
        HRESULT MailingAddressPostOfficeBox([out, retval] BSTR* MailingAddressPostOfficeBox);
        [id(0x00003a2b), propput, helpcontext(0x0000040e)]
        HRESULT MailingAddressPostOfficeBox([in] BSTR MailingAddressPostOfficeBox);
        [id(0x00003a28), propget, helpcontext(0x0000040f)]
        HRESULT MailingAddressState([out, retval] BSTR* MailingAddressState);
        [id(0x00003a28), propput, helpcontext(0x0000040f)]
        HRESULT MailingAddressState([in] BSTR MailingAddressState);
        [id(0x00003a29), propget, helpcontext(0x00000410)]
        HRESULT MailingAddressStreet([out, retval] BSTR* MailingAddressStreet);
        [id(0x00003a29), propput, helpcontext(0x00000410)]
        HRESULT MailingAddressStreet([in] BSTR MailingAddressStreet);
        [id(0x00003a4e), propget, helpcontext(0x00000411)]
        HRESULT ManagerName([out, retval] BSTR* ManagerName);
        [id(0x00003a4e), propput, helpcontext(0x00000411)]
        HRESULT ManagerName([in] BSTR ManagerName);
        [id(0x00003a44), propget, helpcontext(0x00000412)]
        HRESULT MiddleName([out, retval] BSTR* MiddleName);
        [id(0x00003a44), propput, helpcontext(0x00000412)]
        HRESULT MiddleName([in] BSTR MiddleName);
        [id(0x00003a1c), propget, helpcontext(0x00000413)]
        HRESULT MobileTelephoneNumber([out, retval] BSTR* MobileTelephoneNumber);
        [id(0x00003a1c), propput, helpcontext(0x00000413)]
        HRESULT MobileTelephoneNumber([in] BSTR MobileTelephoneNumber);
        [id(0x0000805f), propget, helpcontext(0x00000414)]
        HRESULT NetMeetingAlias([out, retval] BSTR* NetMeetingAlias);
        [id(0x0000805f), propput, helpcontext(0x00000414)]
        HRESULT NetMeetingAlias([in] BSTR NetMeetingAlias);
        [id(0x00008060), propget, helpcontext(0x00000415)]
        HRESULT NetMeetingServer([out, retval] BSTR* NetMeetingServer);
        [id(0x00008060), propput, helpcontext(0x00000415)]
        HRESULT NetMeetingServer([in] BSTR NetMeetingServer);
        [id(0x00003a4f), propget, helpcontext(0x00000416)]
        HRESULT NickName([out, retval] BSTR* NickName);
        [id(0x00003a4f), propput, helpcontext(0x00000416)]
        HRESULT NickName([in] BSTR NickName);
        [id(0x00003a19), propget, helpcontext(0x00000417)]
        HRESULT OfficeLocation([out, retval] BSTR* OfficeLocation);
        [id(0x00003a19), propput, helpcontext(0x00000417)]
        HRESULT OfficeLocation([in] BSTR OfficeLocation);
        [id(0x00003a10), propget, helpcontext(0x00000418)]
        HRESULT OrganizationalIDNumber([out, retval] BSTR* OrganizationalIDNumber);
        [id(0x00003a10), propput, helpcontext(0x00000418)]
        HRESULT OrganizationalIDNumber([in] BSTR OrganizationalIDNumber);
        [id(0x0000801c), propget, helpcontext(0x00000419)]
        HRESULT OtherAddress([out, retval] BSTR* OtherAddress);
        [id(0x0000801c), propput, helpcontext(0x00000419)]
        HRESULT OtherAddress([in] BSTR OtherAddress);
        [id(0x00003a5f), propget, helpcontext(0x0000041a)]
        HRESULT OtherAddressCity([out, retval] BSTR* OtherAddressCity);
        [id(0x00003a5f), propput, helpcontext(0x0000041a)]
        HRESULT OtherAddressCity([in] BSTR OtherAddressCity);
        [id(0x00003a60), propget, helpcontext(0x0000041b)]
        HRESULT OtherAddressCountry([out, retval] BSTR* OtherAddressCountry);
        [id(0x00003a60), propput, helpcontext(0x0000041b)]
        HRESULT OtherAddressCountry([in] BSTR OtherAddressCountry);
        [id(0x00003a61), propget, helpcontext(0x0000041c)]
        HRESULT OtherAddressPostalCode([out, retval] BSTR* OtherAddressPostalCode);
        [id(0x00003a61), propput, helpcontext(0x0000041c)]
        HRESULT OtherAddressPostalCode([in] BSTR OtherAddressPostalCode);
        [id(0x00003a64), propget, helpcontext(0x0000041d)]
        HRESULT OtherAddressPostOfficeBox([out, retval] BSTR* OtherAddressPostOfficeBox);
        [id(0x00003a64), propput, helpcontext(0x0000041d)]
        HRESULT OtherAddressPostOfficeBox([in] BSTR OtherAddressPostOfficeBox);
        [id(0x00003a62), propget, helpcontext(0x0000041e)]
        HRESULT OtherAddressState([out, retval] BSTR* OtherAddressState);
        [id(0x00003a62), propput, helpcontext(0x0000041e)]
        HRESULT OtherAddressState([in] BSTR OtherAddressState);
        [id(0x00003a63), propget, helpcontext(0x0000041f)]
        HRESULT OtherAddressStreet([out, retval] BSTR* OtherAddressStreet);
        [id(0x00003a63), propput, helpcontext(0x0000041f)]
        HRESULT OtherAddressStreet([in] BSTR OtherAddressStreet);
        [id(0x00003a23), propget, helpcontext(0x00000420)]
        HRESULT OtherFaxNumber([out, retval] BSTR* OtherFaxNumber);
        [id(0x00003a23), propput, helpcontext(0x00000420)]
        HRESULT OtherFaxNumber([in] BSTR OtherFaxNumber);
        [id(0x00003a1f), propget, helpcontext(0x00000421)]
        HRESULT OtherTelephoneNumber([out, retval] BSTR* OtherTelephoneNumber);
        [id(0x00003a1f), propput, helpcontext(0x00000421)]
        HRESULT OtherTelephoneNumber([in] BSTR OtherTelephoneNumber);
        [id(0x00003a21), propget, helpcontext(0x00000422)]
        HRESULT PagerNumber([out, retval] BSTR* PagerNumber);
        [id(0x00003a21), propput, helpcontext(0x00000422)]
        HRESULT PagerNumber([in] BSTR PagerNumber);
        [id(0x00003a50), propget, helpcontext(0x00000423)]
        HRESULT PersonalHomePage([out, retval] BSTR* PersonalHomePage);
        [id(0x00003a50), propput, helpcontext(0x00000423)]
        HRESULT PersonalHomePage([in] BSTR PersonalHomePage);
        [id(0x00003a1a), propget, helpcontext(0x00000424)]
        HRESULT PrimaryTelephoneNumber([out, retval] BSTR* PrimaryTelephoneNumber);
        [id(0x00003a1a), propput, helpcontext(0x00000424)]
        HRESULT PrimaryTelephoneNumber([in] BSTR PrimaryTelephoneNumber);
        [id(0x00003a46), propget, helpcontext(0x00000425)]
        HRESULT Profession([out, retval] BSTR* Profession);
        [id(0x00003a46), propput, helpcontext(0x00000425)]
        HRESULT Profession([in] BSTR Profession);
        [id(0x00003a1d), propget, helpcontext(0x00000426)]
        HRESULT RadioTelephoneNumber([out, retval] BSTR* RadioTelephoneNumber);
        [id(0x00003a1d), propput, helpcontext(0x00000426)]
        HRESULT RadioTelephoneNumber([in] BSTR RadioTelephoneNumber);
        [id(0x00003a47), propget, helpcontext(0x00000427)]
        HRESULT ReferredBy([out, retval] BSTR* ReferredBy);
        [id(0x00003a47), propput, helpcontext(0x00000427)]
        HRESULT ReferredBy([in] BSTR ReferredBy);
        [id(0x00008022), propget, helpcontext(0x00000428)]
        HRESULT SelectedMailingAddress([out, retval] OlMailingAddress* SelectedMailingAddress);
        [id(0x00008022), propput, helpcontext(0x00000428)]
        HRESULT SelectedMailingAddress([in] OlMailingAddress SelectedMailingAddress);
        [id(0x00003a48), propget, helpcontext(0x00000429)]
        HRESULT Spouse([out, retval] BSTR* Spouse);
        [id(0x00003a48), propput, helpcontext(0x00000429)]
        HRESULT Spouse([in] BSTR Spouse);
        [id(0x00003a05), propget, helpcontext(0x0000042a)]
        HRESULT Suffix([out, retval] BSTR* Suffix);
        [id(0x00003a05), propput, helpcontext(0x0000042a)]
        HRESULT Suffix([in] BSTR Suffix);
        [id(0x00003a2c), propget, helpcontext(0x0000042b)]
        HRESULT TelexNumber([out, retval] BSTR* TelexNumber);
        [id(0x00003a2c), propput, helpcontext(0x0000042b)]
        HRESULT TelexNumber([in] BSTR TelexNumber);
        [id(0x00003a45), propget, helpcontext(0x0000042c)]
        HRESULT Title([out, retval] BSTR* Title);
        [id(0x00003a45), propput, helpcontext(0x0000042c)]
        HRESULT Title([in] BSTR Title);
        [id(0x00003a4b), propget, helpcontext(0x0000042d)]
        HRESULT TTYTDDTelephoneNumber([out, retval] BSTR* TTYTDDTelephoneNumber);
        [id(0x00003a4b), propput, helpcontext(0x0000042d)]
        HRESULT TTYTDDTelephoneNumber([in] BSTR TTYTDDTelephoneNumber);
        [id(0x0000804f), propget, helpcontext(0x0000042e)]
        HRESULT User1([out, retval] BSTR* User1);
        [id(0x0000804f), propput, helpcontext(0x0000042e)]
        HRESULT User1([in] BSTR User1);
        [id(0x00008050), propget, helpcontext(0x0000042f)]
        HRESULT User2([out, retval] BSTR* User2);
        [id(0x00008050), propput, helpcontext(0x0000042f)]
        HRESULT User2([in] BSTR User2);
        [id(0x00008051), propget, helpcontext(0x00000430)]
        HRESULT User3([out, retval] BSTR* User3);
        [id(0x00008051), propput, helpcontext(0x00000430)]
        HRESULT User3([in] BSTR User3);
        [id(0x00008052), propget, helpcontext(0x00000431)]
        HRESULT User4([out, retval] BSTR* User4);
        [id(0x00008052), propput, helpcontext(0x00000431)]
        HRESULT User4([in] BSTR User4);
        [id(0x00008016), propget, hidden, helpcontext(0x00000432)]
        HRESULT UserCertificate([out, retval] BSTR* UserCertificate);
        [id(0x00008016), propput, hidden, helpcontext(0x00000432)]
        HRESULT UserCertificate([in] BSTR UserCertificate);
        [id(0x0000802b), propget, helpcontext(0x00000433)]
        HRESULT WebPage([out, retval] BSTR* WebPage);
        [id(0x0000802b), propput, helpcontext(0x00000433)]
        HRESULT WebPage([in] BSTR WebPage);
        [id(0x0000802e), propget, helpcontext(0x00000434)]
        HRESULT YomiCompanyName([out, retval] BSTR* YomiCompanyName);
        [id(0x0000802e), propput, helpcontext(0x00000434)]
        HRESULT YomiCompanyName([in] BSTR YomiCompanyName);
        [id(0x0000802c), propget, helpcontext(0x00000435)]
        HRESULT YomiFirstName([out, retval] BSTR* YomiFirstName);
        [id(0x0000802c), propput, helpcontext(0x00000435)]
        HRESULT YomiFirstName([in] BSTR YomiFirstName);
        [id(0x0000802d), propget, helpcontext(0x00000436)]
        HRESULT YomiLastName([out, retval] BSTR* YomiLastName);
        [id(0x0000802d), propput, helpcontext(0x00000436)]
        HRESULT YomiLastName([in] BSTR YomiLastName);
        [id(0x0000f8a1), helpcontext(0x00000437)]
        HRESULT ForwardAsVcard([out, retval] _MailItem** Item);
        [id(0x0000f405), propget, hidden, helpcontext(0x00000438)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa09), propget, helpcontext(0x00000439)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008038), propget, helpcontext(0x0000043a)]
        HRESULT LastFirstNoSpaceAndSuffix([out, retval] BSTR* LastFirstNoSpaceAndSuffix);
        [id(0x0000fa4d), propget, helpcontext(0x0000043b)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x0000043c)]
        HRESULT ShowCategoriesDialog();
        [id(0x00008062), propget, helpcontext(0x0000043d)]
        HRESULT IMAddress([out, retval] BSTR* IMAddress);
        [id(0x00008062), propput, helpcontext(0x0000043d)]
        HRESULT IMAddress([in] BSTR IMAddress);
        [id(0x00008571), propget, helpcontext(0x0000043e)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x0000043e)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x00008080), propput, helpcontext(0x000003e1)]
        HRESULT Email1DisplayName([in] BSTR Email1DisplayName);
        [id(0x00008090), propput, helpcontext(0x000003e5)]
        HRESULT Email2DisplayName([in] BSTR Email2DisplayName);
        [id(0x000080a0), propput, helpcontext(0x000003e9)]
        HRESULT Email3DisplayName([in] BSTR Email3DisplayName);
        [id(0x0000faa4), propget, helpcontext(0x0000043f)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x00000440)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x00000441)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fabd), helpcontext(0x00000442)]
        HRESULT AddPicture([in] BSTR Path);
        [id(0x0000fabe), helpcontext(0x00000443)]
        HRESULT RemovePicture();
        [id(0x0000fabf), propget, helpcontext(0x00000444)]
        HRESULT HasPicture([out, retval] VARIANT_BOOL* HasPicture);
        [id(0x0000fafd), propget, helpcontext(0x00000445)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fb94), helpcontext(0x00000446)]
        HRESULT ForwardAsBusinessCard([out, retval] _MailItem** Item);
        [id(0x0000fb95), helpcontext(0x00000447)]
        HRESULT ShowBusinessCardEditor();
        [id(0x0000fb97), helpcontext(0x00000448)]
        HRESULT SaveBusinessCardImage([in] BSTR Path);
        [id(0x0000fbd7), helpcontext(0x00000449)]
        HRESULT ShowCheckPhoneDialog([in] OlContactPhoneNumber PhoneNumber);
        [id(0x0000fc1f), propget, helpcontext(0x0000044b)]
        HRESULT TaskSubject([out, retval] BSTR* TaskSubject);
        [id(0x0000fc1f), propput, helpcontext(0x0000044b)]
        HRESULT TaskSubject([in] BSTR TaskSubject);
        [id(0x00008105), propget, helpcontext(0x0000044c)]
        HRESULT TaskDueDate([out, retval] DATE* TaskDueDate);
        [id(0x00008105), propput, helpcontext(0x0000044c)]
        HRESULT TaskDueDate([in] DATE TaskDueDate);
        [id(0x00008104), propget, helpcontext(0x0000044d)]
        HRESULT TaskStartDate([out, retval] DATE* TaskStartDate);
        [id(0x00008104), propput, helpcontext(0x0000044d)]
        HRESULT TaskStartDate([in] DATE TaskStartDate);
        [id(0x0000810f), propget, helpcontext(0x0000044e)]
        HRESULT TaskCompletedDate([out, retval] DATE* TaskCompletedDate);
        [id(0x0000810f), propput, helpcontext(0x0000044e)]
        HRESULT TaskCompletedDate([in] DATE TaskCompletedDate);
        [id(0x000085a0), propget, helpcontext(0x00000bd6)]
        HRESULT ToDoTaskOrdinal([out, retval] DATE* ToDoTaskOrdinal);
        [id(0x000085a0), propput, helpcontext(0x00000bd6)]
        HRESULT ToDoTaskOrdinal([in] DATE ToDoTaskOrdinal);
        [id(0x0000851c), propget, helpcontext(0x00000450)]
        HRESULT ReminderOverrideDefault([out, retval] VARIANT_BOOL* ReminderOverrideDefault);
        [id(0x0000851c), propput, helpcontext(0x00000450)]
        HRESULT ReminderOverrideDefault([in] VARIANT_BOOL ReminderOverrideDefault);
        [id(0x0000851e), propget, helpcontext(0x00000451)]
        HRESULT ReminderPlaySound([out, retval] VARIANT_BOOL* ReminderPlaySound);
        [id(0x0000851e), propput, helpcontext(0x00000451)]
        HRESULT ReminderPlaySound([in] VARIANT_BOOL ReminderPlaySound);
        [id(0x00008503), propget, helpcontext(0x00000452)]
        HRESULT ReminderSet([out, retval] VARIANT_BOOL* ReminderSet);
        [id(0x00008503), propput, helpcontext(0x00000452)]
        HRESULT ReminderSet([in] VARIANT_BOOL ReminderSet);
        [id(0x0000851f), propget, helpcontext(0x00000453)]
        HRESULT ReminderSoundFile([out, retval] BSTR* ReminderSoundFile);
        [id(0x0000851f), propput, helpcontext(0x00000453)]
        HRESULT ReminderSoundFile([in] BSTR ReminderSoundFile);
        [id(0x00008502), propget, helpcontext(0x00000454)]
        HRESULT ReminderTime([out, retval] DATE* ReminderTime);
        [id(0x00008502), propput, helpcontext(0x00000454)]
        HRESULT ReminderTime([in] DATE ReminderTime);
        [id(0x0000fbfe), helpcontext(0x00000bd7)]
        HRESULT MarkAsTask([in] OlMarkInterval MarkInterval);
        [id(0x0000fc09), helpcontext(0x00000bd8)]
        HRESULT ClearTaskFlag();
        [id(0x0000fc0a), propget, helpcontext(0x00000bd9)]
        HRESULT IsMarkedAsTask([out, retval] VARIANT_BOOL* IsMarkedAsTask);
        [id(0x0000fc0d), propget, helpcontext(0x00000c9b)]
        HRESULT BusinessCardLayoutXml([out, retval] BSTR* BusinessCardLayoutXml);
        [id(0x0000fc0d), propput, helpcontext(0x00000c9b)]
        HRESULT BusinessCardLayoutXml([in] BSTR BusinessCardLayoutXml);
        [id(0x0000fc0e), helpcontext(0x00000c9c)]
        HRESULT ResetBusinessCard();
        [id(0x0000fc0f), helpcontext(0x00000c9d)]
        HRESULT AddBusinessCardLogoPicture([in] BSTR Path);
        [id(0x0000fc10), propget, helpcontext(0x00000c9e)]
        HRESULT BusinessCardType([out, retval] OlBusinessCardType* BusinessCardType);
        [id(0x0000fc54), helpcontext(0x00000d4c)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000d8e)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc84), propget, helpcontext(0x00000dc5)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dc5)]
        HRESULT RTFBody([in] VARIANT RTFBody);
        [id(0x0000fc91), helpcontext(0x00000e09)]
        HRESULT ShowCheckFullNameDialog();
        [id(0x0000fc90), helpcontext(0x00000e08)]
        HRESULT ShowCheckAddressDialog([in] OlMailingAddress MailingAddress);
    };

    [
      odl,
      uuid(0006303E-0000-0000-C000-000000000046),
      helpcontext(0x00000090),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface Actions : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000091)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000092)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000093)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000094)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000095)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000096),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] Action** Item);
        [id(0x00000064), helpcontext(0x00000097)]
        HRESULT Add([out, retval] Action** Action);
        [id(0x00000052), helpcontext(0x00000098)]
        HRESULT Remove([in] long Index);
    };

    [
      odl,
      uuid(00063043-0000-0000-C000-000000000046),
      helpcontext(0x00000009),
      dual,
      oleautomation
    ]
    interface Action : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000000a)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000000b)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000000c)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000000d)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000064), propget, helpcontext(0x0000000e)]
        HRESULT CopyLike([out, retval] OlActionCopyLike* CopyLike);
        [id(0x00000064), propput, helpcontext(0x0000000e)]
        HRESULT CopyLike([in] OlActionCopyLike CopyLike);
        [id(0x00000067), propget, helpcontext(0x0000000f)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x0000000f)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000001a), propget, helpcontext(0x00000010)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x00000010)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00003001), propget, helpcontext(0x00000011)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00003001), propput, helpcontext(0x00000011)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000003d), propget, helpcontext(0x00000012)]
        HRESULT Prefix([out, retval] BSTR* Prefix);
        [id(0x0000003d), propput, helpcontext(0x00000012)]
        HRESULT Prefix([in] BSTR Prefix);
        [id(0x00000065), propget, helpcontext(0x00000013)]
        HRESULT ReplyStyle([out, retval] OlActionReplyStyle* ReplyStyle);
        [id(0x00000065), propput, helpcontext(0x00000013)]
        HRESULT ReplyStyle([in] OlActionReplyStyle ReplyStyle);
        [id(0x00000066), propget, helpcontext(0x00000014)]
        HRESULT ResponseStyle([out, retval] OlActionResponseStyle* ResponseStyle);
        [id(0x00000066), propput, helpcontext(0x00000014)]
        HRESULT ResponseStyle([in] OlActionResponseStyle ResponseStyle);
        [id(0x00000069), propget, helpcontext(0x00000015)]
        HRESULT ShowOn([out, retval] OlActionShowOn* ShowOn);
        [id(0x00000069), propput, helpcontext(0x00000015)]
        HRESULT ShowOn([in] OlActionShowOn ShowOn);
        [id(0x0000006c), helpcontext(0x00000016)]
        HRESULT Delete();
        [id(0x0000006a), helpcontext(0x00000017)]
        HRESULT Execute([out, retval] IDispatch** Item);
    };

    


    


    


    


    [
      odl,
      uuid(0006303C-0000-0000-C000-000000000046),
      helpcontext(0x000000a9),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface Attachments : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000000aa)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000000ab)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000000ac)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000000ad)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x000000ae)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x000000af),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] Attachment** Item);
        [id(0x00000065), helpcontext(0x000000b0)]
        HRESULT Add(
                        [in] VARIANT Source, 
                        [in, optional] VARIANT Type, 
                        [in, optional] VARIANT Position, 
                        [in, optional] VARIANT DisplayName, 
                        [out, retval] Attachment** Attachment);
        [id(0x00000054), helpcontext(0x000000b1)]
        HRESULT Remove([in] long Index);
    };

    [
      odl,
      uuid(00063007-0000-0000-C000-000000000046),
      helpcontext(0x00000938),
      dual,
      oleautomation
    ]
    interface Attachment : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000939)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000093a)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000093b)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x00000071), propget, helpcontext(0x0000093c)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003001), propget, helpcontext(0x0000093d)]
        HRESULT DisplayName([out, retval] BSTR* DisplayName);
        [id(0x00003001), propput, helpcontext(0x0000093d)]
        HRESULT DisplayName([in] BSTR DisplayName);
        [id(0x00003704), propget, helpcontext(0x0000093e)]
        HRESULT FileName([out, retval] BSTR* FileName);
        [id(0x0000005b), propget, helpcontext(0x0000093f)]
        HRESULT Index([out, retval] long* Index);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000940)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x00003708), propget, helpcontext(0x00000941)]
        HRESULT PathName([out, retval] BSTR* PathName);
        [id(0x00000072), propget, helpcontext(0x00000942)]
        HRESULT Position([out, retval] long* Position);
        [id(0x00000072), propput, helpcontext(0x00000942)]
        HRESULT Position([in] long Position);
        [id(0x00003705), propget, helpcontext(0x00000943)]
        HRESULT Type([out, retval] OlAttachmentType* Type);
        [id(0x00000069), helpcontext(0x00000944)]
        HRESULT Delete();
        [id(0x00000068), helpcontext(0x00000945)]
        HRESULT SaveAsFile([in] BSTR Path);
        [id(0x0000fafd), propget, helpcontext(0x00000946)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fbe9), propget, helpcontext(0x00000947)]
        HRESULT Size([out, retval] long* Size);
        [id(0x0000fc18), propget, helpcontext(0x00000cbe)]
        HRESULT BlockLevel([out, retval] OlAttachmentBlockLevel* BlockLevel);
        [id(0x0000fc7a), helpcontext(0x00000dc2)]
        HRESULT GetTemporaryFilePath([out, retval] BSTR* ptRet);
    };

    


    [
      uuid(0006102D-0000-0000-C000-000000000046),
      helpcontext(0x00000c55),
      noncreatable
    ]
    coclass PropertyAccessor {
        [default] interface _PropertyAccessor;
    };

    [
      odl,
      uuid(0006302D-0000-0000-C000-000000000046),
      helpcontext(0x000007ad),
      dual,
      oleautomation
    ]
    interface _PropertyAccessor : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000007ae)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000007af)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000007b0)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000007b1)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fafb), helpcontext(0x000007b2)]
        HRESULT GetProperty(
                        [in] BSTR SchemaName, 
                        [out, retval] VARIANT* Value);
        [id(0x0000fafc), helpcontext(0x000007b3)]
        HRESULT SetProperty(
                        [in] BSTR SchemaName, 
                        [in] VARIANT Value);
        [id(0x0000fafe), helpcontext(0x000007b4)]
        HRESULT GetProperties(
                        [in] VARIANT SchemaNames, 
                        [out, retval] VARIANT* Values);
        [id(0x0000faff), helpcontext(0x000007b5)]
        HRESULT SetProperties(
                        [in] VARIANT SchemaNames, 
                        [in] VARIANT Values, 
                        [out, retval] VARIANT* ErrorResults);
        [id(0x0000fb00), helpcontext(0x000007b6)]
        HRESULT UTCToLocalTime(
                        [in] DATE Value, 
                        [out, retval] DATE* ReturnValue);
        [id(0x0000fb01), helpcontext(0x000007b7)]
        HRESULT LocalTimeToUTC(
                        [in] DATE Value, 
                        [out, retval] DATE* ReturnValue);
        [id(0x0000fb02), helpcontext(0x000007b8)]
        HRESULT StringToBinary(
                        [in] BSTR Value, 
                        [out, retval] VARIANT* ReturnValue);
        [id(0x0000fb03), helpcontext(0x000007b9)]
        HRESULT BinaryToString(
                        [in] VARIANT Value, 
                        [out, retval] BSTR* ReturnValue);
        [id(0x0000fb91), helpcontext(0x000007ba)]
        HRESULT DeleteProperty([in] BSTR SchemaName);
        [id(0x0000fb92), helpcontext(0x000007bb)]
        HRESULT DeleteProperties(
                        [in] VARIANT* SchemaNames, 
                        [out, retval] VARIANT* ErrorResults);
    };

    


    [
      odl,
      uuid(00063046-0000-0000-C000-000000000046),
      helpcontext(0x000000b2),
      dual,
      oleautomation
    ]
    interface FormDescription : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000000b3)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000000b4)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000000b5)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000000b6)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003304), propget, helpcontext(0x000000b7)]
        HRESULT Category([out, retval] BSTR* Category);
        [id(0x00003304), propput, helpcontext(0x000000b7)]
        HRESULT Category([in] BSTR Category);
        [id(0x00003305), propget, helpcontext(0x000000b8)]
        HRESULT CategorySub([out, retval] BSTR* CategorySub);
        [id(0x00003305), propput, helpcontext(0x000000b8)]
        HRESULT CategorySub([in] BSTR CategorySub);
        [id(0x00003004), propget, helpcontext(0x000000b9)]
        HRESULT Comment([out, retval] BSTR* Comment);
        [id(0x00003004), propput, helpcontext(0x000000b9)]
        HRESULT Comment([in] BSTR Comment);
        [id(0x00003303), propget, helpcontext(0x000000ba)]
        HRESULT ContactName([out, retval] BSTR* ContactName);
        [id(0x00003303), propput, helpcontext(0x000000ba)]
        HRESULT ContactName([in] BSTR ContactName);
        [id(0x00003001), propget, helpcontext(0x000000bb)]
        HRESULT DisplayName([out, retval] BSTR* DisplayName);
        [id(0x00003001), propput, helpcontext(0x000000bb)]
        HRESULT DisplayName([in] BSTR DisplayName);
        [id(0x00003307), propget, helpcontext(0x000000bc)]
        HRESULT Hidden([out, retval] VARIANT_BOOL* Hidden);
        [id(0x00003307), propput, helpcontext(0x000000bc)]
        HRESULT Hidden([in] VARIANT_BOOL Hidden);
        [id(0x00000ffd), propget, helpcontext(0x000000bd)]
        HRESULT Icon([out, retval] BSTR* Icon);
        [id(0x00000ffd), propput, helpcontext(0x000000bd)]
        HRESULT Icon([in] BSTR Icon);
        [id(0x00000066), propget, helpcontext(0x000000be)]
        HRESULT Locked([out, retval] VARIANT_BOOL* Locked);
        [id(0x00000066), propput, helpcontext(0x000000be)]
        HRESULT Locked([in] VARIANT_BOOL Locked);
        [id(0x0000001a), propget, helpcontext(0x000000bf)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x00000ffc), propget, helpcontext(0x000000c0)]
        HRESULT MiniIcon([out, retval] BSTR* MiniIcon);
        [id(0x00000ffc), propput, helpcontext(0x000000c0)]
        HRESULT MiniIcon([in] BSTR MiniIcon);
        [id(0x0000f01d), propget, helpcontext(0x000000c1)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000f01d), propput, helpcontext(0x000000c1)]
        HRESULT Name([in] BSTR Name);
        [id(0x00000068), propget, helpcontext(0x000000c2)]
        HRESULT Number([out, retval] BSTR* Number);
        [id(0x00000068), propput, helpcontext(0x000000c2)]
        HRESULT Number([in] BSTR Number);
        [id(0x00000065), propget, helpcontext(0x000000c3)]
        HRESULT OneOff([out, retval] VARIANT_BOOL* OneOff);
        [id(0x00000065), propput, helpcontext(0x000000c3)]
        HRESULT OneOff([in] VARIANT_BOOL OneOff);
        [id(0x00000067), propget, hidden, helpcontext(0x000000c4)]
        HRESULT Password([out, retval] BSTR* Password);
        [id(0x00000067), propput, hidden, helpcontext(0x000000c4)]
        HRESULT Password([in] BSTR Password);
        [id(0x0000006d), propget, helpcontext(0x000000c5)]
        HRESULT ScriptText([out, retval] BSTR* ScriptText);
        [id(0x0000006a), propget, helpcontext(0x000000c6)]
        HRESULT Template([out, retval] BSTR* Template);
        [id(0x0000006a), propput, helpcontext(0x000000c6)]
        HRESULT Template([in] BSTR Template);
        [id(0x00000069), propget, helpcontext(0x000000c7)]
        HRESULT UseWordMail([out, retval] VARIANT_BOOL* UseWordMail);
        [id(0x00000069), propput, helpcontext(0x000000c7)]
        HRESULT UseWordMail([in] VARIANT_BOOL UseWordMail);
        [id(0x00003301), propget, helpcontext(0x000000c8)]
        HRESULT Version([out, retval] BSTR* Version);
        [id(0x00003301), propput, helpcontext(0x000000c8)]
        HRESULT Version([in] BSTR Version);
        [id(0x0000006b), helpcontext(0x000000c9)]
        HRESULT PublishForm(
                        [in] OlFormRegistry Registry, 
                        [in, optional] VARIANT Folder);
    };

    


    [
      odl,
      uuid(00063005-0000-0000-C000-000000000046),
      helpcontext(0x00000b8c),
      dual,
      oleautomation
    ]
    interface _Inspector : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b8d)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b8e)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b8f)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b90)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002100), propget, hidden, helpcontext(0x00000b91)]
        HRESULT CommandBars([out, retval] CommandBars** CommandBars);
        [id(0x00002102), propget, helpcontext(0x00000b92)]
        HRESULT CurrentItem([out, retval] IDispatch** CurrentItem);
        [id(0x00002110), propget, helpcontext(0x00000b93)]
        HRESULT EditorType([out, retval] OlEditorType* EditorType);
        [id(0x00002106), propget, helpcontext(0x00000b94)]
        HRESULT ModifiedFormPages([out, retval] IDispatch** ModifiedFormPages);
        [id(0x00002103), helpcontext(0x00000b95)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x00002104), helpcontext(0x00000b96)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x00002108), helpcontext(0x00000b97)]
        HRESULT HideFormPage([in] BSTR PageName);
        [id(0x00002105), helpcontext(0x00000b98)]
        HRESULT IsWordMail([out, retval] VARIANT_BOOL* IsWordMail);
        [id(0x0000210c), helpcontext(0x00000b99)]
        HRESULT SetCurrentFormPage([in] BSTR PageName);
        [id(0x00002109), helpcontext(0x00000b9a)]
        HRESULT ShowFormPage([in] BSTR PageName);
        [id(0x0000210e), propget, hidden, helpcontext(0x00000b9b)]
        HRESULT HTMLEditor([out, retval] IDispatch** HTMLEditor);
        [id(0x0000210f), propget, helpcontext(0x00000b9c)]
        HRESULT WordEditor([out, retval] IDispatch** WordEditor);
        [id(0x00002111), propget, helpcontext(0x00000b9d)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0x00002114), propget, helpcontext(0x00000b9e)]
        HRESULT Height([out, retval] long* Height);
        [id(0x00002114), propput, helpcontext(0x00000b9e)]
        HRESULT Height([in] long Height);
        [id(0x00002115), propget, helpcontext(0x00000b9f)]
        HRESULT Left([out, retval] long* Left);
        [id(0x00002115), propput, helpcontext(0x00000b9f)]
        HRESULT Left([in] long Left);
        [id(0x00002116), propget, helpcontext(0x00000ba0)]
        HRESULT Top([out, retval] long* Top);
        [id(0x00002116), propput, helpcontext(0x00000ba0)]
        HRESULT Top([in] long Top);
        [id(0x00002117), propget, helpcontext(0x00000ba1)]
        HRESULT Width([out, retval] long* Width);
        [id(0x00002117), propput, helpcontext(0x00000ba1)]
        HRESULT Width([in] long Width);
        [id(0x00002112), propget, helpcontext(0x00000ba2)]
        HRESULT WindowState([out, retval] OlWindowState* WindowState);
        [id(0x00002112), propput, helpcontext(0x00000ba2)]
        HRESULT WindowState([in] OlWindowState WindowState);
        [id(0x00002113), helpcontext(0x00000ba3)]
        HRESULT Activate();
        [id(0x0000fac9), helpcontext(0x00000ba4)]
        HRESULT SetControlItemProperty(
                        [in] IDispatch* Control, 
                        [in] BSTR PropertyName);
        [id(0x0000fbed), helpcontext(0x00000ba5)]
        HRESULT NewFormRegion([out, retval] IDispatch** Form);
        [id(0x0000fbff), helpcontext(0x00000ba6)]
        HRESULT OpenFormRegion(
                        [in] BSTR Path, 
                        [out, retval] IDispatch** Form);
        [id(0x0000fc00), helpcontext(0x00000ba7)]
        HRESULT SaveFormRegion(
                        [in] IDispatch* Page, 
                        [in] BSTR FileName);
        [id(0x0000fc78), propget, helpcontext(0x00000d9e)]
        HRESULT AttachmentSelection([out, retval] _AttachmentSelection** AttachmentSelection);
        [id(0x0000fc87), helpcontext(0x00000de3)]
        HRESULT SetSchedulingStartTime([in] DATE Start);
    };

    


    


    


    [
      odl,
      uuid(000630F9-0000-0000-C000-000000000046),
      helpcontext(0x00000b7a),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _AttachmentSelection : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b7b)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b7c)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b7d)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b7e)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000b7f)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000b80),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] Attachment** Item);
        [id(0x00008208), propget, helpcontext(0x00000d9a)]
        HRESULT Location([out, retval] OlSelectionLocation* Location);
        [id(0x00002202), helpcontext(0x00000dce)]
        HRESULT GetSelection(
                        [in] OlSelectionContents SelectionContents, 
                        [out, retval] Selection** SelectionOut);
    };

    


    


    [
      odl,
      uuid(00063087-0000-0000-C000-000000000046),
      helpcontext(0x00000050),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface Selection : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000051)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000052)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000053)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000054)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000055)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000056),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] IDispatch** Item);
        [id(0x00008208), propget, helpcontext(0x00000d99)]
        HRESULT Location([out, retval] OlSelectionLocation* Location);
        [id(0x00002202), helpcontext(0x00000dcd)]
        HRESULT GetSelection(
                        [in] OlSelectionContents SelectionContents, 
                        [out, retval] Selection** SelectionOut);
    };

    


    


    [
      odl,
      uuid(0006303D-0000-0000-C000-000000000046),
      helpcontext(0x000000ca),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface UserProperties : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000000cb)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000000cc)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000000cd)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000000ce)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x000000cf)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x000000d0),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] UserProperty** Item);
        [id(0x00000066), helpcontext(0x000000d1)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] OlUserPropertyType Type, 
                        [in, optional] VARIANT AddToFolderFields, 
                        [in, optional] VARIANT DisplayFormat, 
                        [out, retval] UserProperty** UserProperty);
        [id(0x00000067), helpcontext(0x000000d2)]
        HRESULT Find(
                        [in] BSTR Name, 
                        [in, optional] VARIANT Custom, 
                        [out, retval] UserProperty** UserProperty);
        [id(0x00000052), helpcontext(0x000000d3)]
        HRESULT Remove([in] long Index);
    };

    [
      odl,
      uuid(00063042-0000-0000-C000-000000000046),
      helpcontext(0x000000d4),
      dual,
      oleautomation
    ]
    interface UserProperty : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000000d5)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000000d6)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000000d7)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000000d8)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x000000d9)]
        HRESULT Formula([out, retval] BSTR* Formula);
        [id(0x00000067), propput, helpcontext(0x000000d9)]
        HRESULT Formula([in] BSTR Formula);
        [id(0x00000070), propget, helpcontext(0x000000da)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000006d), propget, helpcontext(0x000000db)]
        HRESULT Type([out, retval] OlUserPropertyType* Type);
        [id(0x00000068), propget, helpcontext(0x000000dc)]
        HRESULT ValidationFormula([out, retval] BSTR* ValidationFormula);
        [id(0x00000068), propput, helpcontext(0x000000dc)]
        HRESULT ValidationFormula([in] BSTR ValidationFormula);
        [id(0x00000069), propget, helpcontext(0x000000dd)]
        HRESULT ValidationText([out, retval] BSTR* ValidationText);
        [id(0x00000069), propput, helpcontext(0x000000dd)]
        HRESULT ValidationText([in] BSTR ValidationText);
        [id(00000000), propget, helpcontext(0x000000de)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x000000de)]
        HRESULT Value([in] VARIANT Value);
        [id(0x0000006c), helpcontext(0x000000df)]
        HRESULT Delete();
        [id(0x0000fa08), propget, hidden, helpcontext(0x000000e0)]
        HRESULT IsUserProperty([out, retval] VARIANT_BOOL* IsUserProperty);
    };

    


    [
      odl,
      uuid(00063006-0000-0000-C000-000000000046),
      helpcontext(0x000007bc),
      dual,
      oleautomation
    ]
    interface MAPIFolder : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000007bd)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000007be)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000007bf)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000007c0)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003106), propget, helpcontext(0x000007c1)]
        HRESULT DefaultItemType([out, retval] OlItemType* DefaultItemType);
        [id(0x00003107), propget, helpcontext(0x000007c2)]
        HRESULT DefaultMessageClass([out, retval] BSTR* DefaultMessageClass);
        [id(0x00003004), propget, helpcontext(0x000007c3)]
        HRESULT Description([out, retval] BSTR* Description);
        [id(0x00003004), propput, helpcontext(0x000007c3)]
        HRESULT Description([in] BSTR Description);
        [id(0x0000f01e), propget, helpcontext(0x000007c4)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x00002103), propget, helpcontext(0x000007c5)]
        HRESULT Folders([out, retval] _Folders** Folders);
        [id(0x00003100), propget, helpcontext(0x000007c6)]
        HRESULT Items([out, retval] _Items** Items);
        [id(0x00003001), propget, helpcontext(0x000007c7)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00003001), propput, helpcontext(0x000007c7)]
        HRESULT Name([in] BSTR Name);
        [id(0x00003108), propget, helpcontext(0x000007c8)]
        HRESULT StoreID([out, retval] BSTR* StoreID);
        [id(0x00003603), propget, helpcontext(0x000007c9)]
        HRESULT UnReadItemCount([out, retval] long* UnReadItemCount);
        [id(0x0000f032), helpcontext(0x000007ca)]
        HRESULT CopyTo(
                        [in] MAPIFolder* DestinationFolder, 
                        [out, retval] MAPIFolder** Folder);
        [id(0x0000f045), helpcontext(0x000007cb)]
        HRESULT Delete();
        [id(0x00003104), helpcontext(0x000007cc)]
        HRESULT Display();
        [id(0x00003101), helpcontext(0x000007cd)]
        HRESULT GetExplorer(
                        [in, optional] VARIANT DisplayMode, 
                        [out, retval] _Explorer** Explorer);
        [id(0x0000f034), helpcontext(0x000007ce)]
        HRESULT MoveTo([in] MAPIFolder* DestinationFolder);
        [id(0x00003111), propget, hidden, helpcontext(0x000007cf)]
        HRESULT UserPermissions([out, retval] IDispatch** UserPermissions);
        [id(0x00003112), propget, helpcontext(0x000007d0)]
        HRESULT WebViewOn([out, retval] VARIANT_BOOL* WebViewOn);
        [id(0x00003112), propput, helpcontext(0x000007d0)]
        HRESULT WebViewOn([in] VARIANT_BOOL WebViewOn);
        [id(0x00003113), propget, helpcontext(0x000007d1)]
        HRESULT WebViewURL([out, retval] BSTR* WebViewURL);
        [id(0x00003113), propput, helpcontext(0x000007d1)]
        HRESULT WebViewURL([in] BSTR WebViewURL);
        [id(0x00003114), propget, hidden, helpcontext(0x000007d2)]
        HRESULT WebViewAllowNavigation([out, retval] VARIANT_BOOL* WebViewAllowNavigation);
        [id(0x00003114), propput, hidden, helpcontext(0x000007d2)]
        HRESULT WebViewAllowNavigation([in] VARIANT_BOOL WebViewAllowNavigation);
        [id(0x00003115), helpcontext(0x000007d3)]
        HRESULT AddToPFFavorites();
        [id(0x0000fa6e), propget, helpcontext(0x000007d4)]
        HRESULT AddressBookName([out, retval] BSTR* AddressBookName);
        [id(0x0000fa6e), propput, helpcontext(0x000007d4)]
        HRESULT AddressBookName([in] BSTR AddressBookName);
        [id(0x0000fa6f), propget, helpcontext(0x000007d5)]
        HRESULT ShowAsOutlookAB([out, retval] VARIANT_BOOL* ShowAsOutlookAB);
        [id(0x0000fa6f), propput, helpcontext(0x000007d5)]
        HRESULT ShowAsOutlookAB([in] VARIANT_BOOL ShowAsOutlookAB);
        [id(0x0000fa78), propget, helpcontext(0x000007d6)]
        HRESULT FolderPath([out, retval] BSTR* FolderPath);
        [id(0x0000fa61), hidden, helpcontext(0x000007d7)]
        HRESULT AddToFavorites(
                        [in, optional] VARIANT fNoUI, 
                        [in, optional] VARIANT Name);
        [id(0x0000fa4b), propget, helpcontext(0x000007d8)]
        HRESULT InAppFolderSyncObject([out, retval] VARIANT_BOOL* InAppFolderSyncObject);
        [id(0x0000fa4b), propput, helpcontext(0x000007d8)]
        HRESULT InAppFolderSyncObject([in] VARIANT_BOOL InAppFolderSyncObject);
        [id(0x00002200), propget, helpcontext(0x000007d9)]
        HRESULT CurrentView([out, retval] View** CurrentView);
        [id(0x0000fa46), propget, helpcontext(0x000007da)]
        HRESULT CustomViewsOnly([out, retval] VARIANT_BOOL* CustomViewsOnly);
        [id(0x0000fa46), propput, helpcontext(0x000007da)]
        HRESULT CustomViewsOnly([in] VARIANT_BOOL CustomViewsOnly);
        [id(0x00003109), propget, helpcontext(0x000007db)]
        HRESULT Views([out, retval] _Views** Views);
        [id(0x0000f100), propget, hidden, helpcontext(0x000007dc)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000fa91), propget, hidden, helpcontext(0x000007dd)]
        HRESULT FullFolderPath([out, retval] BSTR* FullFolderPath);
        [id(0x0000fab6), propget, helpcontext(0x000007de)]
        HRESULT IsSharePointFolder([out, retval] VARIANT_BOOL* IsSharePointFolder);
        [id(0x0000fac2), propget, helpcontext(0x000007df)]
        HRESULT ShowItemCount([out, retval] OlShowItemCount* ShowItemCount);
        [id(0x0000fac2), propput, helpcontext(0x000007df)]
        HRESULT ShowItemCount([in] OlShowItemCount ShowItemCount);
        [id(0x0000fad9), propget, helpcontext(0x000007e0)]
        HRESULT Store([out, retval] _Store** Store);
        [id(0x0000fb08), helpcontext(0x000007e1)]
        HRESULT GetStorage(
                        [in] BSTR StorageIdentifier, 
                        [in] OlStorageIdentifierType StorageIdentifierType, 
                        [out, retval] _StorageItem** StorageItem);
        [id(0x0000fb1d), helpcontext(0x000007e2)]
        HRESULT GetTable(
                        [in, optional] VARIANT Filter, 
                        [in, optional] VARIANT TableContents, 
                        [out, retval] _Table** Table);
        [id(0x0000fafd), propget, helpcontext(0x000007e3)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fba2), helpcontext(0x000007e4)]
        HRESULT GetCalendarExporter([out, retval] _CalendarSharing** Exporter);
        [id(0x0000f816), propget, helpcontext(0x000007e5)]
        HRESULT UserDefinedProperties([out, retval] _UserDefinedProperties** UserDefinedProperties);
        [id(0x0000fc3c), helpcontext(0x00000cf4)]
        HRESULT GetCustomIcon([out, retval] Picture** Picture);
        [id(0x0000fc3d), helpcontext(0x00000cf5)]
        HRESULT SetCustomIcon([in] Picture* Picture);
    };

    


    [
      odl,
      uuid(00063040-0000-0000-C000-000000000046),
      helpcontext(0x00000026),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Folders : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000027)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000028)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000029)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000002a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000002b)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000002c),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] MAPIFolder** Item);
        [id(0x0000005a), propget, hidden, helpcontext(0x0000002d)]
        HRESULT RawTable([out, retval] IUnknown** RawTable);
        [id(0x0000005f), helpcontext(0x0000002e)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in, optional] VARIANT Type, 
                        [out, retval] MAPIFolder** Folder);
        [id(0x00000056), helpcontext(0x0000002f)]
        HRESULT GetFirst([out, retval] MAPIFolder** Folder);
        [id(0x00000058), helpcontext(0x00000030)]
        HRESULT GetLast([out, retval] MAPIFolder** Folder);
        [id(0x00000057), helpcontext(0x00000031)]
        HRESULT GetNext([out, retval] MAPIFolder** Folder);
        [id(0x00000059), helpcontext(0x00000032)]
        HRESULT GetPrevious([out, retval] MAPIFolder** Folder);
        [id(0x00000054), helpcontext(0x00000033)]
        HRESULT Remove([in] long Index);
    };

    [
      odl,
      uuid(00063041-0000-0000-C000-000000000046),
      helpcontext(0x00000034),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Items : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000035)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000036)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000037)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000038)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000039)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000003a),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] IDispatch** Item);
        [id(0x0000005a), propget, hidden, helpcontext(0x0000003b)]
        HRESULT RawTable([out, retval] IUnknown** RawTable);
        [id(0x000000ce), propget, helpcontext(0x0000003c)]
        HRESULT IncludeRecurrences([out, retval] VARIANT_BOOL* IncludeRecurrences);
        [id(0x000000ce), propput, helpcontext(0x0000003c)]
        HRESULT IncludeRecurrences([in] VARIANT_BOOL IncludeRecurrences);
        [id(0x0000005f), helpcontext(0x0000003d)]
        HRESULT Add(
                        [in, optional] VARIANT Type, 
                        [out, retval] IDispatch** Item);
        [id(0x00000062), helpcontext(0x0000003e)]
        HRESULT Find(
                        [in] BSTR Filter, 
                        [out, retval] IDispatch** Item);
        [id(0x00000063), helpcontext(0x0000003f)]
        HRESULT FindNext([out, retval] IDispatch** Item);
        [id(0x00000056), helpcontext(0x00000040)]
        HRESULT GetFirst([out, retval] IDispatch** Item);
        [id(0x00000058), helpcontext(0x00000041)]
        HRESULT GetLast([out, retval] IDispatch** Item);
        [id(0x00000057), helpcontext(0x00000042)]
        HRESULT GetNext([out, retval] IDispatch** Item);
        [id(0x00000059), helpcontext(0x00000043)]
        HRESULT GetPrevious([out, retval] IDispatch** Item);
        [id(0x00000054), helpcontext(0x00000044)]
        HRESULT Remove([in] long Index);
        [id(0x0000005d), helpcontext(0x00000045)]
        HRESULT ResetColumns();
        [id(0x00000064), helpcontext(0x00000046)]
        HRESULT Restrict(
                        [in] BSTR Filter, 
                        [out, retval] _Items** Items);
        [id(0x0000005c), helpcontext(0x00000047)]
        HRESULT SetColumns([in] BSTR Columns);
        [id(0x00000061), helpcontext(0x00000048)]
        HRESULT Sort(
                        [in] BSTR Property, 
                        [in, optional] VARIANT Descending);
    };

    [
      odl,
      uuid(00063003-0000-0000-C000-000000000046),
      helpcontext(0x00000ac4),
      dual,
      oleautomation
    ]
    interface _Explorer : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000ac5)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000ac6)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000ac7)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000ac8)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002100), propget, hidden, helpcontext(0x00000ac9)]
        HRESULT CommandBars([out, retval] CommandBars** CommandBars);
        [id(0x00002101), propget, helpcontext(0x00000aca)]
        HRESULT CurrentFolder([out, retval] MAPIFolder** CurrentFolder);
        [id(0x00002101), propputref, helpcontext(0x00000aca)]
        HRESULT CurrentFolder([in] MAPIFolder* CurrentFolder);
        [id(0x00002103), helpcontext(0x00000acb)]
        HRESULT Close();
        [id(0x00002104), helpcontext(0x00000acc)]
        HRESULT Display();
        [id(0x00002111), propget, helpcontext(0x00000acd)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0x00002200), propget, helpcontext(0x00000ace)]
        HRESULT CurrentView([out, retval] VARIANT* CurrentView);
        [id(0x00002200), propput, helpcontext(0x00000ace)]
        HRESULT CurrentView([in] VARIANT CurrentView);
        [id(0x00002114), propget, helpcontext(0x00000acf)]
        HRESULT Height([out, retval] long* Height);
        [id(0x00002114), propput, helpcontext(0x00000acf)]
        HRESULT Height([in] long Height);
        [id(0x00002115), propget, helpcontext(0x00000ad0)]
        HRESULT Left([out, retval] long* Left);
        [id(0x00002115), propput, helpcontext(0x00000ad0)]
        HRESULT Left([in] long Left);
        [id(0x00002201), propget, helpcontext(0x00000ad1)]
        HRESULT Panes([out, retval] Panes** Panes);
        [id(0x00002202), propget, helpcontext(0x00000ad2)]
        HRESULT Selection([out, retval] Selection** Selection);
        [id(0x00002116), propget, helpcontext(0x00000ad3)]
        HRESULT Top([out, retval] long* Top);
        [id(0x00002116), propput, helpcontext(0x00000ad3)]
        HRESULT Top([in] long Top);
        [id(0x00002117), propget, helpcontext(0x00000ad4)]
        HRESULT Width([out, retval] long* Width);
        [id(0x00002117), propput, helpcontext(0x00000ad4)]
        HRESULT Width([in] long Width);
        [id(0x00002112), propget, helpcontext(0x00000ad5)]
        HRESULT WindowState([out, retval] OlWindowState* WindowState);
        [id(0x00002112), propput, helpcontext(0x00000ad5)]
        HRESULT WindowState([in] OlWindowState WindowState);
        [id(0x00002113), helpcontext(0x00000ad6)]
        HRESULT Activate();
        [id(0x00002203), helpcontext(0x00000ad7)]
        HRESULT IsPaneVisible(
                        [in] OlPane Pane, 
                        [out, retval] VARIANT_BOOL* IsPaneVisible);
        [id(0x00002204), helpcontext(0x00000ad8)]
        HRESULT ShowPane(
                        [in] OlPane Pane, 
                        [in] VARIANT_BOOL Visible);
        [id(0x00003109), propget, hidden, helpcontext(0x00000ad9)]
        HRESULT Views([out, retval] IDispatch** Views);
        [id(0x0000fa92), propget, helpcontext(0x00000ada)]
        HRESULT HTMLDocument([out, retval] IDispatch** HTMLDocument);
        [id(0x0000fab1), hidden, helpcontext(0x00000adb)]
        HRESULT SelectFolder([in] MAPIFolder* Folder);
        [id(0x0000fab2), hidden, helpcontext(0x00000adc)]
        HRESULT DeselectFolder([in] MAPIFolder* Folder);
        [id(0x0000fab3), hidden, helpcontext(0x00000add)]
        HRESULT IsFolderSelected(
                        [in] MAPIFolder* Folder, 
                        [out, retval] VARIANT_BOOL* fIsSelected);
        [id(0x0000fbb3), propget, helpcontext(0x00000ade)]
        HRESULT NavigationPane([out, retval] _NavigationPane** NavigationPane);
        [id(0x0000fbcd), helpcontext(0x00000adf)]
        HRESULT ClearSearch();
        [id(0x0000fa65), helpcontext(0x00000ae0)]
        HRESULT Search(
                        [in] BSTR Query, 
                        [in] OlSearchScope SearchScope);
        [id(0x0000fc35), helpcontext(0x00000cec)]
        HRESULT IsItemSelectableInView(
                        [in] IDispatch* Item, 
                        [out, retval] VARIANT_BOOL* fIsSelectable);
        [id(0x0000fc36), helpcontext(0x00000ced)]
        HRESULT AddToSelection([in] IDispatch* Item);
        [id(0x0000fc37), helpcontext(0x00000cee)]
        HRESULT RemoveFromSelection([in] IDispatch* Item);
        [id(0x0000fc38), helpcontext(0x00000cef)]
        HRESULT SelectAllItems();
        [id(0x0000fc39), helpcontext(0x00000cf0)]
        HRESULT ClearSelection();
        [id(0x0000fc71), propget, helpcontext(0x00000de1)]
        HRESULT AccountSelector([out, retval] _AccountSelector** AccountSelector);
        [id(0x0000fc78), propget, helpcontext(0x00000d97)]
        HRESULT AttachmentSelection([out, retval] _AttachmentSelection** AttachmentSelection);
        [id(0x0000fc93), propget, helpcontext(0x00000e0b)]
        HRESULT ActiveInlineResponse([out, retval] IDispatch** ActiveInlineResponse);
        [id(0x0000fc94), propget, helpcontext(0x00000e0d)]
        HRESULT ActiveInlineResponseWordEditor([out, retval] IDispatch** ActiveInlineResponseWordEditor);
    };

    [
      odl,
      uuid(00063009-0000-0000-C000-000000000046),
      helpcontext(0x00000049),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface Panes : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000004a)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000004b)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000004c)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000004d)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000004e)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000004f),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] IDispatch** Item);
    };

    


    [
      odl,
      uuid(000630E6-0000-0000-C000-000000000046),
      helpcontext(0x00000ae1),
      dual,
      oleautomation
    ]
    interface _NavigationPane : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000ae2)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000ae3)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000ae4)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000ae5)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbb4), propget, helpcontext(0x00000ae6)]
        HRESULT IsCollapsed([out, retval] VARIANT_BOOL* IsCollapsed);
        [id(0x0000fbb4), propput, helpcontext(0x00000ae6)]
        HRESULT IsCollapsed([in] VARIANT_BOOL IsCollapsed);
        [id(0x0000fbb5), propget, helpcontext(0x00000ae7)]
        HRESULT CurrentModule([out, retval] _NavigationModule** CurrentModule);
        [id(0x0000fbb5), propputref, helpcontext(0x00000ae7)]
        HRESULT CurrentModule([in] _NavigationModule* CurrentModule);
        [id(0x0000fbb6), propget, helpcontext(0x00000ae8)]
        HRESULT DisplayedModuleCount([out, retval] long* DisplayedModuleCount);
        [id(0x0000fbb6), propput, helpcontext(0x00000ae8)]
        HRESULT DisplayedModuleCount([in] long DisplayedModuleCount);
        [id(0x0000fbb7), propget, helpcontext(0x00000ae9)]
        HRESULT Modules([out, retval] _NavigationModules** Modules);
    };

    [
      uuid(000610E8-0000-0000-C000-000000000046),
      helpcontext(0x00000c8b),
      noncreatable
    ]
    coclass NavigationModule {
        [default] interface _NavigationModule;
    };

    [
      odl,
      uuid(000630E8-0000-0000-C000-000000000046),
      helpcontext(0x00000af2),
      dual,
      oleautomation
    ]
    interface _NavigationModule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000af3)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000af4)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000af5)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000af6)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbb9), propget, helpcontext(0x00000ca9)]
        HRESULT NavigationModuleType([out, retval] OlNavigationModuleType* NavigationModuleType);
        [id(0x00002102), propget, helpcontext(0x00000af8)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fbba), propget, helpcontext(0x00000af9)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbba), propput, helpcontext(0x00000af9)]
        HRESULT Position([in] long Position);
        [id(0x0000fbbb), propget, helpcontext(0x00000afa)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x0000fbbb), propput, helpcontext(0x00000afa)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
    };

    


    [
      uuid(000610E7-0000-0000-C000-000000000046),
      helpcontext(0x00000c78),
      noncreatable
    ]
    coclass NavigationModules {
        [default] interface _NavigationModules;
    };

    [
      odl,
      uuid(000630E7-0000-0000-C000-000000000046),
      helpcontext(0x00000aea),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _NavigationModules : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000aeb)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000aec)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000aed)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000aee)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000aef)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000af0),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _NavigationModule** Item);
        [id(0x0000fbb8), helpcontext(0x00000ca8)]
        HRESULT GetNavigationModule(
                        [in] OlNavigationModuleType ModuleType, 
                        [out, retval] _NavigationModule** NavigationModule);
    };

    


    [
      odl,
      uuid(00063103-0000-0000-C000-000000000046),
      helpcontext(0x00000d78),
      dual,
      oleautomation
    ]
    interface _AccountSelector : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000d79)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000d7a)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000d7b)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000d7c)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fc72), propget, helpcontext(0x00000d7d)]
        HRESULT SelectedAccount([out, retval] _Account** SelectedAccount);
    };

    [
      odl,
      uuid(000630C5-0000-0000-C000-000000000046),
      helpcontext(0x000002df),
      dual,
      oleautomation
    ]
    interface _Account : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000002e0)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000002e1)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000002e2)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000002e3)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fad2), propget, helpcontext(0x000002e4)]
        HRESULT AccountType([out, retval] OlAccountType* AccountType);
        [id(0x00003001), propget, helpcontext(0x000002e5)]
        HRESULT DisplayName([out, retval] BSTR* DisplayName);
        [id(0x0000fad3), propget, helpcontext(0x000002e6)]
        HRESULT UserName([out, retval] BSTR* UserName);
        [id(0x0000fad4), propget, helpcontext(0x000002e7)]
        HRESULT SmtpAddress([out, retval] BSTR* SmtpAddress);
        [id(0x0000fc6f), propget, helpcontext(0x00000d6c)]
        HRESULT AutoDiscoverConnectionMode([out, retval] OlAutoDiscoverConnectionMode* AutoDiscoverConnectionMode);
        [id(0x0000fc6e), propget, helpcontext(0x00000d35)]
        HRESULT CurrentUser([out, retval] Recipient** CurrentUser);
        [id(0x0000fc70), propget, helpcontext(0x00000d5e)]
        HRESULT AutoDiscoverXml([out, retval] BSTR* AutoDiscoverXml);
        [id(0x0000fc66), propget, helpcontext(0x00000d5f)]
        HRESULT DeliveryStore([out, retval] _Store** DeliveryStore);
        [id(0x0000fc67), propget, helpcontext(0x00000d60)]
        HRESULT ExchangeConnectionMode([out, retval] OlExchangeConnectionMode* ExchangeConnectionMode);
        [id(0x0000fc68), propget, helpcontext(0x00000dde)]
        HRESULT ExchangeMailboxServerName([out, retval] BSTR* ExchangeMailboxServerName);
        [id(0x0000fc69), propget, helpcontext(0x00000ddf)]
        HRESULT ExchangeMailboxServerVersion([out, retval] BSTR* ExchangeMailboxServerVersion);
        [id(0x0000fc6a), helpcontext(0x00000d63)]
        HRESULT GetAddressEntryFromID(
                        [in] BSTR ID, 
                        [out, retval] AddressEntry** AddressEntry);
        [id(0x0000fc6b), helpcontext(0x00000d64)]
        HRESULT GetRecipientFromID(
                        [in] BSTR EntryID, 
                        [out, retval] Recipient** Recipient);
        [id(0x00000064), propget, hidden, helpcontext(0x00000e0a)]
        HRESULT IOlkAccount([out, retval] IUnknown** IOlkAccount);
    };

    


    


    [
      uuid(000610C7-0000-0000-C000-000000000046),
      helpcontext(0x00000c53),
      noncreatable
    ]
    coclass Store {
        [default] interface _Store;
    };

    [
      odl,
      uuid(000630C7-0000-0000-C000-000000000046),
      helpcontext(0x0000031b),
      dual,
      oleautomation
    ]
    interface _Store : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000031c)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000031d)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000031e)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000031f)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003001), propget, helpcontext(0x00000320)]
        HRESULT DisplayName([out, retval] BSTR* DisplayName);
        [id(0x00003108), propget, helpcontext(0x00000321)]
        HRESULT StoreID([out, retval] BSTR* StoreID);
        [id(0x0000fada), propget, helpcontext(0x00000322)]
        HRESULT ExchangeStoreType([out, retval] OlExchangeStoreType* ExchangeStoreType);
        [id(0x0000fadd), propget, helpcontext(0x00000323)]
        HRESULT FilePath([out, retval] BSTR* FilePath);
        [id(0x0000fade), propget, helpcontext(0x00000324)]
        HRESULT IsCachedExchange([out, retval] VARIANT_BOOL* IsCachedExchange);
        [id(0x0000fadf), propget, helpcontext(0x00000325)]
        HRESULT IsDataFileStore([out, retval] VARIANT_BOOL* IsDataFileStore);
        [id(0x0000fadb), helpcontext(0x00000326)]
        HRESULT GetRootFolder([out, retval] MAPIFolder** RootFolder);
        [id(0x0000fadc), helpcontext(0x00000327)]
        HRESULT GetSearchFolders([out, retval] _Folders** SearchFolders);
        [id(0x0000fae0), propget, helpcontext(0x00000328)]
        HRESULT IsOpen([out, retval] VARIANT_BOOL* IsOpen);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000329)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000fb09), helpcontext(0x0000032a)]
        HRESULT GetRules([out, retval] _Rules** Rules);
        [id(0x0000fafd), propget, helpcontext(0x0000032b)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x00002108), helpcontext(0x0000032c)]
        HRESULT GetSpecialFolder(
                        [in] OlSpecialFolders FolderType, 
                        [out, retval] MAPIFolder** Folder);
        [id(0x0000fc14), propget, helpcontext(0x00000cc0)]
        HRESULT IsInstantSearchEnabled([out, retval] VARIANT_BOOL* IsInstantSearchEnabled);
        [id(0x0000fc4e), helpcontext(0x00000d34)]
        HRESULT RefreshQuotaDisplay();
        [id(0x0000fc6d), helpcontext(0x00000d6d)]
        HRESULT GetDefaultFolder(
                        [in] OlDefaultFolders FolderType, 
                        [out, retval] MAPIFolder** Folder);
        [id(0x0000fc76), propget, helpcontext(0x00000dbe)]
        HRESULT IsConversationEnabled([out, retval] VARIANT_BOOL* IsConversationEnabled);
        [id(0x0000fba5), propget, helpcontext(0x00000db8)]
        HRESULT Categories([out, retval] _Categories** Categories);
    };

    


    [
      uuid(000610CC-0000-0000-C000-000000000046),
      helpcontext(0x00000c58),
      noncreatable
    ]
    coclass Rules {
        [default] interface _Rules;
    };

    [
      odl,
      uuid(000630CC-0000-0000-C000-000000000046),
      helpcontext(0x00000869),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Rules : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000086a)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000086b)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000086c)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000086d)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000086e)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000086f),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _Rule** Item);
        [id(0x0000fb0a), helpcontext(0x00000870)]
        HRESULT Create(
                        [in] BSTR Name, 
                        [in] OlRuleType RuleType, 
                        [out, retval] _Rule** Rule);
        [id(0x0000f048), helpcontext(0x00000871)]
        HRESULT Save([in, optional] VARIANT ShowProgress);
        [id(0x00000052), helpcontext(0x00000872)]
        HRESULT Remove([in] VARIANT Index);
        [id(0x0000fc15), propget, helpcontext(0x00000cb1)]
        HRESULT IsRssRulesProcessingEnabled([out, retval] VARIANT_BOOL* IsRssRulesProcessingEnabled);
        [id(0x0000fc15), propput, helpcontext(0x00000cb1)]
        HRESULT IsRssRulesProcessingEnabled([in] VARIANT_BOOL IsRssRulesProcessingEnabled);
    };

    [
      odl,
      uuid(000630CD-0000-0000-C000-000000000046),
      helpcontext(0x00000873),
      dual,
      oleautomation
    ]
    interface _Rule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000874)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000875)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000876)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000877)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002102), propget, helpcontext(0x00000878)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00002102), propput, helpcontext(0x00000878)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fb0b), propget, helpcontext(0x00000879)]
        HRESULT ExecutionOrder([out, retval] long* ExecutionOrder);
        [id(0x0000fb0b), propput, helpcontext(0x00000879)]
        HRESULT ExecutionOrder([in] long ExecutionOrder);
        [id(0x0000fb0c), propget, helpcontext(0x0000087a)]
        HRESULT RuleType([out, retval] OlRuleType* RuleType);
        [id(0x00000067), propget, helpcontext(0x0000087b)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x0000087b)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb0d), propget, helpcontext(0x0000087c)]
        HRESULT IsLocalRule([out, retval] VARIANT_BOOL* IsLocalRule);
        [id(0x0000fb0e), helpcontext(0x0000087d)]
        HRESULT Execute(
                        [in, optional] VARIANT ShowProgress, 
                        [in, optional] VARIANT Folder, 
                        [in, optional] VARIANT IncludeSubfolders, 
                        [in, optional] VARIANT RuleExecuteOption);
        [id(0x0000fb10), propget, helpcontext(0x0000087e)]
        HRESULT Actions([out, retval] _RuleActions** Actions);
        [id(0x0000fb29), propget, helpcontext(0x0000087f)]
        HRESULT Conditions([out, retval] _RuleConditions** Conditions);
        [id(0x0000fb33), propget, helpcontext(0x00000880)]
        HRESULT Exceptions([out, retval] _RuleConditions** Exceptions);
    };

    


    [
      uuid(000610CE-0000-0000-C000-000000000046),
      helpcontext(0x00000c5a),
      noncreatable
    ]
    coclass RuleActions {
        [default] interface _RuleActions;
    };

    [
      odl,
      uuid(000630CE-0000-0000-C000-000000000046),
      helpcontext(0x00000881),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _RuleActions : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000882)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000883)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000884)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000885)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000886)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000887),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] long Index, 
                        [out, retval] _RuleAction** Item);
        [id(0x0000fb12), propget, helpcontext(0x00000888)]
        HRESULT CopyToFolder([out, retval] _MoveOrCopyRuleAction** CopyToFolder);
        [id(0x0000fb13), propget, helpcontext(0x00000889)]
        HRESULT DeletePermanently([out, retval] _RuleAction** DeletePermanently);
        [id(0x0000f045), propget, helpcontext(0x0000088a)]
        HRESULT Delete([out, retval] _RuleAction** Delete);
        [id(0x0000fb17), propget, helpcontext(0x0000088b)]
        HRESULT DesktopAlert([out, retval] _RuleAction** DesktopAlert);
        [id(0x0000fb16), propget, helpcontext(0x0000088c)]
        HRESULT NotifyDelivery([out, retval] _RuleAction** NotifyDelivery);
        [id(0x0000fb15), propget, helpcontext(0x0000088d)]
        HRESULT NotifyRead([out, retval] _RuleAction** NotifyRead);
        [id(0x0000fb14), propget, helpcontext(0x0000088e)]
        HRESULT Stop([out, retval] _RuleAction** Stop);
        [id(0x0000fb18), propget, helpcontext(0x0000088f)]
        HRESULT MoveToFolder([out, retval] _MoveOrCopyRuleAction** MoveToFolder);
        [id(0x0000fb19), propget, helpcontext(0x00000890)]
        HRESULT CC([out, retval] _SendRuleAction** CC);
        [id(0x0000fb1a), propget, helpcontext(0x00000891)]
        HRESULT Forward([out, retval] _SendRuleAction** Forward);
        [id(0x0000fb1b), propget, helpcontext(0x00000892)]
        HRESULT ForwardAsAttachment([out, retval] _SendRuleAction** ForwardAsAttachment);
        [id(0x0000fb1c), propget, helpcontext(0x00000893)]
        HRESULT Redirect([out, retval] _SendRuleAction** Redirect);
        [id(0x0000fb22), propget, helpcontext(0x00000894)]
        HRESULT AssignToCategory([out, retval] _AssignToCategoryRuleAction** AssignToCategory);
        [id(0x0000fb23), propget, helpcontext(0x00000895)]
        HRESULT PlaySound([out, retval] _PlaySoundRuleAction** PlaySound);
        [id(0x0000fb26), propget, helpcontext(0x00000896)]
        HRESULT MarkAsTask([out, retval] _MarkAsTaskRuleAction** MarkAsTask);
        [id(0x0000fb28), propget, helpcontext(0x00000897)]
        HRESULT NewItemAlert([out, retval] _NewItemAlertRuleAction** NewItemAlert);
        [id(0x0000fc12), propget, helpcontext(0x00000ca1)]
        HRESULT ClearCategories([out, retval] _RuleAction** ClearCategories);
    };

    [
      odl,
      uuid(000630CF-0000-0000-C000-000000000046),
      helpcontext(0x00000898),
      dual,
      oleautomation
    ]
    interface _RuleAction : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000899)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000089a)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000089b)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000089c)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x0000089d)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x0000089d)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb0f), propget, helpcontext(0x0000089e)]
        HRESULT ActionType([out, retval] OlRuleActionType* ActionType);
    };

    


    [
      uuid(000610D0-0000-0000-C000-000000000046),
      helpcontext(0x00000c5c),
      noncreatable
    ]
    coclass MoveOrCopyRuleAction {
        [default] interface _MoveOrCopyRuleAction;
    };

    [
      odl,
      uuid(000630D0-0000-0000-C000-000000000046),
      helpcontext(0x0000089f),
      dual,
      oleautomation
    ]
    interface _MoveOrCopyRuleAction : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008a0)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008a1)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008a2)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008a3)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x000008a4)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x000008a4)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb0f), propget, helpcontext(0x000008a5)]
        HRESULT ActionType([out, retval] OlRuleActionType* ActionType);
        [id(0x0000fb11), propget, helpcontext(0x000008a6)]
        HRESULT Folder([out, retval] MAPIFolder** Folder);
        [id(0x0000fb11), propput, helpcontext(0x000008a6)]
        HRESULT Folder([in] MAPIFolder* Folder);
    };

    [
      uuid(000610CF-0000-0000-C000-000000000046),
      helpcontext(0x00000c5b),
      noncreatable
    ]
    coclass RuleAction {
        [default] interface _RuleAction;
    };

    [
      uuid(000610D1-0000-0000-C000-000000000046),
      helpcontext(0x00000c5d),
      noncreatable
    ]
    coclass SendRuleAction {
        [default] interface _SendRuleAction;
    };

    [
      odl,
      uuid(000630D1-0000-0000-C000-000000000046),
      helpcontext(0x000008a7),
      dual,
      oleautomation
    ]
    interface _SendRuleAction : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008a8)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008a9)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008aa)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008ab)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x000008ac)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x000008ac)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb0f), propget, helpcontext(0x000008ad)]
        HRESULT ActionType([out, retval] OlRuleActionType* ActionType);
        [id(0x0000f814), propget, helpcontext(0x000008ae)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
    };

    [
      odl,
      uuid(0006303B-0000-0000-C000-000000000046),
      helpcontext(0x000000e1),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface Recipients : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000000e2)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000000e3)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000000e4)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000000e5)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x000000e6)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x000000e7),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] Recipient** Item);
        [id(0x0000006f), helpcontext(0x000000e8)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [out, retval] Recipient** Recipient);
        [id(0x00000054), helpcontext(0x000000e9)]
        HRESULT Remove([in] long Index);
        [id(0x0000007e), helpcontext(0x000000ea)]
        HRESULT ResolveAll([out, retval] VARIANT_BOOL* Success);
    };

    [
      uuid(000610D4-0000-0000-C000-000000000046),
      helpcontext(0x00000c60),
      noncreatable
    ]
    coclass AssignToCategoryRuleAction {
        [default] interface _AssignToCategoryRuleAction;
    };

    [
      odl,
      uuid(000630D4-0000-0000-C000-000000000046),
      helpcontext(0x000008d6),
      dual,
      oleautomation
    ]
    interface _AssignToCategoryRuleAction : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008d7)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008d8)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008d9)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008da)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x000008db)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x000008db)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb0f), propget, helpcontext(0x000008dc)]
        HRESULT ActionType([out, retval] OlRuleActionType* ActionType);
        [id(0x0000fb21), propget, helpcontext(0x000008dd)]
        HRESULT Categories([out, retval] VARIANT* Categories);
        [id(0x0000fb21), propput, helpcontext(0x000008dd)]
        HRESULT Categories([in] VARIANT Categories);
    };

    [
      uuid(000610D5-0000-0000-C000-000000000046),
      helpcontext(0x00000c61),
      noncreatable
    ]
    coclass PlaySoundRuleAction {
        [default] interface _PlaySoundRuleAction;
    };

    [
      odl,
      uuid(000630D5-0000-0000-C000-000000000046),
      helpcontext(0x000008de),
      dual,
      oleautomation
    ]
    interface _PlaySoundRuleAction : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008df)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008e0)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008e1)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008e2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x000008e3)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x000008e3)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb0f), propget, helpcontext(0x000008e4)]
        HRESULT ActionType([out, retval] OlRuleActionType* ActionType);
        [id(0x0000fadd), propget, helpcontext(0x000008e5)]
        HRESULT FilePath([out, retval] BSTR* FilePath);
        [id(0x0000fadd), propput, helpcontext(0x000008e5)]
        HRESULT FilePath([in] BSTR FilePath);
    };

    [
      uuid(000610D6-0000-0000-C000-000000000046),
      helpcontext(0x00000c62),
      noncreatable
    ]
    coclass MarkAsTaskRuleAction {
        [default] interface _MarkAsTaskRuleAction;
    };

    [
      odl,
      uuid(000630D6-0000-0000-C000-000000000046),
      helpcontext(0x000008e6),
      dual,
      oleautomation
    ]
    interface _MarkAsTaskRuleAction : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008e7)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008e8)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008e9)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008ea)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x000008eb)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x000008eb)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb0f), propget, helpcontext(0x000008ec)]
        HRESULT ActionType([out, retval] OlRuleActionType* ActionType);
        [id(0x0000fb24), propget, helpcontext(0x000008ed)]
        HRESULT FlagTo([out, retval] BSTR* FlagTo);
        [id(0x0000fb24), propput, helpcontext(0x000008ed)]
        HRESULT FlagTo([in] BSTR FlagTo);
        [id(0x0000fb25), propget, helpcontext(0x000008ee)]
        HRESULT MarkInterval([out, retval] OlMarkInterval* MarkInterval);
        [id(0x0000fb25), propput, helpcontext(0x000008ee)]
        HRESULT MarkInterval([in] OlMarkInterval MarkInterval);
    };

    


    [
      uuid(000610D7-0000-0000-C000-000000000046),
      helpcontext(0x00000c63),
      noncreatable
    ]
    coclass NewItemAlertRuleAction {
        [default] interface _NewItemAlertRuleAction;
    };

    [
      odl,
      uuid(000630D7-0000-0000-C000-000000000046),
      helpcontext(0x000008ef),
      dual,
      oleautomation
    ]
    interface _NewItemAlertRuleAction : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008f0)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008f1)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008f2)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008f3)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x000008f4)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x000008f4)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb0f), propget, helpcontext(0x000008f5)]
        HRESULT ActionType([out, retval] OlRuleActionType* ActionType);
        [id(0x0000fb27), propget, helpcontext(0x000008f6)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(0x0000fb27), propput, helpcontext(0x000008f6)]
        HRESULT Text([in] BSTR Text);
    };

    [
      uuid(000610D8-0000-0000-C000-000000000046),
      helpcontext(0x00000c64),
      noncreatable
    ]
    coclass RuleConditions {
        [default] interface _RuleConditions;
    };

    [
      odl,
      uuid(000630D8-0000-0000-C000-000000000046),
      helpcontext(0x000008f7),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _RuleConditions : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008f8)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008f9)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008fa)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008fb)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x000008fc)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x000008fd),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] long Index, 
                        [out, retval] _RuleCondition** Item);
        [id(0x0000fb2c), propget, helpcontext(0x000008fe)]
        HRESULT CC([out, retval] _RuleCondition** CC);
        [id(0x0000fb2d), propget, helpcontext(0x000008ff)]
        HRESULT HasAttachment([out, retval] _RuleCondition** HasAttachment);
        [id(0x0000fb2b), propget, helpcontext(0x00000900)]
        HRESULT Importance([out, retval] _ImportanceRuleCondition** Importance);
        [id(0x0000fb2e), propget, helpcontext(0x00000901)]
        HRESULT MeetingInviteOrUpdate([out, retval] _RuleCondition** MeetingInviteOrUpdate);
        [id(0x0000fb2f), propget, helpcontext(0x00000902)]
        HRESULT NotTo([out, retval] _RuleCondition** NotTo);
        [id(0x0000fb30), propget, helpcontext(0x00000903)]
        HRESULT OnlyToMe([out, retval] _RuleCondition** OnlyToMe);
        [id(0x0000fb31), propget, helpcontext(0x00000904)]
        HRESULT ToMe([out, retval] _RuleCondition** ToMe);
        [id(0x0000fb32), propget, helpcontext(0x00000905)]
        HRESULT ToOrCc([out, retval] _RuleCondition** ToOrCc);
        [id(0x0000fad1), propget, helpcontext(0x00000906)]
        HRESULT Account([out, retval] _AccountRuleCondition** Account);
        [id(0x0000fb48), propget, helpcontext(0x00000907)]
        HRESULT Body([out, retval] _TextRuleCondition** Body);
        [id(0x0000fb49), propget, helpcontext(0x00000908)]
        HRESULT BodyOrSubject([out, retval] _TextRuleCondition** BodyOrSubject);
        [id(0x0000fb4a), propget, helpcontext(0x00000909)]
        HRESULT Category([out, retval] _CategoryRuleCondition** Category);
        [id(0x0000fb4b), propget, helpcontext(0x0000090a)]
        HRESULT FormName([out, retval] _FormNameRuleCondition** FormName);
        [id(0x0000fb4c), propget, helpcontext(0x0000090b)]
        HRESULT From([out, retval] _ToOrFromRuleCondition** From);
        [id(0x0000fb4e), propget, helpcontext(0x0000090c)]
        HRESULT MessageHeader([out, retval] _TextRuleCondition** MessageHeader);
        [id(0x0000fb52), propget, helpcontext(0x0000090d)]
        HRESULT RecipientAddress([out, retval] _AddressRuleCondition** RecipientAddress);
        [id(0x0000fb4f), propget, helpcontext(0x0000090e)]
        HRESULT SenderAddress([out, retval] _AddressRuleCondition** SenderAddress);
        [id(0x0000fb50), propget, helpcontext(0x0000090f)]
        HRESULT SenderInAddressList([out, retval] _SenderInAddressListRuleCondition** SenderInAddressList);
        [id(0x0000fb51), propget, helpcontext(0x00000910)]
        HRESULT Subject([out, retval] _TextRuleCondition** Subject);
        [id(0x0000fb53), propget, helpcontext(0x00000911)]
        HRESULT SentTo([out, retval] _ToOrFromRuleCondition** SentTo);
        [id(0x0000fb54), propget, helpcontext(0x00000912)]
        HRESULT OnLocalMachine([out, retval] _RuleCondition** OnLocalMachine);
        [id(0x0000fbd9), propget, helpcontext(0x00000913)]
        HRESULT OnOtherMachine([out, retval] _RuleCondition** OnOtherMachine);
        [id(0x0000fc13), propget, helpcontext(0x00000ca2)]
        HRESULT AnyCategory([out, retval] _RuleCondition** AnyCategory);
        [id(0x0000fc16), propget, helpcontext(0x00000cb2)]
        HRESULT FromAnyRSSFeed([out, retval] _RuleCondition** FromAnyRSSFeed);
        [id(0x0000fc17), propget, helpcontext(0x00000cb3)]
        HRESULT FromRssFeed([out, retval] _FromRssFeedRuleCondition** FromRssFeed);
    };

    [
      odl,
      uuid(000630D9-0000-0000-C000-000000000046),
      helpcontext(0x00000914),
      dual,
      oleautomation
    ]
    interface _RuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000915)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000916)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000917)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000918)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x00000919)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x00000919)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x0000091a)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
    };

    


    [
      uuid(000610D9-0000-0000-C000-000000000046),
      helpcontext(0x00000c65),
      noncreatable
    ]
    coclass RuleCondition {
        [default] interface _RuleCondition;
    };

    [
      uuid(000610DA-0000-0000-C000-000000000046),
      helpcontext(0x00000c66),
      noncreatable
    ]
    coclass ImportanceRuleCondition {
        [default] interface _ImportanceRuleCondition;
    };

    [
      odl,
      uuid(000630DA-0000-0000-C000-000000000046),
      helpcontext(0x0000091b),
      dual,
      oleautomation
    ]
    interface _ImportanceRuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000091c)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000091d)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000091e)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000091f)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x00000920)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x00000920)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x00000921)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
        [id(0x0000fb2b), propget, helpcontext(0x00000922)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x0000fb2b), propput, helpcontext(0x00000922)]
        HRESULT Importance([in] OlImportance Importance);
    };

    [
      uuid(000610DB-0000-0000-C000-000000000046),
      helpcontext(0x00000c67),
      noncreatable
    ]
    coclass AccountRuleCondition {
        [default] interface _AccountRuleCondition;
    };

    [
      odl,
      uuid(000630DB-0000-0000-C000-000000000046),
      helpcontext(0x00000948),
      dual,
      oleautomation
    ]
    interface _AccountRuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000949)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000094a)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000094b)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000094c)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x0000094d)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x0000094d)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x0000094e)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
        [id(0x0000fad1), propget, helpcontext(0x0000094f)]
        HRESULT Account([out, retval] _Account** Account);
        [id(0x0000fad1), propput, helpcontext(0x0000094f)]
        HRESULT Account([in] _Account* Account);
    };

    [
      uuid(000610C5-0000-0000-C000-000000000046),
      helpcontext(0x00000c51),
      noncreatable
    ]
    coclass Account {
        [default] interface _Account;
    };

    [
      uuid(000610E0-0000-0000-C000-000000000046),
      helpcontext(0x00000c6f),
      noncreatable
    ]
    coclass TextRuleCondition {
        [default] interface _TextRuleCondition;
    };

    [
      odl,
      uuid(000630E0-0000-0000-C000-000000000046),
      helpcontext(0x000009a7),
      dual,
      oleautomation
    ]
    interface _TextRuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000009a8)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000009a9)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000009aa)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000009ab)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x000009ac)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x000009ac)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x000009ad)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
        [id(0x0000fb27), propget, helpcontext(0x000009ae)]
        HRESULT Text([out, retval] VARIANT* Text);
        [id(0x0000fb27), propput, helpcontext(0x000009ae)]
        HRESULT Text([in] VARIANT Text);
    };

    [
      uuid(000610DC-0000-0000-C000-000000000046),
      helpcontext(0x00000c6b),
      noncreatable
    ]
    coclass CategoryRuleCondition {
        [default] interface _CategoryRuleCondition;
    };

    [
      odl,
      uuid(000630DC-0000-0000-C000-000000000046),
      helpcontext(0x00000987),
      dual,
      oleautomation
    ]
    interface _CategoryRuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000988)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000989)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000098a)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000098b)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x0000098c)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x0000098c)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x0000098d)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
        [id(0x0000fb45), propget, helpcontext(0x0000098e)]
        HRESULT Categories([out, retval] VARIANT* Categories);
        [id(0x0000fb45), propput, helpcontext(0x0000098e)]
        HRESULT Categories([in] VARIANT Categories);
    };

    [
      uuid(000610DD-0000-0000-C000-000000000046),
      helpcontext(0x00000c6c),
      noncreatable
    ]
    coclass FormNameRuleCondition {
        [default] interface _FormNameRuleCondition;
    };

    [
      odl,
      uuid(000630DD-0000-0000-C000-000000000046),
      helpcontext(0x0000098f),
      dual,
      oleautomation
    ]
    interface _FormNameRuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000990)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000991)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000992)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000993)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x00000994)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x00000994)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x00000995)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
        [id(0x0000fb46), propget, helpcontext(0x00000996)]
        HRESULT FormName([out, retval] VARIANT* FormName);
        [id(0x0000fb46), propput, helpcontext(0x00000996)]
        HRESULT FormName([in] VARIANT FormName);
    };

    [
      uuid(000610DE-0000-0000-C000-000000000046),
      helpcontext(0x00000c6d),
      noncreatable
    ]
    coclass ToOrFromRuleCondition {
        [default] interface _ToOrFromRuleCondition;
    };

    [
      odl,
      uuid(000630DE-0000-0000-C000-000000000046),
      helpcontext(0x00000997),
      dual,
      oleautomation
    ]
    interface _ToOrFromRuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000998)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000999)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000099a)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000099b)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x0000099c)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x0000099c)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x0000099d)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
        [id(0x0000f814), propget, helpcontext(0x0000099e)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
    };

    [
      uuid(000610FA-0000-0000-C000-000000000046),
      helpcontext(0x00000c83),
      noncreatable
    ]
    coclass AddressRuleCondition {
        [default] interface _AddressRuleCondition;
    };

    [
      odl,
      uuid(000630FA-0000-0000-C000-000000000046),
      helpcontext(0x00000b84),
      dual,
      oleautomation
    ]
    interface _AddressRuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b85)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b86)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b87)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b88)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x00000b89)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x00000b89)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x00000b8a)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
        [id(0x0000fb27), propget, helpcontext(0x00000b8b)]
        HRESULT Address([out, retval] VARIANT* Address);
        [id(0x0000fb27), propput, helpcontext(0x00000b8b)]
        HRESULT Address([in] VARIANT Address);
    };

    [
      uuid(000610DF-0000-0000-C000-000000000046),
      helpcontext(0x00000c6e),
      noncreatable
    ]
    coclass SenderInAddressListRuleCondition {
        [default] interface _SenderInAddressListRuleCondition;
    };

    [
      odl,
      uuid(000630DF-0000-0000-C000-000000000046),
      helpcontext(0x0000099f),
      dual,
      oleautomation
    ]
    interface _SenderInAddressListRuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000009a0)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000009a1)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000009a2)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000009a3)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x000009a4)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x000009a4)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x000009a5)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
        [id(0x0000fb47), propget, helpcontext(0x000009a6)]
        HRESULT AddressList([out, retval] AddressList** AddressList);
        [id(0x0000fb47), propput, helpcontext(0x000009a6)]
        HRESULT AddressList([in] AddressList* AddressList);
    };

    [
      odl,
      uuid(00063049-0000-0000-C000-000000000046),
      helpcontext(0x000007e6),
      dual,
      oleautomation
    ]
    interface AddressList : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000007e7)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000007e8)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000007e9)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000007ea)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000100), propget, helpcontext(0x000007eb)]
        HRESULT AddressEntries([out, retval] AddressEntries** AddressEntries);
        [id(0x0000f01e), propget, helpcontext(0x000007ec)]
        HRESULT ID([out, retval] BSTR* ID);
        [id(0x0000005b), propget, helpcontext(0x000007ed)]
        HRESULT Index([out, retval] long* Index);
        [id(0x0000f017), propget, helpcontext(0x000007ee)]
        HRESULT IsReadOnly([out, retval] VARIANT_BOOL* IsReadOnly);
        [id(0x00003001), propget, helpcontext(0x000007ef)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fafa), helpcontext(0x000007f0)]
        HRESULT GetContactsFolder([out, retval] MAPIFolder** ret);
        [id(0x0000faed), propget, helpcontext(0x000007f1)]
        HRESULT AddressListType([out, retval] OlAddressListType* AddressListType);
        [id(0x0000faee), propget, helpcontext(0x000007f2)]
        HRESULT ResolutionOrder([out, retval] long* ResolutionOrder);
        [id(0x0000faf8), propget, helpcontext(0x000007f3)]
        HRESULT IsInitialAddressList([out, retval] VARIANT_BOOL* IsInitialAddressList);
        [id(0x0000fafd), propget, helpcontext(0x000007f4)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
    };

    


    [
      uuid(000610FB-0000-0000-C000-000000000046),
      helpcontext(0x00000cbc),
      noncreatable
    ]
    coclass FromRssFeedRuleCondition {
        [default] interface _FromRssFeedRuleCondition;
    };

    [
      odl,
      uuid(000630FB-0000-0000-C000-000000000046),
      helpcontext(0x00000cb4),
      dual,
      oleautomation
    ]
    interface _FromRssFeedRuleCondition : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000cb5)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000cb6)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000cb7)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000cb8)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x00000cb9)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x00000cb9)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fb2a), propget, helpcontext(0x00000cba)]
        HRESULT ConditionType([out, retval] OlRuleConditionType* ConditionType);
        [id(0x0000fb27), propget, helpcontext(0x00000cbb)]
        HRESULT FromRssFeed([out, retval] VARIANT* FromRssFeed);
        [id(0x0000fb27), propput, helpcontext(0x00000cbb)]
        HRESULT FromRssFeed([in] VARIANT FromRssFeed);
    };

    [
      uuid(000610CD-0000-0000-C000-000000000046),
      helpcontext(0x00000c59),
      noncreatable
    ]
    coclass Rule {
        [default] interface _Rule;
    };

    


    


    [
      uuid(000610E4-0000-0000-C000-000000000046),
      helpcontext(0x00000c6a),
      noncreatable
    ]
    coclass Categories {
        [default] interface _Categories;
    };

    [
      odl,
      uuid(000630E4-0000-0000-C000-000000000046),
      helpcontext(0x0000097e),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Categories : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000097f)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000980)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000981)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000982)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000983)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000984),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _Category** Item);
        [id(0x0000005f), helpcontext(0x00000985)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in, optional] VARIANT Color, 
                        [in, optional] VARIANT ShortcutKey, 
                        [out, retval] _Category** ppCategory);
        [id(0x00000052), helpcontext(0x00000986)]
        HRESULT Remove([in] VARIANT Index);
    };

    [
      odl,
      uuid(000630E3-0000-0000-C000-000000000046),
      helpcontext(0x00000975),
      dual,
      oleautomation
    ]
    interface _Category : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000976)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000977)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000978)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000979)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002102), propget, helpcontext(0x0000097a)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00002102), propput, helpcontext(0x0000097a)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fba3), propget, helpcontext(0x0000097b)]
        HRESULT Color([out, retval] OlCategoryColor* Color);
        [id(0x0000fba3), propput, helpcontext(0x0000097b)]
        HRESULT Color([in] OlCategoryColor Color);
        [id(0x0000fba4), propget, helpcontext(0x0000097c)]
        HRESULT ShortcutKey([out, retval] OlCategoryShortcutKey* ShortcutKey);
        [id(0x0000fba4), propput, helpcontext(0x0000097c)]
        HRESULT ShortcutKey([in] OlCategoryShortcutKey ShortcutKey);
        [id(0x0000fbd0), propget, helpcontext(0x0000097d)]
        HRESULT CategoryID([out, retval] BSTR* CategoryID);
        [id(0x0000fc1b), propget, helpcontext(0x00000cc2)]
        HRESULT CategoryBorderColor([out, retval] OLE_COLOR* CategoryBorderColor);
        [id(0x0000fc1c), propget, helpcontext(0x00000cc3)]
        HRESULT CategoryGradientTopColor([out, retval] OLE_COLOR* CategoryGradientTopColor);
        [id(0x0000fc1d), propget, helpcontext(0x00000cc4)]
        HRESULT CategoryGradientBottomColor([out, retval] OLE_COLOR* CategoryGradientBottomColor);
    };

    


    


    [
      uuid(000610E3-0000-0000-C000-000000000046),
      helpcontext(0x00000c69),
      noncreatable
    ]
    coclass Category {
        [default] interface _Category;
    };

    


    [
      odl,
      uuid(00063095-0000-0000-C000-000000000046),
      helpcontext(0x000009af),
      dual,
      oleautomation
    ]
    interface View : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000009b0)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000009b1)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000009b2)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000009b3)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000197), helpcontext(0x000009b4)]
        HRESULT Apply();
        [id(0x0000f032), helpcontext(0x000009b5)]
        HRESULT Copy(
                        [in] BSTR Name, 
                        [in, optional] OlViewSaveOption SaveOption, 
                        [out, retval] View** ppview);
        [id(0x0000f04a), helpcontext(0x000009b6)]
        HRESULT Delete();
        [id(0x0000fa44), helpcontext(0x000009b7)]
        HRESULT Reset();
        [id(0x0000f048), helpcontext(0x000009b8)]
        HRESULT Save();
        [id(0x0000fa41), propget, helpcontext(0x000009b9)]
        HRESULT Language([out, retval] BSTR* Language);
        [id(0x0000fa41), propput, helpcontext(0x000009b9)]
        HRESULT Language([in] BSTR Language);
        [id(0x0000fa40), propget, helpcontext(0x000009ba)]
        HRESULT LockUserChanges([out, retval] VARIANT_BOOL* LockUserChanges);
        [id(0x0000fa40), propput, helpcontext(0x000009ba)]
        HRESULT LockUserChanges([in] VARIANT_BOOL LockUserChanges);
        [id(00000000), propget, helpcontext(0x000009bb)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x000009bb)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fa3f), propget, helpcontext(0x000009bc)]
        HRESULT SaveOption([out, retval] OlViewSaveOption* SaveOption);
        [id(0x0000fa3e), propget, helpcontext(0x000009bd)]
        HRESULT Standard([out, retval] VARIANT_BOOL* Standard);
        [id(0x00000194), propget, helpcontext(0x000009be)]
        HRESULT ViewType([out, retval] OlViewType* ViewType);
        [id(0x0000fa3c), propget, helpcontext(0x000009bf)]
        HRESULT XML([out, retval] BSTR* XML);
        [id(0x0000fa3c), propput, helpcontext(0x000009bf)]
        HRESULT XML([in] BSTR XML);
        [id(0x0000fa36), helpcontext(0x000009c0)]
        HRESULT GoToDate([in] DATE Date);
        [id(0x00000199), propget, helpcontext(0x000009c1)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x00000199), propput, helpcontext(0x000009c1)]
        HRESULT Filter([in] BSTR Filter);
    };

    


    


    [
      odl,
      uuid(0006308D-0000-0000-C000-000000000046),
      helpcontext(0x0000021c),
      dual,
      oleautomation
    ]
    interface _Views : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000021d)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000021e)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000021f)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000220)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000221)]
        HRESULT Count([out, retval] long* Count);
        [id(00000000), helpcontext(0x00000222),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] View** Item);
        [id(0x0000005f), helpcontext(0x00000223)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] OlViewType ViewType, 
                        [in, optional] OlViewSaveOption SaveOption, 
                        [out, retval] View** ppview);
        [id(0x00000054), helpcontext(0x00000224)]
        HRESULT Remove([in] VARIANT Index);
        [id(0xfffffffc), hidden, helpcontext(0x00000225)]
        HRESULT _NewEnum([out, retval] IUnknown** ppvObject);
    };

    


    


    [
      odl,
      uuid(000630CB-0000-0000-C000-000000000046),
      helpcontext(0x00000858),
      dual,
      oleautomation
    ]
    interface _StorageItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000859)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000085a)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000085b)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000085c)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003007), propget, helpcontext(0x00000ca5)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x00003008), propget, helpcontext(0x0000085e)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f01e), propget, helpcontext(0x0000085f)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f048), helpcontext(0x00000860)]
        HRESULT Save();
        [id(0x0000f04a), helpcontext(0x00000861)]
        HRESULT Delete();
        [id(0x00009100), propget, helpcontext(0x00000862)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x00000862)]
        HRESULT Body([in] BSTR Body);
        [id(0x0000f815), propget, helpcontext(0x00000863)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00000e08), propget, helpcontext(0x00000864)]
        HRESULT Size([out, retval] long* Size);
        [id(0x0000f816), propget, helpcontext(0x00000865)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000fafd), propget, helpcontext(0x00000866)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x00000037), propget, helpcontext(0x00000867)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000867)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x000085bc), propget, helpcontext(0x00000868)]
        HRESULT Creator([out, retval] BSTR* Creator);
        [id(0x000085bc), propput, helpcontext(0x00000868)]
        HRESULT Creator([in] BSTR Creator);
    };

    [
      uuid(000610D2-0000-0000-C000-000000000046),
      helpcontext(0x00000c5e),
      noncreatable
    ]
    coclass Table {
        [default] interface _Table;
    };

    [
      odl,
      uuid(000630D2-0000-0000-C000-000000000046),
      helpcontext(0x000008af),
      dual,
      oleautomation
    ]
    interface _Table : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008b0)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008b1)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008b2)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008b3)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000062), helpcontext(0x000008b4)]
        HRESULT FindRow(
                        [in] BSTR Filter, 
                        [out, retval] _Row** Row);
        [id(0x00000063), helpcontext(0x000008b5)]
        HRESULT FindNextRow([out, retval] _Row** Row);
        [id(0x0000fbcf), helpcontext(0x000008b6)]
        HRESULT GetArray(
                        [in] long MaxRows, 
                        [out, retval] VARIANT* Rows);
        [id(0x00000057), helpcontext(0x000008b7)]
        HRESULT GetNextRow([out, retval] _Row** NextRow);
        [id(0x00000050), helpcontext(0x000008b8)]
        HRESULT GetRowCount([out, retval] long* Count);
        [id(0x0000fb1e), helpcontext(0x000008b9)]
        HRESULT MoveToStart();
        [id(0x00000064), helpcontext(0x000008ba)]
        HRESULT Restrict(
                        [in] BSTR Filter, 
                        [out, retval] _Table** Table);
        [id(0x00000061), helpcontext(0x000008bb)]
        HRESULT Sort(
                        [in] BSTR SortProperty, 
                        [in, optional] VARIANT Descending);
        [id(0x0000fb93), propget, helpcontext(0x000008bc)]
        HRESULT Columns([out, retval] _Columns** Columns);
        [id(0x0000fb1f), propget, helpcontext(0x000008bd)]
        HRESULT EndOfTable([out, retval] VARIANT_BOOL* EndOfTable);
    };

    [
      uuid(000610D3-0000-0000-C000-000000000046),
      helpcontext(0x00000c5f),
      noncreatable
    ]
    coclass Row {
        [default] interface _Row;
    };

    [
      odl,
      uuid(000630D3-0000-0000-C000-000000000046),
      helpcontext(0x000008be),
      dual,
      oleautomation
    ]
    interface _Row : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008bf)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008c0)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008c1)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008c2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fb03), helpcontext(0x000008c3)]
        HRESULT BinaryToString(
                        [in] VARIANT Index, 
                        [out, retval] BSTR* Value);
        [id(0x0000fbce), helpcontext(0x000008c4)]
        HRESULT GetValues([out, retval] VARIANT* Values);
        [id(0x00000051), helpcontext(0x000008c5),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] VARIANT* Value);
        [id(0x0000fb01), helpcontext(0x000008c6)]
        HRESULT LocalTimeToUTC(
                        [in] VARIANT Index, 
                        [out, retval] DATE* Value);
        [id(0x0000fb00), helpcontext(0x000008c7)]
        HRESULT UTCToLocalTime(
                        [in] VARIANT Index, 
                        [out, retval] DATE* Value);
    };

    [
      uuid(000610E1-0000-0000-C000-000000000046),
      helpcontext(0x00000c76),
      noncreatable
    ]
    coclass Columns {
        [default] interface _Columns;
    };

    [
      odl,
      uuid(000630E1-0000-0000-C000-000000000046),
      helpcontext(0x00000aae),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Columns : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000aaf)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000ab0)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000ab1)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000ab2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000ab3)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000ab4),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _Column** Item);
        [id(0x0000005f), helpcontext(0x00000ab5)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [out, retval] _Column** Column);
        [id(0x00000052), helpcontext(0x00000ab6)]
        HRESULT Remove([in] VARIANT Index);
        [id(0x00000053), helpcontext(0x00000ab7)]
        HRESULT RemoveAll();
    };

    [
      odl,
      uuid(000630E5-0000-0000-C000-000000000046),
      helpcontext(0x00000ab8),
      dual,
      oleautomation
    ]
    interface _Column : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000ab9)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000aba)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000abb)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000abc)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002102), propget, helpcontext(0x00000abd)]
        HRESULT Name([out, retval] BSTR* Name);
    };

    [
      uuid(000610E5-0000-0000-C000-000000000046),
      helpcontext(0x00000c77),
      noncreatable
    ]
    coclass Column {
        [default] interface _Column;
    };

    [
      uuid(000610E2-0000-0000-C000-000000000046),
      helpcontext(0x00000c68),
      noncreatable
    ]
    coclass CalendarSharing {
        [default] interface _CalendarSharing;
    };

    [
      odl,
      uuid(000630E2-0000-0000-C000-000000000046),
      helpcontext(0x00000966),
      dual,
      oleautomation
    ]
    interface _CalendarSharing : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000967)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000968)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000969)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000096a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fb98), helpcontext(0x0000096b)]
        HRESULT SaveAsICal([in] BSTR Path);
        [id(0x0000fb99), helpcontext(0x0000096c)]
        HRESULT ForwardAsICal(
                        [in] OlCalendarMailFormat MailFormat, 
                        [out, retval] _MailItem** RetVal);
        [id(0x0000fb9a), propget, helpcontext(0x0000096d)]
        HRESULT CalendarDetail([out, retval] OlCalendarDetail* CalendarDetail);
        [id(0x0000fb9a), propput, helpcontext(0x0000096d)]
        HRESULT CalendarDetail([in] OlCalendarDetail CalendarDetail);
        [id(0x0000fb9b), propget, helpcontext(0x0000096e)]
        HRESULT EndDate([out, retval] DATE* EndDate);
        [id(0x0000fb9b), propput, helpcontext(0x0000096e)]
        HRESULT EndDate([in] DATE EndDate);
        [id(0x0000fb9c), propget, helpcontext(0x0000096f)]
        HRESULT Folder([out, retval] MAPIFolder** Folder);
        [id(0x0000fb9d), propget, helpcontext(0x00000970)]
        HRESULT IncludeAttachments([out, retval] VARIANT_BOOL* IncludeAttachments);
        [id(0x0000fb9d), propput, helpcontext(0x00000970)]
        HRESULT IncludeAttachments([in] VARIANT_BOOL IncludeAttachments);
        [id(0x0000fb9e), propget, helpcontext(0x00000971)]
        HRESULT IncludePrivateDetails([out, retval] VARIANT_BOOL* IncludePrivateDetails);
        [id(0x0000fb9e), propput, helpcontext(0x00000971)]
        HRESULT IncludePrivateDetails([in] VARIANT_BOOL IncludePrivateDetails);
        [id(0x0000fb9f), propget, helpcontext(0x00000972)]
        HRESULT RestrictToWorkingHours([out, retval] VARIANT_BOOL* RestrictToWorkingHours);
        [id(0x0000fb9f), propput, helpcontext(0x00000972)]
        HRESULT RestrictToWorkingHours([in] VARIANT_BOOL RestrictToWorkingHours);
        [id(0x0000fba0), propget, helpcontext(0x00000973)]
        HRESULT StartDate([out, retval] DATE* StartDate);
        [id(0x0000fba0), propput, helpcontext(0x00000973)]
        HRESULT StartDate([in] DATE StartDate);
        [id(0x0000fba1), propget, helpcontext(0x00000974)]
        HRESULT IncludeWholeCalendar([out, retval] VARIANT_BOOL* IncludeWholeCalendar);
        [id(0x0000fba1), propput, helpcontext(0x00000974)]
        HRESULT IncludeWholeCalendar([in] VARIANT_BOOL IncludeWholeCalendar);
    };

    


    [
      uuid(00061033-0000-0000-C000-000000000046),
      helpcontext(0x00000bab),
      noncreatable
    ]
    coclass MailItem {
        [default] interface _MailItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      odl,
      uuid(00063034-0000-0000-C000-000000000046),
      helpcontext(0x00000509),
      dual,
      oleautomation
    ]
    interface _MailItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000050a)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000050b)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000050c)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000050d)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x0000050e)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x0000050f)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x00000510)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x00000510)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x00000511)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x00000511)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x00000512)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x00000512)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x00000513)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x00000513)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x00000514)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x00000515)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x00000516)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x00000517)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x00000518)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x00000519)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x0000051a)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x0000051a)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x0000051b)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x0000051c)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x0000051d)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x0000051d)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x0000051e)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x0000051e)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x0000051f)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x0000051f)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x00000520)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x00000521)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x00000522)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x00000523)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x00000523)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x00000524)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000525)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000525)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000526)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000526)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x00000527)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x00000528)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x00000529)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x0000052a)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x0000052b)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x0000052c)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x0000052d)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x0000052e)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x0000052f)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x00000002), propget, helpcontext(0x00000530)]
        HRESULT AlternateRecipientAllowed([out, retval] VARIANT_BOOL* AlternateRecipientAllowed);
        [id(0x00000002), propput, helpcontext(0x00000530)]
        HRESULT AlternateRecipientAllowed([in] VARIANT_BOOL AlternateRecipientAllowed);
        [id(0x00000005), propget, helpcontext(0x00000531)]
        HRESULT AutoForwarded([out, retval] VARIANT_BOOL* AutoForwarded);
        [id(0x00000005), propput, helpcontext(0x00000531)]
        HRESULT AutoForwarded([in] VARIANT_BOOL AutoForwarded);
        [id(0x00000e02), propget, helpcontext(0x00000532)]
        HRESULT BCC([out, retval] BSTR* BCC);
        [id(0x00000e02), propput, helpcontext(0x00000532)]
        HRESULT BCC([in] BSTR BCC);
        [id(0x00000e03), propget, helpcontext(0x00000533)]
        HRESULT CC([out, retval] BSTR* CC);
        [id(0x00000e03), propput, helpcontext(0x00000533)]
        HRESULT CC([in] BSTR CC);
        [id(0x0000000f), propget, helpcontext(0x00000534)]
        HRESULT DeferredDeliveryTime([out, retval] DATE* DeferredDeliveryTime);
        [id(0x0000000f), propput, helpcontext(0x00000534)]
        HRESULT DeferredDeliveryTime([in] DATE DeferredDeliveryTime);
        [id(0x00000e01), propget, helpcontext(0x00000535)]
        HRESULT DeleteAfterSubmit([out, retval] VARIANT_BOOL* DeleteAfterSubmit);
        [id(0x00000e01), propput, helpcontext(0x00000535)]
        HRESULT DeleteAfterSubmit([in] VARIANT_BOOL DeleteAfterSubmit);
        [id(0x00000015), propget, helpcontext(0x00000536)]
        HRESULT ExpiryTime([out, retval] DATE* ExpiryTime);
        [id(0x00000015), propput, helpcontext(0x00000536)]
        HRESULT ExpiryTime([in] DATE ExpiryTime);
        [id(0x00000030), propget, hidden, helpcontext(0x00000537)]
        HRESULT FlagDueBy([out, retval] DATE* FlagDueBy);
        [id(0x00000030), propput, hidden, helpcontext(0x00000537)]
        HRESULT FlagDueBy([in] DATE FlagDueBy);
        [id(0x00008530), propget, helpcontext(0x00000538)]
        HRESULT FlagRequest([out, retval] BSTR* FlagRequest);
        [id(0x00008530), propput, helpcontext(0x00000538)]
        HRESULT FlagRequest([in] BSTR FlagRequest);
        [id(0x00001090), propget, hidden, helpcontext(0x00000539)]
        HRESULT FlagStatus([out, retval] OlFlagStatus* FlagStatus);
        [id(0x00001090), propput, hidden, helpcontext(0x00000539)]
        HRESULT FlagStatus([in] OlFlagStatus FlagStatus);
        [id(0x0000f404), propget, helpcontext(0x0000053a)]
        HRESULT HTMLBody([out, retval] BSTR* HTMLBody);
        [id(0x0000f404), propput, helpcontext(0x0000053a)]
        HRESULT HTMLBody([in] BSTR HTMLBody);
        [id(0x00000023), propget, helpcontext(0x0000053b)]
        HRESULT OriginatorDeliveryReportRequested([out, retval] VARIANT_BOOL* OriginatorDeliveryReportRequested);
        [id(0x00000023), propput, helpcontext(0x0000053b)]
        HRESULT OriginatorDeliveryReportRequested([in] VARIANT_BOOL OriginatorDeliveryReportRequested);
        [id(0x00000029), propget, helpcontext(0x0000053c)]
        HRESULT ReadReceiptRequested([out, retval] VARIANT_BOOL* ReadReceiptRequested);
        [id(0x00000029), propput, helpcontext(0x0000053c)]
        HRESULT ReadReceiptRequested([in] VARIANT_BOOL ReadReceiptRequested);
        [id(0x0000003f), propget, helpcontext(0x0000053d)]
        HRESULT ReceivedByEntryID([out, retval] BSTR* ReceivedByEntryID);
        [id(0x00000040), propget, helpcontext(0x0000053e)]
        HRESULT ReceivedByName([out, retval] BSTR* ReceivedByName);
        [id(0x00000043), propget, helpcontext(0x0000053f)]
        HRESULT ReceivedOnBehalfOfEntryID([out, retval] BSTR* ReceivedOnBehalfOfEntryID);
        [id(0x00000044), propget, helpcontext(0x00000540)]
        HRESULT ReceivedOnBehalfOfName([out, retval] BSTR* ReceivedOnBehalfOfName);
        [id(0x00000e06), propget, helpcontext(0x00000541)]
        HRESULT ReceivedTime([out, retval] DATE* ReceivedTime);
        [id(0x0000002b), propget, helpcontext(0x00000542)]
        HRESULT RecipientReassignmentProhibited([out, retval] VARIANT_BOOL* RecipientReassignmentProhibited);
        [id(0x0000002b), propput, helpcontext(0x00000542)]
        HRESULT RecipientReassignmentProhibited([in] VARIANT_BOOL RecipientReassignmentProhibited);
        [id(0x0000f814), propget, helpcontext(0x00000543)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
        [id(0x0000851c), propget, helpcontext(0x00000544)]
        HRESULT ReminderOverrideDefault([out, retval] VARIANT_BOOL* ReminderOverrideDefault);
        [id(0x0000851c), propput, helpcontext(0x00000544)]
        HRESULT ReminderOverrideDefault([in] VARIANT_BOOL ReminderOverrideDefault);
        [id(0x0000851e), propget, helpcontext(0x00000545)]
        HRESULT ReminderPlaySound([out, retval] VARIANT_BOOL* ReminderPlaySound);
        [id(0x0000851e), propput, helpcontext(0x00000545)]
        HRESULT ReminderPlaySound([in] VARIANT_BOOL ReminderPlaySound);
        [id(0x00008503), propget, helpcontext(0x00000546)]
        HRESULT ReminderSet([out, retval] VARIANT_BOOL* ReminderSet);
        [id(0x00008503), propput, helpcontext(0x00000546)]
        HRESULT ReminderSet([in] VARIANT_BOOL ReminderSet);
        [id(0x0000851f), propget, helpcontext(0x00000547)]
        HRESULT ReminderSoundFile([out, retval] BSTR* ReminderSoundFile);
        [id(0x0000851f), propput, helpcontext(0x00000547)]
        HRESULT ReminderSoundFile([in] BSTR ReminderSoundFile);
        [id(0x00008502), propget, helpcontext(0x00000548)]
        HRESULT ReminderTime([out, retval] DATE* ReminderTime);
        [id(0x00008502), propput, helpcontext(0x00000548)]
        HRESULT ReminderTime([in] DATE ReminderTime);
        [id(0x00008511), propget, helpcontext(0x00000549)]
        HRESULT RemoteStatus([out, retval] OlRemoteStatus* RemoteStatus);
        [id(0x00008511), propput, helpcontext(0x00000549)]
        HRESULT RemoteStatus([in] OlRemoteStatus RemoteStatus);
        [id(0x00000050), propget, helpcontext(0x0000054a)]
        HRESULT ReplyRecipientNames([out, retval] BSTR* ReplyRecipientNames);
        [id(0x0000f013), propget, helpcontext(0x0000054b)]
        HRESULT ReplyRecipients([out, retval] Recipients** ReplyRecipients);
        [id(0x0000f401), propget, helpcontext(0x0000054c)]
        HRESULT SaveSentMessageFolder([out, retval] MAPIFolder** SaveSentMessageFolder);
        [id(0x0000f401), propputref, helpcontext(0x0000054c)]
        HRESULT SaveSentMessageFolder([in] MAPIFolder* SaveSentMessageFolder);
        [id(0x00000c1a), propget, helpcontext(0x0000054d)]
        HRESULT SenderName([out, retval] BSTR* SenderName);
        [id(0x0000f402), propget, helpcontext(0x0000054e)]
        HRESULT Sent([out, retval] VARIANT_BOOL* Sent);
        [id(0x00000039), propget, helpcontext(0x0000054f)]
        HRESULT SentOn([out, retval] DATE* SentOn);
        [id(0x00000042), propget, helpcontext(0x00000550)]
        HRESULT SentOnBehalfOfName([out, retval] BSTR* SentOnBehalfOfName);
        [id(0x00000042), propput, helpcontext(0x00000550)]
        HRESULT SentOnBehalfOfName([in] BSTR SentOnBehalfOfName);
        [id(0x0000f403), propget, helpcontext(0x00000551)]
        HRESULT Submitted([out, retval] VARIANT_BOOL* Submitted);
        [id(0x00000e04), propget, helpcontext(0x00000552)]
        HRESULT To([out, retval] BSTR* To);
        [id(0x00000e04), propput, helpcontext(0x00000552)]
        HRESULT To([in] BSTR To);
        [id(0x0000f01b), propget, helpcontext(0x00000553)]
        HRESULT VotingOptions([out, retval] BSTR* VotingOptions);
        [id(0x0000f01b), propput, helpcontext(0x00000553)]
        HRESULT VotingOptions([in] BSTR VotingOptions);
        [id(0x00008524), propget, helpcontext(0x00000554)]
        HRESULT VotingResponse([out, retval] BSTR* VotingResponse);
        [id(0x00008524), propput, helpcontext(0x00000554)]
        HRESULT VotingResponse([in] BSTR VotingResponse);
        [id(0x0000f822), helpcontext(0x00000555)]
        HRESULT ClearConversationIndex();
        [id(0x0000f813), helpcontext(0x00000556)]
        HRESULT Forward([out, retval] _MailItem** Item);
        [id(0x0000f810), helpcontext(0x00000557)]
        HRESULT Reply([out, retval] _MailItem** Item);
        [id(0x0000f811), helpcontext(0x00000558)]
        HRESULT ReplyAll([out, retval] _MailItem** Item);
        [id(0x0000f075), helpcontext(0x00000559)]
        HRESULT Send();
        [id(0x0000f405), propget, hidden, helpcontext(0x0000055a)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa09), propget, helpcontext(0x0000055b)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x0000fa49), propget, helpcontext(0x0000055c)]
        HRESULT BodyFormat([out, retval] OlBodyFormat* BodyFormat);
        [id(0x0000fa49), propput, helpcontext(0x0000055c)]
        HRESULT BodyFormat([in] OlBodyFormat BodyFormat);
        [id(0x0000fa4d), propget, helpcontext(0x0000055d)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x0000055e)]
        HRESULT ShowCategoriesDialog();
        [id(0x00003fde), propget, helpcontext(0x0000055f)]
        HRESULT InternetCodepage([out, retval] long* InternetCodepage);
        [id(0x00003fde), propput, helpcontext(0x0000055f)]
        HRESULT InternetCodepage([in] long InternetCodepage);
        [id(0x00008571), propget, helpcontext(0x00000560)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x00000560)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x00000561)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000859b), propget, hidden, helpcontext(0x00000562)]
        HRESULT IsIPFax([out, retval] VARIANT_BOOL* IsIPFax);
        [id(0x0000859b), propput, hidden, helpcontext(0x00000562)]
        HRESULT IsIPFax([in] VARIANT_BOOL IsIPFax);
        [id(0x0000facc), propget, hidden, helpcontext(0x00000563)]
        HRESULT FlagIcon([out, retval] OlFlagIcon* FlagIcon);
        [id(0x0000facc), propput, hidden, helpcontext(0x00000563)]
        HRESULT FlagIcon([in] OlFlagIcon FlagIcon);
        [id(0x0000fab0), propget, hidden, helpcontext(0x00000564)]
        HRESULT HasCoverSheet([out, retval] VARIANT_BOOL* HasCoverSheet);
        [id(0x0000fab0), propput, hidden, helpcontext(0x00000564)]
        HRESULT HasCoverSheet([in] VARIANT_BOOL HasCoverSheet);
        [id(0x0000faba), propget, helpcontext(0x00000565)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x00000566)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x00000c1f), propget, helpcontext(0x00000567)]
        HRESULT SenderEmailAddress([out, retval] BSTR* SenderEmailAddress);
        [id(0x00000c1e), propget, helpcontext(0x00000568)]
        HRESULT SenderEmailType([out, retval] BSTR* SenderEmailType);
        [id(0x0000fac4), propget, hidden, helpcontext(0x00000569)]
        HRESULT EnableSharedAttachments([out, retval] VARIANT_BOOL* EnableSharedAttachments);
        [id(0x0000fac4), propput, hidden, helpcontext(0x00000569)]
        HRESULT EnableSharedAttachments([in] VARIANT_BOOL EnableSharedAttachments);
        [id(0x0000fac6), propget, helpcontext(0x0000056a)]
        HRESULT Permission([out, retval] OlPermission* Permission);
        [id(0x0000fac6), propput, helpcontext(0x0000056a)]
        HRESULT Permission([in] OlPermission Permission);
        [id(0x0000facb), propget, helpcontext(0x0000056b)]
        HRESULT PermissionService([out, retval] OlPermissionService* PermissionService);
        [id(0x0000facb), propput, helpcontext(0x0000056b)]
        HRESULT PermissionService([in] OlPermissionService PermissionService);
        [id(0x0000fafd), propget, helpcontext(0x0000056c)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fb96), helpcontext(0x0000056d)]
        HRESULT AddBusinessCard([in] _ContactItem* contact);
        [id(0x0000fad1), propget, helpcontext(0x0000056e)]
        HRESULT SendUsingAccount([out, retval] _Account** SendUsingAccount);
        [id(0x0000fad1), propput, helpcontext(0x0000056e)]
        HRESULT SendUsingAccount([in] _Account* SendUsingAccount);
        [id(0x0000fc1f), propget, helpcontext(0x00000570)]
        HRESULT TaskSubject([out, retval] BSTR* TaskSubject);
        [id(0x0000fc1f), propput, helpcontext(0x00000570)]
        HRESULT TaskSubject([in] BSTR TaskSubject);
        [id(0x00008105), propget, helpcontext(0x00000571)]
        HRESULT TaskDueDate([out, retval] DATE* TaskDueDate);
        [id(0x00008105), propput, helpcontext(0x00000571)]
        HRESULT TaskDueDate([in] DATE TaskDueDate);
        [id(0x00008104), propget, helpcontext(0x00000572)]
        HRESULT TaskStartDate([out, retval] DATE* TaskStartDate);
        [id(0x00008104), propput, helpcontext(0x00000572)]
        HRESULT TaskStartDate([in] DATE TaskStartDate);
        [id(0x0000810f), propget, helpcontext(0x00000573)]
        HRESULT TaskCompletedDate([out, retval] DATE* TaskCompletedDate);
        [id(0x0000810f), propput, helpcontext(0x00000573)]
        HRESULT TaskCompletedDate([in] DATE TaskCompletedDate);
        [id(0x000085a0), propget, helpcontext(0x00000bde)]
        HRESULT ToDoTaskOrdinal([out, retval] DATE* ToDoTaskOrdinal);
        [id(0x000085a0), propput, helpcontext(0x00000bde)]
        HRESULT ToDoTaskOrdinal([in] DATE ToDoTaskOrdinal);
        [id(0x0000fbfe), helpcontext(0x00000bdf)]
        HRESULT MarkAsTask([in] OlMarkInterval MarkInterval);
        [id(0x0000fc09), helpcontext(0x00000be0)]
        HRESULT ClearTaskFlag();
        [id(0x0000fc0a), propget, helpcontext(0x00000be1)]
        HRESULT IsMarkedAsTask([out, retval] VARIANT_BOOL* IsMarkedAsTask);
        [id(0x0000fc54), helpcontext(0x00000d3b)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000d8c)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc7b), propget, helpcontext(0x00000da0)]
        HRESULT Sender([out, retval] AddressEntry** Sender);
        [id(0x0000fc7b), propput, helpcontext(0x00000da0)]
        HRESULT Sender([in] AddressEntry* Sender);
        [id(0x0000fc7d), propget, helpcontext(0x00000db3)]
        HRESULT PermissionTemplateGuid([out, retval] BSTR* PermissionTemplateGuid);
        [id(0x0000fc7d), propput, helpcontext(0x00000db3)]
        HRESULT PermissionTemplateGuid([in] BSTR PermissionTemplateGuid);
        [id(0x0000fc84), propget, helpcontext(0x00000de2)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000de2)]
        HRESULT RTFBody([in] VARIANT RTFBody);
        [id(0x0000fc8b), propget, helpcontext(0x00000de6)]
        HRESULT RetentionPolicyName([out, retval] BSTR* RetentionPolicyName);
        [id(0x0000fc8a), propget, helpcontext(0x00000de7)]
        HRESULT RetentionExpirationDate([out, retval] DATE* RetentionExpirationDate);
    };

    


    


    [
      odl,
      uuid(0006308A-0000-0000-C000-000000000046),
      helpcontext(0x000000eb),
      hidden,
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface Links : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000000ec)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000000ed)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000000ee)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000000ef)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x000000f0)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x000000f1),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] Link** Item);
        [id(0x0000005f), helpcontext(0x000000f2)]
        HRESULT Add(
                        [in] IDispatch* Item, 
                        [out, retval] Link** Link);
        [id(0x00000054), helpcontext(0x000000f3)]
        HRESULT Remove([in] VARIANT Index);
    };

    [
      odl,
      uuid(00063089-0000-0000-C000-000000000046),
      helpcontext(0x000000f4),
      hidden,
      dual,
      oleautomation
    ]
    interface Link : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000000f5)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000000f6)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000000f7)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000006d), propget, helpcontext(0x000000f8)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003001), propget, helpcontext(0x000000f9)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00002101), propget, helpcontext(0x000000fa)]
        HRESULT Type([out, retval] OlObjectClass* Type);
        [id(0x00002102), propget, helpcontext(0x000000fb)]
        HRESULT Item([out, retval] IDispatch** Item);
    };

    [
      odl,
      uuid(000630A8-0000-0000-C000-000000000046),
      helpcontext(0x00000212),
      dual,
      oleautomation
    ]
    interface ItemProperties : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000213)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000214)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000215)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000216)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000217)]
        HRESULT Count([out, retval] long* Count);
        [id(00000000), helpcontext(0x00000218),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] ItemProperty** Item);
        [id(0xfffffffc), hidden, helpcontext(0x00000219)]
        HRESULT _NewEnum([out, retval] IUnknown** ppvObject);
        [id(0x00000066), helpcontext(0x0000021a)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] OlUserPropertyType Type, 
                        [in, optional] VARIANT AddToFolderFields, 
                        [in, optional] VARIANT DisplayFormat, 
                        [out, retval] ItemProperty** ItemProperty);
        [id(0x00000052), helpcontext(0x0000021b)]
        HRESULT Remove([in] long Index);
    };

    [
      odl,
      uuid(000630A7-0000-0000-C000-000000000046),
      helpcontext(0x00000205),
      dual,
      oleautomation
    ]
    interface ItemProperty : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000206)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000207)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000208)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000209)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, hidden, helpcontext(0x0000020a)]
        HRESULT Formula([out, retval] BSTR* Formula);
        [id(0x00000067), propput, hidden, helpcontext(0x0000020a)]
        HRESULT Formula([in] BSTR Formula);
        [id(0x00000070), propget, helpcontext(0x0000020b)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000006d), propget, helpcontext(0x0000020c)]
        HRESULT Type([out, retval] OlUserPropertyType* Type);
        [id(0x00000068), propget, hidden, helpcontext(0x0000020d)]
        HRESULT ValidationFormula([out, retval] BSTR* ValidationFormula);
        [id(0x00000068), propput, hidden, helpcontext(0x0000020d)]
        HRESULT ValidationFormula([in] BSTR ValidationFormula);
        [id(0x00000069), propget, hidden, helpcontext(0x0000020e)]
        HRESULT ValidationText([out, retval] BSTR* ValidationText);
        [id(0x00000069), propput, hidden, helpcontext(0x0000020e)]
        HRESULT ValidationText([in] BSTR ValidationText);
        [id(00000000), propget, helpcontext(0x0000020f)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x0000020f)]
        HRESULT Value([in] VARIANT Value);
        [id(0x0000006c), hidden, helpcontext(0x00000210)]
        HRESULT Delete();
        [id(0x0000fa08), propget, helpcontext(0x00000211)]
        HRESULT IsUserProperty([out, retval] VARIANT_BOOL* IsUserProperty);
    };

    


    


    


    [
      odl,
      uuid(000630C2-0000-0000-C000-000000000046),
      helpcontext(0x0000018f),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface Conflicts : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000190)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000191)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000192)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000193)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000194)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000195),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] Conflict** Item);
        [id(0x00000056), helpcontext(0x00000196)]
        HRESULT GetFirst([out, retval] Conflict** Item);
        [id(0x00000058), helpcontext(0x00000197)]
        HRESULT GetLast([out, retval] Conflict** Item);
        [id(0x00000057), helpcontext(0x00000198)]
        HRESULT GetNext([out, retval] Conflict** Item);
        [id(0x00000059), helpcontext(0x00000199)]
        HRESULT GetPrevious([out, retval] Conflict** Item);
    };

    [
      odl,
      uuid(000630C3-0000-0000-C000-000000000046),
      helpcontext(0x0000019a),
      dual,
      oleautomation
    ]
    interface Conflict : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000019b)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000019c)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000019d)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000019e)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fab8), propget, helpcontext(0x0000019f)]
        HRESULT Item([out, retval] IDispatch** Item);
        [id(0x0000fab9), propget, helpcontext(0x000001a0)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fabc), propget, helpcontext(0x000001a1)]
        HRESULT Type([out, retval] OlObjectClass* Type);
    };

    


    


    [
      uuid(00061031-0000-0000-C000-000000000046),
      helpcontext(0x00000bb0),
      noncreatable
    ]
    coclass ContactItem {
        [default] interface _ContactItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(0006303A-0000-0000-C000-000000000046),
      helpcontext(0x000000fc)
    ]
    dispinterface ItemEvents {
        properties:
        methods:
            [id(0x0000f003), helpcontext(0x000000fd)]
            void Open([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f006), helpcontext(0x000000fe)]
            void CustomAction(
                            [in] IDispatch* Action, 
                            [in] IDispatch* Response, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f008), helpcontext(0x000000ff)]
            void CustomPropertyChange([in] BSTR Name);
            [id(0x0000f468), helpcontext(0x00000100)]
            void Forward(
                            [in] IDispatch* Forward, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f004), helpcontext(0x00000101)]
            void Close([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f009), helpcontext(0x00000102)]
            void PropertyChange([in] BSTR Name);
            [id(0x0000f001), helpcontext(0x00000103)]
            void Read();
            [id(0x0000f466), helpcontext(0x00000104)]
            void Reply(
                            [in] IDispatch* Response, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f467), helpcontext(0x00000105)]
            void ReplyAll(
                            [in] IDispatch* Response, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f005), helpcontext(0x00000106)]
            void Send([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f002), helpcontext(0x00000107)]
            void Write([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f00a), helpcontext(0x00000108)]
            void BeforeCheckNames([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f00b), helpcontext(0x00000109)]
            void AttachmentAdd([in] Attachment* Attachment);
            [id(0x0000f00c), helpcontext(0x0000010a)]
            void AttachmentRead([in] Attachment* Attachment);
            [id(0x0000f00d), helpcontext(0x0000010b)]
            void BeforeAttachmentSave(
                            [in] Attachment* Attachment, 
                            [in, out] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006302B-0000-0000-C000-000000000046),
      helpcontext(0x000001d9)
    ]
    dispinterface ItemEvents_10 {
        properties:
        methods:
            [id(0x0000f003), helpcontext(0x000001da)]
            HRESULT Open([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f006), helpcontext(0x000001db)]
            HRESULT CustomAction(
                            [in] IDispatch* Action, 
                            [in] IDispatch* Response, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f008), helpcontext(0x000001dc)]
            HRESULT CustomPropertyChange([in] BSTR Name);
            [id(0x0000f468), helpcontext(0x000001dd)]
            HRESULT Forward(
                            [in] IDispatch* Forward, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f004), helpcontext(0x000001de)]
            HRESULT Close([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f009), helpcontext(0x000001df)]
            HRESULT PropertyChange([in] BSTR Name);
            [id(0x0000f001), helpcontext(0x000001e0)]
            HRESULT Read();
            [id(0x0000f466), helpcontext(0x000001e1)]
            HRESULT Reply(
                            [in] IDispatch* Response, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f467), helpcontext(0x000001e2)]
            HRESULT ReplyAll(
                            [in] IDispatch* Response, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f005), helpcontext(0x000001e3)]
            HRESULT Send([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f002), helpcontext(0x000001e4)]
            HRESULT Write([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f00a), helpcontext(0x000001e5)]
            HRESULT BeforeCheckNames([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f00b), helpcontext(0x000001e6)]
            HRESULT AttachmentAdd([in] Attachment* Attachment);
            [id(0x0000f00c), helpcontext(0x000001e7)]
            HRESULT AttachmentRead([in] Attachment* Attachment);
            [id(0x0000f00d), helpcontext(0x000001e8)]
            HRESULT BeforeAttachmentSave(
                            [in] Attachment* Attachment, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa75), helpcontext(0x000001e9)]
            void BeforeDelete(
                            [in] IDispatch* Item, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fbae), helpcontext(0x000001ea)]
            void AttachmentRemove([in] Attachment* Attachment);
            [id(0x0000fbb0), helpcontext(0x000001eb)]
            void BeforeAttachmentAdd(
                            [in] Attachment* Attachment, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fbaf), helpcontext(0x000001ec)]
            void BeforeAttachmentPreview(
                            [in] Attachment* Attachment, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fbab), helpcontext(0x000001ed)]
            void BeforeAttachmentRead(
                            [in] Attachment* Attachment, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fbb2), helpcontext(0x000001ee)]
            void BeforeAttachmentWriteToTempFile(
                            [in] Attachment* Attachment, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fbad), helpcontext(0x000001ef)]
            void Unload();
            [id(0x0000fc02), helpcontext(0x000001f0)]
            void BeforeAutoSave([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fc8c), helpcontext(0x00000def)]
            void BeforeRead();
            [id(0x0000fc8d), helpcontext(0x00000df0)]
            void AfterWrite();
            [id(0x0000fc8f), helpcontext(0x00000e06)]
            HRESULT ReadComplete([in, out] VARIANT_BOOL* Cancel);
    };

    [
      odl,
      uuid(00063101-0000-0000-C000-000000000046),
      helpcontext(0x00000d65),
      dual,
      oleautomation
    ]
    interface _Conversation : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000d37)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000d38)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000d3a)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000d39)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fc4f), helpcontext(0x00000d36)]
        HRESULT GetTable([out, retval] _Table** Table);
        [id(0x0000fc50), helpcontext(0x00000d3f)]
        HRESULT GetChildren(
                        [in] IDispatch* Item, 
                        [out, retval] _SimpleItems** SimpleItems);
        [id(0x0000fc52), helpcontext(0x00000d49)]
        HRESULT GetParent(
                        [in] IDispatch* Item, 
                        [out, retval] IDispatch** itemParent);
        [id(0x0000fc53), helpcontext(0x00000d4a)]
        HRESULT GetRootItems([out, retval] _SimpleItems** SimpleItems);
        [id(0x0000fc5a), helpcontext(0x00000d6f)]
        HRESULT GetAlwaysAssignCategories(
                        [in] _Store* Store, 
                        [out, retval] BSTR* Categories);
        [id(0x0000fc5b), helpcontext(0x00000d70)]
        HRESULT GetAlwaysDelete(
                        [in] _Store* Store, 
                        [out, retval] OlAlwaysDeleteConversation* AlwaysDelete);
        [id(0x0000fc5c), helpcontext(0x00000d71)]
        HRESULT GetAlwaysMoveToFolder(
                        [in] _Store* Store, 
                        [out, retval] MAPIFolder** MoveToFolder);
        [id(0x0000fc5d), helpcontext(0x00000d72)]
        HRESULT MarkAsRead();
        [id(0x0000fc5e), helpcontext(0x00000d73)]
        HRESULT MarkAsUnread();
        [id(0x0000fc5f), helpcontext(0x00000d74)]
        HRESULT SetAlwaysAssignCategories(
                        [in] BSTR Categories, 
                        [in] _Store* Store);
        [id(0x0000fc60), helpcontext(0x00000d75)]
        HRESULT SetAlwaysDelete(
                        [in] OlAlwaysDeleteConversation AlwaysDelete, 
                        [in] _Store* Store);
        [id(0x0000fc61), helpcontext(0x00000d66)]
        HRESULT SetAlwaysMoveToFolder(
                        [in] MAPIFolder* MoveToFolder, 
                        [in] _Store* Store);
        [id(0x0000fc62), helpcontext(0x00000da1)]
        HRESULT ClearAlwaysAssignCategories([in] _Store* Store);
        [id(0x0000fc63), helpcontext(0x00000d68)]
        HRESULT StopAlwaysDelete([in] _Store* Store);
        [id(0x0000fc64), helpcontext(0x00000d69)]
        HRESULT StopAlwaysMoveToFolder([in] _Store* Store);
        [id(0x0000fc75), propget, helpcontext(0x00000d8b)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
    };

    [
      uuid(00061102-0000-0000-C000-000000000046),
      helpcontext(0x00000d48),
      noncreatable
    ]
    coclass SimpleItems {
        [default] interface _SimpleItems;
    };

    [
      odl,
      uuid(00063102-0000-0000-C000-000000000046),
      helpcontext(0x00000d40),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _SimpleItems : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000d41)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000d42)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000d43)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000d44)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000d45)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000d46),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] IDispatch** Item);
    };

    


    


    [
      uuid(00061047-0000-0000-C000-000000000046),
      helpcontext(0x00000c50),
      noncreatable
    ]
    coclass UserDefinedProperties {
        [default] interface _UserDefinedProperties;
    };

    [
      odl,
      uuid(00063047-0000-0000-C000-000000000046),
      helpcontext(0x00000245),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _UserDefinedProperties : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000246)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000247)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000248)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000249)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000024a)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000024b),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _UserDefinedProperty** Item);
        [id(0x00000066), helpcontext(0x0000024c)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] OlUserPropertyType Type, 
                        [in, optional] VARIANT DisplayFormat, 
                        [in, optional] VARIANT Formula, 
                        [out, retval] _UserDefinedProperty** UserDefinedProperty);
        [id(0x00000067), helpcontext(0x0000024d)]
        HRESULT Find(
                        [in] BSTR Name, 
                        [out, retval] _UserDefinedProperty** UserDefinedProperty);
        [id(0x00000052), helpcontext(0x0000024e)]
        HRESULT Remove([in] long Index);
        [id(0x0000fa45), helpcontext(0x0000024f)]
        HRESULT Refresh();
    };

    [
      odl,
      uuid(0006305C-0000-0000-C000-000000000046),
      dual,
      oleautomation
    ]
    interface _UserDefinedProperty : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000001)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000002)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000003)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000004)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000067), propget, helpcontext(0x00000005)]
        HRESULT Formula([out, retval] BSTR* Formula);
        [id(0x00000070), propget, helpcontext(0x00000006)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000006d), propget, helpcontext(0x00000007)]
        HRESULT Type([out, retval] OlUserPropertyType* Type);
        [id(0x0000fa27), propget, helpcontext(0x00000008)]
        HRESULT DisplayFormat([out, retval] long* DisplayFormat);
        [id(0x0000fc0b), helpcontext(0x00000be7)]
        HRESULT Delete();
    };

    [
      uuid(0006105C-0000-0000-C000-000000000046),
      helpcontext(0x00000c4f),
      noncreatable
    ]
    coclass UserDefinedProperty {
        [default] interface _UserDefinedProperty;
    };

    


    


    


    


    [
      uuid(000610C9-0000-0000-C000-000000000046),
      helpcontext(0x00000c56),
      noncreatable
    ]
    coclass ExchangeUser {
        [default] interface _ExchangeUser;
    };

    [
      odl,
      uuid(000630C9-0000-0000-C000-000000000046),
      helpcontext(0x0000080c),
      dual,
      oleautomation
    ]
    interface _ExchangeUser : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000080d)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000080e)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000080f)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000810)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003003), propget, helpcontext(0x00000811)]
        HRESULT Address([out, retval] BSTR* Address);
        [id(0x00003003), propput, helpcontext(0x00000811)]
        HRESULT Address([in] BSTR Address);
        [id(0x00003900), propget, helpcontext(0x00000812)]
        HRESULT DisplayType([out, retval] OlDisplayType* DisplayType);
        [id(0x0000f01e), propget, helpcontext(0x00000813)]
        HRESULT ID([out, retval] BSTR* ID);
        [id(0x00000303), propget, hidden, helpcontext(0x00000814)]
        HRESULT Manager([out, retval] AddressEntry** Manager);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000815)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000f100), propput, hidden, helpcontext(0x00000815)]
        HRESULT MAPIOBJECT([in] IUnknown* MAPIOBJECT);
        [id(0x00000304), propget, hidden, helpcontext(0x00000816)]
        HRESULT Members([out, retval] AddressEntries** Members);
        [id(0x00003001), propget, helpcontext(0x00000817)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00003001), propput, helpcontext(0x00000817)]
        HRESULT Name([in] BSTR Name);
        [id(0x00003002), propget, helpcontext(0x00000818)]
        HRESULT Type([out, retval] BSTR* Type);
        [id(0x00003002), propput, helpcontext(0x00000818)]
        HRESULT Type([in] BSTR Type);
        [id(0x00000302), helpcontext(0x00000819)]
        HRESULT Delete();
        [id(0x00000301), helpcontext(0x0000081a)]
        HRESULT Details([in, optional] VARIANT HWnd);
        [id(0x00000306), helpcontext(0x0000081b)]
        HRESULT GetFreeBusy(
                        [in] DATE Start, 
                        [in] long MinPerChar, 
                        [in, optional] VARIANT CompleteFormat, 
                        [out, retval] BSTR* FreeBusyInfo);
        [id(0x00000300), helpcontext(0x0000081c)]
        HRESULT Update(
                        [in, optional] VARIANT MakePermanent, 
                        [in, optional] VARIANT Refresh);
        [id(0x00000307), hidden, helpcontext(0x0000081d)]
        HRESULT UpdateFreeBusy();
        [id(0x0000faf0), helpcontext(0x0000081e)]
        HRESULT GetContact([out, retval] _ContactItem** ret);
        [id(0x0000faf1), helpcontext(0x0000081f)]
        HRESULT GetExchangeUser([out, retval] _ExchangeUser** ret);
        [id(0x0000faf2), propget, helpcontext(0x00000820)]
        HRESULT AddressEntryUserType([out, retval] OlAddressEntryUserType* AddressEntryUserType);
        [id(0x0000faef), helpcontext(0x00000821)]
        HRESULT GetExchangeDistributionList([out, retval] _ExchangeDistributionList** ret);
        [id(0x0000fafd), propget, helpcontext(0x00000822)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000faf3), helpcontext(0x00000823)]
        HRESULT GetDirectReports([out, retval] AddressEntries** ret);
        [id(0x0000faf4), helpcontext(0x00000824)]
        HRESULT GetMemberOfList([out, retval] AddressEntries** ret);
        [id(0x00003a00), propget, helpcontext(0x00000825)]
        HRESULT Alias([out, retval] BSTR* Alias);
        [id(0x00003a30), propget, helpcontext(0x00000826)]
        HRESULT AssistantName([out, retval] BSTR* AssistantName);
        [id(0x00003a30), propput, helpcontext(0x00000826)]
        HRESULT AssistantName([in] BSTR AssistantName);
        [id(0x00003a08), propget, helpcontext(0x00000827)]
        HRESULT BusinessTelephoneNumber([out, retval] BSTR* BusinessTelephoneNumber);
        [id(0x00003a08), propput, helpcontext(0x00000827)]
        HRESULT BusinessTelephoneNumber([in] BSTR BusinessTelephoneNumber);
        [id(0x00003a27), propget, helpcontext(0x00000828)]
        HRESULT City([out, retval] BSTR* City);
        [id(0x00003a27), propput, helpcontext(0x00000828)]
        HRESULT City([in] BSTR City);
        [id(0x00003004), propget, helpcontext(0x00000829)]
        HRESULT Comments([out, retval] BSTR* Comments);
        [id(0x00003004), propput, helpcontext(0x00000829)]
        HRESULT Comments([in] BSTR Comments);
        [id(0x00003a16), propget, helpcontext(0x0000082a)]
        HRESULT CompanyName([out, retval] BSTR* CompanyName);
        [id(0x00003a16), propput, helpcontext(0x0000082a)]
        HRESULT CompanyName([in] BSTR CompanyName);
        [id(0x00003a18), propget, helpcontext(0x0000082b)]
        HRESULT Department([out, retval] BSTR* Department);
        [id(0x00003a18), propput, helpcontext(0x0000082b)]
        HRESULT Department([in] BSTR Department);
        [id(0x00003a06), propget, helpcontext(0x0000082c)]
        HRESULT FirstName([out, retval] BSTR* FirstName);
        [id(0x00003a06), propput, helpcontext(0x0000082c)]
        HRESULT FirstName([in] BSTR FirstName);
        [id(0x00003a17), propget, helpcontext(0x0000082d)]
        HRESULT JobTitle([out, retval] BSTR* JobTitle);
        [id(0x00003a17), propput, helpcontext(0x0000082d)]
        HRESULT JobTitle([in] BSTR JobTitle);
        [id(0x00003a11), propget, helpcontext(0x0000082e)]
        HRESULT LastName([out, retval] BSTR* LastName);
        [id(0x00003a11), propput, helpcontext(0x0000082e)]
        HRESULT LastName([in] BSTR LastName);
        [id(0x00003a1c), propget, helpcontext(0x0000082f)]
        HRESULT MobileTelephoneNumber([out, retval] BSTR* MobileTelephoneNumber);
        [id(0x00003a1c), propput, helpcontext(0x0000082f)]
        HRESULT MobileTelephoneNumber([in] BSTR MobileTelephoneNumber);
        [id(0x00003a19), propget, helpcontext(0x00000830)]
        HRESULT OfficeLocation([out, retval] BSTR* OfficeLocation);
        [id(0x00003a19), propput, helpcontext(0x00000830)]
        HRESULT OfficeLocation([in] BSTR OfficeLocation);
        [id(0x00003a2a), propget, helpcontext(0x00000831)]
        HRESULT PostalCode([out, retval] BSTR* PostalCode);
        [id(0x00003a2a), propput, helpcontext(0x00000831)]
        HRESULT PostalCode([in] BSTR PostalCode);
        [id(0x0000faf5), propget, helpcontext(0x00000832)]
        HRESULT PrimarySmtpAddress([out, retval] BSTR* PrimarySmtpAddress);
        [id(0x00003a28), propget, helpcontext(0x00000833)]
        HRESULT StateOrProvince([out, retval] BSTR* StateOrProvince);
        [id(0x00003a28), propput, helpcontext(0x00000833)]
        HRESULT StateOrProvince([in] BSTR StateOrProvince);
        [id(0x00003a29), propget, helpcontext(0x00000834)]
        HRESULT StreetAddress([out, retval] BSTR* StreetAddress);
        [id(0x00003a29), propput, helpcontext(0x00000834)]
        HRESULT StreetAddress([in] BSTR StreetAddress);
        [id(0x0000faf9), helpcontext(0x00000ca6)]
        HRESULT GetExchangeUserManager([out, retval] _ExchangeUser** ret);
        [id(0x0000802e), propget, helpcontext(0x00000836)]
        HRESULT YomiCompanyName([out, retval] BSTR* YomiCompanyName);
        [id(0x0000802e), propput, helpcontext(0x00000836)]
        HRESULT YomiCompanyName([in] BSTR YomiCompanyName);
        [id(0x0000802c), propget, helpcontext(0x00000837)]
        HRESULT YomiFirstName([out, retval] BSTR* YomiFirstName);
        [id(0x0000802c), propput, helpcontext(0x00000837)]
        HRESULT YomiFirstName([in] BSTR YomiFirstName);
        [id(0x0000802d), propget, helpcontext(0x00000838)]
        HRESULT YomiLastName([out, retval] BSTR* YomiLastName);
        [id(0x0000802d), propput, helpcontext(0x00000838)]
        HRESULT YomiLastName([in] BSTR YomiLastName);
        [id(0x0000fbe7), propget, helpcontext(0x00000839)]
        HRESULT YomiDisplayName([out, retval] BSTR* YomiDisplayName);
        [id(0x0000fbe7), propput, helpcontext(0x00000839)]
        HRESULT YomiDisplayName([in] BSTR YomiDisplayName);
        [id(0x0000fbe8), propget, helpcontext(0x0000083a)]
        HRESULT YomiDepartment([out, retval] BSTR* YomiDepartment);
        [id(0x0000fbe8), propput, helpcontext(0x0000083a)]
        HRESULT YomiDepartment([in] BSTR YomiDepartment);
        [id(0x0000fc77), helpcontext(0x00000d9d)]
        HRESULT GetPicture([out, retval] Picture** ppPictureDisp);
    };

    


    [
      uuid(000610CA-0000-0000-C000-000000000046),
      helpcontext(0x00000c57),
      noncreatable
    ]
    coclass ExchangeDistributionList {
        [default] interface _ExchangeDistributionList;
    };

    [
      odl,
      uuid(000630CA-0000-0000-C000-000000000046),
      helpcontext(0x0000083b),
      dual,
      oleautomation
    ]
    interface _ExchangeDistributionList : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000083c)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000083d)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000083e)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000083f)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00003003), propget, helpcontext(0x00000840)]
        HRESULT Address([out, retval] BSTR* Address);
        [id(0x00003003), propput, helpcontext(0x00000840)]
        HRESULT Address([in] BSTR Address);
        [id(0x00003900), propget, helpcontext(0x00000841)]
        HRESULT DisplayType([out, retval] OlDisplayType* DisplayType);
        [id(0x0000f01e), propget, helpcontext(0x00000842)]
        HRESULT ID([out, retval] BSTR* ID);
        [id(0x00000303), propget, hidden, helpcontext(0x00000843)]
        HRESULT Manager([out, retval] AddressEntry** Manager);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000844)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000f100), propput, hidden, helpcontext(0x00000844)]
        HRESULT MAPIOBJECT([in] IUnknown* MAPIOBJECT);
        [id(0x00000304), propget, hidden, helpcontext(0x00000845)]
        HRESULT Members([out, retval] AddressEntries** Members);
        [id(0x00003001), propget, helpcontext(0x00000846)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00003001), propput, helpcontext(0x00000846)]
        HRESULT Name([in] BSTR Name);
        [id(0x00003002), propget, helpcontext(0x00000847)]
        HRESULT Type([out, retval] BSTR* Type);
        [id(0x00003002), propput, helpcontext(0x00000847)]
        HRESULT Type([in] BSTR Type);
        [id(0x00000302), helpcontext(0x00000848)]
        HRESULT Delete();
        [id(0x00000301), helpcontext(0x00000849)]
        HRESULT Details([in, optional] VARIANT HWnd);
        [id(0x00000306), helpcontext(0x0000084a)]
        HRESULT GetFreeBusy(
                        [in] DATE Start, 
                        [in] long MinPerChar, 
                        [in, optional] VARIANT CompleteFormat, 
                        [out, retval] BSTR* FreeBusyInfo);
        [id(0x00000300), helpcontext(0x0000084b)]
        HRESULT Update(
                        [in, optional] VARIANT MakePermanent, 
                        [in, optional] VARIANT Refresh);
        [id(0x00000307), hidden, helpcontext(0x0000084c)]
        HRESULT UpdateFreeBusy();
        [id(0x0000faf0), helpcontext(0x0000084d)]
        HRESULT GetContact([out, retval] _ContactItem** ret);
        [id(0x0000faf1), helpcontext(0x0000084e)]
        HRESULT GetExchangeUser([out, retval] _ExchangeUser** ret);
        [id(0x0000faf2), propget, helpcontext(0x0000084f)]
        HRESULT AddressEntryUserType([out, retval] OlAddressEntryUserType* AddressEntryUserType);
        [id(0x0000faef), helpcontext(0x00000850)]
        HRESULT GetExchangeDistributionList([out, retval] _ExchangeDistributionList** ret);
        [id(0x0000fafd), propget, helpcontext(0x00000851)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000faf4), helpcontext(0x00000852)]
        HRESULT GetMemberOfList([out, retval] AddressEntries** ret);
        [id(0x0000faf6), helpcontext(0x00000ca7)]
        HRESULT GetExchangeDistributionListMembers([out, retval] AddressEntries** ret);
        [id(0x00003a00), propget, helpcontext(0x00000854)]
        HRESULT Alias([out, retval] BSTR* Alias);
        [id(0x00003004), propget, helpcontext(0x00000855)]
        HRESULT Comments([out, retval] BSTR* Comments);
        [id(0x00003004), propput, helpcontext(0x00000855)]
        HRESULT Comments([in] BSTR Comments);
        [id(0x0000faf5), propget, helpcontext(0x00000856)]
        HRESULT PrimarySmtpAddress([out, retval] BSTR* PrimarySmtpAddress);
        [id(0x0000faf7), helpcontext(0x00000857)]
        HRESULT GetOwners([out, retval] AddressEntries** ret);
    };

    


    


    [
      odl,
      uuid(00063048-0000-0000-C000-000000000046),
      helpcontext(0x00000057),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface AddressLists : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000058)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000059)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000005a)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000005b)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000005c)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000005d),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] AddressList** Item);
    };

    [
      odl,
      uuid(00063086-0000-0000-C000-000000000046),
      helpcontext(0x0000005e),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface SyncObjects : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000005f)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000060)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000061)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000062)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000063)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000064),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _SyncObject** Item);
        [id(0x0000fa4a), propget, helpcontext(0x00000065)]
        HRESULT AppFolders([out, retval] _SyncObject** AppFolders);
    };

    [
      uuid(00063084-0000-0000-C000-000000000046),
      helpcontext(0x00000ba8),
      noncreatable
    ]
    coclass SyncObject {
        [default] interface _SyncObject;
        [default, source] dispinterface SyncObjectEvents;
    };

    [
      odl,
      uuid(00063083-0000-0000-C000-000000000046),
      helpcontext(0x00000066),
      dual,
      oleautomation
    ]
    interface _SyncObject : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000067)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000068)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000069)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000006a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002100), propget, helpcontext(0x0000006b)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00002101), helpcontext(0x0000006c)]
        HRESULT Start();
        [id(0x00002102), helpcontext(0x0000006d)]
        HRESULT Stop();
    };

    [
      uuid(00063085-0000-0000-C000-000000000046),
      helpcontext(0x0000006e)
    ]
    dispinterface SyncObjectEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x0000006f)]
            void SyncStart();
            [id(0x0000f002), helpcontext(0x00000070)]
            void Progress(
                            [in] OlSyncState State, 
                            [in] BSTR Description, 
                            [in] long Value, 
                            [in] long Max);
            [id(0x0000f003), helpcontext(0x00000071)]
            void OnError(
                            [in] long Code, 
                            [in] BSTR Description);
            [id(0x0000f004), helpcontext(0x00000072)]
            void SyncEnd();
    };

    


    


    [
      uuid(000610C4-0000-0000-C000-000000000046),
      helpcontext(0x00000c52),
      noncreatable
    ]
    coclass Accounts {
        [default] interface _Accounts;
        [default, source] dispinterface AccountsEvents;
    };

    [
      odl,
      uuid(000630C4-0000-0000-C000-000000000046),
      helpcontext(0x000002e8),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Accounts : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000002e9)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000002ea)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000002eb)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000002ec)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x000002ed)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x000002ee),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _Account** Item);
    };

    [
      uuid(00063105-0000-0000-C000-000000000046),
      helpcontext(0x00000d89)
    ]
    dispinterface AccountsEvents {
        properties:
        methods:
            [id(0x0000fc6c), helpcontext(0x00000d95)]
            void AutoDiscoverComplete([in] _Account* Account);
    };

    [
      uuid(000610C6-0000-0000-C000-000000000046),
      helpcontext(0x00000bcb),
      noncreatable
    ]
    coclass Stores {
        [default] interface _Stores;
        [default, source] dispinterface StoresEvents_12;
    };

    [
      odl,
      uuid(000630C6-0000-0000-C000-000000000046),
      helpcontext(0x0000032d),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Stores : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000032e)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000032f)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000330)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000331)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000332)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000333),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _Store** Item);
    };

    [
      uuid(000630F8-0000-0000-C000-000000000046),
      helpcontext(0x00000ac1)
    ]
    dispinterface StoresEvents_12 {
        properties:
        methods:
            [id(0x0000fbb1), helpcontext(0x00000ac2)]
            void BeforeStoreRemove(
                            [in] _Store* Store, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f001), helpcontext(0x00000ac3)]
            void StoreAdd([in] _Store* Store);
    };

    [
      uuid(000610C8-0000-0000-C000-000000000046),
      helpcontext(0x00000c54),
      noncreatable
    ]
    coclass SelectNamesDialog {
        [default] interface _SelectNamesDialog;
    };

    [
      odl,
      uuid(000630C8-0000-0000-C000-000000000046),
      helpcontext(0x00000334),
      dual,
      oleautomation
    ]
    interface _SelectNamesDialog : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000335)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000336)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000337)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000338)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fae2), propget, helpcontext(0x00000339)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0x0000fae2), propput, helpcontext(0x00000339)]
        HRESULT Caption([in] BSTR Caption);
        [id(0x0000f021), helpcontext(0x0000033a)]
        HRESULT Display([out, retval] VARIANT_BOOL* ret);
        [id(0x0000f814), propget, helpcontext(0x0000033b)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
        [id(0x0000f814), propput, helpcontext(0x0000033b)]
        HRESULT Recipients([in] Recipients* Recipients);
        [id(0x0000fae3), propget, helpcontext(0x0000033c)]
        HRESULT BccLabel([out, retval] BSTR* BccLabel);
        [id(0x0000fae3), propput, helpcontext(0x0000033c)]
        HRESULT BccLabel([in] BSTR BccLabel);
        [id(0x0000fae4), propget, helpcontext(0x0000033d)]
        HRESULT CcLabel([out, retval] BSTR* CcLabel);
        [id(0x0000fae4), propput, helpcontext(0x0000033d)]
        HRESULT CcLabel([in] BSTR CcLabel);
        [id(0x0000fae5), propget, helpcontext(0x0000033e)]
        HRESULT ToLabel([out, retval] BSTR* ToLabel);
        [id(0x0000fae5), propput, helpcontext(0x0000033e)]
        HRESULT ToLabel([in] BSTR ToLabel);
        [id(0x0000fae6), propget, helpcontext(0x0000033f)]
        HRESULT AllowMultipleSelection([out, retval] VARIANT_BOOL* AllowMultipleSelection);
        [id(0x0000fae6), propput, helpcontext(0x0000033f)]
        HRESULT AllowMultipleSelection([in] VARIANT_BOOL AllowMultipleSelection);
        [id(0x0000fae7), propget, helpcontext(0x00000340)]
        HRESULT ForceResolution([out, retval] VARIANT_BOOL* ForceResolution);
        [id(0x0000fae7), propput, helpcontext(0x00000340)]
        HRESULT ForceResolution([in] VARIANT_BOOL ForceResolution);
        [id(0x0000fae8), propget, helpcontext(0x00000341)]
        HRESULT ShowOnlyInitialAddressList([out, retval] VARIANT_BOOL* ShowOnlyInitialAddressList);
        [id(0x0000fae8), propput, helpcontext(0x00000341)]
        HRESULT ShowOnlyInitialAddressList([in] VARIANT_BOOL ShowOnlyInitialAddressList);
        [id(0x0000fae9), propget, helpcontext(0x00000342)]
        HRESULT NumberOfRecipientSelectors([out, retval] OlRecipientSelectors* NumberOfRecipientSelectors);
        [id(0x0000fae9), propput, helpcontext(0x00000342)]
        HRESULT NumberOfRecipientSelectors([in] OlRecipientSelectors NumberOfRecipientSelectors);
        [id(0x0000faea), propget, helpcontext(0x00000343)]
        HRESULT InitialAddressList([out, retval] AddressList** InitialAddressList);
        [id(0x0000faea), propput, helpcontext(0x00000343)]
        HRESULT InitialAddressList([in] AddressList* InitialAddressList);
        [id(0x0000faeb), helpcontext(0x00000344)]
        HRESULT SetDefaultDisplayMode([in] OlDefaultSelectNamesDisplayMode defaultMode);
    };

    


    


    [
      uuid(00061067-0000-0000-C000-000000000046),
      helpcontext(0x00000bc8),
      noncreatable
    ]
    coclass SharingItem {
        [default] interface _SharingItem;
        [default, source] dispinterface ItemEvents_10;
        [source] dispinterface ItemEvents;
    };

    [
      odl,
      uuid(0006302F-0000-0000-C000-000000000046),
      helpcontext(0x00000250),
      dual,
      oleautomation
    ]
    interface _SharingItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000251)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000252)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000253)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000254)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x00000255)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x00000256)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x00000257)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x00000257)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x00000258)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x00000258)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x00000259)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x00000259)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x0000025a)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x0000025a)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x0000025b)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x0000025c)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x0000025d)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x0000025e)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x0000025f)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x00000260)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x00000261)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x00000261)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x00000262)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000263)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x00000264)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x00000264)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x00000265)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x00000265)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x00000266)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x00000266)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x00000267)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x00000268)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x00000269)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x0000026a)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x0000026a)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x0000026b)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x0000026c)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x0000026c)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x0000026d)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x0000026d)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x0000026e)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x0000026f)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x00000270)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x00000271)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x00000272)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x00000273)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x00000274)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x00000275)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x00000276)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x0000fbef), helpcontext(0x000002b3)]
        HRESULT Allow();
        [id(0x0000fbfb), helpcontext(0x000002b4)]
        HRESULT Deny([out, retval] SharingItem** denyMailItem);
        [id(0x0000fafd), propget, helpcontext(0x000002b5)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fbea), propget, helpcontext(0x000002b6)]
        HRESULT RemoteName([out, retval] BSTR* RemoteName);
        [id(0x0000fbeb), propget, helpcontext(0x000002b7)]
        HRESULT RemoteID([out, retval] BSTR* RemoteID);
        [id(0x0000fbec), propget, helpcontext(0x000002b8)]
        HRESULT RemotePath([out, retval] BSTR* RemotePath);
        [id(0x0000fbee), propget, helpcontext(0x000002b9)]
        HRESULT SharingProviderGuid([out, retval] BSTR* SharingProviderGuid);
        [id(0x0000fbf2), helpcontext(0x000002ba)]
        HRESULT OpenSharedFolder([out, retval] MAPIFolder** sf);
        [id(0x0000fbf5), propget, helpcontext(0x000002bb)]
        HRESULT SharingProvider([out, retval] OlSharingProvider* SharingProvider);
        [id(0x0000fbf8), propget, helpcontext(0x000002bc)]
        HRESULT AllowWriteAccess([out, retval] VARIANT_BOOL* AllowWriteAccess);
        [id(0x0000fbf8), propput, helpcontext(0x000002bc)]
        HRESULT AllowWriteAccess([in] VARIANT_BOOL AllowWriteAccess);
        [id(0x0000fbf9), propget, helpcontext(0x000002bd)]
        HRESULT Type([out, retval] OlSharingMsgType* Type);
        [id(0x0000fbf9), propput, helpcontext(0x000002bd)]
        HRESULT Type([in] OlSharingMsgType Type);
        [id(0x0000fbfa), propget, helpcontext(0x000002be)]
        HRESULT RequestedFolder([out, retval] OlDefaultFolders* RequestedFolder);
        [id(0x0000fad1), propget, helpcontext(0x000002bf)]
        HRESULT SendUsingAccount([out, retval] _Account** SendUsingAccount);
        [id(0x0000fad1), propput, helpcontext(0x000002bf)]
        HRESULT SendUsingAccount([in] _Account* SendUsingAccount);
        [id(0x00000002), propget, helpcontext(0x00000277)]
        HRESULT AlternateRecipientAllowed([out, retval] VARIANT_BOOL* AlternateRecipientAllowed);
        [id(0x00000002), propput, helpcontext(0x00000277)]
        HRESULT AlternateRecipientAllowed([in] VARIANT_BOOL AlternateRecipientAllowed);
        [id(0x00000005), propget, helpcontext(0x00000278)]
        HRESULT AutoForwarded([out, retval] VARIANT_BOOL* AutoForwarded);
        [id(0x00000005), propput, helpcontext(0x00000278)]
        HRESULT AutoForwarded([in] VARIANT_BOOL AutoForwarded);
        [id(0x00000e02), propget, helpcontext(0x00000279)]
        HRESULT BCC([out, retval] BSTR* BCC);
        [id(0x00000e02), propput, helpcontext(0x00000279)]
        HRESULT BCC([in] BSTR BCC);
        [id(0x00000e03), propget, helpcontext(0x0000027a)]
        HRESULT CC([out, retval] BSTR* CC);
        [id(0x00000e03), propput, helpcontext(0x0000027a)]
        HRESULT CC([in] BSTR CC);
        [id(0x0000000f), propget, helpcontext(0x0000027b)]
        HRESULT DeferredDeliveryTime([out, retval] DATE* DeferredDeliveryTime);
        [id(0x0000000f), propput, helpcontext(0x0000027b)]
        HRESULT DeferredDeliveryTime([in] DATE DeferredDeliveryTime);
        [id(0x00000e01), propget, helpcontext(0x0000027c)]
        HRESULT DeleteAfterSubmit([out, retval] VARIANT_BOOL* DeleteAfterSubmit);
        [id(0x00000e01), propput, helpcontext(0x0000027c)]
        HRESULT DeleteAfterSubmit([in] VARIANT_BOOL DeleteAfterSubmit);
        [id(0x00000015), propget, helpcontext(0x0000027d)]
        HRESULT ExpiryTime([out, retval] DATE* ExpiryTime);
        [id(0x00000015), propput, helpcontext(0x0000027d)]
        HRESULT ExpiryTime([in] DATE ExpiryTime);
        [id(0x00000030), propget, hidden, helpcontext(0x0000027e)]
        HRESULT FlagDueBy([out, retval] DATE* FlagDueBy);
        [id(0x00000030), propput, hidden, helpcontext(0x0000027e)]
        HRESULT FlagDueBy([in] DATE FlagDueBy);
        [id(0x00008530), propget, helpcontext(0x0000027f)]
        HRESULT FlagRequest([out, retval] BSTR* FlagRequest);
        [id(0x00008530), propput, helpcontext(0x0000027f)]
        HRESULT FlagRequest([in] BSTR FlagRequest);
        [id(0x00001090), propget, hidden, helpcontext(0x00000280)]
        HRESULT FlagStatus([out, retval] OlFlagStatus* FlagStatus);
        [id(0x00001090), propput, hidden, helpcontext(0x00000280)]
        HRESULT FlagStatus([in] OlFlagStatus FlagStatus);
        [id(0x0000f404), propget, helpcontext(0x00000281)]
        HRESULT HTMLBody([out, retval] BSTR* HTMLBody);
        [id(0x0000f404), propput, helpcontext(0x00000281)]
        HRESULT HTMLBody([in] BSTR HTMLBody);
        [id(0x00000023), propget, helpcontext(0x00000282)]
        HRESULT OriginatorDeliveryReportRequested([out, retval] VARIANT_BOOL* OriginatorDeliveryReportRequested);
        [id(0x00000023), propput, helpcontext(0x00000282)]
        HRESULT OriginatorDeliveryReportRequested([in] VARIANT_BOOL OriginatorDeliveryReportRequested);
        [id(0x00000029), propget, helpcontext(0x00000283)]
        HRESULT ReadReceiptRequested([out, retval] VARIANT_BOOL* ReadReceiptRequested);
        [id(0x00000029), propput, helpcontext(0x00000283)]
        HRESULT ReadReceiptRequested([in] VARIANT_BOOL ReadReceiptRequested);
        [id(0x0000003f), propget, helpcontext(0x00000284)]
        HRESULT ReceivedByEntryID([out, retval] BSTR* ReceivedByEntryID);
        [id(0x00000040), propget, helpcontext(0x00000285)]
        HRESULT ReceivedByName([out, retval] BSTR* ReceivedByName);
        [id(0x00000043), propget, helpcontext(0x00000286)]
        HRESULT ReceivedOnBehalfOfEntryID([out, retval] BSTR* ReceivedOnBehalfOfEntryID);
        [id(0x00000044), propget, helpcontext(0x00000287)]
        HRESULT ReceivedOnBehalfOfName([out, retval] BSTR* ReceivedOnBehalfOfName);
        [id(0x00000e06), propget, helpcontext(0x00000288)]
        HRESULT ReceivedTime([out, retval] DATE* ReceivedTime);
        [id(0x0000002b), propget, helpcontext(0x00000289)]
        HRESULT RecipientReassignmentProhibited([out, retval] VARIANT_BOOL* RecipientReassignmentProhibited);
        [id(0x0000002b), propput, helpcontext(0x00000289)]
        HRESULT RecipientReassignmentProhibited([in] VARIANT_BOOL RecipientReassignmentProhibited);
        [id(0x0000f814), propget, helpcontext(0x0000028a)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
        [id(0x0000851c), propget, helpcontext(0x0000028b)]
        HRESULT ReminderOverrideDefault([out, retval] VARIANT_BOOL* ReminderOverrideDefault);
        [id(0x0000851c), propput, helpcontext(0x0000028b)]
        HRESULT ReminderOverrideDefault([in] VARIANT_BOOL ReminderOverrideDefault);
        [id(0x0000851e), propget, helpcontext(0x0000028c)]
        HRESULT ReminderPlaySound([out, retval] VARIANT_BOOL* ReminderPlaySound);
        [id(0x0000851e), propput, helpcontext(0x0000028c)]
        HRESULT ReminderPlaySound([in] VARIANT_BOOL ReminderPlaySound);
        [id(0x00008503), propget, helpcontext(0x0000028d)]
        HRESULT ReminderSet([out, retval] VARIANT_BOOL* ReminderSet);
        [id(0x00008503), propput, helpcontext(0x0000028d)]
        HRESULT ReminderSet([in] VARIANT_BOOL ReminderSet);
        [id(0x0000851f), propget, helpcontext(0x0000028e)]
        HRESULT ReminderSoundFile([out, retval] BSTR* ReminderSoundFile);
        [id(0x0000851f), propput, helpcontext(0x0000028e)]
        HRESULT ReminderSoundFile([in] BSTR ReminderSoundFile);
        [id(0x00008502), propget, helpcontext(0x0000028f)]
        HRESULT ReminderTime([out, retval] DATE* ReminderTime);
        [id(0x00008502), propput, helpcontext(0x0000028f)]
        HRESULT ReminderTime([in] DATE ReminderTime);
        [id(0x00008511), propget, helpcontext(0x00000290)]
        HRESULT RemoteStatus([out, retval] OlRemoteStatus* RemoteStatus);
        [id(0x00008511), propput, helpcontext(0x00000290)]
        HRESULT RemoteStatus([in] OlRemoteStatus RemoteStatus);
        [id(0x00000050), propget, helpcontext(0x00000291)]
        HRESULT ReplyRecipientNames([out, retval] BSTR* ReplyRecipientNames);
        [id(0x0000f013), propget, helpcontext(0x00000292)]
        HRESULT ReplyRecipients([out, retval] Recipients** ReplyRecipients);
        [id(0x0000f401), propget, helpcontext(0x00000293)]
        HRESULT SaveSentMessageFolder([out, retval] MAPIFolder** SaveSentMessageFolder);
        [id(0x0000f401), propputref, helpcontext(0x00000293)]
        HRESULT SaveSentMessageFolder([in] MAPIFolder* SaveSentMessageFolder);
        [id(0x00000c1a), propget, helpcontext(0x00000294)]
        HRESULT SenderName([out, retval] BSTR* SenderName);
        [id(0x0000f402), propget, helpcontext(0x00000295)]
        HRESULT Sent([out, retval] VARIANT_BOOL* Sent);
        [id(0x00000039), propget, helpcontext(0x00000296)]
        HRESULT SentOn([out, retval] DATE* SentOn);
        [id(0x00000042), propget, helpcontext(0x00000297)]
        HRESULT SentOnBehalfOfName([out, retval] BSTR* SentOnBehalfOfName);
        [id(0x00000042), propput, helpcontext(0x00000297)]
        HRESULT SentOnBehalfOfName([in] BSTR SentOnBehalfOfName);
        [id(0x0000f403), propget, helpcontext(0x00000298)]
        HRESULT Submitted([out, retval] VARIANT_BOOL* Submitted);
        [id(0x00000e04), propget, helpcontext(0x00000299)]
        HRESULT To([out, retval] BSTR* To);
        [id(0x00000e04), propput, helpcontext(0x00000299)]
        HRESULT To([in] BSTR To);
        [id(0x0000f822), helpcontext(0x0000029c)]
        HRESULT ClearConversationIndex();
        [id(0x0000f813), helpcontext(0x0000029d)]
        HRESULT Forward([out, retval] SharingItem** Item);
        [id(0x0000f810), helpcontext(0x0000029e)]
        HRESULT Reply([out, retval] _MailItem** Item);
        [id(0x0000f811), helpcontext(0x0000029f)]
        HRESULT ReplyAll([out, retval] _MailItem** Item);
        [id(0x0000f075), helpcontext(0x000002a0)]
        HRESULT Send();
        [id(0x0000fa09), propget, helpcontext(0x000002a2)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x0000fa49), propget, helpcontext(0x000002a3)]
        HRESULT BodyFormat([out, retval] OlBodyFormat* BodyFormat);
        [id(0x0000fa49), propput, helpcontext(0x000002a3)]
        HRESULT BodyFormat([in] OlBodyFormat BodyFormat);
        [id(0x0000fa4d), propget, helpcontext(0x000002a4)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x000002a5)]
        HRESULT ShowCategoriesDialog();
        [id(0x00003fde), propget, helpcontext(0x000002a6)]
        HRESULT InternetCodepage([out, retval] long* InternetCodepage);
        [id(0x00003fde), propput, helpcontext(0x000002a6)]
        HRESULT InternetCodepage([in] long InternetCodepage);
        [id(0x00008571), propget, helpcontext(0x000002a7)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x000002a7)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x000002a8)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000fb96), helpcontext(0x00000c91)]
        HRESULT AddBusinessCard([in] _ContactItem* contact);
        [id(0x0000fc1f), propget, helpcontext(0x00000c92)]
        HRESULT TaskSubject([out, retval] BSTR* TaskSubject);
        [id(0x0000fc1f), propput, helpcontext(0x00000c92)]
        HRESULT TaskSubject([in] BSTR TaskSubject);
        [id(0x00008105), propget, helpcontext(0x00000c93)]
        HRESULT TaskDueDate([out, retval] DATE* TaskDueDate);
        [id(0x00008105), propput, helpcontext(0x00000c93)]
        HRESULT TaskDueDate([in] DATE TaskDueDate);
        [id(0x00008104), propget, helpcontext(0x00000c94)]
        HRESULT TaskStartDate([out, retval] DATE* TaskStartDate);
        [id(0x00008104), propput, helpcontext(0x00000c94)]
        HRESULT TaskStartDate([in] DATE TaskStartDate);
        [id(0x0000810f), propget, helpcontext(0x00000c95)]
        HRESULT TaskCompletedDate([out, retval] DATE* TaskCompletedDate);
        [id(0x0000810f), propput, helpcontext(0x00000c95)]
        HRESULT TaskCompletedDate([in] DATE TaskCompletedDate);
        [id(0x000085a0), propget, helpcontext(0x00000c96)]
        HRESULT ToDoTaskOrdinal([out, retval] DATE* ToDoTaskOrdinal);
        [id(0x000085a0), propput, helpcontext(0x00000c96)]
        HRESULT ToDoTaskOrdinal([in] DATE ToDoTaskOrdinal);
        [id(0x0000facc), propget, hidden, helpcontext(0x000002aa)]
        HRESULT FlagIcon([out, retval] OlFlagIcon* FlagIcon);
        [id(0x0000facc), propput, hidden, helpcontext(0x000002aa)]
        HRESULT FlagIcon([in] OlFlagIcon FlagIcon);
        [id(0x0000fabb), propget, helpcontext(0x000002ad)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x00000c1f), propget, helpcontext(0x000002ae)]
        HRESULT SenderEmailAddress([out, retval] BSTR* SenderEmailAddress);
        [id(0x00000c1e), propget, helpcontext(0x000002af)]
        HRESULT SenderEmailType([out, retval] BSTR* SenderEmailType);
        [id(0x0000fac4), propget, hidden, helpcontext(0x000002b0)]
        HRESULT EnableSharedAttachments([out, retval] VARIANT_BOOL* EnableSharedAttachments);
        [id(0x0000fac4), propput, hidden, helpcontext(0x000002b0)]
        HRESULT EnableSharedAttachments([in] VARIANT_BOOL EnableSharedAttachments);
        [id(0x0000fac6), propget, helpcontext(0x000002b1)]
        HRESULT Permission([out, retval] OlPermission* Permission);
        [id(0x0000fac6), propput, helpcontext(0x000002b1)]
        HRESULT Permission([in] OlPermission Permission);
        [id(0x0000facb), propget, helpcontext(0x000002b2)]
        HRESULT PermissionService([out, retval] OlPermissionService* PermissionService);
        [id(0x0000facb), propput, helpcontext(0x000002b2)]
        HRESULT PermissionService([in] OlPermissionService PermissionService);
        [id(0x0000fbfe), helpcontext(0x00000c97)]
        HRESULT MarkAsTask([in] OlMarkInterval MarkInterval);
        [id(0x0000fc09), helpcontext(0x00000c98)]
        HRESULT ClearTaskFlag();
        [id(0x0000fc0a), propget, helpcontext(0x00000c99)]
        HRESULT IsMarkedAsTask([out, retval] VARIANT_BOOL* IsMarkedAsTask);
        [id(0x0000fc54), helpcontext(0x00000da8)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000da9)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc7d), propget, helpcontext(0x00000db7)]
        HRESULT PermissionTemplateGuid([out, retval] BSTR* PermissionTemplateGuid);
        [id(0x0000fc7d), propput, helpcontext(0x00000db7)]
        HRESULT PermissionTemplateGuid([in] BSTR PermissionTemplateGuid);
        [id(0x0000fc84), propget, helpcontext(0x00000dd1)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dd1)]
        HRESULT RTFBody([in] VARIANT RTFBody);
        [id(0x0000fc8b), propget, helpcontext(0x00000dec)]
        HRESULT RetentionPolicyName([out, retval] BSTR* RetentionPolicyName);
        [id(0x0000fc8a), propget, helpcontext(0x00000ded)]
        HRESULT RetentionExpirationDate([out, retval] DATE* RetentionExpirationDate);
    };

    


    


    [
      odl,
      uuid(0006300A-0000-0000-C000-000000000046),
      helpcontext(0x00000073),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Explorers : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000074)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000075)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000076)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000077)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000078)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000079),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _Explorer** Item);
        [id(0x0000005f), helpcontext(0x0000007a)]
        HRESULT Add(
                        [in] VARIANT Folder, 
                        [in, optional] OlFolderDisplayMode DisplayMode, 
                        [out, retval] _Explorer** Explorer);
    };

    [
      uuid(00063050-0000-0000-C000-000000000046),
      helpcontext(0x00000ba9),
      noncreatable
    ]
    coclass Explorer {
        [default] interface _Explorer;
        [source] dispinterface ExplorerEvents;
        [default, source] dispinterface ExplorerEvents_10;
    };

    [
      uuid(0006304F-0000-0000-C000-000000000046),
      helpcontext(0x0000007b)
    ]
    dispinterface ExplorerEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x0000007c)]
            void Activate();
            [id(0x0000f002), helpcontext(0x0000007d)]
            void FolderSwitch();
            [id(0x0000f003), helpcontext(0x0000007e)]
            void BeforeFolderSwitch(
                            [in] IDispatch* NewFolder, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f004), helpcontext(0x0000007f)]
            void ViewSwitch();
            [id(0x0000f005), helpcontext(0x00000080)]
            void BeforeViewSwitch(
                            [in] VARIANT NewView, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f006), helpcontext(0x00000081)]
            void Deactivate();
            [id(0x0000f007), helpcontext(0x00000082)]
            void SelectionChange();
            [id(0x0000f008), helpcontext(0x00000083)]
            void Close();
    };

    [
      uuid(0006300F-0000-0000-C000-000000000046),
      helpcontext(0x000001c0)
    ]
    dispinterface ExplorerEvents_10 {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x000001c1)]
            HRESULT Activate();
            [id(0x0000f002), helpcontext(0x000001c2)]
            HRESULT FolderSwitch();
            [id(0x0000f003), helpcontext(0x000001c3)]
            HRESULT BeforeFolderSwitch(
                            [in] IDispatch* NewFolder, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f004), helpcontext(0x000001c4)]
            HRESULT ViewSwitch();
            [id(0x0000f005), helpcontext(0x000001c5)]
            HRESULT BeforeViewSwitch(
                            [in] VARIANT NewView, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f006), helpcontext(0x000001c6)]
            HRESULT Deactivate();
            [id(0x0000f007), helpcontext(0x000001c7)]
            HRESULT SelectionChange();
            [id(0x0000f008), helpcontext(0x000001c8)]
            HRESULT Close();
            [id(0x0000fa11), helpcontext(0x000001c9)]
            HRESULT BeforeMaximize([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa12), helpcontext(0x000001ca)]
            HRESULT BeforeMinimize([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa13), helpcontext(0x000001cb)]
            HRESULT BeforeMove([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa14), helpcontext(0x000001cc)]
            HRESULT BeforeSize([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa0e), helpcontext(0x000001cd)]
            void BeforeItemCopy([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa0f), helpcontext(0x000001ce)]
            void BeforeItemCut([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa10), helpcontext(0x000001cf)]
            void BeforeItemPaste(
                            [in] VARIANT* ClipboardContent, 
                            [in] MAPIFolder* Target, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fc79), helpcontext(0x00000d9b)]
            HRESULT AttachmentSelectionChange();
            [id(0x0000fc92), helpcontext(0x00000e0c)]
            void InlineResponse(IDispatch* Item);
            [id(0x0000fc96), helpcontext(0x00000e0e)]
            void InlineResponseClose();
    };

    


    [
      odl,
      uuid(00063008-0000-0000-C000-000000000046),
      helpcontext(0x00000084),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Inspectors : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000085)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000086)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000087)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000088)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000089)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000008a),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _Inspector** Item);
        [id(0x0000005f), helpcontext(0x0000008b)]
        HRESULT Add(
                        [in] IDispatch* Item, 
                        [out, retval] _Inspector** Inspector);
    };

    [
      uuid(00063058-0000-0000-C000-000000000046),
      helpcontext(0x00000baa),
      noncreatable
    ]
    coclass Inspector {
        [default] interface _Inspector;
        [source] dispinterface InspectorEvents;
        [default, source] dispinterface InspectorEvents_10;
    };

    [
      uuid(0006307D-0000-0000-C000-000000000046),
      helpcontext(0x0000008c)
    ]
    dispinterface InspectorEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x0000008d)]
            void Activate();
            [id(0x0000f006), helpcontext(0x0000008e)]
            void Deactivate();
            [id(0x0000f008), helpcontext(0x0000008f)]
            void Close();
    };

    [
      uuid(0006302A-0000-0000-C000-000000000046),
      helpcontext(0x000001d0)
    ]
    dispinterface InspectorEvents_10 {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x000001d1)]
            HRESULT Activate();
            [id(0x0000f006), helpcontext(0x000001d2)]
            HRESULT Deactivate();
            [id(0x0000f008), helpcontext(0x000001d3)]
            HRESULT Close();
            [id(0x0000fa11), helpcontext(0x000001d4)]
            HRESULT BeforeMaximize([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa12), helpcontext(0x000001d5)]
            HRESULT BeforeMinimize([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa13), helpcontext(0x000001d6)]
            HRESULT BeforeMove([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa14), helpcontext(0x000001d7)]
            HRESULT BeforeSize([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fbf4), helpcontext(0x000001d8)]
            void PageChange([in] BSTR* ActivePageName);
            [id(0x0000fc79), helpcontext(0x00000d9c)]
            HRESULT AttachmentSelectionChange();
    };

    [
      odl,
      uuid(0006300B-0000-0000-C000-000000000046),
      helpcontext(0x000008c8),
      dual,
      oleautomation
    ]
    interface Search : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000008c9)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000008ca)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000008cb)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000008cc)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fa64), propget, helpcontext(0x000008cd)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x0000fa68), propget, helpcontext(0x000008ce)]
        HRESULT IsSynchronous([out, retval] VARIANT_BOOL* IsSynchronous);
        [id(0x0000fa69), propget, helpcontext(0x000008cf)]
        HRESULT Results([out, retval] _Results** Results);
        [id(0x0000fa66), propget, helpcontext(0x000008d0)]
        HRESULT SearchSubFolders([out, retval] VARIANT_BOOL* SearchSubFolders);
        [id(0x0000fa67), helpcontext(0x000008d1)]
        HRESULT Stop();
        [id(0x0000fa6d), propget, helpcontext(0x000008d2)]
        HRESULT Tag([out, retval] BSTR* Tag);
        [id(0x0000faa5), propget, helpcontext(0x000008d3)]
        HRESULT Scope([out, retval] BSTR* Scope);
        [id(0x0000faad), helpcontext(0x000008d4)]
        HRESULT Save(
                        [in] BSTR Name, 
                        [out, retval] MAPIFolder** Folder);
        [id(0x0000fb1d), helpcontext(0x000008d5)]
        HRESULT GetTable([out, retval] _Table** Table);
    };

    [
      odl,
      uuid(0006300C-0000-0000-C000-000000000046),
      helpcontext(0x000001f1),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _Results : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000001f2)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000001f3)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000001f4)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000001f5)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x000001f6)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x000001f7),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] IDispatch** Item);
        [id(0x0000005a), propget, hidden, helpcontext(0x000001f8)]
        HRESULT RawTable([out, retval] IUnknown** RawTable);
        [id(0x00000056), helpcontext(0x000001f9)]
        HRESULT GetFirst([out, retval] IDispatch** Item);
        [id(0x00000058), helpcontext(0x000001fa)]
        HRESULT GetLast([out, retval] IDispatch** Item);
        [id(0x00000057), helpcontext(0x000001fb)]
        HRESULT GetNext([out, retval] IDispatch** Item);
        [id(0x00000059), helpcontext(0x000001fc)]
        HRESULT GetPrevious([out, retval] IDispatch** Item);
        [id(0x0000005d), helpcontext(0x000001fd)]
        HRESULT ResetColumns();
        [id(0x0000005c), helpcontext(0x000001fe)]
        HRESULT SetColumns([in] BSTR Columns);
        [id(0x00000061), helpcontext(0x000001ff)]
        HRESULT Sort(
                        [in] BSTR Property, 
                        [in, optional] VARIANT Descending);
        [id(0x0000fa8f), propget, helpcontext(0x00000200)]
        HRESULT DefaultItemType([out, retval] OlItemType* DefaultItemType);
        [id(0x0000fa8f), propput, helpcontext(0x00000200)]
        HRESULT DefaultItemType([in] OlItemType DefaultItemType);
    };

    [
      odl,
      uuid(000630B1-0000-0000-C000-000000000046),
      helpcontext(0x00000235),
      dual,
      oleautomation
    ]
    interface _Reminders : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000236)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000237)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000238)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000239)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000023a)]
        HRESULT Count([out, retval] long* Count);
        [id(00000000), helpcontext(0x0000023b),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _Reminder** Item);
        [id(0x00000052), helpcontext(0x0000023c)]
        HRESULT Remove([in] VARIANT Index);
        [id(0xfffffffc), hidden, helpcontext(0x0000023d)]
        HRESULT _NewEnum([out, retval] IUnknown** ppvObject);
    };

    [
      odl,
      uuid(000630B0-0000-0000-C000-000000000046),
      helpcontext(0x00000229),
      dual,
      oleautomation
    ]
    interface _Reminder : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000022a)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000022b)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000022c)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000022d)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fa9a), helpcontext(0x0000022e)]
        HRESULT Dismiss();
        [id(0x0000fa9b), helpcontext(0x0000022f)]
        HRESULT Snooze([in, optional] VARIANT SnoozeTime);
        [id(00000000), propget, helpcontext(0x00000230)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0x0000fa9d), propget, helpcontext(0x00000231)]
        HRESULT IsVisible([out, retval] VARIANT_BOOL* IsVisible);
        [id(0x0000fa9e), propget, helpcontext(0x00000232)]
        HRESULT Item([out, retval] IDispatch** Item);
        [id(0x0000fa9f), propget, helpcontext(0x00000233)]
        HRESULT NextReminderDate([out, retval] DATE* NextReminderDate);
        [id(0x0000faa0), propget, helpcontext(0x00000234)]
        HRESULT OriginalReminderDate([out, retval] DATE* OriginalReminderDate);
    };

    


    [
      uuid(000610FC-0000-0000-C000-000000000046),
      helpcontext(0x00000ce4),
      noncreatable
    ]
    coclass TimeZones {
        [default] interface _TimeZones;
    };

    [
      odl,
      uuid(000630FC-0000-0000-C000-000000000046),
      helpcontext(0x00000cda),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _TimeZones : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000cdb)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000cdc)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000cdd)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000cde)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000cdf)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000ce0),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _TimeZone** Item);
        [id(0x0000fc26), helpcontext(0x00000ce1)]
        HRESULT ConvertTime(
                        [in] DATE SourceDateTime, 
                        [in] _TimeZone* SourceTimeZone, 
                        [in] _TimeZone* DestinationTimeZone, 
                        [out, retval] DATE* DestinationDateTime);
        [id(0x0000fc2a), propget, helpcontext(0x00000ce2)]
        HRESULT CurrentTimeZone([out, retval] _TimeZone** CurrentTimeZone);
    };

    [
      odl,
      uuid(00067367-0000-0000-C000-000000000046),
      helpcontext(0x000f4454),
      dual,
      oleautomation
    ]
    interface _OlkTimeZoneControl : IDispatch {
        [id(0x0000fc2f), propget, helpcontext(0x000f4456)]
        HRESULT AppointmentTimeField([out, retval] OlAppointmentTimeField* AppointmentTimeField);
        [id(0x0000fc2f), propput, helpcontext(0x000f4456)]
        HRESULT AppointmentTimeField([in] OlAppointmentTimeField AppointmentTimeField);
        [id(0xfffffe08), propget, helpcontext(0x000f4458)]
        HRESULT BorderStyle([out, retval] OlBorderStyle* BorderStyle);
        [id(0xfffffe08), propput, helpcontext(0x000f4458)]
        HRESULT BorderStyle([in] OlBorderStyle BorderStyle);
        [id(0xfffffdfe), propget, helpcontext(0x000f4459)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0xfffffdfe), propput, helpcontext(0x000f4459)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000000a), propget, helpcontext(0x000f4439)]
        HRESULT Locked([out, retval] VARIANT_BOOL* Locked);
        [id(0x0000000a), propput, helpcontext(0x000f4439)]
        HRESULT Locked([in] VARIANT_BOOL Locked);
        [id(0xfffffdf6), propget, helpcontext(0x000f443a)]
        HRESULT MouseIcon([out, retval] Picture** MouseIcon);
        [id(0xfffffdf6), propput, helpcontext(0x000f443a)]
        HRESULT MouseIcon([in] Picture* MouseIcon);
        [id(0xfffffdf7), propget, helpcontext(0x000f443b)]
        HRESULT MousePointer([out, retval] OlMousePointer* MousePointer);
        [id(0xfffffdf7), propput, helpcontext(0x000f443b)]
        HRESULT MousePointer([in] OlMousePointer MousePointer);
        [id(0x0000fc30), propget, helpcontext(0x000f4455)]
        HRESULT SelectedTimeZoneIndex([out, retval] long* SelectedTimeZoneIndex);
        [id(0x0000fc30), propput, helpcontext(0x000f4455)]
        HRESULT SelectedTimeZoneIndex([in] long SelectedTimeZoneIndex);
        [id(00000000), propget, helpcontext(0x000f443f)]
        HRESULT Value([out, retval] VARIANT* Value);
        [id(00000000), propput, helpcontext(0x000f443f)]
        HRESULT Value([in] VARIANT Value);
        [id(0x000003e9), helpcontext(0x000f4442)]
        HRESULT DropDown();
    };

    [
      uuid(00067368-0000-0000-C000-000000000046),
      helpcontext(0x000f4443)
    ]
    dispinterface OlkTimeZoneControlEvents {
        properties:
        methods:
            [id(0xfffffda8), helpcontext(0x000f4444)]
            void Click();
            [id(0xfffffda7), helpcontext(0x000f4445)]
            void DoubleClick();
            [id(0xfffffda3), helpcontext(0x000f4446)]
            void MouseDown(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda2), helpcontext(0x000f4447)]
            void MouseMove(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0xfffffda1), helpcontext(0x000f4448)]
            void MouseUp(
                            [in] OlMouseButton Button, 
                            [in] OlShiftState Shift, 
                            [in] OLE_XPOS_CONTAINER X, 
                            [in] OLE_YPOS_CONTAINER Y);
            [id(0x80018202), helpcontext(0x000f4449)]
            void Enter();
            [id(0x80018203), helpcontext(0x000f444a)]
            void Exit([in] VARIANT_BOOL* Cancel);
            [id(0xfffffda6), helpcontext(0x000f444b)]
            void KeyDown(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0xfffffda5), helpcontext(0x000f444c)]
            void KeyPress([in] long* KeyAscii);
            [id(0xfffffda4), helpcontext(0x000f444d)]
            void KeyUp(
                            [in] long* KeyCode, 
                            [in] OlShiftState Shift);
            [id(0x00000002), helpcontext(0x000f444e)]
            void Change();
            [id(0x000007d2), helpcontext(0x000f444f)]
            void DropButtonClick();
            [id(0x80018200), helpcontext(0x000f4450)]
            void AfterUpdate();
            [id(0x80018201), helpcontext(0x000f4451)]
            void BeforeUpdate([in] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006F059-0000-0000-C000-000000000046),
      helpcontext(0x000f4452),
      control
    ]
    coclass OlkTimeZoneControl {
        [default] interface _OlkTimeZoneControl;
        [default, source] dispinterface OlkTimeZoneControlEvents;
    };

 
    [
      uuid(0006304E-0000-0000-C000-000000000046),
      helpcontext(0x00000099)
    ]
    dispinterface ApplicationEvents {
        properties:
        methods:
            [id(0x0000f002), helpcontext(0x0000009a)]
            void ItemSend(
                            [in] IDispatch* Item, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f003), helpcontext(0x0000009b)]
            void NewMail();
            [id(0x0000f004), helpcontext(0x0000009c)]
            void Reminder([in] IDispatch* Item);
            [id(0x0000f005), helpcontext(0x0000009d)]
            void OptionsPagesAdd([in] PropertyPages* Pages);
            [id(0x0000f006), helpcontext(0x0000009e)]
            void Startup();
            [id(0x0000f007), helpcontext(0x0000009f)]
            void Quit();
    };

    [
      odl,
      uuid(00063080-0000-0000-C000-000000000046),
      helpcontext(0x000000a0),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface PropertyPages : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000000a1)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000000a2)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000000a3)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000000a4)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x000000a5)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x000000a6),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] IDispatch** Item);
        [id(0x0000005f), helpcontext(0x000000a7)]
        HRESULT Add(
                        [in] VARIANT Page, 
                        [in, optional] BSTR Title);
        [id(0x00000054), helpcontext(0x000000a8)]
        HRESULT Remove([in] VARIANT Index);
    };

    [
      odl,
      uuid(00063044-0000-0000-C000-000000000046),
      helpcontext(0x0000010c),
      dual,
      oleautomation
    ]
    interface RecurrencePattern : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000010d)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000010e)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000010f)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000110)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00001000), propget, helpcontext(0x00000111)]
        HRESULT DayOfMonth([out, retval] long* DayOfMonth);
        [id(0x00001000), propput, helpcontext(0x00000111)]
        HRESULT DayOfMonth([in] long DayOfMonth);
        [id(0x00001001), propget, helpcontext(0x00000112)]
        HRESULT DayOfWeekMask([out, retval] OlDaysOfWeek* DayOfWeekMask);
        [id(0x00001001), propput, helpcontext(0x00000112)]
        HRESULT DayOfWeekMask([in] OlDaysOfWeek DayOfWeekMask);
        [id(0x0000100d), propget, helpcontext(0x00000113)]
        HRESULT Duration([out, retval] long* Duration);
        [id(0x0000100d), propput, helpcontext(0x00000113)]
        HRESULT Duration([in] long Duration);
        [id(0x0000100c), propget, helpcontext(0x00000114)]
        HRESULT EndTime([out, retval] DATE* EndTime);
        [id(0x0000100c), propput, helpcontext(0x00000114)]
        HRESULT EndTime([in] DATE EndTime);
        [id(0x0000100e), propget, helpcontext(0x00000115)]
        HRESULT Exceptions([out, retval] Exceptions** Exceptions);
        [id(0x00001003), propget, helpcontext(0x00000116)]
        HRESULT Instance([out, retval] long* Instance);
        [id(0x00001003), propput, helpcontext(0x00000116)]
        HRESULT Instance([in] long Instance);
        [id(0x00001004), propget, helpcontext(0x00000117)]
        HRESULT Interval([out, retval] long* Interval);
        [id(0x00001004), propput, helpcontext(0x00000117)]
        HRESULT Interval([in] long Interval);
        [id(0x00001006), propget, helpcontext(0x00000118)]
        HRESULT MonthOfYear([out, retval] long* MonthOfYear);
        [id(0x00001006), propput, helpcontext(0x00000118)]
        HRESULT MonthOfYear([in] long MonthOfYear);
        [id(0x0000100b), propget, helpcontext(0x00000119)]
        HRESULT NoEndDate([out, retval] VARIANT_BOOL* NoEndDate);
        [id(0x0000100b), propput, helpcontext(0x00000119)]
        HRESULT NoEndDate([in] VARIANT_BOOL NoEndDate);
        [id(0x00001005), propget, helpcontext(0x0000011a)]
        HRESULT Occurrences([out, retval] long* Occurrences);
        [id(0x00001005), propput, helpcontext(0x0000011a)]
        HRESULT Occurrences([in] long Occurrences);
        [id(0x00001002), propget, helpcontext(0x0000011b)]
        HRESULT PatternEndDate([out, retval] DATE* PatternEndDate);
        [id(0x00001002), propput, helpcontext(0x0000011b)]
        HRESULT PatternEndDate([in] DATE PatternEndDate);
        [id(0x00001008), propget, helpcontext(0x0000011c)]
        HRESULT PatternStartDate([out, retval] DATE* PatternStartDate);
        [id(0x00001008), propput, helpcontext(0x0000011c)]
        HRESULT PatternStartDate([in] DATE PatternStartDate);
        [id(0x00001007), propget, helpcontext(0x0000011d)]
        HRESULT RecurrenceType([out, retval] OlRecurrenceType* RecurrenceType);
        [id(0x00001007), propput, helpcontext(0x0000011d)]
        HRESULT RecurrenceType([in] OlRecurrenceType RecurrenceType);
        [id(0x0000100a), propget, helpcontext(0x0000011e)]
        HRESULT Regenerate([out, retval] VARIANT_BOOL* Regenerate);
        [id(0x0000100a), propput, helpcontext(0x0000011e)]
        HRESULT Regenerate([in] VARIANT_BOOL Regenerate);
        [id(0x00001009), propget, helpcontext(0x0000011f)]
        HRESULT StartTime([out, retval] DATE* StartTime);
        [id(0x00001009), propput, helpcontext(0x0000011f)]
        HRESULT StartTime([in] DATE StartTime);
        [id(0x0000100f), helpcontext(0x00000120)]
        HRESULT GetOccurrence(
                        [in] DATE StartDate, 
                        [out, retval] _AppointmentItem** AppointmentItem);
    };

    [
      odl,
      uuid(0006304C-0000-0000-C000-000000000046),
      helpcontext(0x00000121),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface Exceptions : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000122)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000123)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000124)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000125)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000126)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000127),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] Exception** Item);
    };

    [
      odl,
      uuid(0006304D-0000-0000-C000-000000000046),
      helpcontext(0x00000128),
      dual,
      oleautomation
    ]
    interface Exception : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000129)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000012a)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000012b)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000012c)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002001), propget, helpcontext(0x0000012d)]
        HRESULT AppointmentItem([out, retval] _AppointmentItem** AppointmentItem);
        [id(0x00002002), propget, helpcontext(0x0000012e)]
        HRESULT Deleted([out, retval] VARIANT_BOOL* Deleted);
        [id(0x00002000), propget, helpcontext(0x0000012f)]
        HRESULT OriginalDate([out, retval] DATE* OriginalDate);
        [id(0x0000fa09), propget, hidden, helpcontext(0x00000130)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
    };

    [
      uuid(00061030-0000-0000-C000-000000000046),
      helpcontext(0x00000bac),
      noncreatable
    ]
    coclass AppointmentItem {
        [default] interface _AppointmentItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      odl,
      uuid(00063033-0000-0000-C000-000000000046),
      helpcontext(0x00000345),
      dual,
      oleautomation
    ]
    interface _AppointmentItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000346)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000347)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000348)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000349)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x0000034a)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x0000034b)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x0000034c)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x0000034c)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x0000034d)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x0000034d)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x0000034e)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x0000034e)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x0000034f)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x0000034f)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x00000350)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x00000351)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x00000352)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x00000353)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x00000354)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x00000355)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x00000356)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x00000356)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x00000357)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000358)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x00000359)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x00000359)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x0000035a)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x0000035a)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x0000035b)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x0000035b)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x0000035c)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x0000035d)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x0000035e)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x0000035f)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x0000035f)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x00000360)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000361)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000361)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000362)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000362)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x00000363)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x00000364)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x00000365)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x00000366)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x00000367)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x00000368)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x00000369)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x0000036a)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x0000036b)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x00008215), propget, helpcontext(0x0000036c)]
        HRESULT AllDayEvent([out, retval] VARIANT_BOOL* AllDayEvent);
        [id(0x00008215), propput, helpcontext(0x0000036c)]
        HRESULT AllDayEvent([in] VARIANT_BOOL AllDayEvent);
        [id(0x00008205), propget, helpcontext(0x0000036d)]
        HRESULT BusyStatus([out, retval] OlBusyStatus* BusyStatus);
        [id(0x00008205), propput, helpcontext(0x0000036d)]
        HRESULT BusyStatus([in] OlBusyStatus BusyStatus);
        [id(0x00008213), propget, helpcontext(0x0000036e)]
        HRESULT Duration([out, retval] long* Duration);
        [id(0x00008213), propput, helpcontext(0x0000036e)]
        HRESULT Duration([in] long Duration);
        [id(0x0000820e), propget, helpcontext(0x0000036f)]
        HRESULT End([out, retval] DATE* End);
        [id(0x0000820e), propput, helpcontext(0x0000036f)]
        HRESULT End([in] DATE End);
        [id(0x00008240), propget, hidden, helpcontext(0x00000370)]
        HRESULT IsOnlineMeeting([out, retval] VARIANT_BOOL* IsOnlineMeeting);
        [id(0x00008240), propput, hidden, helpcontext(0x00000370)]
        HRESULT IsOnlineMeeting([in] VARIANT_BOOL IsOnlineMeeting);
        [id(0x00008223), propget, helpcontext(0x00000371)]
        HRESULT IsRecurring([out, retval] VARIANT_BOOL* IsRecurring);
        [id(0x00008208), propget, helpcontext(0x00000372)]
        HRESULT Location([out, retval] BSTR* Location);
        [id(0x00008208), propput, helpcontext(0x00000372)]
        HRESULT Location([in] BSTR Location);
        [id(0x00008217), propget, helpcontext(0x00000373)]
        HRESULT MeetingStatus([out, retval] OlMeetingStatus* MeetingStatus);
        [id(0x00008217), propput, helpcontext(0x00000373)]
        HRESULT MeetingStatus([in] OlMeetingStatus MeetingStatus);
        [id(0x00008244), propget, hidden, helpcontext(0x00000374)]
        HRESULT NetMeetingAutoStart([out, retval] VARIANT_BOOL* NetMeetingAutoStart);
        [id(0x00008244), propput, hidden, helpcontext(0x00000374)]
        HRESULT NetMeetingAutoStart([in] VARIANT_BOOL NetMeetingAutoStart);
        [id(0x00008243), propget, hidden, helpcontext(0x00000375)]
        HRESULT NetMeetingOrganizerAlias([out, retval] BSTR* NetMeetingOrganizerAlias);
        [id(0x00008243), propput, hidden, helpcontext(0x00000375)]
        HRESULT NetMeetingOrganizerAlias([in] BSTR NetMeetingOrganizerAlias);
        [id(0x00008242), propget, hidden, helpcontext(0x00000376)]
        HRESULT NetMeetingServer([out, retval] BSTR* NetMeetingServer);
        [id(0x00008242), propput, hidden, helpcontext(0x00000376)]
        HRESULT NetMeetingServer([in] BSTR NetMeetingServer);
        [id(0x00008241), propget, hidden, helpcontext(0x00000377)]
        HRESULT NetMeetingType([out, retval] OlNetMeetingType* NetMeetingType);
        [id(0x00008241), propput, hidden, helpcontext(0x00000377)]
        HRESULT NetMeetingType([in] OlNetMeetingType NetMeetingType);
        [id(0x00000e03), propget, helpcontext(0x00000378)]
        HRESULT OptionalAttendees([out, retval] BSTR* OptionalAttendees);
        [id(0x00000e03), propput, helpcontext(0x00000378)]
        HRESULT OptionalAttendees([in] BSTR OptionalAttendees);
        [id(0x00000042), propget, helpcontext(0x00000379)]
        HRESULT Organizer([out, retval] BSTR* Organizer);
        [id(0x0000f814), propget, helpcontext(0x0000037a)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
        [id(0x0000f545), propget, helpcontext(0x0000037b)]
        HRESULT RecurrenceState([out, retval] OlRecurrenceState* RecurrenceState);
        [id(0x00008501), propget, helpcontext(0x0000037c)]
        HRESULT ReminderMinutesBeforeStart([out, retval] long* ReminderMinutesBeforeStart);
        [id(0x00008501), propput, helpcontext(0x0000037c)]
        HRESULT ReminderMinutesBeforeStart([in] long ReminderMinutesBeforeStart);
        [id(0x0000851c), propget, helpcontext(0x0000037d)]
        HRESULT ReminderOverrideDefault([out, retval] VARIANT_BOOL* ReminderOverrideDefault);
        [id(0x0000851c), propput, helpcontext(0x0000037d)]
        HRESULT ReminderOverrideDefault([in] VARIANT_BOOL ReminderOverrideDefault);
        [id(0x0000851e), propget, helpcontext(0x0000037e)]
        HRESULT ReminderPlaySound([out, retval] VARIANT_BOOL* ReminderPlaySound);
        [id(0x0000851e), propput, helpcontext(0x0000037e)]
        HRESULT ReminderPlaySound([in] VARIANT_BOOL ReminderPlaySound);
        [id(0x00008503), propget, helpcontext(0x0000037f)]
        HRESULT ReminderSet([out, retval] VARIANT_BOOL* ReminderSet);
        [id(0x00008503), propput, helpcontext(0x0000037f)]
        HRESULT ReminderSet([in] VARIANT_BOOL ReminderSet);
        [id(0x0000851f), propget, helpcontext(0x00000380)]
        HRESULT ReminderSoundFile([out, retval] BSTR* ReminderSoundFile);
        [id(0x0000851f), propput, helpcontext(0x00000380)]
        HRESULT ReminderSoundFile([in] BSTR ReminderSoundFile);
        [id(0x00008220), propget, helpcontext(0x00000381)]
        HRESULT ReplyTime([out, retval] DATE* ReplyTime);
        [id(0x00008220), propput, helpcontext(0x00000381)]
        HRESULT ReplyTime([in] DATE ReplyTime);
        [id(0x00000e04), propget, helpcontext(0x00000382)]
        HRESULT RequiredAttendees([out, retval] BSTR* RequiredAttendees);
        [id(0x00000e04), propput, helpcontext(0x00000382)]
        HRESULT RequiredAttendees([in] BSTR RequiredAttendees);
        [id(0x00000e02), propget, helpcontext(0x00000383)]
        HRESULT Resources([out, retval] BSTR* Resources);
        [id(0x00000e02), propput, helpcontext(0x00000383)]
        HRESULT Resources([in] BSTR Resources);
        [id(0x00000063), propget, helpcontext(0x00000384)]
        HRESULT ResponseRequested([out, retval] VARIANT_BOOL* ResponseRequested);
        [id(0x00000063), propput, helpcontext(0x00000384)]
        HRESULT ResponseRequested([in] VARIANT_BOOL ResponseRequested);
        [id(0x00008218), propget, helpcontext(0x00000385)]
        HRESULT ResponseStatus([out, retval] OlResponseStatus* ResponseStatus);
        [id(0x0000820d), propget, helpcontext(0x00000386)]
        HRESULT Start([out, retval] DATE* Start);
        [id(0x0000820d), propput, helpcontext(0x00000386)]
        HRESULT Start([in] DATE Start);
        [id(0x0000f0a5), helpcontext(0x00000387)]
        HRESULT ClearRecurrencePattern();
        [id(0x0000f547), helpcontext(0x00000388)]
        HRESULT ForwardAsVcal([out, retval] _MailItem** Item);
        [id(0x0000f0a4), helpcontext(0x00000389)]
        HRESULT GetRecurrencePattern([out, retval] RecurrencePattern** RecurrencPattern);
        [id(0x0000f502), helpcontext(0x0000038a)]
        HRESULT Respond(
                        [in] OlMeetingResponse Response, 
                        [in, optional] VARIANT fNoUI, 
                        [in, optional] VARIANT fAdditionalTextDialog, 
                        [out, retval] _MeetingItem** ResponseItem);
        [id(0x0000f075), helpcontext(0x0000038b)]
        HRESULT Send();
        [id(0x00008247), propget, hidden, helpcontext(0x0000038c)]
        HRESULT NetMeetingDocPathName([out, retval] BSTR* NetMeetingDocPathName);
        [id(0x00008247), propput, hidden, helpcontext(0x0000038c)]
        HRESULT NetMeetingDocPathName([in] BSTR NetMeetingDocPathName);
        [id(0x00008248), propget, hidden, helpcontext(0x0000038d)]
        HRESULT NetShowURL([out, retval] BSTR* NetShowURL);
        [id(0x00008248), propput, hidden, helpcontext(0x0000038d)]
        HRESULT NetShowURL([in] BSTR NetShowURL);
        [id(0x0000f405), propget, hidden, helpcontext(0x0000038e)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x00008246), propget, hidden, helpcontext(0x0000038f)]
        HRESULT ConferenceServerAllowExternal([out, retval] VARIANT_BOOL* ConferenceServerAllowExternal);
        [id(0x00008246), propput, hidden, helpcontext(0x0000038f)]
        HRESULT ConferenceServerAllowExternal([in] VARIANT_BOOL ConferenceServerAllowExternal);
        [id(0x00008249), propget, hidden, helpcontext(0x00000390)]
        HRESULT ConferenceServerPassword([out, retval] BSTR* ConferenceServerPassword);
        [id(0x00008249), propput, hidden, helpcontext(0x00000390)]
        HRESULT ConferenceServerPassword([in] BSTR ConferenceServerPassword);
        [id(0x0000fa09), propget, helpcontext(0x00000391)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x0000fa4d), propget, helpcontext(0x00000392)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x00000393)]
        HRESULT ShowCategoriesDialog();
        [id(0x00003fde), propget, helpcontext(0x00000394)]
        HRESULT InternetCodepage([out, retval] long* InternetCodepage);
        [id(0x00003fde), propput, helpcontext(0x00000394)]
        HRESULT InternetCodepage([in] long InternetCodepage);
        [id(0x00008571), propget, helpcontext(0x00000395)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x00000395)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x00000396)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x00008209), propget, helpcontext(0x00000397)]
        HRESULT MeetingWorkspaceURL([out, retval] BSTR* MeetingWorkspaceURL);
        [id(0x0000faba), propget, helpcontext(0x00000398)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x00000399)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x0000039a)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fad1), propget, helpcontext(0x0000039b)]
        HRESULT SendUsingAccount([out, retval] _Account** SendUsingAccount);
        [id(0x0000fad1), propput, helpcontext(0x0000039b)]
        HRESULT SendUsingAccount([in] _Account* SendUsingAccount);
        [id(0x0000fbfd), propget, helpcontext(0x0000039c)]
        HRESULT GlobalAppointmentID([out, retval] BSTR* GlobalAppointmentID);
        [id(0x0000f53a), propget, helpcontext(0x00000c9a)]
        HRESULT ForceUpdateToAllAttendees([out, retval] VARIANT_BOOL* ForceUpdateToAllAttendees);
        [id(0x0000f53a), propput, helpcontext(0x00000c9a)]
        HRESULT ForceUpdateToAllAttendees([in] VARIANT_BOOL ForceUpdateToAllAttendees);
        [id(0x00008268), propget, helpcontext(0x00000cc7)]
        HRESULT StartUTC([out, retval] DATE* StartUTC);
        [id(0x00008268), propput, helpcontext(0x00000cc7)]
        HRESULT StartUTC([in] DATE StartUTC);
        [id(0x00008269), propget, helpcontext(0x00000cc8)]
        HRESULT EndUTC([out, retval] DATE* EndUTC);
        [id(0x00008269), propput, helpcontext(0x00000cc8)]
        HRESULT EndUTC([in] DATE EndUTC);
        [id(0x00008266), propget, helpcontext(0x00000cc9)]
        HRESULT StartInStartTimeZone([out, retval] DATE* StartInStartTimeZone);
        [id(0x00008266), propput, helpcontext(0x00000cc9)]
        HRESULT StartInStartTimeZone([in] DATE StartInStartTimeZone);
        [id(0x00008267), propget, helpcontext(0x00000cca)]
        HRESULT EndInEndTimeZone([out, retval] DATE* EndInEndTimeZone);
        [id(0x00008267), propput, helpcontext(0x00000cca)]
        HRESULT EndInEndTimeZone([in] DATE EndInEndTimeZone);
        [id(0x0000fc27), propget, helpcontext(0x00000ccb)]
        HRESULT StartTimeZone([out, retval] _TimeZone** StartTimeZone);
        [id(0x0000fc27), propput, helpcontext(0x00000ccb)]
        HRESULT StartTimeZone([in] _TimeZone* StartTimeZone);
        [id(0x0000fc28), propget, helpcontext(0x00000ccc)]
        HRESULT EndTimeZone([out, retval] _TimeZone** EndTimeZone);
        [id(0x0000fc28), propput, helpcontext(0x00000ccc)]
        HRESULT EndTimeZone([in] _TimeZone* EndTimeZone);
        [id(0x0000fc54), helpcontext(0x00000d4b)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000d8d)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fb12), helpcontext(0x00000dbd)]
        HRESULT CopyTo(
                        [in] MAPIFolder* DestinationFolder, 
                        [in] OlAppointmentCopyOptions CopyOptions, 
                        [out, retval] _AppointmentItem** Item);
        [id(0x0000fc84), propget, helpcontext(0x00000dc4)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dc4)]
        HRESULT RTFBody([in] VARIANT RTFBody);
        [id(0x0000fc88), helpcontext(0x00000de4)]
        HRESULT GetOrganizer([out, retval] AddressEntry** Organizer);
    };

    [
      uuid(00061036-0000-0000-C000-000000000046),
      helpcontext(0x00000bad),
      noncreatable
    ]
    coclass MeetingItem {
        [default] interface _MeetingItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      odl,
      uuid(00063062-0000-0000-C000-000000000046),
      helpcontext(0x00000575),
      dual,
      oleautomation
    ]
    interface _MeetingItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000576)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000577)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000578)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000579)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x0000057a)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x0000057b)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x0000057c)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x0000057c)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x0000057d)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x0000057d)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x0000057e)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x0000057e)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x0000057f)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x0000057f)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x00000580)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x00000581)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x00000582)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x00000583)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x00000584)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x00000585)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x00000586)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x00000586)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x00000587)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000588)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x00000589)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x00000589)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x0000058a)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x0000058a)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x0000058b)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x0000058b)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x0000058c)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x0000058d)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x0000058e)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x0000058f)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x0000058f)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x00000590)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000591)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000591)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000592)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000592)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x00000593)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x00000594)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x00000595)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x00000596)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x00000597)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x00000598)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x00000599)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x0000059a)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x0000059b)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x00000005), propget, helpcontext(0x0000059c)]
        HRESULT AutoForwarded([out, retval] VARIANT_BOOL* AutoForwarded);
        [id(0x00000005), propput, helpcontext(0x0000059c)]
        HRESULT AutoForwarded([in] VARIANT_BOOL AutoForwarded);
        [id(0x0000000f), propget, helpcontext(0x0000059d)]
        HRESULT DeferredDeliveryTime([out, retval] DATE* DeferredDeliveryTime);
        [id(0x0000000f), propput, helpcontext(0x0000059d)]
        HRESULT DeferredDeliveryTime([in] DATE DeferredDeliveryTime);
        [id(0x00000e01), propget, helpcontext(0x0000059e)]
        HRESULT DeleteAfterSubmit([out, retval] VARIANT_BOOL* DeleteAfterSubmit);
        [id(0x00000e01), propput, helpcontext(0x0000059e)]
        HRESULT DeleteAfterSubmit([in] VARIANT_BOOL DeleteAfterSubmit);
        [id(0x00000015), propget, helpcontext(0x0000059f)]
        HRESULT ExpiryTime([out, retval] DATE* ExpiryTime);
        [id(0x00000015), propput, helpcontext(0x0000059f)]
        HRESULT ExpiryTime([in] DATE ExpiryTime);
        [id(0x00000030), propget, hidden, helpcontext(0x000005a0)]
        HRESULT FlagDueBy([out, retval] DATE* FlagDueBy);
        [id(0x00000030), propput, hidden, helpcontext(0x000005a0)]
        HRESULT FlagDueBy([in] DATE FlagDueBy);
        [id(0x00008530), propget, hidden, helpcontext(0x000005a1)]
        HRESULT FlagRequest([out, retval] BSTR* FlagRequest);
        [id(0x00008530), propput, hidden, helpcontext(0x000005a1)]
        HRESULT FlagRequest([in] BSTR FlagRequest);
        [id(0x00001090), propget, hidden, helpcontext(0x000005a2)]
        HRESULT FlagStatus([out, retval] OlFlagStatus* FlagStatus);
        [id(0x00001090), propput, hidden, helpcontext(0x000005a2)]
        HRESULT FlagStatus([in] OlFlagStatus FlagStatus);
        [id(0x00000023), propget, helpcontext(0x000005a3)]
        HRESULT OriginatorDeliveryReportRequested([out, retval] VARIANT_BOOL* OriginatorDeliveryReportRequested);
        [id(0x00000023), propput, helpcontext(0x000005a3)]
        HRESULT OriginatorDeliveryReportRequested([in] VARIANT_BOOL OriginatorDeliveryReportRequested);
        [id(0x00000e06), propget, helpcontext(0x000005a4)]
        HRESULT ReceivedTime([out, retval] DATE* ReceivedTime);
        [id(0x00000e06), propput, helpcontext(0x000005a4)]
        HRESULT ReceivedTime([in] DATE ReceivedTime);
        [id(0x0000f814), propget, helpcontext(0x000005a5)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
        [id(0x00008503), propget, helpcontext(0x000005a6)]
        HRESULT ReminderSet([out, retval] VARIANT_BOOL* ReminderSet);
        [id(0x00008503), propput, helpcontext(0x000005a6)]
        HRESULT ReminderSet([in] VARIANT_BOOL ReminderSet);
        [id(0x00008502), propget, helpcontext(0x000005a7)]
        HRESULT ReminderTime([out, retval] DATE* ReminderTime);
        [id(0x00008502), propput, helpcontext(0x000005a7)]
        HRESULT ReminderTime([in] DATE ReminderTime);
        [id(0x0000f013), propget, helpcontext(0x000005a8)]
        HRESULT ReplyRecipients([out, retval] Recipients** ReplyRecipients);
        [id(0x0000f401), propget, helpcontext(0x000005a9)]
        HRESULT SaveSentMessageFolder([out, retval] MAPIFolder** SaveSentMessageFolder);
        [id(0x0000f401), propputref, helpcontext(0x000005a9)]
        HRESULT SaveSentMessageFolder([in] MAPIFolder* SaveSentMessageFolder);
        [id(0x00000c1a), propget, helpcontext(0x000005aa)]
        HRESULT SenderName([out, retval] BSTR* SenderName);
        [id(0x0000f402), propget, helpcontext(0x000005ab)]
        HRESULT Sent([out, retval] VARIANT_BOOL* Sent);
        [id(0x00000039), propget, helpcontext(0x000005ac)]
        HRESULT SentOn([out, retval] DATE* SentOn);
        [id(0x0000f403), propget, helpcontext(0x000005ad)]
        HRESULT Submitted([out, retval] VARIANT_BOOL* Submitted);
        [id(0x0000f813), helpcontext(0x000005ae)]
        HRESULT Forward([out, retval] _MeetingItem** Item);
        [id(0x0000f760), helpcontext(0x000005af)]
        HRESULT GetAssociatedAppointment(
                        [in] VARIANT_BOOL AddToCalendar, 
                        [out, retval] _AppointmentItem** Item);
        [id(0x0000f810), helpcontext(0x000005b0)]
        HRESULT Reply([out, retval] _MailItem** Item);
        [id(0x0000f811), helpcontext(0x000005b1)]
        HRESULT ReplyAll([out, retval] _MailItem** Item);
        [id(0x0000f075), helpcontext(0x000005b2)]
        HRESULT Send();
        [id(0x0000f405), propget, hidden, helpcontext(0x000005b3)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x000005b4)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x000005b5)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x000005b6)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x000005b7)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x000005b7)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x000005b8)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x00008209), propget, helpcontext(0x000005b9)]
        HRESULT MeetingWorkspaceURL([out, retval] BSTR* MeetingWorkspaceURL);
        [id(0x0000facc), propget, hidden, helpcontext(0x000005ba)]
        HRESULT FlagIcon([out, retval] OlFlagIcon* FlagIcon);
        [id(0x0000facc), propput, hidden, helpcontext(0x000005ba)]
        HRESULT FlagIcon([in] OlFlagIcon FlagIcon);
        [id(0x0000faba), propget, helpcontext(0x000005bb)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x000005bc)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x00000c1f), propget, helpcontext(0x000005bd)]
        HRESULT SenderEmailAddress([out, retval] BSTR* SenderEmailAddress);
        [id(0x00000c1e), propget, helpcontext(0x000005be)]
        HRESULT SenderEmailType([out, retval] BSTR* SenderEmailType);
        [id(0x0000fafd), propget, helpcontext(0x000005bf)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc54), helpcontext(0x00000d4e)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000d90)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fad1), propget, helpcontext(0x00000db5)]
        HRESULT SendUsingAccount([out, retval] _Account** SendUsingAccount);
        [id(0x0000fad1), propput, helpcontext(0x00000db5)]
        HRESULT SendUsingAccount([in] _Account* SendUsingAccount);
        [id(0x0000fc82), propget, helpcontext(0x00000dcf)]
        HRESULT IsLatestVersion([out, retval] VARIANT_BOOL* IsLatestVersion);
        [id(0x0000fc84), propget, helpcontext(0x00000dc6)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dc6)]
        HRESULT RTFBody([in] VARIANT RTFBody);
        [id(0x0000fc8a), propget, helpcontext(0x00000de8)]
        HRESULT RetentionExpirationDate([out, retval] DATE* RetentionExpirationDate);
        [id(0x0000fc8b), propget, helpcontext(0x00000de9)]
        HRESULT RetentionPolicyName([out, retval] BSTR* RetentionPolicyName);
    };

    [
      uuid(00063078-0000-0000-C000-000000000046),
      helpcontext(0x00000131)
    ]
    dispinterface ExplorersEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x00000132)]
            void NewExplorer([in] _Explorer* Explorer);
    };

    [
      uuid(00063076-0000-0000-C000-000000000046),
      helpcontext(0x00000133)
    ]
    dispinterface FoldersEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x00000134)]
            void FolderAdd([in] MAPIFolder* Folder);
            [id(0x0000f002), helpcontext(0x00000135)]
            void FolderChange([in] MAPIFolder* Folder);
            [id(0x0000f003), helpcontext(0x00000136)]
            void FolderRemove();
    };

    [
      uuid(00063079-0000-0000-C000-000000000046),
      helpcontext(0x00000137)
    ]
    dispinterface InspectorsEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x00000138)]
            void NewInspector([in] _Inspector* Inspector);
    };

    [
      uuid(00063077-0000-0000-C000-000000000046),
      helpcontext(0x00000139)
    ]
    dispinterface ItemsEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x0000013a)]
            void ItemAdd([in] IDispatch* Item);
            [id(0x0000f002), helpcontext(0x0000013b)]
            void ItemChange([in] IDispatch* Item);
            [id(0x0000f003), helpcontext(0x0000013c)]
            void ItemRemove();
    };

    [
      uuid(0006308C-0000-0000-C000-000000000046),
      helpcontext(0x0000013e)
    ]
    dispinterface NameSpaceEvents {
        properties:
        methods:
            [id(0x0000f005), helpcontext(0x0000013f)]
            void OptionsPagesAdd(
                            [in] PropertyPages* Pages, 
                            [in] MAPIFolder* Folder);
            [id(0x0000fc2d), helpcontext(0x00000ce5)]
            void AutoDiscoverComplete();
    };

    [
      odl,
      uuid(00063073-0000-0000-C000-000000000046),
      helpcontext(0x00000140),
      dual,
      oleautomation
    ]
    interface OutlookBarGroup : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000141)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000142)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000143)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000144)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), propget, helpcontext(0x00000145)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x00000145)]
        HRESULT Name([in] BSTR Name);
        [id(0x00002102), propget, helpcontext(0x00000146)]
        HRESULT Shortcuts([out, retval] _OutlookBarShortcuts** Shortcuts);
        [id(0x00002103), propget, helpcontext(0x00000147)]
        HRESULT ViewType([out, retval] OlOutlookBarViewType* ViewType);
        [id(0x00002103), propput, helpcontext(0x00000147)]
        HRESULT ViewType([in] OlOutlookBarViewType ViewType);
    };

    [
      odl,
      uuid(00063074-0000-0000-C000-000000000046),
      helpcontext(0x00000148),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _OutlookBarShortcuts : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000149)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000014a)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000014b)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000014c)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000014d)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000014e),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] OutlookBarShortcut** Item);
        [id(0x0000005f), helpcontext(0x0000014f)]
        HRESULT Add(
                        [in] VARIANT Target, 
                        [in] BSTR Name, 
                        [in, optional] VARIANT Index, 
                        [out, retval] OutlookBarShortcut** Shortcut);
        [id(0x00000054), helpcontext(0x00000150)]
        HRESULT Remove([in] VARIANT Index);
    };

    [
      odl,
      uuid(00063075-0000-0000-C000-000000000046),
      helpcontext(0x00000151),
      dual,
      oleautomation
    ]
    interface OutlookBarShortcut : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000152)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000153)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000154)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000155)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), propget, helpcontext(0x00000156)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x00000156)]
        HRESULT Name([in] BSTR Name);
        [id(0x00002100), propget, helpcontext(0x00000157)]
        HRESULT Target([out, retval] VARIANT* Target);
        [id(0x0000faa2), helpcontext(0x00000158)]
        HRESULT SetIcon([in] VARIANT Icon);
    };

    [
      odl,
      uuid(00063072-0000-0000-C000-000000000046),
      helpcontext(0x00000159),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _OutlookBarGroups : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000015a)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000015b)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000015c)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000015d)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000015e)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000015f),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] OutlookBarGroup** Item);
        [id(0x0000005f), helpcontext(0x00000160)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in, optional] VARIANT Index, 
                        [out, retval] OutlookBarGroup** Group);
        [id(0x00000054), helpcontext(0x00000161)]
        HRESULT Remove([in] VARIANT Index);
    };

    [
      uuid(0006307B-0000-0000-C000-000000000046),
      helpcontext(0x00000162)
    ]
    dispinterface OutlookBarGroupsEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x00000163)]
            void GroupAdd([in] OutlookBarGroup* NewGroup);
            [id(0x0000f002), helpcontext(0x00000164)]
            void BeforeGroupAdd([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f003), helpcontext(0x00000165)]
            void BeforeGroupRemove(
                            [in] OutlookBarGroup* Group, 
                            [in, out] VARIANT_BOOL* Cancel);
    };

    [
      odl,
      uuid(00063070-0000-0000-C000-000000000046),
      helpcontext(0x00000166),
      dual,
      oleautomation
    ]
    interface _OutlookBarPane : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000167)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000168)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000169)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000016a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002100), propget, helpcontext(0x0000016b)]
        HRESULT Contents([out, retval] OutlookBarStorage** Contents);
        [id(0x00002101), propget, hidden, helpcontext(0x0000016c)]
        HRESULT CurrentGroup([out, retval] OutlookBarGroup** CurrentGroup);
        [id(0x00002101), propputref, hidden, helpcontext(0x0000016c)]
        HRESULT CurrentGroup([in] OutlookBarGroup* CurrentGroup);
        [id(00000000), propget, helpcontext(0x0000016d)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00002103), propget, helpcontext(0x0000016e)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x00002103), propput, helpcontext(0x0000016e)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
    };

    [
      odl,
      uuid(00063071-0000-0000-C000-000000000046),
      helpcontext(0x0000016f),
      dual,
      oleautomation
    ]
    interface OutlookBarStorage : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000170)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000171)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000172)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000173)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), propget, helpcontext(0x00000174)]
        HRESULT Groups([out, retval] _OutlookBarGroups** Groups);
    };

    [
      uuid(0006307A-0000-0000-C000-000000000046),
      helpcontext(0x00000175)
    ]
    dispinterface OutlookBarPaneEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x00000176)]
            void BeforeNavigate(
                            [in] OutlookBarShortcut* Shortcut, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f002), hidden, helpcontext(0x00000177)]
            void BeforeGroupSwitch(
                            [in] OutlookBarGroup* ToGroup, 
                            [in, out] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006307C-0000-0000-C000-000000000046),
      helpcontext(0x00000178)
    ]
    dispinterface OutlookBarShortcutsEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x00000179)]
            void ShortcutAdd([in] OutlookBarShortcut* NewShortcut);
            [id(0x0000f002), helpcontext(0x0000017a)]
            void BeforeShortcutAdd([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f003), helpcontext(0x0000017b)]
            void BeforeShortcutRemove(
                            [in] OutlookBarShortcut* Shortcut, 
                            [in, out] VARIANT_BOOL* Cancel);
    };

    [
      odl,
      uuid(0006307E-0000-0000-C000-000000000046),
      helpcontext(0x0000017c)
    ]
    interface PropertyPage : IDispatch {
        [helpcontext(0x0000017d)]
        HRESULT _stdcall GetPageInfo(
                        [in, out] BSTR* HelpFile, 
                        [in, out] long* HelpContext);
        [propget, helpcontext(0x0000017e)]
        HRESULT _stdcall Dirty([out, retval] VARIANT_BOOL* Dirty);
        [helpcontext(0x0000017f)]
        HRESULT _stdcall Apply();
    };

    [
      odl,
      uuid(0006307F-0000-0000-C000-000000000046),
      helpcontext(0x00000180),
      dual,
      oleautomation
    ]
    interface PropertyPageSite : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000181)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000182)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000183)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000184)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002100), helpcontext(0x00000185)]
        HRESULT OnStatusChange();
    };

    [
      odl,
      uuid(0006303F-0000-0000-C000-000000000046),
      helpcontext(0x00000186),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface Pages : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000187)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000188)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000189)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000018a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x0000018b)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x0000018c),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] IDispatch** Item);
        [id(0x0000012c), helpcontext(0x0000018d)]
        HRESULT Add(
                        [in, optional] VARIANT Name, 
                        [out, retval] IDispatch** Page);
        [id(0x0000012d), helpcontext(0x0000018e)]
        HRESULT Remove([in] long Index);
    };

    [
      uuid(0006300E-0000-0000-C000-000000000046),
      helpcontext(0x000001a2)
    ]
    dispinterface ApplicationEvents_10 {
        properties:
        methods:
            [id(0x0000f002), helpcontext(0x000001a3)]
            HRESULT ItemSend(
                            [in] IDispatch* Item, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f003), helpcontext(0x000001a4)]
            HRESULT NewMail();
            [id(0x0000f004), helpcontext(0x000001a5)]
            HRESULT Reminder([in] IDispatch* Item);
            [id(0x0000f005), helpcontext(0x000001a6)]
            HRESULT OptionsPagesAdd([in] PropertyPages* Pages);
            [id(0x0000f006), helpcontext(0x000001a7)]
            HRESULT Startup();
            [id(0x0000f007), helpcontext(0x000001a8)]
            HRESULT Quit();
            [id(0x0000fa6a), helpcontext(0x000001a9)]
            void AdvancedSearchComplete([in] Search* SearchObject);
            [id(0x0000fa6b), helpcontext(0x000001aa)]
            void AdvancedSearchStopped([in] Search* SearchObject);
            [id(0x0000fa90), helpcontext(0x000001ab)]
            void MAPILogonComplete();
    };

    [
      uuid(0006302C-0000-0000-C000-000000000046),
      helpcontext(0x000001ac)
    ]
    dispinterface ApplicationEvents_11 {
        properties:
        methods:
            [id(0x0000f002), helpcontext(0x000001ad)]
            HRESULT ItemSend(
                            [in] IDispatch* Item, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000f003), helpcontext(0x000001ae)]
            HRESULT NewMail();
            [id(0x0000f004), helpcontext(0x000001af)]
            HRESULT Reminder([in] IDispatch* Item);
            [id(0x0000f005), helpcontext(0x000001b0)]
            HRESULT OptionsPagesAdd([in] PropertyPages* Pages);
            [id(0x0000f006), helpcontext(0x000001b1)]
            HRESULT Startup();
            [id(0x0000f007), helpcontext(0x000001b2)]
            HRESULT Quit();
            [id(0x0000fa6a), helpcontext(0x000001b3)]
            HRESULT AdvancedSearchComplete([in] Search* SearchObject);
            [id(0x0000fa6b), helpcontext(0x000001b4)]
            HRESULT AdvancedSearchStopped([in] Search* SearchObject);
            [id(0x0000fa90), helpcontext(0x000001b5)]
            HRESULT MAPILogonComplete();
            [id(0x0000fab5), helpcontext(0x000001b6)]
            void NewMailEx([in] BSTR EntryIDCollection);
            [id(0x0000fb3e), hidden, helpcontext(0x000001b7)]
            HRESULT AttachmentContextMenuDisplay(
                            [in] CommandBar* CommandBar, 
                            [in] _AttachmentSelection* Attachments);
            [id(0x0000fb42), hidden, helpcontext(0x000001b8)]
            void FolderContextMenuDisplay(
                            [in] CommandBar* CommandBar, 
                            [in] void * Folder);
            [id(0x0000fb43), hidden, helpcontext(0x000001b9)]
            void StoreContextMenuDisplay(
                            [in] CommandBar* CommandBar, 
                            [in] Store* Store);
            [id(0x0000fb44), hidden, helpcontext(0x000001ba)]
            void ShortcutContextMenuDisplay(
                            [in] CommandBar* CommandBar, 
                            [in] OutlookBarShortcut* Shortcut);
            [id(0x0000fb40), hidden, helpcontext(0x000001bb)]
            void ViewContextMenuDisplay(
                            [in] CommandBar* CommandBar, 
                            [in] View* View);
            [id(0x0000fb41), hidden, helpcontext(0x000001bc)]
            void ItemContextMenuDisplay(
                            [in] CommandBar* CommandBar, 
                            [in] Selection* Selection);
            [id(0x0000fba6), hidden, helpcontext(0x000001bd)]
            void ContextMenuClose([in] OlContextMenu ContextMenu);
            [id(0x0000fba7), helpcontext(0x000001be)]
            void ItemLoad([in] IDispatch* Item);
            [id(0x0000fc01), helpcontext(0x000001bf)]
            void BeforeFolderSharingDialog(
                            [in] MAPIFolder* FolderToShare, 
                            [in, out] VARIANT_BOOL* Cancel);
    };

    [
      uuid(000610F9-0000-0000-C000-000000000046),
      helpcontext(0x00000c82),
      noncreatable
    ]
    coclass AttachmentSelection {
        [default] interface _AttachmentSelection;
    };

    [
      uuid(000610F7-0000-0000-C000-000000000046),
      helpcontext(0x00000bcc),
      noncreatable
    ]
    coclass Folder {
        [default, source] dispinterface MAPIFolderEvents_12;
        [default] interface MAPIFolder;
    };

    [
      uuid(000630F7-0000-0000-C000-000000000046),
      helpcontext(0x00000abe)
    ]
    dispinterface MAPIFolderEvents_12 {
        properties:
        methods:
            [id(0x0000fba8), helpcontext(0x00000abf)]
            void BeforeFolderMove(
                            [in] MAPIFolder* MoveTo, 
                            [in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fba9), helpcontext(0x00000ac0)]
            void BeforeItemMove(
                            [in] IDispatch* Item, 
                            [in] MAPIFolder* MoveTo, 
                            [in, out] VARIANT_BOOL* Cancel);
    };

    [
      uuid(0006300D-0000-0000-C000-000000000046),
      helpcontext(0x00000201)
    ]
    dispinterface ResultsEvents {
        properties:
        methods:
            [id(0x0000f001), helpcontext(0x00000202)]
            void ItemAdd([in] IDispatch* Item);
            [id(0x0000f002), helpcontext(0x00000203)]
            void ItemChange([in] IDispatch* Item);
            [id(0x0000f003), helpcontext(0x00000204)]
            void ItemRemove();
    };

    [
      uuid(000630A5-0000-0000-C000-000000000046),
      helpcontext(0x00000226)
    ]
    dispinterface _ViewsEvents {
        properties:
        methods:
            [id(0x00000190), helpcontext(0x00000227)]
            void ViewAdd([in] View* View);
            [id(0x0000fa47), helpcontext(0x00000228)]
            void ViewRemove([in] View* View);
    };

    [
      uuid(000630B2-0000-0000-C000-000000000046),
      helpcontext(0x0000023e)
    ]
    dispinterface ReminderCollectionEvents {
        properties:
        methods:
            [id(0x0000fa93), helpcontext(0x0000023f)]
            void BeforeReminderShow([in, out] VARIANT_BOOL* Cancel);
            [id(0x0000fa94), helpcontext(0x00000240)]
            void ReminderAdd([in] _Reminder* ReminderObject);
            [id(0x0000fa95), helpcontext(0x00000241)]
            void ReminderChange([in] _Reminder* ReminderObject);
            [id(0x0000fa96), helpcontext(0x00000242)]
            void ReminderFire([in] _Reminder* ReminderObject);
            [id(0x0000fa97), helpcontext(0x00000243)]
            void ReminderRemove();
            [id(0x0000fa98), helpcontext(0x00000244)]
            void Snooze([in] _Reminder* ReminderObject);
    };

    [
      odl,
      uuid(00063020-0000-0000-C000-000000000046),
      helpcontext(0x0000049a),
      dual,
      oleautomation
    ]
    interface _DocumentItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000049b)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000049c)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000049d)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000049e)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x0000049f)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x000004a0)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x000004a1)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x000004a1)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x000004a2)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x000004a2)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x000004a3)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x000004a3)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x000004a4)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x000004a4)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x000004a5)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x000004a6)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x000004a7)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x000004a8)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x000004a9)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x000004aa)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x000004ab)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x000004ab)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x000004ac)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x000004ad)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x000004ae)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x000004ae)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x000004af)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x000004af)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x000004b0)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x000004b0)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x000004b1)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x000004b2)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x000004b3)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x000004b4)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x000004b4)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x000004b5)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x000004b6)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x000004b6)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x000004b7)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x000004b7)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x000004b8)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x000004b9)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x000004ba)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x000004bb)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x000004bc)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x000004bd)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x000004be)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x000004bf)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x000004c0)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x0000f405), propget, hidden, helpcontext(0x000004c1)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x000004c2)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x000004c3)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x000004c4)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x000004c5)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x000004c5)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x000004c6)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x000004c7)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x000004c8)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x000004c9)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
    };

    [
      odl,
      uuid(00063025-0000-0000-C000-000000000046),
      helpcontext(0x000005c0),
      dual,
      oleautomation
    ]
    interface _NoteItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000005c1)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000005c2)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000005c3)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000005c4)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00009100), propget, helpcontext(0x000005c5)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x000005c5)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x000005c6)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x000005c6)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x00008b00), propget, hidden, helpcontext(0x000005c7)]
        HRESULT Color([out, retval] OlNoteColor* Color);
        [id(0x00008b00), propput, hidden, helpcontext(0x000005c7)]
        HRESULT Color([in] OlNoteColor Color);
        [id(0x00003007), propget, helpcontext(0x000005c8)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x000005c9)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f03e), propget, helpcontext(0x000005ca)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00008b03), propget, helpcontext(0x000005cb)]
        HRESULT Height([out, retval] long* Height);
        [id(0x00008b03), propput, helpcontext(0x000005cb)]
        HRESULT Height([in] long Height);
        [id(0x00003008), propget, helpcontext(0x000005cc)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x00008b04), propget, helpcontext(0x000005cd)]
        HRESULT Left([out, retval] long* Left);
        [id(0x00008b04), propput, helpcontext(0x000005cd)]
        HRESULT Left([in] long Left);
        [id(0x0000001a), propget, helpcontext(0x000005ce)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x000005ce)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x0000f0a3), propget, helpcontext(0x000005cf)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000e08), propget, helpcontext(0x000005d0)]
        HRESULT Size([out, retval] long* Size);
        [id(0x0000f7a0), propget, helpcontext(0x000005d1)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00008b05), propget, helpcontext(0x000005d2)]
        HRESULT Top([out, retval] long* Top);
        [id(0x00008b05), propput, helpcontext(0x000005d2)]
        HRESULT Top([in] long Top);
        [id(0x00008b02), propget, helpcontext(0x000005d3)]
        HRESULT Width([out, retval] long* Width);
        [id(0x00008b02), propput, helpcontext(0x000005d3)]
        HRESULT Width([in] long Width);
        [id(0x0000f023), helpcontext(0x000005d4)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x000005d5)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x000005d6)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x000005d7)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x000005d8)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x000005d9)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x000005da)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x000005db)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x0000f405), propget, hidden, helpcontext(0x000005dc)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x000005dd)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa09), propget, helpcontext(0x000005de)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x000005df)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x000005df)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x000005e0)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x000005e1)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x000005e2)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x000005e3)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
    };

    [
      uuid(0006305B-0000-0000-C000-000000000046),
      helpcontext(0x00000962)
    ]
    dispinterface FormRegionEvents {
        properties:
        methods:
            [id(0x0000fb38), helpcontext(0x00000963)]
            void Expanded([in] VARIANT_BOOL Expand);
            [id(0x0000f004), helpcontext(0x00000964)]
            void Close();
    };

    [
      odl,
      uuid(000630A0-0000-0000-C000-000000000046),
      helpcontext(0x000009ea),
      dual,
      oleautomation
    ]
    interface _ViewField : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000009eb)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000009ec)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000009ed)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000009ee)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002102), propget, helpcontext(0x000009ef)]
        HRESULT ViewXMLSchemaName([out, retval] BSTR* ViewXMLSchemaName);
        [id(0x0000fb8d), propget, helpcontext(0x000009f0)]
        HRESULT ColumnFormat([out, retval] _ColumnFormat** ColumnFormat);
    };

    [
      uuid(0006109E-0000-0000-C000-000000000046),
      helpcontext(0x00000c75),
      noncreatable
    ]
    coclass ColumnFormat {
        [default] interface _ColumnFormat;
    };

    [
      odl,
      uuid(0006309E-0000-0000-C000-000000000046),
      helpcontext(0x00000aa3),
      dual,
      oleautomation
    ]
    interface _ColumnFormat : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000aa4)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000aa5)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000aa6)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000aa7)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fa1e), propget, helpcontext(0x00000aa8)]
        HRESULT Label([out, retval] BSTR* Label);
        [id(0x0000fa1e), propput, helpcontext(0x00000aa8)]
        HRESULT Label([in] BSTR Label);
        [id(0x0000fb8c), propget, helpcontext(0x00000aa9)]
        HRESULT FieldFormat([out, retval] long* FieldFormat);
        [id(0x0000fb8c), propput, helpcontext(0x00000aa9)]
        HRESULT FieldFormat([in] long FieldFormat);
        [id(0x00002117), propget, helpcontext(0x00000aaa)]
        HRESULT Width([out, retval] long* Width);
        [id(0x00002117), propput, helpcontext(0x00000aaa)]
        HRESULT Width([in] long Width);
        [id(0x0000fa22), propget, helpcontext(0x00000aab)]
        HRESULT Align([out, retval] OlAlign* Align);
        [id(0x0000fa22), propput, helpcontext(0x00000aab)]
        HRESULT Align([in] OlAlign Align);
        [id(0x0000fb8e), propget, helpcontext(0x00000aac)]
        HRESULT FieldType([out, retval] OlUserPropertyType* FieldType);
    };

    [
      odl,
      uuid(000630A1-0000-0000-C000-000000000046),
      helpcontext(0x000009f1),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _ViewFields : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000009f2)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000009f3)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000009f4)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000009f5)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x000009f6)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x000009f7),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _ViewField** Item);
        [id(0x0000005f), helpcontext(0x000009f8)]
        HRESULT Add(
                        [in] BSTR PropertyName, 
                        [out, retval] _ViewField** ViewField);
        [id(0x0000fb56), helpcontext(0x000009f9)]
        HRESULT Insert(
                        [in] BSTR PropertyName, 
                        [in] VARIANT Index, 
                        [out, retval] _ViewField** ViewField);
        [id(0x00000052), helpcontext(0x000009fa)]
        HRESULT Remove([in] VARIANT Index);
    };

    [
      uuid(0006F09F-0000-0000-C000-000000000046),
      helpcontext(0x00000c85),
      noncreatable
    ]
    coclass ViewField {
        [default] interface _ViewField;
    };

    [
      odl,
      uuid(00063097-0000-0000-C000-000000000046),
      helpcontext(0x000009fc),
      dual,
      oleautomation
    ]
    interface _IconView : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000009fd)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000009fe)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000009ff)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000a00)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000197), helpcontext(0x00000a01)]
        HRESULT Apply();
        [id(0x0000f032), helpcontext(0x00000a02)]
        HRESULT Copy(
                        [in] BSTR Name, 
                        [in, optional] OlViewSaveOption SaveOption, 
                        [out, retval] View** ppview);
        [id(0x0000f04a), helpcontext(0x00000a03)]
        HRESULT Delete();
        [id(0x0000fa44), helpcontext(0x00000a04)]
        HRESULT Reset();
        [id(0x0000f048), helpcontext(0x00000a05)]
        HRESULT Save();
        [id(0x0000fa41), propget, helpcontext(0x00000a06)]
        HRESULT Language([out, retval] BSTR* Language);
        [id(0x0000fa41), propput, helpcontext(0x00000a06)]
        HRESULT Language([in] BSTR Language);
        [id(0x0000fa40), propget, helpcontext(0x00000a07)]
        HRESULT LockUserChanges([out, retval] VARIANT_BOOL* LockUserChanges);
        [id(0x0000fa40), propput, helpcontext(0x00000a07)]
        HRESULT LockUserChanges([in] VARIANT_BOOL LockUserChanges);
        [id(00000000), propget, helpcontext(0x00000a08)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x00000a08)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fa3f), propget, helpcontext(0x00000a09)]
        HRESULT SaveOption([out, retval] OlViewSaveOption* SaveOption);
        [id(0x0000fa3e), propget, helpcontext(0x00000a0a)]
        HRESULT Standard([out, retval] VARIANT_BOOL* Standard);
        [id(0x00000194), propget, helpcontext(0x00000a0b)]
        HRESULT ViewType([out, retval] OlViewType* ViewType);
        [id(0x0000fa3c), propget, helpcontext(0x00000a0c)]
        HRESULT XML([out, retval] BSTR* XML);
        [id(0x0000fa3c), propput, helpcontext(0x00000a0c)]
        HRESULT XML([in] BSTR XML);
        [id(0x0000fa36), helpcontext(0x00000a0d)]
        HRESULT GoToDate([in] DATE Date);
        [id(0x00000199), propget, helpcontext(0x00000a0e)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x00000199), propput, helpcontext(0x00000a0e)]
        HRESULT Filter([in] BSTR Filter);
        [id(0x0000fb5a), propget, helpcontext(0x00000a0f)]
        HRESULT SortFields([out, retval] _OrderFields** SortFields);
        [id(0x0000fb6a), propget, helpcontext(0x00000a10)]
        HRESULT IconViewType([out, retval] OlIconViewType* IconViewType);
        [id(0x0000fb6a), propput, helpcontext(0x00000a10)]
        HRESULT IconViewType([in] OlIconViewType IconViewType);
        [id(0x0000fb6b), propget, helpcontext(0x00000a11)]
        HRESULT IconPlacement([out, retval] OlIconViewPlacement* IconPlacement);
        [id(0x0000fb6b), propput, helpcontext(0x00000a11)]
        HRESULT IconPlacement([in] OlIconViewPlacement IconPlacement);
    };

    [
      uuid(0006109A-0000-0000-C000-000000000046),
      helpcontext(0x00000c72),
      noncreatable
    ]
    coclass OrderFields {
        [default] interface _OrderFields;
    };

    [
      odl,
      uuid(0006309A-0000-0000-C000-000000000046),
      helpcontext(0x00000a6f),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _OrderFields : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000a70)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000a71)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000a72)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000a73)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000a74)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000a75),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _OrderField** Item);
        [id(0x0000005f), helpcontext(0x00000a76)]
        HRESULT Add(
                        [in] BSTR PropertyName, 
                        [in, optional] VARIANT IsDescending, 
                        [out, retval] _OrderField** OrderField);
        [id(0x00000052), helpcontext(0x00000a77)]
        HRESULT Remove([in] VARIANT Index);
        [id(0x0000fb57), helpcontext(0x00000a78)]
        HRESULT RemoveAll();
        [id(0x0000fb56), helpcontext(0x00000a79)]
        HRESULT Insert(
                        [in] BSTR PropertyName, 
                        [in] VARIANT Index, 
                        [in, optional] VARIANT IsDescending, 
                        [out, retval] _OrderField** OrderField);
    };

    [
      odl,
      uuid(0006309B-0000-0000-C000-000000000046),
      helpcontext(0x00000a7a),
      dual,
      oleautomation
    ]
    interface _OrderField : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000a7b)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000a7c)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000a7d)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000a7e)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002102), propget, helpcontext(0x00000a7f)]
        HRESULT ViewXMLSchemaName([out, retval] BSTR* ViewXMLSchemaName);
        [id(0x0000fb8a), propget, helpcontext(0x00000a81)]
        HRESULT IsDescending([out, retval] VARIANT_BOOL* IsDescending);
        [id(0x0000fb8a), propput, helpcontext(0x00000a81)]
        HRESULT IsDescending([in] VARIANT_BOOL IsDescending);
    };

    [
      uuid(0006109B-0000-0000-C000-000000000046),
      helpcontext(0x00000c73),
      noncreatable
    ]
    coclass OrderField {
        [default] interface _OrderField;
    };

    [
      odl,
      uuid(00063098-0000-0000-C000-000000000046),
      helpcontext(0x00000a12),
      dual,
      oleautomation
    ]
    interface _CardView : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000a13)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000a14)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000a15)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000a16)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000197), helpcontext(0x00000a17)]
        HRESULT Apply();
        [id(0x0000f032), helpcontext(0x00000a18)]
        HRESULT Copy(
                        [in] BSTR Name, 
                        [in, optional] OlViewSaveOption SaveOption, 
                        [out, retval] View** ppview);
        [id(0x0000f04a), helpcontext(0x00000a19)]
        HRESULT Delete();
        [id(0x0000fa44), helpcontext(0x00000a1a)]
        HRESULT Reset();
        [id(0x0000f048), helpcontext(0x00000a1b)]
        HRESULT Save();
        [id(0x0000fa41), propget, helpcontext(0x00000a1c)]
        HRESULT Language([out, retval] BSTR* Language);
        [id(0x0000fa41), propput, helpcontext(0x00000a1c)]
        HRESULT Language([in] BSTR Language);
        [id(0x0000fa40), propget, helpcontext(0x00000a1d)]
        HRESULT LockUserChanges([out, retval] VARIANT_BOOL* LockUserChanges);
        [id(0x0000fa40), propput, helpcontext(0x00000a1d)]
        HRESULT LockUserChanges([in] VARIANT_BOOL LockUserChanges);
        [id(00000000), propget, helpcontext(0x00000a1e)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x00000a1e)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fa3f), propget, helpcontext(0x00000a1f)]
        HRESULT SaveOption([out, retval] OlViewSaveOption* SaveOption);
        [id(0x0000fa3e), propget, helpcontext(0x00000a20)]
        HRESULT Standard([out, retval] VARIANT_BOOL* Standard);
        [id(0x00000194), propget, helpcontext(0x00000a21)]
        HRESULT ViewType([out, retval] OlViewType* ViewType);
        [id(0x0000fa3c), propget, helpcontext(0x00000a22)]
        HRESULT XML([out, retval] BSTR* XML);
        [id(0x0000fa3c), propput, helpcontext(0x00000a22)]
        HRESULT XML([in] BSTR XML);
        [id(0x0000fa36), helpcontext(0x00000a23)]
        HRESULT GoToDate([in] DATE Date);
        [id(0x00000199), propget, helpcontext(0x00000a24)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x00000199), propput, helpcontext(0x00000a24)]
        HRESULT Filter([in] BSTR Filter);
        [id(0x0000fb5a), propget, helpcontext(0x00000a25)]
        HRESULT SortFields([out, retval] _OrderFields** SortFields);
        [id(0x0000fb5f), propget, helpcontext(0x00000a26)]
        HRESULT AllowInCellEditing([out, retval] VARIANT_BOOL* AllowInCellEditing);
        [id(0x0000fb5f), propput, helpcontext(0x00000a26)]
        HRESULT AllowInCellEditing([in] VARIANT_BOOL AllowInCellEditing);
        [id(0x0000fb76), propget, helpcontext(0x00000a27)]
        HRESULT ShowEmptyFields([out, retval] VARIANT_BOOL* ShowEmptyFields);
        [id(0x0000fb76), propput, helpcontext(0x00000a27)]
        HRESULT ShowEmptyFields([in] VARIANT_BOOL ShowEmptyFields);
        [id(0x00002117), propget, helpcontext(0x00000a28)]
        HRESULT Width([out, retval] long* Width);
        [id(0x00002117), propput, helpcontext(0x00000a28)]
        HRESULT Width([in] long Width);
        [id(0x0000fb6c), propget, helpcontext(0x00000a29)]
        HRESULT MultiLineFieldHeight([out, retval] long* MultiLineFieldHeight);
        [id(0x0000fb6c), propput, helpcontext(0x00000a29)]
        HRESULT MultiLineFieldHeight([in] long MultiLineFieldHeight);
        [id(0x0000fb55), propget, helpcontext(0x00000a2a)]
        HRESULT ViewFields([out, retval] _ViewFields** ViewFields);
        [id(0x0000fb79), propget, helpcontext(0x00000a2b)]
        HRESULT HeadingsFont([out, retval] _ViewFont** HeadingsFont);
        [id(0x0000fb7a), propget, helpcontext(0x00000a2c)]
        HRESULT BodyFont([out, retval] _ViewFont** BodyFont);
        [id(0x0000fa3b), propget, helpcontext(0x00000a2d)]
        HRESULT AutoFormatRules([out, retval] _AutoFormatRules** AutoFormatRules);
    };

    [
      uuid(000610A1-0000-0000-C000-000000000046),
      helpcontext(0x00000c70),
      noncreatable
    ]
    coclass ViewFields {
        [default] interface _ViewFields;
    };

    [
      uuid(0006109D-0000-0000-C000-000000000046),
      helpcontext(0x00000c74),
      noncreatable
    ]
    coclass ViewFont {
        [default] interface _ViewFont;
    };

    [
      odl,
      uuid(0006309D-0000-0000-C000-000000000046),
      helpcontext(0x00000a82),
      dual,
      oleautomation
    ]
    interface _ViewFont : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000a83)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000a84)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000a85)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000a86)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fb81), propget, helpcontext(0x00000a87)]
        HRESULT Bold([out, retval] VARIANT_BOOL* Bold);
        [id(0x0000fb81), propput, helpcontext(0x00000a87)]
        HRESULT Bold([in] VARIANT_BOOL Bold);
        [id(0x0000fb83), propget, helpcontext(0x00000a88)]
        HRESULT Italic([out, retval] VARIANT_BOOL* Italic);
        [id(0x0000fb83), propput, helpcontext(0x00000a88)]
        HRESULT Italic([in] VARIANT_BOOL Italic);
        [id(0x0000fb84), propget, helpcontext(0x00000a89)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fb84), propput, helpcontext(0x00000a89)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fb85), propget, helpcontext(0x00000a8a)]
        HRESULT Size([out, retval] long* Size);
        [id(0x0000fb85), propput, helpcontext(0x00000a8a)]
        HRESULT Size([in] long Size);
        [id(0x0000fb86), propget, helpcontext(0x00000a8b)]
        HRESULT Strikethrough([out, retval] VARIANT_BOOL* Strikethrough);
        [id(0x0000fb86), propput, helpcontext(0x00000a8b)]
        HRESULT Strikethrough([in] VARIANT_BOOL Strikethrough);
        [id(0x0000fb87), propget, helpcontext(0x00000a8c)]
        HRESULT Underline([out, retval] VARIANT_BOOL* Underline);
        [id(0x0000fb87), propput, helpcontext(0x00000a8c)]
        HRESULT Underline([in] VARIANT_BOOL Underline);
        [id(0x0000fb8b), propget, helpcontext(0x00000a8d)]
        HRESULT Color([out, retval] OlColor* Color);
        [id(0x0000fb8b), propput, helpcontext(0x00000a8d)]
        HRESULT Color([in] OlColor Color);
        [id(0x0000fc7e), propget, helpcontext(0x00000da3)]
        HRESULT ExtendedColor([out, retval] OlCategoryColor* ExtendedColor);
        [id(0x0000fc7e), propput, helpcontext(0x00000da3)]
        HRESULT ExtendedColor([in] OlCategoryColor ExtendedColor);
    };

    [
      uuid(0006F0A2-0000-0000-C000-000000000046),
      helpcontext(0x00000c8a),
      noncreatable
    ]
    coclass AutoFormatRules {
        [default] interface _AutoFormatRules;
    };

    [
      odl,
      uuid(00063094-0000-0000-C000-000000000046),
      helpcontext(0x00000a98),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _AutoFormatRules : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000a99)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000a9a)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000a9b)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000a9c)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000a9d)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000a9e),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _AutoFormatRule** Item);
        [id(0x0000005f), helpcontext(0x00000a9f)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [out, retval] _AutoFormatRule** AutoFormatRule);
        [id(0x0000fb56), helpcontext(0x00000aa0)]
        HRESULT Insert(
                        [in] BSTR Name, 
                        [in] VARIANT Index, 
                        [out, retval] _AutoFormatRule** AutoFormatRule);
        [id(0x00000052), helpcontext(0x00000aa1)]
        HRESULT Remove([in] VARIANT Index);
        [id(0x0000fb57), helpcontext(0x00000aa2)]
        HRESULT RemoveAll();
        [id(0x0000f048), helpcontext(0x00000c8e)]
        HRESULT Save();
    };

    [
      uuid(0006F0A1-0000-0000-C000-000000000046),
      helpcontext(0x00000c89),
      noncreatable
    ]
    coclass AutoFormatRule {
        [default] interface _AutoFormatRule;
    };

    [
      odl,
      uuid(00063093-0000-0000-C000-000000000046),
      helpcontext(0x00000a8e),
      dual,
      oleautomation
    ]
    interface _AutoFormatRule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000a8f)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000a90)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000a91)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000a92)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00002102), propget, helpcontext(0x00000a93)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00002102), propput, helpcontext(0x00000a93)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fa18), propget, helpcontext(0x00000a94)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x0000fa18), propput, helpcontext(0x00000a94)]
        HRESULT Filter([in] BSTR Filter);
        [id(0x00000067), propget, helpcontext(0x00000a95)]
        HRESULT Enabled([out, retval] VARIANT_BOOL* Enabled);
        [id(0x00000067), propput, helpcontext(0x00000a95)]
        HRESULT Enabled([in] VARIANT_BOOL Enabled);
        [id(0x0000fa17), propget, helpcontext(0x00000a96)]
        HRESULT Font([out, retval] _ViewFont** Font);
        [id(0x0000fa17), propput, helpcontext(0x00000a96)]
        HRESULT Font([in] ViewFont* Font);
        [id(0x0000fa3e), propget, helpcontext(0x00000a97)]
        HRESULT Standard([out, retval] VARIANT_BOOL* Standard);
    };

    [
      odl,
      uuid(0006309C-0000-0000-C000-000000000046),
      helpcontext(0x00000a51),
      dual,
      oleautomation
    ]
    interface _TimelineView : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000a52)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000a53)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000a54)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000a55)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000197), helpcontext(0x00000a56)]
        HRESULT Apply();
        [id(0x0000f032), helpcontext(0x00000a57)]
        HRESULT Copy(
                        [in] BSTR Name, 
                        [in, optional] OlViewSaveOption SaveOption, 
                        [out, retval] View** ppview);
        [id(0x0000f04a), helpcontext(0x00000a58)]
        HRESULT Delete();
        [id(0x0000fa44), helpcontext(0x00000a59)]
        HRESULT Reset();
        [id(0x0000f048), helpcontext(0x00000a5a)]
        HRESULT Save();
        [id(0x0000fa41), propget, helpcontext(0x00000a5b)]
        HRESULT Language([out, retval] BSTR* Language);
        [id(0x0000fa41), propput, helpcontext(0x00000a5b)]
        HRESULT Language([in] BSTR Language);
        [id(0x0000fa40), propget, helpcontext(0x00000a5c)]
        HRESULT LockUserChanges([out, retval] VARIANT_BOOL* LockUserChanges);
        [id(0x0000fa40), propput, helpcontext(0x00000a5c)]
        HRESULT LockUserChanges([in] VARIANT_BOOL LockUserChanges);
        [id(00000000), propget, helpcontext(0x00000a5d)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x00000a5d)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fa3f), propget, helpcontext(0x00000a5e)]
        HRESULT SaveOption([out, retval] OlViewSaveOption* SaveOption);
        [id(0x0000fa3e), propget, helpcontext(0x00000a5f)]
        HRESULT Standard([out, retval] VARIANT_BOOL* Standard);
        [id(0x00000194), propget, helpcontext(0x00000a60)]
        HRESULT ViewType([out, retval] OlViewType* ViewType);
        [id(0x0000fa3c), propget, helpcontext(0x00000a61)]
        HRESULT XML([out, retval] BSTR* XML);
        [id(0x0000fa3c), propput, helpcontext(0x00000a61)]
        HRESULT XML([in] BSTR XML);
        [id(0x0000fa36), helpcontext(0x00000a62)]
        HRESULT GoToDate([in] DATE Date);
        [id(0x00000199), propget, helpcontext(0x00000a63)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x00000199), propput, helpcontext(0x00000a63)]
        HRESULT Filter([in] BSTR Filter);
        [id(0x00002101), propget, helpcontext(0x00000a64)]
        HRESULT StartField([out, retval] BSTR* StartField);
        [id(0x00002101), propput, helpcontext(0x00000a64)]
        HRESULT StartField([in] BSTR StartField);
        [id(0x0000fb7b), propget, helpcontext(0x00000a65)]
        HRESULT EndField([out, retval] BSTR* EndField);
        [id(0x0000fb7b), propput, helpcontext(0x00000a65)]
        HRESULT EndField([in] BSTR EndField);
        [id(0x0000fb58), propget, helpcontext(0x00000a66)]
        HRESULT GroupByFields([out, retval] _OrderFields** GroupByFields);
        [id(0x0000fb80), propget, helpcontext(0x00000a67)]
        HRESULT DefaultExpandCollapseSetting([out, retval] OlDefaultExpandCollapseSetting* DefaultExpandCollapseSetting);
        [id(0x0000fb80), propput, helpcontext(0x00000a67)]
        HRESULT DefaultExpandCollapseSetting([in] OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting);
        [id(0x0000fb75), propget, helpcontext(0x00000a68)]
        HRESULT ShowWeekNumbers([out, retval] VARIANT_BOOL* ShowWeekNumbers);
        [id(0x0000fb75), propput, helpcontext(0x00000a68)]
        HRESULT ShowWeekNumbers([in] VARIANT_BOOL ShowWeekNumbers);
        [id(0x0000fa2b), propget, helpcontext(0x00000a69)]
        HRESULT MaxLabelWidth([out, retval] long* MaxLabelWidth);
        [id(0x0000fa2b), propput, helpcontext(0x00000a69)]
        HRESULT MaxLabelWidth([in] long MaxLabelWidth);
        [id(0x0000fb74), propget, helpcontext(0x00000a6a)]
        HRESULT ShowLabelWhenViewingByMonth([out, retval] VARIANT_BOOL* ShowLabelWhenViewingByMonth);
        [id(0x0000fb74), propput, helpcontext(0x00000a6a)]
        HRESULT ShowLabelWhenViewingByMonth([in] VARIANT_BOOL ShowLabelWhenViewingByMonth);
        [id(0x0000fa28), propget, helpcontext(0x00000a6b)]
        HRESULT UpperScaleFont([out, retval] _ViewFont** UpperScaleFont);
        [id(0x0000fa2c), propget, helpcontext(0x00000a6c)]
        HRESULT LowerScaleFont([out, retval] _ViewFont** LowerScaleFont);
        [id(0x0000fa2d), propget, helpcontext(0x00000a6d)]
        HRESULT ItemFont([out, retval] _ViewFont** ItemFont);
        [id(0x0000fb88), propget, helpcontext(0x00000a6e)]
        HRESULT TimelineViewMode([out, retval] OlTimelineViewMode* TimelineViewMode);
        [id(0x0000fb88), propput, helpcontext(0x00000a6e)]
        HRESULT TimelineViewMode([in] OlTimelineViewMode TimelineViewMode);
    };

    [
      odl,
      uuid(000630E9-0000-0000-C000-000000000046),
      helpcontext(0x00000afb),
      dual,
      oleautomation
    ]
    interface _MailModule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000afc)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000afd)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000afe)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000aff)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbb9), propget, helpcontext(0x00000caa)]
        HRESULT NavigationModuleType([out, retval] OlNavigationModuleType* NavigationModuleType);
        [id(0x00002102), propget, helpcontext(0x00000b01)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fbba), propget, helpcontext(0x00000b02)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbba), propput, helpcontext(0x00000b02)]
        HRESULT Position([in] long Position);
        [id(0x0000fbbb), propget, helpcontext(0x00000b03)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x0000fbbb), propput, helpcontext(0x00000b03)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
        [id(0x0000fbbc), propget, helpcontext(0x00000b04)]
        HRESULT NavigationGroups([out, retval] _NavigationGroups** NavigationGroups);
    };

    [
      odl,
      uuid(000630EF-0000-0000-C000-000000000046),
      helpcontext(0x00000b23),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _NavigationGroups : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b24)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b25)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b26)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b27)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000b28)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000b29),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _NavigationGroup** Item);
        [id(0x0000fbbd), helpcontext(0x00000b2a)]
        HRESULT Create(
                        [in] BSTR GroupDisplayName, 
                        [out, retval] _NavigationGroup** NavigationGroup);
        [id(0x0000fbbe), helpcontext(0x00000b2b)]
        HRESULT Delete([in] _NavigationGroup* Group);
        [id(0x0000fbbf), helpcontext(0x00000b2c)]
        HRESULT GetDefaultNavigationGroup(
                        [in] OlGroupType DefaultFolderGroup, 
                        [out, retval] _NavigationGroup** NavigationGroup);
    };

    [
      odl,
      uuid(000630F0-0000-0000-C000-000000000046),
      helpcontext(0x00000b41),
      dual,
      oleautomation
    ]
    interface _NavigationGroup : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b42)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b43)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b44)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b45)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbc0), propget, helpcontext(0x00000b46)]
        HRESULT GroupType([out, retval] OlGroupType* GroupType);
        [id(0x0000fbc1), propget, helpcontext(0x00000b47)]
        HRESULT NavigationFolders([out, retval] _NavigationFolders** NavigationFolders);
        [id(0x00002102), propget, helpcontext(0x00000b48)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00002102), propput, helpcontext(0x00000b48)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fbc7), propget, helpcontext(0x00000b49)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbc7), propput, helpcontext(0x00000b49)]
        HRESULT Position([in] long Position);
    };

    [
      uuid(000610F1-0000-0000-C000-000000000046),
      helpcontext(0x00000c80),
      noncreatable
    ]
    coclass NavigationFolders {
        [default] interface _NavigationFolders;
    };

    [
      odl,
      uuid(000630F1-0000-0000-C000-000000000046),
      helpcontext(0x00000b4a),
      dual,
      oleautomation,
      custom(B64784EB-D8D4-4D9B-9ACD-0E30806426F7, ".NETEnumerable")    

    ]
    interface _NavigationFolders : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b4b)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b4c)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b4d)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b4e)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000050), propget, helpcontext(0x00000b4f)]
        HRESULT Count([out, retval] long* Count);
        [id(0x00000051), helpcontext(0x00000b50),
          custom(CD2BC5C9-F452-4326-B714-F9C539D4DA58, 0),
          custom(2941FF83-88D8-4F73-B6A9-BDF8712D000D, "propget")]
        HRESULT Item(
                        [in] VARIANT Index, 
                        [out, retval] _NavigationFolder** Item);
        [id(0x0000fbc2), helpcontext(0x00000b51)]
        HRESULT Add(
                        [in] MAPIFolder* Folder, 
                        [out, retval] _NavigationFolder** NavigationFolder);
        [id(0x0000fbc3), helpcontext(0x00000b52)]
        HRESULT Remove([in] _NavigationFolder* RemovableFolder);
    };

    [
      odl,
      uuid(000630F2-0000-0000-C000-000000000046),
      helpcontext(0x00000b53),
      dual,
      oleautomation
    ]
    interface _NavigationFolder : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b54)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b55)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b56)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b57)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbc4), propget, helpcontext(0x00000b58)]
        HRESULT Folder([out, retval] MAPIFolder** Folder);
        [id(0x0000fbc5), propget, helpcontext(0x00000b59)]
        HRESULT IsSelected([out, retval] VARIANT_BOOL* IsSelected);
        [id(0x0000fbc5), propput, helpcontext(0x00000b59)]
        HRESULT IsSelected([in] VARIANT_BOOL IsSelected);
        [id(0x0000fbc6), propget, helpcontext(0x00000b5a)]
        HRESULT IsSideBySide([out, retval] VARIANT_BOOL* IsSideBySide);
        [id(0x0000fbc6), propput, helpcontext(0x00000b5a)]
        HRESULT IsSideBySide([in] VARIANT_BOOL IsSideBySide);
        [id(0x0000fbc7), propget, helpcontext(0x00000b5b)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbc7), propput, helpcontext(0x00000b5b)]
        HRESULT Position([in] long Position);
        [id(0x0000fbc8), propget, helpcontext(0x00000b5c)]
        HRESULT IsRemovable([out, retval] VARIANT_BOOL* IsRemovable);
        [id(0x00002102), propget, helpcontext(0x00000b5d)]
        HRESULT DisplayName([out, retval] BSTR* DisplayName);
    };

    [
      uuid(000610F2-0000-0000-C000-000000000046),
      helpcontext(0x00000c81),
      noncreatable
    ]
    coclass NavigationFolder {
        [default] interface _NavigationFolder;
    };

    [
      uuid(000610F0-0000-0000-C000-000000000046),
      helpcontext(0x00000c7f),
      noncreatable
    ]
    coclass NavigationGroup {
        [default] interface _NavigationGroup;
    };

    [
      odl,
      uuid(000630EA-0000-0000-C000-000000000046),
      helpcontext(0x00000b05),
      dual,
      oleautomation
    ]
    interface _CalendarModule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b06)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b07)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b08)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b09)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbb9), propget, helpcontext(0x00000cab)]
        HRESULT NavigationModuleType([out, retval] OlNavigationModuleType* NavigationModuleType);
        [id(0x00002102), propget, helpcontext(0x00000b0b)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fbba), propget, helpcontext(0x00000b0c)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbba), propput, helpcontext(0x00000b0c)]
        HRESULT Position([in] long Position);
        [id(0x0000fbbb), propget, helpcontext(0x00000b0d)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x0000fbbb), propput, helpcontext(0x00000b0d)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
        [id(0x0000fbbc), propget, helpcontext(0x00000b0e)]
        HRESULT NavigationGroups([out, retval] _NavigationGroups** NavigationGroups);
    };

    [
      odl,
      uuid(000630EB-0000-0000-C000-000000000046),
      helpcontext(0x00000b0f),
      dual,
      oleautomation
    ]
    interface _ContactsModule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b10)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b11)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b12)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b13)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbb9), propget, helpcontext(0x00000cac)]
        HRESULT NavigationModuleType([out, retval] OlNavigationModuleType* NavigationModuleType);
        [id(0x00002102), propget, helpcontext(0x00000b15)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fbba), propget, helpcontext(0x00000b16)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbba), propput, helpcontext(0x00000b16)]
        HRESULT Position([in] long Position);
        [id(0x0000fbbb), propget, helpcontext(0x00000b17)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x0000fbbb), propput, helpcontext(0x00000b17)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
        [id(0x0000fbbc), propget, helpcontext(0x00000b18)]
        HRESULT NavigationGroups([out, retval] _NavigationGroups** NavigationGroups);
    };

    [
      odl,
      uuid(000630EC-0000-0000-C000-000000000046),
      helpcontext(0x00000b19),
      dual,
      oleautomation
    ]
    interface _TasksModule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b1a)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b1b)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b1c)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b1d)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbb9), propget, helpcontext(0x00000cad)]
        HRESULT NavigationModuleType([out, retval] OlNavigationModuleType* NavigationModuleType);
        [id(0x00002102), propget, helpcontext(0x00000b1f)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fbba), propget, helpcontext(0x00000b20)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbba), propput, helpcontext(0x00000b20)]
        HRESULT Position([in] long Position);
        [id(0x0000fbbb), propget, helpcontext(0x00000b21)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x0000fbbb), propput, helpcontext(0x00000b21)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
        [id(0x0000fbbc), propget, helpcontext(0x00000b22)]
        HRESULT NavigationGroups([out, retval] _NavigationGroups** NavigationGroups);
    };

    [
      odl,
      uuid(000630ED-0000-0000-C000-000000000046),
      helpcontext(0x00000b2d),
      dual,
      oleautomation
    ]
    interface _JournalModule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b2e)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b2f)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b30)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b31)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbb9), propget, helpcontext(0x00000cae)]
        HRESULT NavigationModuleType([out, retval] OlNavigationModuleType* NavigationModuleType);
        [id(0x00002102), propget, helpcontext(0x00000b33)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fbba), propget, helpcontext(0x00000b34)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbba), propput, helpcontext(0x00000b34)]
        HRESULT Position([in] long Position);
        [id(0x0000fbbb), propget, helpcontext(0x00000b35)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x0000fbbb), propput, helpcontext(0x00000b35)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
        [id(0x0000fbbc), propget, helpcontext(0x00000b36)]
        HRESULT NavigationGroups([out, retval] _NavigationGroups** NavigationGroups);
    };

    [
      odl,
      uuid(000630EE-0000-0000-C000-000000000046),
      helpcontext(0x00000b37),
      dual,
      oleautomation
    ]
    interface _NotesModule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b38)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b39)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b3a)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b3b)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbb9), propget, helpcontext(0x00000ca3)]
        HRESULT NavigationModuleType([out, retval] OlNavigationModuleType* NavigationModuleType);
        [id(0x00002102), propget, helpcontext(0x00000b3d)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fbba), propget, helpcontext(0x00000b3e)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbba), propput, helpcontext(0x00000b3e)]
        HRESULT Position([in] long Position);
        [id(0x0000fbbb), propget, helpcontext(0x00000b3f)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x0000fbbb), propput, helpcontext(0x00000b3f)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
        [id(0x0000fbbc), propget, helpcontext(0x00000b40)]
        HRESULT NavigationGroups([out, retval] _NavigationGroups** NavigationGroups);
    };

    [
      uuid(000630F3-0000-0000-C000-000000000046),
      helpcontext(0x00000b5e)
    ]
    dispinterface NavigationPaneEvents_12 {
        properties:
        methods:
            [id(0x0000fbc9), helpcontext(0x00000b5f)]
            void ModuleSwitch([in] NavigationModule* CurrentModule);
    };

    [
      uuid(000630F4-0000-0000-C000-000000000046),
      helpcontext(0x00000b60)
    ]
    dispinterface NavigationGroupsEvents_12 {
        properties:
        methods:
            [id(0x0000fbca), helpcontext(0x00000b61)]
            void SelectedChange([in] _NavigationFolder* NavigationFolder);
            [id(0x0000fbcb), helpcontext(0x00000b62)]
            void NavigationFolderAdd([in] _NavigationFolder* NavigationFolder);
            [id(0x0000fbcc), helpcontext(0x00000b63)]
            void NavigationFolderRemove();
    };

    [
      odl,
      uuid(000630A2-0000-0000-C000-000000000046),
      helpcontext(0x00000b64),
      dual,
      oleautomation
    ]
    interface _BusinessCardView : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000b65)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000b66)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000b67)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000b68)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000197), helpcontext(0x00000b69)]
        HRESULT Apply();
        [id(0x0000f032), helpcontext(0x00000b6a)]
        HRESULT Copy(
                        [in] BSTR Name, 
                        [in, optional] OlViewSaveOption SaveOption, 
                        [out, retval] View** ppview);
        [id(0x0000f04a), helpcontext(0x00000b6b)]
        HRESULT Delete();
        [id(0x0000fa44), helpcontext(0x00000b6c)]
        HRESULT Reset();
        [id(0x0000f048), helpcontext(0x00000b6d)]
        HRESULT Save();
        [id(0x0000fa41), propget, helpcontext(0x00000b6e)]
        HRESULT Language([out, retval] BSTR* Language);
        [id(0x0000fa41), propput, helpcontext(0x00000b6e)]
        HRESULT Language([in] BSTR Language);
        [id(0x0000fa40), propget, helpcontext(0x00000b6f)]
        HRESULT LockUserChanges([out, retval] VARIANT_BOOL* LockUserChanges);
        [id(0x0000fa40), propput, helpcontext(0x00000b6f)]
        HRESULT LockUserChanges([in] VARIANT_BOOL LockUserChanges);
        [id(00000000), propget, helpcontext(0x00000b70)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x00000b70)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fa3f), propget, helpcontext(0x00000b71)]
        HRESULT SaveOption([out, retval] OlViewSaveOption* SaveOption);
        [id(0x0000fa3e), propget, helpcontext(0x00000b72)]
        HRESULT Standard([out, retval] VARIANT_BOOL* Standard);
        [id(0x00000194), propget, helpcontext(0x00000b73)]
        HRESULT ViewType([out, retval] OlViewType* ViewType);
        [id(0x0000fa3c), propget, helpcontext(0x00000b74)]
        HRESULT XML([out, retval] BSTR* XML);
        [id(0x0000fa3c), propput, helpcontext(0x00000b74)]
        HRESULT XML([in] BSTR XML);
        [id(0x0000fa36), helpcontext(0x00000b75)]
        HRESULT GoToDate([in] DATE Date);
        [id(0x00000199), propget, helpcontext(0x00000b76)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x00000199), propput, helpcontext(0x00000b76)]
        HRESULT Filter([in] BSTR Filter);
        [id(0x0000fb79), propget, helpcontext(0x00000b77)]
        HRESULT HeadingsFont([out, retval] _ViewFont** HeadingsFont);
        [id(0x0000fb5a), propget, helpcontext(0x00000b78)]
        HRESULT SortFields([out, retval] _OrderFields** SortFields);
        [id(0x0000fbda), propget, helpcontext(0x00000b79)]
        HRESULT CardSize([out, retval] long* CardSize);
        [id(0x0000fbda), propput, helpcontext(0x00000b79)]
        HRESULT CardSize([in] long CardSize);
    };

    [
      odl,
      uuid(00063059-0000-0000-C000-000000000046),
      helpcontext(0x00000b81),
      dual,
      oleautomation
    ]
    interface _FormRegionStartup : IDispatch {
        [id(0x0000fb36), helpcontext(0x00000b82)]
        HRESULT GetFormRegionStorage(
                        [in] BSTR FormRegionName, 
                        [in] IDispatch* Item, 
                        [in] long LCID, 
                        [in] OlFormRegionMode FormRegionMode, 
                        [in] OlFormRegionSize FormRegionSize, 
                        [out, retval] VARIANT* Storage);
        [id(0x0000fb3d), helpcontext(0x00000b83)]
        HRESULT BeforeFormRegionShow([in] _FormRegion* FormRegion);
        [id(0x0000fc33), helpcontext(0x00000ce9)]
        HRESULT GetFormRegionManifest(
                        [in] BSTR FormRegionName, 
                        [in] long LCID, 
                        [out, retval] VARIANT* Manifest);
        [id(0x0000fc34), helpcontext(0x00000ceb)]
        HRESULT GetFormRegionIcon(
                        [in] BSTR FormRegionName, 
                        [in] long LCID, 
                        [in] OlFormRegionIcon Icon, 
                        [out, retval] VARIANT* Result);
    };

    [
      uuid(0006315A-0000-0000-C000-000000000046),
      helpcontext(0x00000bca),
      noncreatable
    ]
    coclass FormRegion {
        [default] interface _FormRegion;
        [default, source] dispinterface FormRegionEvents;
    };

    [
      odl,
      uuid(0006305A-0000-0000-C000-000000000046),
      helpcontext(0x00000950),
      dual,
      oleautomation
    ]
    interface _FormRegion : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000951)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000952)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000953)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000954)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fb38), propget, helpcontext(0x00000955)]
        HRESULT IsExpanded([out, retval] VARIANT_BOOL* IsExpanded);
        [id(0x0000fb39), propget, helpcontext(0x00000957)]
        HRESULT Form([out, retval] IDispatch** Form);
        [id(0x0000fb35), propget, helpcontext(0x00000958)]
        HRESULT Detail([out, retval] BSTR* Detail);
        [id(0x0000fb35), propput, helpcontext(0x00000958)]
        HRESULT Detail([in] BSTR Detail);
        [id(0x0000fa60), propget, helpcontext(0x00000959)]
        HRESULT Item([out, retval] IDispatch** Item);
        [id(0x0000f03e), propget, helpcontext(0x0000095a)]
        HRESULT Inspector([out, retval] _Inspector** Inspector);
        [id(0x0000fb34), propget, helpcontext(0x0000095b)]
        HRESULT FormRegionMode([out, retval] OlFormRegionMode* FormRegionMode);
        [id(0x0000fa41), propget, helpcontext(0x0000095c)]
        HRESULT Language([out, retval] long* Language);
        [id(0x0000fb3b), helpcontext(0x0000095e)]
        HRESULT Reflow();
        [id(0x00003001), propget, helpcontext(0x0000095f)]
        HRESULT DisplayName([out, retval] BSTR* DisplayName);
        [id(0x00002102), propget, helpcontext(0x00000960)]
        HRESULT InternalName([out, retval] BSTR* InternalName);
        [id(0x0000fac9), helpcontext(0x00000961)]
        HRESULT SetControlItemProperty(
                        [in] IDispatch* Control, 
                        [in] BSTR PropertyName);
        [id(0x0000fc06), propget, helpcontext(0x00000bd0)]
        HRESULT SuppressControlReplacement([out, retval] VARIANT_BOOL* SuppressControlReplacement);
        [id(0x0000fc06), propput, helpcontext(0x00000bd0)]
        HRESULT SuppressControlReplacement([in] VARIANT_BOOL SuppressControlReplacement);
        [id(0x00002109), helpcontext(0x00000c90)]
        HRESULT Select();
        [id(0x0000fc1a), propget, helpcontext(0x00000cc1)]
        HRESULT EnableAutoLayout([out, retval] VARIANT_BOOL* EnableAutoLayout);
        [id(0x0000fc1a), propput, helpcontext(0x00000cc1)]
        HRESULT EnableAutoLayout([in] VARIANT_BOOL EnableAutoLayout);
        [id(0x00002103), propget, helpcontext(0x00000d81)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x00002103), propput, helpcontext(0x00000d81)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
    };

    [
      odl,
      uuid(000630FF-0000-0000-C000-000000000046),
      helpcontext(0x00000d1f),
      dual,
      oleautomation
    ]
    interface _SolutionsModule : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000d20)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000d21)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000d22)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000d23)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fbb9), propget, helpcontext(0x00000d24)]
        HRESULT NavigationModuleType([out, retval] OlNavigationModuleType* NavigationModuleType);
        [id(0x00002102), propget, helpcontext(0x00000d25)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x0000fbba), propget, helpcontext(0x00000d26)]
        HRESULT Position([out, retval] long* Position);
        [id(0x0000fbba), propput, helpcontext(0x00000d26)]
        HRESULT Position([in] long Position);
        [id(0x0000fbbb), propget, helpcontext(0x00000d27)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x0000fbbb), propput, helpcontext(0x00000d27)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
        [id(0x0000fc3e), helpcontext(0x00000d28)]
        HRESULT AddSolution(
                        [in] MAPIFolder* Solution, 
                        [in] OlSolutionScope Scope);
    };

    [
      odl,
      uuid(00063099-0000-0000-C000-000000000046),
      helpcontext(0x00000a2e),
      dual,
      oleautomation
    ]
    interface _CalendarView : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000a2f)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000a30)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000a31)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000a32)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000197), helpcontext(0x00000a33)]
        HRESULT Apply();
        [id(0x0000f032), helpcontext(0x00000a34)]
        HRESULT Copy(
                        [in] BSTR Name, 
                        [in, optional] OlViewSaveOption SaveOption, 
                        [out, retval] View** ppview);
        [id(0x0000f04a), helpcontext(0x00000a35)]
        HRESULT Delete();
        [id(0x0000fa44), helpcontext(0x00000a36)]
        HRESULT Reset();
        [id(0x0000f048), helpcontext(0x00000a37)]
        HRESULT Save();
        [id(0x0000fa41), propget, helpcontext(0x00000a38)]
        HRESULT Language([out, retval] BSTR* Language);
        [id(0x0000fa41), propput, helpcontext(0x00000a38)]
        HRESULT Language([in] BSTR Language);
        [id(0x0000fa40), propget, helpcontext(0x00000a39)]
        HRESULT LockUserChanges([out, retval] VARIANT_BOOL* LockUserChanges);
        [id(0x0000fa40), propput, helpcontext(0x00000a39)]
        HRESULT LockUserChanges([in] VARIANT_BOOL LockUserChanges);
        [id(00000000), propget, helpcontext(0x00000a3a)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x00000a3a)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fa3f), propget, helpcontext(0x00000a3b)]
        HRESULT SaveOption([out, retval] OlViewSaveOption* SaveOption);
        [id(0x0000fa3e), propget, helpcontext(0x00000a3c)]
        HRESULT Standard([out, retval] VARIANT_BOOL* Standard);
        [id(0x00000194), propget, helpcontext(0x00000a3d)]
        HRESULT ViewType([out, retval] OlViewType* ViewType);
        [id(0x0000fa3c), propget, helpcontext(0x00000a3e)]
        HRESULT XML([out, retval] BSTR* XML);
        [id(0x0000fa3c), propput, helpcontext(0x00000a3e)]
        HRESULT XML([in] BSTR XML);
        [id(0x0000fa36), helpcontext(0x00000a3f)]
        HRESULT GoToDate([in] DATE Date);
        [id(0x00000199), propget, helpcontext(0x00000a40)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x00000199), propput, helpcontext(0x00000a40)]
        HRESULT Filter([in] BSTR Filter);
        [id(0x00002101), propget, helpcontext(0x00000a41)]
        HRESULT StartField([out, retval] BSTR* StartField);
        [id(0x00002101), propput, helpcontext(0x00000a41)]
        HRESULT StartField([in] BSTR StartField);
        [id(0x0000fb7b), propget, helpcontext(0x00000a42)]
        HRESULT EndField([out, retval] BSTR* EndField);
        [id(0x0000fb7b), propput, helpcontext(0x00000a42)]
        HRESULT EndField([in] BSTR EndField);
        [id(0x0000fb77), propget, helpcontext(0x00000a43)]
        HRESULT CalendarViewMode([out, retval] OlCalendarViewMode* CalendarViewMode);
        [id(0x0000fb77), propput, helpcontext(0x00000a43)]
        HRESULT CalendarViewMode([in] OlCalendarViewMode CalendarViewMode);
        [id(0x0000fb6d), propget, helpcontext(0x00000bd1)]
        HRESULT DayWeekTimeScale([out, retval] OlDayWeekTimeScale* DayWeekTimeScale);
        [id(0x0000fb6d), propput, helpcontext(0x00000bd1)]
        HRESULT DayWeekTimeScale([in] OlDayWeekTimeScale DayWeekTimeScale);
        [id(0x0000fb71), propget, helpcontext(0x00000a48)]
        HRESULT MonthShowEndTime([out, retval] VARIANT_BOOL* MonthShowEndTime);
        [id(0x0000fb71), propput, helpcontext(0x00000a48)]
        HRESULT MonthShowEndTime([in] VARIANT_BOOL MonthShowEndTime);
        [id(0x0000fb73), propget, helpcontext(0x00000a4a)]
        HRESULT BoldDatesWithItems([out, retval] VARIANT_BOOL* BoldDatesWithItems);
        [id(0x0000fb73), propput, helpcontext(0x00000a4a)]
        HRESULT BoldDatesWithItems([in] VARIANT_BOOL BoldDatesWithItems);
        [id(0x0000fb7c), propget, hidden, helpcontext(0x00000bd2)]
        HRESULT DayWeekTimeFont([out, retval] _ViewFont** DayWeekTimeFont);
        [id(0x0000fb7d), propget, hidden, helpcontext(0x00000bd3)]
        HRESULT DayWeekFont([out, retval] _ViewFont** DayWeekFont);
        [id(0x0000fb7f), propget, hidden, helpcontext(0x00000a4e)]
        HRESULT MonthFont([out, retval] _ViewFont** MonthFont);
        [id(0x0000fa3b), propget, helpcontext(0x00000a4f)]
        HRESULT AutoFormatRules([out, retval] _AutoFormatRules** AutoFormatRules);
        [id(0x0000fb82), propget, helpcontext(0x00000a50)]
        HRESULT DaysInMultiDayMode([out, retval] long* DaysInMultiDayMode);
        [id(0x0000fb82), propput, helpcontext(0x00000a50)]
        HRESULT DaysInMultiDayMode([in] long DaysInMultiDayMode);
        [id(0x0000fc07), propget, helpcontext(0x00000bd4)]
        HRESULT DisplayedDates([out, retval] VARIANT* DisplayedDates);
        [id(0x0000fc11), propget, helpcontext(0x00000ca0)]
        HRESULT BoldSubjects([out, retval] VARIANT_BOOL* BoldSubjects);
        [id(0x0000fc11), propput, helpcontext(0x00000ca0)]
        HRESULT BoldSubjects([in] VARIANT_BOOL BoldSubjects);
        [id(0x0000fc3a), propget, helpcontext(0x00000cf1)]
        HRESULT SelectedStartTime([out, retval] DATE* SelectedStartTime);
        [id(0x0000fc3b), propget, helpcontext(0x00000cf2)]
        HRESULT SelectedEndTime([out, retval] DATE* SelectedEndTime);
    };

    [
      odl,
      uuid(00063096-0000-0000-C000-000000000046),
      helpcontext(0x000009c2),
      dual,
      oleautomation
    ]
    interface _TableView : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000009c3)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000009c4)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000009c5)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000009c6)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000197), helpcontext(0x000009c7)]
        HRESULT Apply();
        [id(0x0000f032), helpcontext(0x000009c8)]
        HRESULT Copy(
                        [in] BSTR Name, 
                        [in, optional] OlViewSaveOption SaveOption, 
                        [out, retval] View** ppview);
        [id(0x0000f04a), helpcontext(0x000009c9)]
        HRESULT Delete();
        [id(0x0000fa44), helpcontext(0x000009ca)]
        HRESULT Reset();
        [id(0x0000f048), helpcontext(0x000009cb)]
        HRESULT Save();
        [id(0x0000fa41), propget, helpcontext(0x000009cc)]
        HRESULT Language([out, retval] BSTR* Language);
        [id(0x0000fa41), propput, helpcontext(0x000009cc)]
        HRESULT Language([in] BSTR Language);
        [id(0x0000fa40), propget, helpcontext(0x000009cd)]
        HRESULT LockUserChanges([out, retval] VARIANT_BOOL* LockUserChanges);
        [id(0x0000fa40), propput, helpcontext(0x000009cd)]
        HRESULT LockUserChanges([in] VARIANT_BOOL LockUserChanges);
        [id(00000000), propget, helpcontext(0x000009ce)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x000009ce)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fa3f), propget, helpcontext(0x000009cf)]
        HRESULT SaveOption([out, retval] OlViewSaveOption* SaveOption);
        [id(0x0000fa3e), propget, helpcontext(0x000009d0)]
        HRESULT Standard([out, retval] VARIANT_BOOL* Standard);
        [id(0x00000194), propget, helpcontext(0x000009d1)]
        HRESULT ViewType([out, retval] OlViewType* ViewType);
        [id(0x0000fa3c), propget, helpcontext(0x000009d2)]
        HRESULT XML([out, retval] BSTR* XML);
        [id(0x0000fa3c), propput, helpcontext(0x000009d2)]
        HRESULT XML([in] BSTR XML);
        [id(0x0000fa36), helpcontext(0x000009d3)]
        HRESULT GoToDate([in] DATE Date);
        [id(0x00000199), propget, helpcontext(0x000009d4)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x00000199), propput, helpcontext(0x000009d4)]
        HRESULT Filter([in] BSTR Filter);
        [id(0x0000fb55), propget, helpcontext(0x000009d5)]
        HRESULT ViewFields([out, retval] _ViewFields** ViewFields);
        [id(0x0000fb58), propget, helpcontext(0x000009d6)]
        HRESULT GroupByFields([out, retval] _OrderFields** GroupByFields);
        [id(0x0000fb5a), propget, helpcontext(0x000009d7)]
        HRESULT SortFields([out, retval] _OrderFields** SortFields);
        [id(0x0000fb5b), propget, helpcontext(0x000009d8)]
        HRESULT MaxLinesInMultiLineView([out, retval] long* MaxLinesInMultiLineView);
        [id(0x0000fb5b), propput, helpcontext(0x000009d8)]
        HRESULT MaxLinesInMultiLineView([in] long MaxLinesInMultiLineView);
        [id(0x0000fb59), propget, helpcontext(0x000009d9)]
        HRESULT AutomaticGrouping([out, retval] VARIANT_BOOL* AutomaticGrouping);
        [id(0x0000fb59), propput, helpcontext(0x000009d9)]
        HRESULT AutomaticGrouping([in] VARIANT_BOOL AutomaticGrouping);
        [id(0x0000fb80), propget, helpcontext(0x000009da)]
        HRESULT DefaultExpandCollapseSetting([out, retval] OlDefaultExpandCollapseSetting* DefaultExpandCollapseSetting);
        [id(0x0000fb80), propput, helpcontext(0x000009da)]
        HRESULT DefaultExpandCollapseSetting([in] OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting);
        [id(0x0000fb5c), propget, helpcontext(0x000009db)]
        HRESULT AutomaticColumnSizing([out, retval] VARIANT_BOOL* AutomaticColumnSizing);
        [id(0x0000fb5c), propput, helpcontext(0x000009db)]
        HRESULT AutomaticColumnSizing([in] VARIANT_BOOL AutomaticColumnSizing);
        [id(0x0000fb5d), propget, helpcontext(0x000009dc)]
        HRESULT MultiLine([out, retval] OlMultiLine* MultiLine);
        [id(0x0000fb5d), propput, helpcontext(0x000009dc)]
        HRESULT MultiLine([in] OlMultiLine MultiLine);
        [id(0x0000fb5e), propget, helpcontext(0x000009dd)]
        HRESULT MultiLineWidth([out, retval] long* MultiLineWidth);
        [id(0x0000fb5e), propput, helpcontext(0x000009dd)]
        HRESULT MultiLineWidth([in] long MultiLineWidth);
        [id(0x0000fb5f), propget, helpcontext(0x000009de)]
        HRESULT AllowInCellEditing([out, retval] VARIANT_BOOL* AllowInCellEditing);
        [id(0x0000fb5f), propput, helpcontext(0x000009de)]
        HRESULT AllowInCellEditing([in] VARIANT_BOOL AllowInCellEditing);
        [id(0x0000fb60), propget, helpcontext(0x000009df)]
        HRESULT ShowNewItemRow([out, retval] VARIANT_BOOL* ShowNewItemRow);
        [id(0x0000fb60), propput, helpcontext(0x000009df)]
        HRESULT ShowNewItemRow([in] VARIANT_BOOL ShowNewItemRow);
        [id(0x0000fb61), propget, helpcontext(0x000009e0)]
        HRESULT GridLineStyle([out, retval] OlGridLineStyle* GridLineStyle);
        [id(0x0000fb61), propput, helpcontext(0x000009e0)]
        HRESULT GridLineStyle([in] OlGridLineStyle GridLineStyle);
        [id(0x0000fb62), propget, helpcontext(0x000009e1)]
        HRESULT ShowItemsInGroups([out, retval] VARIANT_BOOL* ShowItemsInGroups);
        [id(0x0000fb62), propput, helpcontext(0x000009e1)]
        HRESULT ShowItemsInGroups([in] VARIANT_BOOL ShowItemsInGroups);
        [id(0x0000fb63), propget, helpcontext(0x000009e2)]
        HRESULT ShowReadingPane([out, retval] VARIANT_BOOL* ShowReadingPane);
        [id(0x0000fb63), propput, helpcontext(0x000009e2)]
        HRESULT ShowReadingPane([in] VARIANT_BOOL ShowReadingPane);
        [id(0x0000fb64), propget, helpcontext(0x000009e3)]
        HRESULT HideReadingPaneHeaderInfo([out, retval] VARIANT_BOOL* HideReadingPaneHeaderInfo);
        [id(0x0000fb64), propput, helpcontext(0x000009e3)]
        HRESULT HideReadingPaneHeaderInfo([in] VARIANT_BOOL HideReadingPaneHeaderInfo);
        [id(0x0000fb65), propget, hidden, helpcontext(0x000009e4)]
        HRESULT ShowUnreadAndFlaggedMessages([out, retval] VARIANT_BOOL* ShowUnreadAndFlaggedMessages);
        [id(0x0000fb65), propput, hidden, helpcontext(0x000009e4)]
        HRESULT ShowUnreadAndFlaggedMessages([in] VARIANT_BOOL ShowUnreadAndFlaggedMessages);
        [id(0x0000fb68), propget, helpcontext(0x000009e5)]
        HRESULT RowFont([out, retval] _ViewFont** RowFont);
        [id(0x0000fb67), propget, helpcontext(0x000009e6)]
        HRESULT ColumnFont([out, retval] _ViewFont** ColumnFont);
        [id(0x0000fb69), propget, helpcontext(0x000009e7)]
        HRESULT AutoPreviewFont([out, retval] _ViewFont** AutoPreviewFont);
        [id(0x0000fb78), propget, helpcontext(0x000009e8)]
        HRESULT AutoPreview([out, retval] OlAutoPreview* AutoPreview);
        [id(0x0000fb78), propput, helpcontext(0x000009e8)]
        HRESULT AutoPreview([in] OlAutoPreview AutoPreview);
        [id(0x0000fa3b), propget, helpcontext(0x000009e9)]
        HRESULT AutoFormatRules([out, retval] _AutoFormatRules** AutoFormatRules);
        [id(0x0000fb1d), helpcontext(0x00000cf3)]
        HRESULT GetTable([out, retval] _Table** Table);
        [id(0x0000fc80), propget, helpcontext(0x00000dbb)]
        HRESULT ShowConversationByDate([out, retval] VARIANT_BOOL* ShowConversationByDate);
        [id(0x0000fc80), propput, helpcontext(0x00000dbb)]
        HRESULT ShowConversationByDate([in] VARIANT_BOOL ShowConversationByDate);
        [id(0x0000fc81), propget, helpcontext(0x00000dbc)]
        HRESULT ShowFullConversations([out, retval] VARIANT_BOOL* ShowFullConversations);
        [id(0x0000fc81), propput, helpcontext(0x00000dbc)]
        HRESULT ShowFullConversations([in] VARIANT_BOOL ShowFullConversations);
        [id(0x0000fc83), propget, helpcontext(0x00000dc0)]
        HRESULT AlwaysExpandConversation([out, retval] VARIANT_BOOL* AlwaysExpandConversation);
        [id(0x0000fc83), propput, helpcontext(0x00000dc0)]
        HRESULT AlwaysExpandConversation([in] VARIANT_BOOL AlwaysExpandConversation);
        [id(0x0000fc89), propget, helpcontext(0x00000de5)]
        HRESULT ShowConversationSendersAboveSubject([out, retval] VARIANT_BOOL* ShowConversationSendersAboveSubject);
        [id(0x0000fc89), propput, helpcontext(0x00000de5)]
        HRESULT ShowConversationSendersAboveSubject([in] VARIANT_BOOL ShowConversationSendersAboveSubject);
    };

    [
      odl,
      uuid(000630FE-0000-0000-C000-000000000046),
      helpcontext(0x00000cf6),
      dual,
      oleautomation
    ]
    interface _MobileItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000cf7)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000cf8)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000cf9)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000cfa)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x00000cfb)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x00000cfc)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x00000cfd)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x00000cfd)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x0000fc4b), propget, helpcontext(0x00000cfe)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x0000fc4b), propput, helpcontext(0x00000cfe)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x00000cff)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x00000cff)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x00000d00)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x00000d00)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x00000d01)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x00000d02)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x00000d03)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x00000d04)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x00000d05)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x00000d06)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x00000d07)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x00000d07)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x00000d08)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000d09)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x00000d0a)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x00000d0a)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x00000d0b)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x00000d0b)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x00000d0c)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x00000d0c)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x00000d0d)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x00000d0e)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x00000d0f)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x00000d10)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x00000d10)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x0000fc57), propget, helpcontext(0x00000d11)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000d12)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000d12)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000d13)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000d13)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x00000d14)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x00000d15)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x00000d16)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x00000d17)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x00000d18)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x00000d19)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x00000d1a)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x00000d1b)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x00000d1c)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x0000f404), propget, helpcontext(0x00000d2d)]
        HRESULT HTMLBody([out, retval] BSTR* HTMLBody);
        [id(0x0000f404), propput, helpcontext(0x00000d2d)]
        HRESULT HTMLBody([in] BSTR HTMLBody);
        [id(0x0000fc4c), propget, helpcontext(0x00000d2e)]
        HRESULT MobileFormat([out, retval] OlMobileFormat* MobileFormat);
        [id(0x0000fc4d), propget, helpcontext(0x00000d2f)]
        HRESULT SMILBody([out, retval] BSTR* SMILBody);
        [id(0x0000fc4d), propput, helpcontext(0x00000d2f)]
        HRESULT SMILBody([in] BSTR SMILBody);
        [id(0x0000f810), helpcontext(0x00000d30)]
        HRESULT Reply([out, retval] _MobileItem** Item);
        [id(0x0000f811), helpcontext(0x00000d31)]
        HRESULT ReplyAll([out, retval] _MobileItem** Item);
        [id(0x0000fc55), helpcontext(0x00000d32)]
        HRESULT Send([in] VARIANT_BOOL ForceSend);
        [id(0x0000f814), propget, helpcontext(0x00000d33)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
        [id(0x00000e04), propget, helpcontext(0x00000d51)]
        HRESULT To([out, retval] BSTR* To);
        [id(0x00000e04), propput, helpcontext(0x00000d51)]
        HRESULT To([in] BSTR To);
        [id(0x0000f813), helpcontext(0x00000d52)]
        HRESULT Forward([out, retval] _MobileItem** Item);
        [id(0x00000050), propget, helpcontext(0x00000d53)]
        HRESULT ReplyRecipientNames([out, retval] BSTR* ReplyRecipientNames);
        [id(0x0000f013), propget, helpcontext(0x00000d54)]
        HRESULT ReplyRecipients([out, retval] Recipients** ReplyRecipients);
        [id(0x0000fc56), propget, helpcontext(0x00000d55)]
        HRESULT Count([out, retval] long* Count);
        [id(0x0000f403), propget, helpcontext(0x00000d56)]
        HRESULT Submitted([out, retval] VARIANT_BOOL* Submitted);
        [id(0x0000fa09), propget, helpcontext(0x00000d57)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00000e06), propget, helpcontext(0x00000d58)]
        HRESULT ReceivedTime([out, retval] DATE* ReceivedTime);
        [id(0x0000fad1), propget, helpcontext(0x00000d59)]
        HRESULT SendUsingAccount([out, retval] _Account** SendUsingAccount);
        [id(0x0000fad1), propput, helpcontext(0x00000d59)]
        HRESULT SendUsingAccount([in] _Account* SendUsingAccount);
        [id(0x0000f402), propget, helpcontext(0x00000d5a)]
        HRESULT Sent([out, retval] VARIANT_BOOL* Sent);
        [id(0x00000039), propget, helpcontext(0x00000d6a)]
        HRESULT SentOn([out, retval] DATE* SentOn);
        [id(0x0000fafd), propget, helpcontext(0x00000d82)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000003f), propget, helpcontext(0x00000d83)]
        HRESULT ReceivedByEntryID([out, retval] BSTR* ReceivedByEntryID);
        [id(0x00000040), propget, helpcontext(0x00000d84)]
        HRESULT ReceivedByName([out, retval] BSTR* ReceivedByName);
        [id(0x00000c1f), propget, helpcontext(0x00000d85)]
        HRESULT SenderEmailAddress([out, retval] BSTR* SenderEmailAddress);
        [id(0x00000c1e), propget, helpcontext(0x00000d86)]
        HRESULT SenderEmailType([out, retval] BSTR* SenderEmailType);
        [id(0x00000c1a), propget, helpcontext(0x00000d87)]
        HRESULT SenderName([out, retval] BSTR* SenderName);
    };

    [
      uuid(000610FE-0000-0000-C000-000000000046),
      helpcontext(0x00000d1d),
      noncreatable,
      hidden
    ]
    coclass MobileItem {
        [default] interface _MobileItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      odl,
      uuid(00063022-0000-0000-C000-000000000046),
      helpcontext(0x000004ca),
      dual,
      oleautomation
    ]
    interface _JournalItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000004cb)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000004cc)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000004cd)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000004ce)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x000004cf)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x000004d0)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x000004d1)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x000004d1)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x000004d2)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x000004d2)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x000004d3)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x000004d3)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x000004d4)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x000004d4)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x000004d5)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x000004d6)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x000004d7)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x000004d8)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x000004d9)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x000004da)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x000004db)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x000004db)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x000004dc)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x000004dd)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x000004de)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x000004de)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x000004df)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x000004df)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x000004e0)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x000004e0)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x000004e1)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x000004e2)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x000004e3)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x000004e4)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x000004e4)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x000004e5)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x000004e6)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x000004e6)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x000004e7)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x000004e7)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x000004e8)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x000004e9)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x000004ea)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x000004eb)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x000004ec)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x000004ed)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x000004ee)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x000004ef)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x000004f0)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x00000e04), propget, helpcontext(0x000004f1)]
        HRESULT ContactNames([out, retval] BSTR* ContactNames);
        [id(0x00000e04), propput, helpcontext(0x000004f1)]
        HRESULT ContactNames([in] BSTR ContactNames);
        [id(0x00008711), propget, helpcontext(0x000004f2)]
        HRESULT DocPosted([out, retval] VARIANT_BOOL* DocPosted);
        [id(0x00008711), propput, helpcontext(0x000004f2)]
        HRESULT DocPosted([in] VARIANT_BOOL DocPosted);
        [id(0x0000870e), propget, helpcontext(0x000004f3)]
        HRESULT DocPrinted([out, retval] VARIANT_BOOL* DocPrinted);
        [id(0x0000870e), propput, helpcontext(0x000004f3)]
        HRESULT DocPrinted([in] VARIANT_BOOL DocPrinted);
        [id(0x00008710), propget, helpcontext(0x000004f4)]
        HRESULT DocRouted([out, retval] VARIANT_BOOL* DocRouted);
        [id(0x00008710), propput, helpcontext(0x000004f4)]
        HRESULT DocRouted([in] VARIANT_BOOL DocRouted);
        [id(0x0000870f), propget, helpcontext(0x000004f5)]
        HRESULT DocSaved([out, retval] VARIANT_BOOL* DocSaved);
        [id(0x0000870f), propput, helpcontext(0x000004f5)]
        HRESULT DocSaved([in] VARIANT_BOOL DocSaved);
        [id(0x00008707), propget, helpcontext(0x000004f6)]
        HRESULT Duration([out, retval] long* Duration);
        [id(0x00008707), propput, helpcontext(0x000004f6)]
        HRESULT Duration([in] long Duration);
        [id(0x00008708), propget, helpcontext(0x000004f7)]
        HRESULT End([out, retval] DATE* End);
        [id(0x00008708), propput, helpcontext(0x000004f7)]
        HRESULT End([in] DATE End);
        [id(0x00008700), propget, helpcontext(0x000004f8)]
        HRESULT Type([out, retval] BSTR* Type);
        [id(0x00008700), propput, helpcontext(0x000004f8)]
        HRESULT Type([in] BSTR Type);
        [id(0x0000f814), propget, helpcontext(0x000004f9)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
        [id(0x00008706), propget, helpcontext(0x000004fa)]
        HRESULT Start([out, retval] DATE* Start);
        [id(0x00008706), propput, helpcontext(0x000004fa)]
        HRESULT Start([in] DATE Start);
        [id(0x0000f813), helpcontext(0x000004fb)]
        HRESULT Forward([out, retval] _MailItem** Item);
        [id(0x0000f810), helpcontext(0x000004fc)]
        HRESULT Reply([out, retval] _MailItem** Item);
        [id(0x0000f811), helpcontext(0x000004fd)]
        HRESULT ReplyAll([out, retval] _MailItem** Item);
        [id(0x0000f725), helpcontext(0x000004fe)]
        HRESULT StartTimer();
        [id(0x0000f726), helpcontext(0x000004ff)]
        HRESULT StopTimer();
        [id(0x0000f405), propget, hidden, helpcontext(0x00000500)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x00000501)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x00000502)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x00000503)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x00000504)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x00000504)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x00000505)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x00000506)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x00000507)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x00000508)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc54), helpcontext(0x00000d4d)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000d8f)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
    };

    [
      odl,
      uuid(00063024-0000-0000-C000-000000000046),
      helpcontext(0x000005e4),
      dual,
      oleautomation
    ]
    interface _PostItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000005e5)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000005e6)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000005e7)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000005e8)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x000005e9)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x000005ea)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x000005eb)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x000005eb)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x000005ec)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x000005ec)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x000005ed)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x000005ed)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x000005ee)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x000005ee)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x000005ef)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x000005f0)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x000005f1)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x000005f2)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x000005f3)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x000005f4)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x000005f5)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x000005f5)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x000005f6)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x000005f7)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x000005f8)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x000005f8)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x000005f9)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x000005f9)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x000005fa)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x000005fa)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x000005fb)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x000005fc)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x000005fd)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x000005fe)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x000005fe)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x000005ff)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000600)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000600)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000601)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000601)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x00000602)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x00000603)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x00000604)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x00000605)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x00000606)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x00000607)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x00000608)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x00000609)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x0000060a)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x00000015), propget, helpcontext(0x0000060b)]
        HRESULT ExpiryTime([out, retval] DATE* ExpiryTime);
        [id(0x00000015), propput, helpcontext(0x0000060b)]
        HRESULT ExpiryTime([in] DATE ExpiryTime);
        [id(0x0000f404), propget, helpcontext(0x0000060c)]
        HRESULT HTMLBody([out, retval] BSTR* HTMLBody);
        [id(0x0000f404), propput, helpcontext(0x0000060c)]
        HRESULT HTMLBody([in] BSTR HTMLBody);
        [id(0x00000e06), propget, helpcontext(0x0000060d)]
        HRESULT ReceivedTime([out, retval] DATE* ReceivedTime);
        [id(0x00000c1a), propget, helpcontext(0x0000060e)]
        HRESULT SenderName([out, retval] BSTR* SenderName);
        [id(0x00000039), propget, helpcontext(0x0000060f)]
        HRESULT SentOn([out, retval] DATE* SentOn);
        [id(0x0000f822), helpcontext(0x00000610)]
        HRESULT ClearConversationIndex();
        [id(0x0000f813), helpcontext(0x00000611)]
        HRESULT Forward([out, retval] _MailItem** Item);
        [id(0x0000f075), helpcontext(0x00000612)]
        HRESULT Post();
        [id(0x0000f810), helpcontext(0x00000613)]
        HRESULT Reply([out, retval] _MailItem** Item);
        [id(0x0000f405), propget, hidden, helpcontext(0x00000614)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa09), propget, helpcontext(0x00000615)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x0000fa49), propget, helpcontext(0x00000616)]
        HRESULT BodyFormat([out, retval] OlBodyFormat* BodyFormat);
        [id(0x0000fa49), propput, helpcontext(0x00000616)]
        HRESULT BodyFormat([in] OlBodyFormat BodyFormat);
        [id(0x0000fa4d), propget, helpcontext(0x00000617)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x00000618)]
        HRESULT ShowCategoriesDialog();
        [id(0x00003fde), propget, helpcontext(0x00000619)]
        HRESULT InternetCodepage([out, retval] long* InternetCodepage);
        [id(0x00003fde), propput, helpcontext(0x00000619)]
        HRESULT InternetCodepage([in] long InternetCodepage);
        [id(0x00008571), propget, helpcontext(0x0000061a)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x0000061a)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa3), hidden, helpcontext(0x0000061b)]
        HRESULT SetACLs([out, retval] VARIANT_BOOL* AllOkay);
        [id(0x0000faa4), propget, helpcontext(0x0000061c)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x0000061d)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x0000061e)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x00000c1f), propget, helpcontext(0x0000061f)]
        HRESULT SenderEmailAddress([out, retval] BSTR* SenderEmailAddress);
        [id(0x00000c1e), propget, helpcontext(0x00000620)]
        HRESULT SenderEmailType([out, retval] BSTR* SenderEmailType);
        [id(0x0000fafd), propget, helpcontext(0x00000621)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc1f), propget, helpcontext(0x00000623)]
        HRESULT TaskSubject([out, retval] BSTR* TaskSubject);
        [id(0x0000fc1f), propput, helpcontext(0x00000623)]
        HRESULT TaskSubject([in] BSTR TaskSubject);
        [id(0x00008105), propget, helpcontext(0x00000624)]
        HRESULT TaskDueDate([out, retval] DATE* TaskDueDate);
        [id(0x00008105), propput, helpcontext(0x00000624)]
        HRESULT TaskDueDate([in] DATE TaskDueDate);
        [id(0x00008104), propget, helpcontext(0x00000625)]
        HRESULT TaskStartDate([out, retval] DATE* TaskStartDate);
        [id(0x00008104), propput, helpcontext(0x00000625)]
        HRESULT TaskStartDate([in] DATE TaskStartDate);
        [id(0x0000810f), propget, helpcontext(0x00000626)]
        HRESULT TaskCompletedDate([out, retval] DATE* TaskCompletedDate);
        [id(0x0000810f), propput, helpcontext(0x00000626)]
        HRESULT TaskCompletedDate([in] DATE TaskCompletedDate);
        [id(0x000085a0), propget, helpcontext(0x00000be2)]
        HRESULT ToDoTaskOrdinal([out, retval] DATE* ToDoTaskOrdinal);
        [id(0x000085a0), propput, helpcontext(0x00000be2)]
        HRESULT ToDoTaskOrdinal([in] DATE ToDoTaskOrdinal);
        [id(0x0000851c), propget, helpcontext(0x00000628)]
        HRESULT ReminderOverrideDefault([out, retval] VARIANT_BOOL* ReminderOverrideDefault);
        [id(0x0000851c), propput, helpcontext(0x00000628)]
        HRESULT ReminderOverrideDefault([in] VARIANT_BOOL ReminderOverrideDefault);
        [id(0x0000851e), propget, helpcontext(0x00000629)]
        HRESULT ReminderPlaySound([out, retval] VARIANT_BOOL* ReminderPlaySound);
        [id(0x0000851e), propput, helpcontext(0x00000629)]
        HRESULT ReminderPlaySound([in] VARIANT_BOOL ReminderPlaySound);
        [id(0x00008503), propget, helpcontext(0x0000062a)]
        HRESULT ReminderSet([out, retval] VARIANT_BOOL* ReminderSet);
        [id(0x00008503), propput, helpcontext(0x0000062a)]
        HRESULT ReminderSet([in] VARIANT_BOOL ReminderSet);
        [id(0x0000851f), propget, helpcontext(0x0000062b)]
        HRESULT ReminderSoundFile([out, retval] BSTR* ReminderSoundFile);
        [id(0x0000851f), propput, helpcontext(0x0000062b)]
        HRESULT ReminderSoundFile([in] BSTR ReminderSoundFile);
        [id(0x00008502), propget, helpcontext(0x0000062c)]
        HRESULT ReminderTime([out, retval] DATE* ReminderTime);
        [id(0x00008502), propput, helpcontext(0x0000062c)]
        HRESULT ReminderTime([in] DATE ReminderTime);
        [id(0x0000fbfe), helpcontext(0x00000be3)]
        HRESULT MarkAsTask([in] OlMarkInterval MarkInterval);
        [id(0x0000fc09), helpcontext(0x00000ca4)]
        HRESULT ClearTaskFlag();
        [id(0x0000fc0a), propget, helpcontext(0x00000be5)]
        HRESULT IsMarkedAsTask([out, retval] VARIANT_BOOL* IsMarkedAsTask);
        [id(0x0000fc54), helpcontext(0x00000d4f)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000d91)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc84), propget, helpcontext(0x00000dc7)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dc7)]
        HRESULT RTFBody([in] VARIANT RTFBody);
    };

    [
      odl,
      uuid(00063035-0000-0000-C000-000000000046),
      helpcontext(0x00000691),
      dual,
      oleautomation
    ]
    interface _TaskItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000692)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000693)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000694)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000695)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x00000696)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x00000697)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x00000698)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x00000698)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x00000699)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x00000699)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x0000069a)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x0000069a)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x0000069b)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x0000069b)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x0000069c)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x0000069d)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x0000069e)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x0000069f)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x000006a0)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x000006a1)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x000006a2)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x000006a2)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x000006a3)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x000006a4)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x000006a5)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x000006a5)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x000006a6)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x000006a6)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x000006a7)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x000006a7)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x000006a8)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x000006a9)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x000006aa)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x000006ab)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x000006ab)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x000006ac)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x000006ad)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x000006ad)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x000006ae)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x000006ae)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x000006af)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x000006b0)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x000006b1)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x000006b2)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x000006b3)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x000006b4)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x000006b5)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x000006b6)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x000006b7)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x00008110), propget, helpcontext(0x000006b8)]
        HRESULT ActualWork([out, retval] long* ActualWork);
        [id(0x00008110), propput, helpcontext(0x000006b8)]
        HRESULT ActualWork([in] long ActualWork);
        [id(0x0000812b), propget, helpcontext(0x000006b9)]
        HRESULT CardData([out, retval] BSTR* CardData);
        [id(0x0000812b), propput, helpcontext(0x000006b9)]
        HRESULT CardData([in] BSTR CardData);
        [id(0x0000811c), propget, helpcontext(0x000006ba)]
        HRESULT Complete([out, retval] VARIANT_BOOL* Complete);
        [id(0x0000811c), propput, helpcontext(0x000006ba)]
        HRESULT Complete([in] VARIANT_BOOL Complete);
        [id(0x0000853a), propget, hidden, helpcontext(0x000006bb)]
        HRESULT Contacts([out, retval] BSTR* Contacts);
        [id(0x0000853a), propput, hidden, helpcontext(0x000006bb)]
        HRESULT Contacts([in] BSTR Contacts);
        [id(0x0000853c), propget, helpcontext(0x000006bc)]
        HRESULT ContactNames([out, retval] BSTR* ContactNames);
        [id(0x0000853c), propput, helpcontext(0x000006bc)]
        HRESULT ContactNames([in] BSTR ContactNames);
        [id(0x0000810f), propget, helpcontext(0x000006bd)]
        HRESULT DateCompleted([out, retval] DATE* DateCompleted);
        [id(0x0000810f), propput, helpcontext(0x000006bd)]
        HRESULT DateCompleted([in] DATE DateCompleted);
        [id(0x0000812a), propget, helpcontext(0x000006be)]
        HRESULT DelegationState([out, retval] OlTaskDelegationState* DelegationState);
        [id(0x00008121), propget, helpcontext(0x000006bf)]
        HRESULT Delegator([out, retval] BSTR* Delegator);
        [id(0x00008105), propget, helpcontext(0x000006c0)]
        HRESULT DueDate([out, retval] DATE* DueDate);
        [id(0x00008105), propput, helpcontext(0x000006c0)]
        HRESULT DueDate([in] DATE DueDate);
        [id(0x0000f617), propget, helpcontext(0x000006c1)]
        HRESULT IsRecurring([out, retval] VARIANT_BOOL* IsRecurring);
        [id(0x00008123), propget, helpcontext(0x000006c2)]
        HRESULT Ordinal([out, retval] long* Ordinal);
        [id(0x00008123), propput, helpcontext(0x000006c2)]
        HRESULT Ordinal([in] long Ordinal);
        [id(0x0000811f), propget, helpcontext(0x000006c3)]
        HRESULT Owner([out, retval] BSTR* Owner);
        [id(0x0000811f), propput, helpcontext(0x000006c3)]
        HRESULT Owner([in] BSTR Owner);
        [id(0x00008129), propget, helpcontext(0x000006c4)]
        HRESULT Ownership([out, retval] OlTaskOwnership* Ownership);
        [id(0x0000f61f), propget, helpcontext(0x000006c5)]
        HRESULT PercentComplete([out, retval] long* PercentComplete);
        [id(0x0000f61f), propput, helpcontext(0x000006c5)]
        HRESULT PercentComplete([in] long PercentComplete);
        [id(0x0000f814), propget, helpcontext(0x000006c6)]
        HRESULT Recipients([out, retval] Recipients** Recipients);
        [id(0x00008502), propget, helpcontext(0x000006c7)]
        HRESULT ReminderTime([out, retval] DATE* ReminderTime);
        [id(0x00008502), propput, helpcontext(0x000006c7)]
        HRESULT ReminderTime([in] DATE ReminderTime);
        [id(0x0000851c), propget, helpcontext(0x000006c8)]
        HRESULT ReminderOverrideDefault([out, retval] VARIANT_BOOL* ReminderOverrideDefault);
        [id(0x0000851c), propput, helpcontext(0x000006c8)]
        HRESULT ReminderOverrideDefault([in] VARIANT_BOOL ReminderOverrideDefault);
        [id(0x0000851e), propget, helpcontext(0x000006c9)]
        HRESULT ReminderPlaySound([out, retval] VARIANT_BOOL* ReminderPlaySound);
        [id(0x0000851e), propput, helpcontext(0x000006c9)]
        HRESULT ReminderPlaySound([in] VARIANT_BOOL ReminderPlaySound);
        [id(0x00008503), propget, helpcontext(0x000006ca)]
        HRESULT ReminderSet([out, retval] VARIANT_BOOL* ReminderSet);
        [id(0x00008503), propput, helpcontext(0x000006ca)]
        HRESULT ReminderSet([in] VARIANT_BOOL ReminderSet);
        [id(0x0000851f), propget, helpcontext(0x000006cb)]
        HRESULT ReminderSoundFile([out, retval] BSTR* ReminderSoundFile);
        [id(0x0000851f), propput, helpcontext(0x000006cb)]
        HRESULT ReminderSoundFile([in] BSTR ReminderSoundFile);
        [id(0x0000f623), propget, helpcontext(0x000006cc)]
        HRESULT ResponseState([out, retval] OlTaskResponse* ResponseState);
        [id(0x00008127), propget, helpcontext(0x000006cd)]
        HRESULT Role([out, retval] BSTR* Role);
        [id(0x00008127), propput, helpcontext(0x000006cd)]
        HRESULT Role([in] BSTR Role);
        [id(0x0000812f), propget, helpcontext(0x000006ce)]
        HRESULT SchedulePlusPriority([out, retval] BSTR* SchedulePlusPriority);
        [id(0x0000812f), propput, helpcontext(0x000006ce)]
        HRESULT SchedulePlusPriority([in] BSTR SchedulePlusPriority);
        [id(0x00008104), propget, helpcontext(0x000006cf)]
        HRESULT StartDate([out, retval] DATE* StartDate);
        [id(0x00008104), propput, helpcontext(0x000006cf)]
        HRESULT StartDate([in] DATE StartDate);
        [id(0x00008101), propget, helpcontext(0x000006d0)]
        HRESULT Status([out, retval] OlTaskStatus* Status);
        [id(0x00008101), propput, helpcontext(0x000006d0)]
        HRESULT Status([in] OlTaskStatus Status);
        [id(0x00000e02), propget, helpcontext(0x000006d1)]
        HRESULT StatusOnCompletionRecipients([out, retval] BSTR* StatusOnCompletionRecipients);
        [id(0x00000e02), propput, helpcontext(0x000006d1)]
        HRESULT StatusOnCompletionRecipients([in] BSTR StatusOnCompletionRecipients);
        [id(0x00000e03), propget, helpcontext(0x000006d2)]
        HRESULT StatusUpdateRecipients([out, retval] BSTR* StatusUpdateRecipients);
        [id(0x00000e03), propput, helpcontext(0x000006d2)]
        HRESULT StatusUpdateRecipients([in] BSTR StatusUpdateRecipients);
        [id(0x00008103), propget, helpcontext(0x000006d3)]
        HRESULT TeamTask([out, retval] VARIANT_BOOL* TeamTask);
        [id(0x00008103), propput, helpcontext(0x000006d3)]
        HRESULT TeamTask([in] VARIANT_BOOL TeamTask);
        [id(0x00008111), propget, helpcontext(0x000006d4)]
        HRESULT TotalWork([out, retval] long* TotalWork);
        [id(0x00008111), propput, helpcontext(0x000006d4)]
        HRESULT TotalWork([in] long TotalWork);
        [id(0x0000f620), helpcontext(0x000006d5)]
        HRESULT Assign([out, retval] _TaskItem** Item);
        [id(0x0000f622), helpcontext(0x000006d6)]
        HRESULT CancelResponseState();
        [id(0x0000f0a5), helpcontext(0x000006d7)]
        HRESULT ClearRecurrencePattern();
        [id(0x0000f0a4), helpcontext(0x000006d8)]
        HRESULT GetRecurrencePattern([out, retval] RecurrencePattern** RecurrencPattern);
        [id(0x0000f60d), helpcontext(0x000006d9)]
        HRESULT MarkComplete();
        [id(0x0000f621), helpcontext(0x000006da)]
        HRESULT Respond(
                        [in] OlTaskResponse Response, 
                        [in] VARIANT fNoUI, 
                        [in] VARIANT fAdditionalTextDialog, 
                        [out, retval] _TaskItem** Item);
        [id(0x0000f075), helpcontext(0x000006db)]
        HRESULT Send();
        [id(0x0000f624), helpcontext(0x000006dc)]
        HRESULT SkipRecurrence([out, retval] VARIANT_BOOL* flg);
        [id(0x0000f612), helpcontext(0x000006dd)]
        HRESULT StatusReport([out, retval] IDispatch** StatusReport);
        [id(0x0000f405), propget, hidden, helpcontext(0x000006de)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x000006df)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x000006e0)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x000006e1)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00003fde), propget, helpcontext(0x000006e2)]
        HRESULT InternetCodepage([out, retval] long* InternetCodepage);
        [id(0x00003fde), propput, helpcontext(0x000006e2)]
        HRESULT InternetCodepage([in] long InternetCodepage);
        [id(0x00008571), propget, helpcontext(0x000006e3)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x000006e3)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x000006e4)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x000006e5)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x000006e6)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x000006e7)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fad1), propget, helpcontext(0x000006e8)]
        HRESULT SendUsingAccount([out, retval] _Account** SendUsingAccount);
        [id(0x0000fad1), propput, helpcontext(0x000006e8)]
        HRESULT SendUsingAccount([in] _Account* SendUsingAccount);
        [id(0x000085a0), propget, helpcontext(0x00000be6)]
        HRESULT ToDoTaskOrdinal([out, retval] DATE* ToDoTaskOrdinal);
        [id(0x000085a0), propput, helpcontext(0x00000be6)]
        HRESULT ToDoTaskOrdinal([in] DATE ToDoTaskOrdinal);
        [id(0x0000fc54), helpcontext(0x00000d50)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000d92)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc84), propget, helpcontext(0x00000dc8)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dc8)]
        HRESULT RTFBody([in] VARIANT RTFBody);
    };

    [
      uuid(00061032-0000-0000-C000-000000000046),
      helpcontext(0x00000bae),
      noncreatable
    ]
    coclass TaskItem {
        [default] interface _TaskItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00063104-0000-0000-C000-000000000046),
      helpcontext(0x00000d7e)
    ]
    dispinterface AccountSelectorEvents {
        properties:
        methods:
            [id(0x0000fc73), helpcontext(0x00000d7f)]
            void SelectedAccountChange([in] _Account* SelectedAccount);
    };

    [
      odl,
      uuid(00063081-0000-0000-C000-000000000046),
      helpcontext(0x00000455),
      dual,
      oleautomation
    ]
    interface _DistListItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000456)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000457)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000458)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000459)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x0000045a)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x0000045b)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x0000045c)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x0000045c)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x0000045d)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x0000045d)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x0000045e)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x0000045e)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x0000045f)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x0000045f)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x00000460)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x00000461)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x00000462)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x00000463)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x00000464)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x00000465)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x00000466)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x00000466)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x00000467)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000468)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x00000469)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x00000469)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x0000046a)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x0000046a)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x0000046b)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x0000046b)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x0000046c)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x0000046d)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x0000046e)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x0000046f)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x0000046f)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x00000470)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000471)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000471)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000472)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000472)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x00000473)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x00000474)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x00000475)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x00000476)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x00000477)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x00000478)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x00000479)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x0000047a)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x0000047b)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x00008053), propget, helpcontext(0x0000047c)]
        HRESULT DLName([out, retval] BSTR* DLName);
        [id(0x00008053), propput, helpcontext(0x0000047c)]
        HRESULT DLName([in] BSTR DLName);
        [id(0x0000804b), propget, helpcontext(0x0000047d)]
        HRESULT MemberCount([out, retval] long* MemberCount);
        [id(0x0000804c), propget, hidden, helpcontext(0x0000047e)]
        HRESULT CheckSum([out, retval] long* CheckSum);
        [id(0x00008055), propget, hidden, helpcontext(0x0000047f)]
        HRESULT Members([out, retval] VARIANT* Members);
        [id(0x00008055), propput, hidden, helpcontext(0x0000047f)]
        HRESULT Members([in] VARIANT Members);
        [id(0x00008054), propget, hidden, helpcontext(0x00000480)]
        HRESULT OneOffMembers([out, retval] VARIANT* OneOffMembers);
        [id(0x00008054), propput, hidden, helpcontext(0x00000480)]
        HRESULT OneOffMembers([in] VARIANT OneOffMembers);
        [id(0x0000f405), propget, hidden, helpcontext(0x00000481)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000f900), helpcontext(0x00000482)]
        HRESULT AddMembers([in] Recipients* Recipients);
        [id(0x0000f901), helpcontext(0x00000483)]
        HRESULT RemoveMembers([in] Recipients* Recipients);
        [id(0x0000f905), helpcontext(0x00000484)]
        HRESULT GetMember(
                        [in] long Index, 
                        [out, retval] Recipient** Recipient);
        [id(0x0000fa4d), propget, helpcontext(0x00000485)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x00000486)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa8c), helpcontext(0x00000487)]
        HRESULT AddMember([in] Recipient* Recipient);
        [id(0x0000fa8d), helpcontext(0x00000488)]
        HRESULT RemoveMember([in] Recipient* Recipient);
        [id(0x0000fa09), propget, helpcontext(0x00000489)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x0000048a)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x0000048a)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x0000048b)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x0000048c)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x0000048d)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x0000048e)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc1f), propget, helpcontext(0x00000490)]
        HRESULT TaskSubject([out, retval] BSTR* TaskSubject);
        [id(0x0000fc1f), propput, helpcontext(0x00000490)]
        HRESULT TaskSubject([in] BSTR TaskSubject);
        [id(0x00008105), propget, helpcontext(0x00000491)]
        HRESULT TaskDueDate([out, retval] DATE* TaskDueDate);
        [id(0x00008105), propput, helpcontext(0x00000491)]
        HRESULT TaskDueDate([in] DATE TaskDueDate);
        [id(0x00008104), propget, helpcontext(0x00000492)]
        HRESULT TaskStartDate([out, retval] DATE* TaskStartDate);
        [id(0x00008104), propput, helpcontext(0x00000492)]
        HRESULT TaskStartDate([in] DATE TaskStartDate);
        [id(0x0000810f), propget, helpcontext(0x00000493)]
        HRESULT TaskCompletedDate([out, retval] DATE* TaskCompletedDate);
        [id(0x0000810f), propput, helpcontext(0x00000493)]
        HRESULT TaskCompletedDate([in] DATE TaskCompletedDate);
        [id(0x000085a0), propget, helpcontext(0x00000bda)]
        HRESULT ToDoTaskOrdinal([out, retval] DATE* ToDoTaskOrdinal);
        [id(0x000085a0), propput, helpcontext(0x00000bda)]
        HRESULT ToDoTaskOrdinal([in] DATE ToDoTaskOrdinal);
        [id(0x0000851c), propget, helpcontext(0x00000495)]
        HRESULT ReminderOverrideDefault([out, retval] VARIANT_BOOL* ReminderOverrideDefault);
        [id(0x0000851c), propput, helpcontext(0x00000495)]
        HRESULT ReminderOverrideDefault([in] VARIANT_BOOL ReminderOverrideDefault);
        [id(0x0000851e), propget, helpcontext(0x00000496)]
        HRESULT ReminderPlaySound([out, retval] VARIANT_BOOL* ReminderPlaySound);
        [id(0x0000851e), propput, helpcontext(0x00000496)]
        HRESULT ReminderPlaySound([in] VARIANT_BOOL ReminderPlaySound);
        [id(0x00008503), propget, helpcontext(0x00000497)]
        HRESULT ReminderSet([out, retval] VARIANT_BOOL* ReminderSet);
        [id(0x00008503), propput, helpcontext(0x00000497)]
        HRESULT ReminderSet([in] VARIANT_BOOL ReminderSet);
        [id(0x0000851f), propget, helpcontext(0x00000498)]
        HRESULT ReminderSoundFile([out, retval] BSTR* ReminderSoundFile);
        [id(0x0000851f), propput, helpcontext(0x00000498)]
        HRESULT ReminderSoundFile([in] BSTR ReminderSoundFile);
        [id(0x00008502), propget, helpcontext(0x00000499)]
        HRESULT ReminderTime([out, retval] DATE* ReminderTime);
        [id(0x00008502), propput, helpcontext(0x00000499)]
        HRESULT ReminderTime([in] DATE ReminderTime);
        [id(0x0000fbfe), helpcontext(0x00000bdb)]
        HRESULT MarkAsTask([in] OlMarkInterval MarkInterval);
        [id(0x0000fc09), helpcontext(0x00000bdc)]
        HRESULT ClearTaskFlag();
        [id(0x0000fc0a), propget, helpcontext(0x00000bdd)]
        HRESULT IsMarkedAsTask([out, retval] VARIANT_BOOL* IsMarkedAsTask);
        [id(0x0000fc75), propget, helpcontext(0x00000db6)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc54), helpcontext(0x00000db1)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc84), propget, helpcontext(0x00000dc9)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dc9)]
        HRESULT RTFBody([in] VARIANT RTFBody);
    };

    [
      odl,
      uuid(00063026-0000-0000-C000-000000000046),
      helpcontext(0x00000661),
      dual,
      oleautomation
    ]
    interface _ReportItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000662)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000663)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000664)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000665)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x00000666)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x00000667)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x00000668)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x00000668)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x00000669)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x00000669)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x0000066a)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x0000066a)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x0000066b)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x0000066b)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x0000066c)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x0000066d)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x0000066e)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x0000066f)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x00000670)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x00000671)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x00000672)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x00000672)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x00000673)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000674)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x00000675)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x00000675)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x00000676)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x00000676)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x00000677)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x00000677)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x00000678)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x00000679)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x0000067a)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x0000067b)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x0000067b)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x0000067c)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x0000067d)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x0000067d)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x0000067e)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x0000067e)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x0000067f)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x00000680)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x00000681)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x00000682)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x00000683)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x00000684)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x00000685)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x00000686)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x00000687)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x0000f405), propget, hidden, helpcontext(0x00000688)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x00000689)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x0000068a)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x0000068b)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x0000068c)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x0000068c)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x0000068d)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x0000068e)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x0000068f)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x00000690)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc54), helpcontext(0x00000da4)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000da5)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc8b), propget, helpcontext(0x00000dea)]
        HRESULT RetentionPolicyName([out, retval] BSTR* RetentionPolicyName);
        [id(0x0000fc8a), propget, helpcontext(0x00000deb)]
        HRESULT RetentionExpirationDate([out, retval] DATE* RetentionExpirationDate);
    };

    [
      odl,
      uuid(00063023-0000-0000-C000-000000000046),
      helpcontext(0x0000062d),
      dual,
      oleautomation
    ]
    interface _RemoteItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000062e)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000062f)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000630)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000631)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x00000632)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x00000633)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x00000634)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x00000634)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x00000635)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x00000635)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x00000636)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x00000636)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x00000637)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x00000637)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x00000638)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x00000639)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x0000063a)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x0000063b)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x0000063c)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x0000063d)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x0000063e)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x0000063e)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x0000063f)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x00000640)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x00000641)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x00000641)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x00000642)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x00000642)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x00000643)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x00000643)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x00000644)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x00000645)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x00000646)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x00000647)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x00000647)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x00000648)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000649)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000649)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x0000064a)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x0000064a)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x0000064b)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x0000064c)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x0000064d)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x0000064e)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x0000064f)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x00000650)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x00000651)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x00000652)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x00000653)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x00008f07), propget, helpcontext(0x00000654)]
        HRESULT HasAttachment([out, retval] VARIANT_BOOL* HasAttachment);
        [id(0x00008f02), propget, helpcontext(0x00000655)]
        HRESULT RemoteMessageClass([out, retval] BSTR* RemoteMessageClass);
        [id(0x00008f05), propget, helpcontext(0x00000656)]
        HRESULT TransferSize([out, retval] long* TransferSize);
        [id(0x00008f04), propget, helpcontext(0x00000657)]
        HRESULT TransferTime([out, retval] long* TransferTime);
        [id(0x0000f405), propget, hidden, helpcontext(0x00000658)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x00000659)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x0000065a)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x0000065b)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x0000065c)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x0000065c)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x0000065d)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x0000065e)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x0000065f)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x00000660)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc54), helpcontext(0x00000da6)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000da7)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
    };

    [
      odl,
      uuid(00063036-0000-0000-C000-000000000046),
      helpcontext(0x0000074b),
      dual,
      oleautomation
    ]
    interface _TaskRequestItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000074c)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000074d)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000074e)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000074f)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x00000750)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x00000751)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x00000752)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x00000752)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x00000753)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x00000753)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x00000754)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x00000754)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x00000755)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x00000755)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x00000756)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x00000757)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x00000758)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x00000759)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x0000075a)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x0000075b)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x0000075c)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x0000075c)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x0000075d)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x0000075e)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x0000075f)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x0000075f)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x00000760)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x00000760)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x00000761)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x00000761)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x00000762)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x00000763)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x00000764)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x00000765)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x00000765)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x00000766)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000767)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000767)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000768)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000768)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x00000769)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x0000076a)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x0000076b)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x0000076c)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x0000076d)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x0000076e)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x0000076f)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x00000770)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x00000771)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x0000f014), helpcontext(0x00000772)]
        HRESULT GetAssociatedTask(
                        [in] VARIANT_BOOL AddToTaskList, 
                        [out, retval] _TaskItem** Item);
        [id(0x0000f405), propget, hidden, helpcontext(0x00000773)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x00000774)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x00000775)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x00000776)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x00000777)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x00000777)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x00000778)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x00000779)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x0000077a)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x0000077b)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc54), helpcontext(0x00000daa)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000dab)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc84), propget, helpcontext(0x00000dcb)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dcb)]
        HRESULT RTFBody([in] VARIANT RTFBody);
    };

    [
      odl,
      uuid(00063038-0000-0000-C000-000000000046),
      helpcontext(0x000006e9),
      dual,
      oleautomation
    ]
    interface _TaskRequestAcceptItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x000006ea)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x000006eb)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x000006ec)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x000006ed)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x000006ee)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x000006ef)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x000006f0)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x000006f0)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x000006f1)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x000006f1)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x000006f2)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x000006f2)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x000006f3)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x000006f3)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x000006f4)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x000006f5)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x000006f6)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x000006f7)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x000006f8)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x000006f9)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x000006fa)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x000006fa)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x000006fb)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x000006fc)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x000006fd)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x000006fd)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x000006fe)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x000006fe)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x000006ff)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x000006ff)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x00000700)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x00000701)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x00000702)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x00000703)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x00000703)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x00000704)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000705)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000705)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000706)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000706)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x00000707)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x00000708)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x00000709)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x0000070a)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x0000070b)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x0000070c)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x0000070d)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x0000070e)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x0000070f)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x0000f014), helpcontext(0x00000710)]
        HRESULT GetAssociatedTask(
                        [in] VARIANT_BOOL AddToTaskList, 
                        [out, retval] _TaskItem** Item);
        [id(0x0000f405), propget, hidden, helpcontext(0x00000711)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x00000712)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x00000713)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x00000714)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x00000715)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x00000715)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x00000716)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x00000717)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x00000718)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x00000719)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc54), helpcontext(0x00000dac)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000dad)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc84), propget, helpcontext(0x00000dcc)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dcc)]
        HRESULT RTFBody([in] VARIANT RTFBody);
    };

    [
      odl,
      uuid(00063039-0000-0000-C000-000000000046),
      helpcontext(0x0000071a),
      dual,
      oleautomation
    ]
    interface _TaskRequestDeclineItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000071b)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000071c)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000071d)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x0000071e)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x0000071f)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x00000720)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x00000721)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x00000721)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x00000722)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x00000722)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x00000723)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x00000723)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x00000724)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x00000724)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x00000725)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x00000726)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x00000727)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x00000728)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x00000729)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x0000072a)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x0000072b)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x0000072b)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x0000072c)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x0000072d)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x0000072e)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x0000072e)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x0000072f)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x0000072f)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x00000730)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x00000730)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x00000731)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x00000732)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x00000733)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x00000734)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x00000734)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x00000735)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000736)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000736)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000737)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000737)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x00000738)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x00000739)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x0000073a)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x0000073b)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x0000073c)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x0000073d)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x0000073e)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x0000073f)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x00000740)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x0000f014), helpcontext(0x00000741)]
        HRESULT GetAssociatedTask(
                        [in] VARIANT_BOOL AddToTaskList, 
                        [out, retval] _TaskItem** Item);
        [id(0x0000f405), propget, hidden, helpcontext(0x00000742)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x00000743)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x00000744)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x00000745)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x00000746)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x00000746)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x00000747)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x00000748)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x00000749)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x0000074a)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc54), helpcontext(0x00000dae)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000daf)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc84), propget, helpcontext(0x00000dd2)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dd2)]
        HRESULT RTFBody([in] VARIANT RTFBody);
    };

    [
      odl,
      uuid(00063037-0000-0000-C000-000000000046),
      helpcontext(0x0000077c),
      dual,
      oleautomation
    ]
    interface _TaskRequestUpdateItem : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x0000077d)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x0000077e)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x0000077f)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000780)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000f817), propget, helpcontext(0x00000781)]
        HRESULT Actions([out, retval] Actions** Actions);
        [id(0x0000f815), propget, helpcontext(0x00000782)]
        HRESULT Attachments([out, retval] Attachments** Attachments);
        [id(0x00008535), propget, helpcontext(0x00000783)]
        HRESULT BillingInformation([out, retval] BSTR* BillingInformation);
        [id(0x00008535), propput, helpcontext(0x00000783)]
        HRESULT BillingInformation([in] BSTR BillingInformation);
        [id(0x00009100), propget, helpcontext(0x00000784)]
        HRESULT Body([out, retval] BSTR* Body);
        [id(0x00009100), propput, helpcontext(0x00000784)]
        HRESULT Body([in] BSTR Body);
        [id(0x00009001), propget, helpcontext(0x00000785)]
        HRESULT Categories([out, retval] BSTR* Categories);
        [id(0x00009001), propput, helpcontext(0x00000785)]
        HRESULT Categories([in] BSTR Categories);
        [id(0x0000853b), propget, helpcontext(0x00000786)]
        HRESULT Companies([out, retval] BSTR* Companies);
        [id(0x0000853b), propput, helpcontext(0x00000786)]
        HRESULT Companies([in] BSTR Companies);
        [id(0x0000fac0), propget, helpcontext(0x00000787)]
        HRESULT ConversationIndex([out, retval] BSTR* ConversationIndex);
        [id(0x00000070), propget, helpcontext(0x00000788)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00003007), propget, helpcontext(0x00000789)]
        HRESULT CreationTime([out, retval] DATE* CreationTime);
        [id(0x0000f01e), propget, helpcontext(0x0000078a)]
        HRESULT EntryID([out, retval] BSTR* EntryID);
        [id(0x0000f095), propget, helpcontext(0x0000078b)]
        HRESULT FormDescription([out, retval] FormDescription** FormDescription);
        [id(0x0000f03e), propget, helpcontext(0x0000078c)]
        HRESULT GetInspector([out, retval] _Inspector** GetInspector);
        [id(0x00000017), propget, helpcontext(0x0000078d)]
        HRESULT Importance([out, retval] OlImportance* Importance);
        [id(0x00000017), propput, helpcontext(0x0000078d)]
        HRESULT Importance([in] OlImportance Importance);
        [id(0x00003008), propget, helpcontext(0x0000078e)]
        HRESULT LastModificationTime([out, retval] DATE* LastModificationTime);
        [id(0x0000f100), propget, hidden, helpcontext(0x0000078f)]
        HRESULT MAPIOBJECT([out, retval] IUnknown** MAPIOBJECT);
        [id(0x0000001a), propget, helpcontext(0x00000790)]
        HRESULT MessageClass([out, retval] BSTR* MessageClass);
        [id(0x0000001a), propput, helpcontext(0x00000790)]
        HRESULT MessageClass([in] BSTR MessageClass);
        [id(0x00008534), propget, helpcontext(0x00000791)]
        HRESULT Mileage([out, retval] BSTR* Mileage);
        [id(0x00008534), propput, helpcontext(0x00000791)]
        HRESULT Mileage([in] BSTR Mileage);
        [id(0x0000850e), propget, helpcontext(0x00000792)]
        HRESULT NoAging([out, retval] VARIANT_BOOL* NoAging);
        [id(0x0000850e), propput, helpcontext(0x00000792)]
        HRESULT NoAging([in] VARIANT_BOOL NoAging);
        [id(0x00008552), propget, helpcontext(0x00000793)]
        HRESULT OutlookInternalVersion([out, retval] long* OutlookInternalVersion);
        [id(0x00008554), propget, helpcontext(0x00000794)]
        HRESULT OutlookVersion([out, retval] BSTR* OutlookVersion);
        [id(0x0000f0a3), propget, helpcontext(0x00000795)]
        HRESULT Saved([out, retval] VARIANT_BOOL* Saved);
        [id(0x00000036), propget, helpcontext(0x00000796)]
        HRESULT Sensitivity([out, retval] OlSensitivity* Sensitivity);
        [id(0x00000036), propput, helpcontext(0x00000796)]
        HRESULT Sensitivity([in] OlSensitivity Sensitivity);
        [id(0x00000e08), propget, helpcontext(0x00000797)]
        HRESULT Size([out, retval] long* Size);
        [id(0x00000037), propget, helpcontext(0x00000798)]
        HRESULT Subject([out, retval] BSTR* Subject);
        [id(0x00000037), propput, helpcontext(0x00000798)]
        HRESULT Subject([in] BSTR Subject);
        [id(0x0000f01c), propget, helpcontext(0x00000799)]
        HRESULT UnRead([out, retval] VARIANT_BOOL* UnRead);
        [id(0x0000f01c), propput, helpcontext(0x00000799)]
        HRESULT UnRead([in] VARIANT_BOOL UnRead);
        [id(0x0000f816), propget, helpcontext(0x0000079a)]
        HRESULT UserProperties([out, retval] UserProperties** UserProperties);
        [id(0x0000f023), helpcontext(0x0000079b)]
        HRESULT Close([in] OlInspectorClose SaveMode);
        [id(0x0000f032), helpcontext(0x0000079c)]
        HRESULT Copy([out, retval] IDispatch** Item);
        [id(0x0000f04a), helpcontext(0x0000079d)]
        HRESULT Delete();
        [id(0x0000f0a6), helpcontext(0x0000079e)]
        HRESULT Display([in, optional] VARIANT Modal);
        [id(0x0000f034), helpcontext(0x0000079f)]
        HRESULT Move(
                        [in] MAPIFolder* DestFldr, 
                        [out, retval] IDispatch** Item);
        [id(0x0000f033), helpcontext(0x000007a0)]
        HRESULT PrintOut();
        [id(0x0000f048), helpcontext(0x000007a1)]
        HRESULT Save();
        [id(0x0000f051), helpcontext(0x000007a2)]
        HRESULT SaveAs(
                        [in] BSTR Path, 
                        [in, optional] VARIANT Type);
        [id(0x0000f014), helpcontext(0x000007a3)]
        HRESULT GetAssociatedTask(
                        [in] VARIANT_BOOL AddToTaskList, 
                        [out, retval] _TaskItem** Item);
        [id(0x0000f405), propget, hidden, helpcontext(0x000007a4)]
        HRESULT Links([out, retval] Links** Links);
        [id(0x0000fa4d), propget, helpcontext(0x000007a5)]
        HRESULT DownloadState([out, retval] OlDownloadState* DownloadState);
        [id(0x0000fa0b), helpcontext(0x000007a6)]
        HRESULT ShowCategoriesDialog();
        [id(0x0000fa09), propget, helpcontext(0x000007a7)]
        HRESULT ItemProperties([out, retval] ItemProperties** ItemProperties);
        [id(0x00008571), propget, helpcontext(0x000007a8)]
        HRESULT MarkForDownload([out, retval] OlRemoteStatus* MarkForDownload);
        [id(0x00008571), propput, helpcontext(0x000007a8)]
        HRESULT MarkForDownload([in] OlRemoteStatus MarkForDownload);
        [id(0x0000faa4), propget, helpcontext(0x000007a9)]
        HRESULT IsConflict([out, retval] VARIANT_BOOL* IsConflict);
        [id(0x0000faba), propget, helpcontext(0x000007aa)]
        HRESULT AutoResolvedWinner([out, retval] VARIANT_BOOL* AutoResolvedWinner);
        [id(0x0000fabb), propget, helpcontext(0x000007ab)]
        HRESULT Conflicts([out, retval] Conflicts** Conflicts);
        [id(0x0000fafd), propget, helpcontext(0x000007ac)]
        HRESULT PropertyAccessor([out, retval] _PropertyAccessor** PropertyAccessor);
        [id(0x0000fc54), helpcontext(0x00000db0)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000db2)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc84), propget, helpcontext(0x00000dd3)]
        HRESULT RTFBody([out, retval] VARIANT* RTFBody);
        [id(0x0000fc84), propput, helpcontext(0x00000dd3)]
        HRESULT RTFBody([in] VARIANT RTFBody);
    };

    [
      odl,
      uuid(00063107-0000-0000-C000-000000000046),
      helpcontext(0x00000dd4),
      dual,
      oleautomation
    ]
    interface _ConversationHeader : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000dda)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000ddb)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000ddc)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000dd9)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000fc54), helpcontext(0x00000dd5)]
        HRESULT GetConversation([out, retval] _Conversation** Conversation);
        [id(0x0000fc75), propget, helpcontext(0x00000dd6)]
        HRESULT ConversationID([out, retval] BSTR* ConversationID);
        [id(0x0000fc86), propget, helpcontext(0x00000dd7)]
        HRESULT ConversationTopic([out, retval] BSTR* ConversationTopic);
        [id(0x00002109), helpcontext(0x00000dd8)]
        HRESULT GetItems([out, retval] _SimpleItems** SimpleItems);
    };

    [
      odl,
      uuid(000630A3-0000-0000-C000-000000000046),
      helpcontext(0x00000e03),
      dual,
      oleautomation
    ]
    interface _PeopleView : IDispatch {
        [id(0x0000f000), propget, helpcontext(0x00000df1)]
        HRESULT Application([out, retval] _Application** Application);
        [id(0x0000f00a), propget, helpcontext(0x00000df2)]
        HRESULT Class([out, retval] OlObjectClass* Class);
        [id(0x0000f00b), propget, helpcontext(0x00000df3)]
        HRESULT Session([out, retval] _NameSpace** Session);
        [id(0x0000f001), propget, helpcontext(0x00000df4)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000197), helpcontext(0x00000df5)]
        HRESULT Apply();
        [id(0x0000f032), helpcontext(0x00000df6)]
        HRESULT Copy(
                        [in] BSTR Name, 
                        [in, optional] OlViewSaveOption SaveOption, 
                        [out, retval] View** ppview);
        [id(0x0000f04a), helpcontext(0x00000df7)]
        HRESULT Delete();
        [id(0x0000fa44), helpcontext(0x00000df8)]
        HRESULT Reset();
        [id(0x0000f048), helpcontext(0x00000df9)]
        HRESULT Save();
        [id(0x0000fa41), propget, helpcontext(0x00000dfa)]
        HRESULT Language([out, retval] BSTR* Language);
        [id(0x0000fa41), propput, helpcontext(0x00000dfa)]
        HRESULT Language([in] BSTR Language);
        [id(0x0000fa40), propget, helpcontext(0x00000dfb)]
        HRESULT LockUserChanges([out, retval] VARIANT_BOOL* LockUserChanges);
        [id(0x0000fa40), propput, helpcontext(0x00000dfb)]
        HRESULT LockUserChanges([in] VARIANT_BOOL LockUserChanges);
        [id(00000000), propget, helpcontext(0x00000dfc)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(00000000), propput, helpcontext(0x00000dfc)]
        HRESULT Name([in] BSTR Name);
        [id(0x0000fa3f), propget, helpcontext(0x00000dfd)]
        HRESULT SaveOption([out, retval] OlViewSaveOption* SaveOption);
        [id(0x0000fa3e), propget, helpcontext(0x00000dfe)]
        HRESULT Standard([out, retval] VARIANT_BOOL* Standard);
        [id(0x00000194), propget, helpcontext(0x00000dff)]
        HRESULT ViewType([out, retval] OlViewType* ViewType);
        [id(0x0000fa3c), propget, helpcontext(0x00000e00)]
        HRESULT XML([out, retval] BSTR* XML);
        [id(0x0000fa3c), propput, helpcontext(0x00000e00)]
        HRESULT XML([in] BSTR XML);
        [id(0x0000fa36), helpcontext(0x00000e01)]
        HRESULT GoToDate([in] DATE Date);
        [id(0x00000199), propget, helpcontext(0x00000e02)]
        HRESULT Filter([out, retval] BSTR* Filter);
        [id(0x00000199), propput, helpcontext(0x00000e02)]
        HRESULT Filter([in] BSTR Filter);
        [id(0x0000fb5a), propget, helpcontext(0x00000e04)]
        HRESULT SortFields([out, retval] _OrderFields** SortFields);
    };

    [
      uuid(0006F03A-0000-0000-C000-000000000046),
      helpcontext(0x00000baf),
      appobject
    ]
    coclass Application {
        [default] interface _Application;
        [source] dispinterface ApplicationEvents;
        [source] dispinterface ApplicationEvents_10;
        [default, source] dispinterface ApplicationEvents_11;
    };

    [
      uuid(0006103C-0000-0000-C000-000000000046),
      helpcontext(0x00000bb1),
      noncreatable
    ]
    coclass DistListItem {
        [default] interface _DistListItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00061061-0000-0000-C000-000000000046),
      helpcontext(0x00000bb2),
      noncreatable
    ]
    coclass DocumentItem {
        [default] interface _DocumentItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00063053-0000-0000-C000-000000000046),
      helpcontext(0x00000bb3),
      noncreatable
    ]
    coclass Explorers {
        [default] interface _Explorers;
        [default, source] dispinterface ExplorersEvents;
    };

    [
      uuid(00063054-0000-0000-C000-000000000046),
      helpcontext(0x00000bb4),
      noncreatable
    ]
    coclass Inspectors {
        [default] interface _Inspectors;
        [default, source] dispinterface InspectorsEvents;
    };

    [
      uuid(00063051-0000-0000-C000-000000000046),
      helpcontext(0x00000bb5),
      noncreatable
    ]
    coclass Folders {
        [default] interface _Folders;
        [default, source] dispinterface FoldersEvents;
    };

    [
      uuid(00063052-0000-0000-C000-000000000046),
      helpcontext(0x00000bb6),
      noncreatable
    ]
    coclass Items {
        [default] interface _Items;
        [default, source] dispinterface ItemsEvents;
    };

    [
      uuid(00061037-0000-0000-C000-000000000046),
      helpcontext(0x00000bb7),
      noncreatable
    ]
    coclass JournalItem {
        [default] interface _JournalItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(0006308B-0000-0000-C000-000000000046),
      helpcontext(0x00000bb8),
      noncreatable
    ]
    coclass NameSpace {
        [default] interface _NameSpace;
        [default, source] dispinterface NameSpaceEvents;
    };

    [
      uuid(00061034-0000-0000-C000-000000000046),
      helpcontext(0x00000bb9),
      noncreatable
    ]
    coclass NoteItem {
        [default] interface _NoteItem;
    };

    [
      uuid(00063056-0000-0000-C000-000000000046),
      helpcontext(0x00000bba),
      noncreatable
    ]
    coclass OutlookBarGroups {
        [default] interface _OutlookBarGroups;
        [default, source] dispinterface OutlookBarGroupsEvents;
    };

    [
      uuid(00063055-0000-0000-C000-000000000046),
      helpcontext(0x00000bbb),
      noncreatable
    ]
    coclass OutlookBarPane {
        [default] interface _OutlookBarPane;
        [default, source] dispinterface OutlookBarPaneEvents;
    };

    [
      uuid(00063057-0000-0000-C000-000000000046),
      helpcontext(0x00000bbc),
      noncreatable
    ]
    coclass OutlookBarShortcuts {
        [default] interface _OutlookBarShortcuts;
        [default, source] dispinterface OutlookBarShortcutsEvents;
    };

    [
      uuid(0006103A-0000-0000-C000-000000000046),
      helpcontext(0x00000bbd),
      noncreatable
    ]
    coclass PostItem {
        [default] interface _PostItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00061060-0000-0000-C000-000000000046),
      helpcontext(0x00000bbe),
      noncreatable
    ]
    coclass RemoteItem {
        [default] interface _RemoteItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00061035-0000-0000-C000-000000000046),
      helpcontext(0x00000bbf),
      noncreatable
    ]
    coclass ReportItem {
        [default] interface _ReportItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00061052-0000-0000-C000-000000000046),
      helpcontext(0x00000bc0),
      noncreatable
    ]
    coclass TaskRequestAcceptItem {
        [default] interface _TaskRequestAcceptItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00061053-0000-0000-C000-000000000046),
      helpcontext(0x00000bc1),
      noncreatable
    ]
    coclass TaskRequestDeclineItem {
        [default] interface _TaskRequestDeclineItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00061050-0000-0000-C000-000000000046),
      helpcontext(0x00000bc2),
      noncreatable
    ]
    coclass TaskRequestItem {
        [default] interface _TaskRequestItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00061051-0000-0000-C000-000000000046),
      helpcontext(0x00000bc3),
      noncreatable
    ]
    coclass TaskRequestUpdateItem {
        [default] interface _TaskRequestUpdateItem;
        [source] dispinterface ItemEvents;
        [default, source] dispinterface ItemEvents_10;
    };

    [
      uuid(00061039-0000-0000-C000-000000000046),
      helpcontext(0x00000bc4),
      noncreatable
    ]
    coclass Results {
        [default] interface _Results;
        [default, source] dispinterface ResultsEvents;
    };

    [
      uuid(0006F027-0000-0000-C000-000000000046),
      helpcontext(0x00000bc5),
      noncreatable
    ]
    coclass Views {
        [default] interface _Views;
        [default, source] dispinterface _ViewsEvents;
    };

    [
      uuid(0006F028-0000-0000-C000-000000000046),
      helpcontext(0x00000bc6),
      noncreatable
    ]
    coclass Reminder {
        [default] interface _Reminder;
    };

    [
      uuid(0006F029-0000-0000-C000-000000000046),
      helpcontext(0x00000bc7),
      noncreatable
    ]
    coclass Reminders {
        [default] interface _Reminders;
        [default, source] dispinterface ReminderCollectionEvents;
    };

    [
      uuid(000610CB-0000-0000-C000-000000000046),
      helpcontext(0x00000bc9),
      noncreatable
    ]
    coclass StorageItem {
        [default] interface _StorageItem;
    };

    [
      uuid(000610F3-0000-0000-C000-000000000046),
      helpcontext(0x00000bcd),
      noncreatable
    ]
    coclass NavigationPane {
        [default] interface _NavigationPane;
        [default, source] dispinterface NavigationPaneEvents_12;
    };

    [
      uuid(000610F4-0000-0000-C000-000000000046),
      helpcontext(0x00000bce),
      noncreatable
    ]
    coclass NavigationGroups {
        [default] interface _NavigationGroups;
        [default, source] dispinterface NavigationGroupsEvents_12;
    };

    [
      uuid(000610F8-0000-0000-C000-000000000046),
      helpcontext(0x00000bcf),
      noncreatable,
      hidden
    ]
    coclass DoNotUseMeFolder {
        [default] interface MAPIFolder;
    };

    [
      uuid(00062001-0000-0000-C000-000000000046),
      helpcontext(0x00000c71),
      noncreatable
    ]
    coclass TimelineView {
        [default] interface _TimelineView;
    };

    [
      uuid(000610E9-0000-0000-C000-000000000046),
      helpcontext(0x00000c79),
      noncreatable
    ]
    coclass MailModule {
        [default] interface _MailModule;
    };

    [
      uuid(000610EA-0000-0000-C000-000000000046),
      helpcontext(0x00000c7a),
      noncreatable
    ]
    coclass CalendarModule {
        [default] interface _CalendarModule;
    };

    [
      uuid(000610EB-0000-0000-C000-000000000046),
      helpcontext(0x00000c7b),
      noncreatable
    ]
    coclass ContactsModule {
        [default] interface _ContactsModule;
    };

    [
      uuid(000610EC-0000-0000-C000-000000000046),
      helpcontext(0x00000c7c),
      noncreatable
    ]
    coclass TasksModule {
        [default] interface _TasksModule;
    };

    [
      uuid(000610ED-0000-0000-C000-000000000046),
      helpcontext(0x00000c7d),
      noncreatable
    ]
    coclass JournalModule {
        [default] interface _JournalModule;
    };

    [
      uuid(000610EE-0000-0000-C000-000000000046),
      helpcontext(0x00000c7e),
      noncreatable
    ]
    coclass NotesModule {
        [default] interface _NotesModule;
    };

    [
      uuid(00062000-0000-0000-C000-000000000046),
      helpcontext(0x00000c84),
      noncreatable
    ]
    coclass TableView {
        [default] interface _TableView;
    };

    [
      uuid(00062004-0000-0000-C000-000000000046),
      helpcontext(0x00000c86),
      noncreatable
    ]
    coclass IconView {
        [default] interface _IconView;
    };

    [
      uuid(00062002-0000-0000-C000-000000000046),
      helpcontext(0x00000c87),
      noncreatable
    ]
    coclass CardView {
        [default] interface _CardView;
    };

    [
      uuid(00062003-0000-0000-C000-000000000046),
      helpcontext(0x00000c88),
      noncreatable
    ]
    coclass CalendarView {
        [default] interface _CalendarView;
    };

    [
      uuid(0006200B-0000-0000-C000-000000000046),
      helpcontext(0x00000c8c),
      noncreatable
    ]
    coclass BusinessCardView {
        [default] interface _BusinessCardView;
    };

    [
      uuid(00061059-0000-0000-C000-000000000046),
      helpcontext(0x00000c8d),
      noncreatable
    ]
    coclass FormRegionStartup {
        [default] interface _FormRegionStartup;
    };

    [
      uuid(000610FD-0000-0000-C000-000000000046),
      helpcontext(0x00000ce3),
      noncreatable
    ]
    coclass TimeZone {
        [default] interface _TimeZone;
    };

    [
      uuid(000610FF-0000-0000-C000-000000000046),
      helpcontext(0x00000d2b),
      noncreatable
    ]
    coclass SolutionsModule {
        [default] interface _SolutionsModule;
    };

    [
      uuid(00061101-0000-0000-C000-000000000046),
      helpcontext(0x00000d3c),
      noncreatable
    ]
    coclass Conversation {
        [default] interface _Conversation;
    };

    [
      uuid(00061103-0000-0000-C000-000000000046),
      helpcontext(0x00000d80),
      noncreatable
    ]
    coclass AccountSelector {
        [default] interface _AccountSelector;
        [default, source] dispinterface AccountSelectorEvents;
    };

    [
      uuid(00061107-0000-0000-C000-000000000046),
      helpcontext(0x00000ddd),
      noncreatable
    ]
    coclass ConversationHeader {
        [default] interface _ConversationHeader;
    };

    [
      uuid(0006200C-0000-0000-C000-000000000046),
      helpcontext(0x00000e05),
      noncreatable
    ]
    coclass PeopleView {
        [default] interface _PeopleView;
    };
};
