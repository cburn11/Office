// Generated .IDL file (by the OLE/COM Object Viewer)
// 
// typelib filename: VBE6EXT.OLB

[
  uuid(0002E157-0000-0000-C000-000000000046),
  version(5.3),
  helpstring("Microsoft Visual Basic for Applications Extensibility 5.3"),
  helpfile("vbob6.chm"),
  helpcontext(0x000186a0)
]
library VBIDE
{
    // TLib :     // TLib : Microsoft Office 15.0 Object Library : {2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}
	importlib("..\tlb\mso.tlb");
    // TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}
    importlib("stdole2.tlb");


    // Forward declare all types defined in this typelib
    interface Application;
    interface VBE;
    interface Window;
    interface _Windows_old;
    interface _Windows;
    interface _LinkedWindows;
    interface Events;
    interface _VBProjectsEvents;
    dispinterface _dispVBProjectsEvents;
    interface _VBComponentsEvents;
    dispinterface _dispVBComponentsEvents;
    interface _ReferencesEvents;
    dispinterface _dispReferencesEvents;
    interface _CommandBarControlEvents;
    dispinterface _dispCommandBarControlEvents;
    interface _ProjectTemplate;
    interface _VBProject_Old;
    interface _VBProject;
    interface _VBProjects_Old;
    interface _VBProjects;
    interface SelectedComponents;
    interface _Components;
    interface _VBComponents_Old;
    interface _VBComponents;
    interface _Component;
    interface _VBComponent_Old;
    interface _VBComponent;
    interface Property;
    interface _Properties;
    interface _AddIns;
    interface AddIn;
    interface _CodeModule;
    interface _CodePanes;
    interface _CodePane;
    interface _References;
    interface Reference;
    dispinterface _dispReferences_Events;



typedef [uuid(06A03650-2369-11CE-BFDC-08002B2B8CDA)]
    enum {
        vbextFileTypeForm = 0,
        vbextFileTypeModule = 1,
        vbextFileTypeClass = 2,
        vbextFileTypeProject = 3,
        vbextFileTypeExe = 4,
        vbextFileTypeFrx = 5,
        vbextFileTypeRes = 6,
        vbextFileTypeUserControl = 7,
        vbextFileTypePropertyPage = 8,
        vbextFileTypeDocObject = 9,
        vbextFileTypeBinary = 10,
        vbextFileTypeGroupProject = 11,
        vbextFileTypeDesigners = 12
    } vbextFileTypes;


typedef [uuid(BE39F3DB-1B13-11D0-887F-00A0C90F2744), helpcontext(0x000186fa)]
    enum {
        vbext_wt_CodeWindow = 0,
        vbext_wt_Designer = 1,
        vbext_wt_Browser = 2,
        vbext_wt_Watch = 3,
        vbext_wt_Locals = 4,
        vbext_wt_Immediate = 5,
        vbext_wt_ProjectWindow = 6,
        vbext_wt_PropertyWindow = 7,
        vbext_wt_Find = 8,
        vbext_wt_FindReplace = 9,
        vbext_wt_Toolbox = 10,
        vbext_wt_LinkedWindowFrame = 11,
        vbext_wt_MainWindow = 12,
        vbext_wt_ToolWindow = 15
    } vbext_WindowType;


typedef [uuid(BE39F3DC-1B13-11D0-887F-00A0C90F2744), helpcontext(0x00018708)]
    enum {
        vbext_ws_Normal = 0,
        vbext_ws_Minimize = 1,
        vbext_ws_Maximize = 2
    } vbext_WindowState;


typedef [uuid(FFCF3247-DEBF-11D1-BAFF-00C04FB6C4A6), helpcontext(0x00018efb)]
    enum {
        vbext_pt_HostProject = 100,
        vbext_pt_StandAlone = 101
    } vbext_ProjectType;


typedef [uuid(0002E129-0000-0000-C000-000000000046), helpcontext(0x00018f00)]
    enum {
        vbext_pp_none = 0,
        vbext_pp_locked = 1
    } vbext_ProjectProtection;


typedef [uuid(BE39F3D2-1B13-11D0-887F-00A0C90F2744), helpcontext(0x00018f03)]
    enum {
        vbext_vm_Run = 0,
        vbext_vm_Break = 1,
        vbext_vm_Design = 2
    } vbext_VBAMode;


typedef [uuid(BE39F3D5-1B13-11D0-887F-00A0C90F2744), helpcontext(0x00018e89)]
    enum {
        vbext_ct_StdModule = 1,
        vbext_ct_ClassModule = 2,
        vbext_ct_MSForm = 3,
        vbext_ct_ActiveXDesigner = 11,
        vbext_ct_Document = 100
    } vbext_ComponentType;


typedef [helpcontext(0x00019640)]
    enum {
        vbext_pk_Proc = 0,
        vbext_pk_Let = 1,
        vbext_pk_Set = 2,
        vbext_pk_Get = 3
    } vbext_ProcKind;


typedef [helpcontext(0x000196da)]
    enum {
        vbext_cv_ProcedureView = 0,
        vbext_cv_FullModuleView = 1
    } vbext_CodePaneview;


typedef [helpcontext(0x00019672)]
    enum {
        vbext_rk_TypeLib = 0,
        vbext_rk_Project = 1
    } vbext_RefKind;



    [
      odl,
      uuid(0002E158-0000-0000-C000-000000000046),
      hidden,
      dual,
      oleautomation
    ]
    interface Application : IDispatch {
        [id(0x00000064), propget, helpcontext(0x000186a7)]
        HRESULT Version([out, retval] BSTR* lpbstrReturn);
    };

    


    [
      odl,
      uuid(0002E166-0000-0000-C000-000000000046),
      helpcontext(0x000186a1),
      dual,
      oleautomation
    ]
    interface VBE : Application {
        [id(0x0000006b), propget, helpcontext(0x000186ad)]
        HRESULT VBProjects([out, retval] _VBProjects** lppptReturn);
        [id(0x0000006c), propget, helpcontext(0x000186ae)]
        HRESULT CommandBars([out, retval] CommandBars** ppcbs);
        [id(0x0000006d), propget, helpcontext(0x000186af)]
        HRESULT CodePanes([out, retval] _CodePanes** ppCodePanes);
        [id(0x0000006e), propget, helpcontext(0x000186b0)]
        HRESULT Windows([out, retval] _Windows** ppwnsVBWindows);
        [id(0x0000006f), propget, helpcontext(0x000186b1)]
        HRESULT Events([out, retval] Events** ppevtEvents);
        [id(0x000000c9), propget, helpcontext(0x0001874c)]
        HRESULT ActiveVBProject([out, retval] _VBProject** lppptReturn);
        [id(0x000000c9), propputref, helpcontext(0x0001874c)]
        HRESULT ActiveVBProject([in] _VBProject* lppptReturn);
        [id(0x000000ca), propget, helpcontext(0x0001874d)]
        HRESULT SelectedVBComponent([out, retval] _VBComponent** lppscReturn);
        [id(0x000000cc), propget, helpcontext(0x0001874f)]
        HRESULT MainWindow([out, retval] Window** ppwin);
        [id(0x000000cd), propget, helpcontext(0x00018726)]
        HRESULT ActiveWindow([out, retval] Window** ppwinActive);
        [id(0x000000ce), propget, helpcontext(0x00018750)]
        HRESULT ActiveCodePane([out, retval] _CodePane** ppCodePane);
        [id(0x000000ce), propputref, helpcontext(0x00018750)]
        HRESULT ActiveCodePane([in] _CodePane* ppCodePane);
        [id(0x000000d1), propget, helpcontext(0x0001874b)]
        HRESULT Addins([out, retval] _Addins** lpppAddIns);
    };

    


    


    [
      odl,
      uuid(0002E16B-0000-0000-C000-000000000046),
      helpcontext(0x0001870c),
      dual,
      oleautomation
    ]
    interface Window : IDispatch {
        [id(0x00000001), propget, helpcontext(0x0001870d)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
        [id(0x00000002), propget, helpcontext(0x0001870e)]
        HRESULT Collection([out, retval] _Windows** lppaReturn);
        [id(0x00000063), helpcontext(0x0001870f)]
        HRESULT Close();
        [id(0x00000064), propget, helpcontext(0x00018710)]
        HRESULT Caption([out, retval] BSTR* pbstrTitle);
        [id(0x0000006a), propget, helpcontext(0x00018711)]
        HRESULT Visible([out, retval] VARIANT_BOOL* pfVisible);
        [id(0x0000006a), propput, helpcontext(0x00018711)]
        HRESULT Visible([in] VARIANT_BOOL pfVisible);
        [id(0x00000065), propget, helpcontext(0x00018712)]
        HRESULT Left([out, retval] long* plLeft);
        [id(0x00000065), propput, helpcontext(0x00018712)]
        HRESULT Left([in] long plLeft);
        [id(0x00000067), propget, helpcontext(0x00018713)]
        HRESULT Top([out, retval] long* plTop);
        [id(0x00000067), propput, helpcontext(0x00018713)]
        HRESULT Top([in] long plTop);
        [id(0x00000069), propget, helpcontext(0x00018714)]
        HRESULT Width([out, retval] long* plWidth);
        [id(0x00000069), propput, helpcontext(0x00018714)]
        HRESULT Width([in] long plWidth);
        [id(0x0000006b), propget, helpcontext(0x00018715)]
        HRESULT Height([out, retval] long* plHeight);
        [id(0x0000006b), propput, helpcontext(0x00018715)]
        HRESULT Height([in] long plHeight);
        [id(0x0000006d), propget, helpcontext(0x00018716)]
        HRESULT WindowState([out, retval] vbext_WindowState* plWindowState);
        [id(0x0000006d), propput, helpcontext(0x00018716)]
        HRESULT WindowState([in] vbext_WindowState plWindowState);
        [id(0x0000006f), helpcontext(0x00018717)]
        HRESULT SetFocus();
        [id(0x00000070), propget, helpcontext(0x00018718)]
        HRESULT Type([out, retval] vbext_WindowType* pKind);
        [id(0x00000071), restricted, hidden]
        HRESULT SetKind([in] vbext_WindowType eKind);
        [id(0x00000074), propget, helpcontext(0x0001871a)]
        HRESULT LinkedWindows([out, retval] _LinkedWindows** ppwnsCollection);
        [id(0x00000075), propget, helpcontext(0x0001871b)]
        HRESULT LinkedWindowFrame([out, retval] Window** ppwinFrame);
        [id(0x00000076), restricted, hidden]
        HRESULT Detach();
        [id(0x00000077), restricted, hidden]
        HRESULT Attach([in] long lWindowHandle);
        [id(0x00000078), propget, hidden]
        HRESULT HWnd([out, retval] long* plWindowHandle);
    };

    [
      odl,
      uuid(0002E16A-0000-0000-C000-000000000046),
      helpcontext(0x0001871f),
      hidden,
      dual,
      oleautomation
    ]
    interface _Windows_old : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00018720)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
        [id(0x00000002), propget, helpcontext(0x00018721)]
        HRESULT Parent([out, retval] Application** lppptReturn);
        [id(00000000), helpcontext(0x00018722)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Window** lppcReturn);
        [id(0x000000c9), propget, helpcontext(0x00018723)]
        HRESULT Count([out, retval] long* lplReturn);
        [id(0xfffffffc), restricted]
        HRESULT _NewEnum([out, retval] IUnknown** lppiuReturn);
    };

    [
      odl,
      uuid(F57B7ED0-D8AB-11D1-85DF-00C04F98F42C),
      helpcontext(0x0001871f),
      dual,
      oleautomation
    ]
    interface _Windows : _Windows_old {
        [id(0x0000012c), helpcontext(0x000187c3)]
        HRESULT CreateToolWindow(
                        [in] AddIn* AddInInst, 
                        [in] BSTR ProgId, 
                        [in] BSTR Caption, 
                        [in] BSTR GuidPosition, 
                        [in, out] IDispatch** DocObj, 
                        [out, retval] Window** lppcReturn);
    };

    [
      uuid(0002E185-0000-0000-C000-000000000046),
      helpcontext(0x0001871f)
    ]
    coclass Windows {
        [default] interface _Windows;
    };

    [
      odl,
      uuid(0002E16C-0000-0000-C000-000000000046),
      helpcontext(0x00018728),
      dual,
      oleautomation
    ]
    interface _LinkedWindows : IDispatch {
        [id(0x00000001), propget, helpcontext(0x00018729)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
        [id(0x00000002), propget, hidden]
        HRESULT Parent([out, retval] Window** ppptReturn);
        [id(00000000), helpcontext(0x0001872b)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Window** lppcReturn);
        [id(0x000000c9), propget, helpcontext(0x0001872c)]
        HRESULT Count([out, retval] long* lplReturn);
        [id(0xfffffffc), restricted, helpcontext(0x0001872d)]
        HRESULT _NewEnum([out, retval] IUnknown** lppiuReturn);
        [id(0x000000ca), helpcontext(0x0001872e)]
        HRESULT Remove([in] Window* Window);
        [id(0x000000cb), helpcontext(0x0001872f)]
        HRESULT Add([in] Window* Window);
    };

    [
      uuid(0002E187-0000-0000-C000-000000000046),
      helpcontext(0x0001871f)
    ]
    coclass LinkedWindows {
        [default] interface _LinkedWindows;
    };

    [
      odl,
      uuid(0002E167-0000-0000-C000-000000000046),
      helpcontext(0x00018730),
      dual,
      oleautomation
    ]
    interface Events : IDispatch {
        [id(0x000000ca), propget, helpcontext(0x00018733)]
        HRESULT ReferencesEvents(
                        [in] _VBProject* VBProject, 
                        [out, retval] _ReferencesEvents** prceNew);
        [id(0x000000cd), propget, helpcontext(0x00018765)]
        HRESULT CommandBarEvents(
                        [in] IDispatch* CommandBarControl, 
                        [out, retval] void** prceNew);
    };

    [
      odl,
      uuid(0002E113-0000-0000-C000-000000000046),
      helpcontext(0x00018734),
      oleautomation
    ]
    interface _VBProjectsEvents : IUnknown {
    };

    [
      uuid(0002E103-0000-0000-C000-000000000046)
    ]
    dispinterface _dispVBProjectsEvents {
        properties:
        methods:
            [id(0x00000001), helpcontext(0x00018735)]
            void ItemAdded([in] _VBProject* VBProject);
            [id(0x00000002), helpcontext(0x00018736)]
            void ItemRemoved([in] _VBProject* VBProject);
            [id(0x00000003), helpcontext(0x00018737)]
            void ItemRenamed(
                            [in] _VBProject* VBProject, 
                            [in] BSTR OldName);
            [id(0x00000004), helpcontext(0x00018767)]
            void ItemActivated([in] _VBProject* VBProject);
    };

    [
      odl,
      uuid(0002E115-0000-0000-C000-000000000046),
      helpcontext(0x00018739),
      oleautomation
    ]
    interface _VBComponentsEvents : IUnknown {
    };

    [
      uuid(0002E116-0000-0000-C000-000000000046),
      helpcontext(0x00018739)
    ]
    dispinterface _dispVBComponentsEvents {
        properties:
        methods:
            [id(0x00000001), helpcontext(0x0001873a)]
            void ItemAdded([in] _VBComponent* VBComponent);
            [id(0x00000002), helpcontext(0x0001873b)]
            void ItemRemoved([in] _VBComponent* VBComponent);
            [id(0x00000003), helpcontext(0x0001873c)]
            void ItemRenamed(
                            [in] _VBComponent* VBComponent, 
                            [in] BSTR OldName);
            [id(0x00000004), helpcontext(0x0001873d)]
            void ItemSelected([in] _VBComponent* VBComponent);
            [id(0x00000005), helpcontext(0x00018768)]
            void ItemActivated([in] _VBComponent* VBComponent);
            [id(0x00000006), helpcontext(0x000187c5)]
            void ItemReloaded([in] _VBComponent* VBComponent);
    };

    [
      odl,
      uuid(0002E11A-0000-0000-C000-000000000046),
      helpcontext(0x0001873e),
      oleautomation
    ]
    interface _ReferencesEvents : IUnknown {
    };

    [
      uuid(0002E118-0000-0000-C000-000000000046),
      helpcontext(0x0001873e)
    ]
    dispinterface _dispReferencesEvents {
        properties:
        methods:
            [id(0x00000001), helpcontext(0x0001873f)]
            void ItemAdded([in] Reference* Reference);
            [id(0x00000002), helpcontext(0x00018740)]
            void ItemRemoved([in] Reference* Reference);
    };

    [
      uuid(0002E119-0000-0000-C000-000000000046),
      helpcontext(0x0001873e)
    ]
    coclass ReferencesEvents {
        [default] interface _ReferencesEvents;
        [default, source] dispinterface _dispReferencesEvents;
    };

    [
      odl,
      uuid(0002E130-0000-0000-C000-000000000046),
      helpcontext(0x0001876e),
      oleautomation
    ]
    interface _CommandBarControlEvents : IUnknown {
    };

    [
      uuid(0002E131-0000-0000-C000-000000000046),
      helpcontext(0x0001876e)
    ]
    dispinterface _dispCommandBarControlEvents {
        properties:
        methods:
            [id(0x00000001), helpcontext(0x0001876f)]
            void Click(
                            [in] IDispatch* CommandBarControl, 
                            [in] VARIANT_BOOL* handled, 
                            [in] VARIANT_BOOL* CancelDefault);
    };

    [
      uuid(0002E132-0000-0000-C000-000000000046),
      helpcontext(0x0001876e)
    ]
    coclass CommandBarEvents {
        [default] interface _CommandBarControlEvents;
        [default, source] dispinterface _dispCommandBarControlEvents;
    };

    [
      odl,
      uuid(0002E159-0000-0000-C000-000000000046),
      hidden,
      dual,
      oleautomation
    ]
    interface _ProjectTemplate : IDispatch {
        [id(0x00000001), propget, hidden]
        HRESULT Application([out, retval] Application** lppaReturn);
        [id(0x00000002), propget, hidden]
        HRESULT Parent([out, retval] Application** lppaReturn);
    };

    [
      uuid(32CDF9E0-1602-11CE-BFDC-08002B2B8CDA),
      hidden
    ]
    coclass ProjectTemplate {
        [default] interface _ProjectTemplate;
    };

    


    


    


    [
      odl,
      uuid(0002E160-0000-0000-C000-000000000046),
      hidden,
      dual,
      oleautomation
    ]
    interface _VBProject_Old : _ProjectTemplate {
        [id(0x00000074), propget, helpcontext(0x00018e77)]
        HRESULT HelpFile([out, retval] BSTR* lpbstrHelpFile);
        [id(0x00000074), propput, helpcontext(0x00018e77)]
        HRESULT HelpFile([in] BSTR lpbstrHelpFile);
        [id(0x00000075), propget, helpcontext(0x00018e78)]
        HRESULT HelpContextID([out, retval] long* lpdwContextID);
        [id(0x00000075), propput, helpcontext(0x00018e78)]
        HRESULT HelpContextID([in] long lpdwContextID);
        [id(0x00000076), propget, helpcontext(0x00018e79)]
        HRESULT Description([out, retval] BSTR* lpbstrDescription);
        [id(0x00000076), propput, helpcontext(0x00018e79)]
        HRESULT Description([in] BSTR lpbstrDescription);
        [id(0x00000077), propget, helpcontext(0x00018e7a)]
        HRESULT Mode([out, retval] vbext_VBAMode* lpVbaMode);
        [id(0x00000078), propget, helpcontext(0x00018e7b)]
        HRESULT References([out, retval] _References** lppReferences);
        [id(0x00000079), propget, helpcontext(0x00018e71)]
        HRESULT Name([out, retval] BSTR* lpbstrName);
        [id(0x00000079), propput, helpcontext(0x00018e71)]
        HRESULT Name([in] BSTR lpbstrName);
        [id(0x0000007a), propget, helpcontext(0x00018e7d)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
        [id(0x0000007b), propget, helpcontext(0x00018e7e)]
        HRESULT Collection([out, retval] _VBProjects** lppaReturn);
        [id(0x00000083), propget, helpcontext(0x00018e85)]
        HRESULT Protection([out, retval] vbext_ProjectProtection* lpProtection);
        [id(0x00000085), propget, helpcontext(0x00018e86)]
        HRESULT Saved([out, retval] VARIANT_BOOL* lpfReturn);
        [id(0x00000087), propget, helpcontext(0x00018e87)]
        HRESULT VBComponents([out, retval] _VBComponents** lppcReturn);
    };

    [
      odl,
      uuid(EEE00915-E393-11D1-BB03-00C04FB6C4A6),
      hidden,
      dual,
      oleautomation
    ]
    interface _VBProject : _VBProject_Old {
        [id(0x0000008a), helpcontext(0x00018e81)]
        HRESULT SaveAs([in] BSTR FileName);
        [id(0x0000008b), helpcontext(0x00018e82)]
        HRESULT MakeCompiledFile();
        [id(0x0000008c), propget, helpcontext(0x00018e83)]
        HRESULT Type([out, retval] vbext_ProjectType* lpkind);
        [id(0x0000008d), propget, helpcontext(0x00018e73)]
        HRESULT FileName([out, retval] BSTR* lpbstrReturn);
        [id(0x0000008e), propget, helpcontext(0x00018e7c)]
        HRESULT BuildFileName([out, retval] BSTR* lpbstrBldFName);
        [id(0x0000008e), propput, helpcontext(0x00018e7c)]
        HRESULT BuildFileName([in] BSTR lpbstrBldFName);
    };

    [
      uuid(0002E169-0000-0000-C000-000000000046),
      helpcontext(0x00018e70)
    ]
    coclass VBProject {
        [default] interface _VBProject;
    };

    [
      odl,
      uuid(0002E165-0000-0000-C000-000000000046),
      helpcontext(0x00018f0b),
      hidden,
      dual,
      oleautomation
    ]
    interface _VBProjects_Old : IDispatch {
        [id(00000000), helpcontext(0x00018f0c)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] _VBProject** lppcReturn);
        [id(0x00000014), propget, helpcontext(0x00018f0d)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
        [id(0x00000002), propget, helpcontext(0x00018f0e)]
        HRESULT Parent([out, retval] VBE** lppaReturn);
        [id(0x0000000a), propget, helpcontext(0x00018f0f)]
        HRESULT Count([out, retval] long* lplReturn);
        [id(0xfffffffc), restricted]
        HRESULT _NewEnum([out, retval] IUnknown** lppiuReturn);
    };

    [
      odl,
      uuid(EEE00919-E393-11D1-BB03-00C04FB6C4A6),
      helpcontext(0x00018f0b),
      dual,

      oleautomation
    ]
    interface _VBProjects : _VBProjects_Old {
        [id(0x00000089), helpcontext(0x00018f10)]
        HRESULT Add(
                        [in] vbext_ProjectType Type, 
                        [out, retval] _VBProject** lppcReturn);
        [id(0x0000008a), helpcontext(0x00018f13)]
        HRESULT Remove([in] _VBProject* lpc);
        [id(0x0000008b)]
        HRESULT Open(
                        [in] BSTR bstrPath, 
                        [out, retval] _VBProject** lpc);
    };

    [
      uuid(0002E101-0000-0000-C000-000000000046),
      helpcontext(0x00018f0b)
    ]
    coclass VBProjects {
        [default] interface _VBProjects;
    };

    [
      odl,
      uuid(BE39F3D4-1B13-11D0-887F-00A0C90F2744),
      hidden,
      dual,
      oleautomation
    ]
    interface SelectedComponents : IDispatch {
        [id(00000000)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] _Component** lppcReturn);
        [id(0x00000001), propget]
        HRESULT Application([out, retval] Application** lppaReturn);
        [id(0x00000002), propget]
        HRESULT Parent([out, retval] _VBProject** lppptReturn);
        [id(0x0000000a), propget]
        HRESULT Count([out, retval] long* lplReturn);
        [id(0xfffffffc), restricted]
        HRESULT _NewEnum([out, retval] IUnknown** lppiuReturn);
    };

    


    [
      odl,
      uuid(0002E161-0000-0000-C000-000000000046),
      hidden,
      dual,
      oleautomation
    ]
    interface _Components : IDispatch {
        [id(00000000), hidden]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] _Component** lppcReturn);
        [id(0x00000001), propget, helpcontext(0x00018f19)]
        HRESULT Application([out, retval] Application** lppaReturn);
        [id(0x00000002), propget, helpcontext(0x00018f1a)]
        HRESULT Parent([out, retval] _VBProject** lppptReturn);
        [id(0x0000000a), propget, helpcontext(0x00018f1b)]
        HRESULT Count([out, retval] long* lplReturn);
        [id(0xfffffffc), restricted]
        HRESULT _NewEnum([out, retval] IUnknown** lppiuReturn);
        [id(0x0000000b), helpcontext(0x00018f1c)]
        HRESULT Remove([in] _Component* Component);
        [id(0x0000000c), helpcontext(0x00018f1d)]
        HRESULT Add(
                        [in] vbext_ComponentType ComponentType, 
                        [out, retval] _Component** lppComponent);
        [id(0x0000000d), helpcontext(0x00018f1e)]
        HRESULT Import(
                        [in] BSTR FileName, 
                        [out, retval] _Component** lppComponent);
        [id(0x00000014), propget, helpcontext(0x00018f1f)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
    };

    [
      uuid(BE39F3D6-1B13-11D0-887F-00A0C90F2744),
      hidden
    ]
    coclass Components {
        [default] interface _Components;
    };

    [
      odl,
      uuid(0002E162-0000-0000-C000-000000000046),
      hidden,
      dual,
      oleautomation
    ]
    interface _VBComponents_Old : IDispatch {
        [id(00000000), helpcontext(0x00018f24)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] _VBComponent** lppcReturn);
        [id(0x00000002), propget, helpcontext(0x00018f1a)]
        HRESULT Parent([out, retval] _VBProject** lppptReturn);
        [id(0x0000000a), propget, helpcontext(0x00018f1b)]
        HRESULT Count([out, retval] long* lplReturn);
        [id(0xfffffffc), restricted]
        HRESULT _NewEnum([out, retval] IUnknown** lppiuReturn);
        [id(0x0000000b), helpcontext(0x00018f1c)]
        HRESULT Remove([in] _VBComponent* VBComponent);
        [id(0x0000000c), helpcontext(0x00018f1d)]
        HRESULT Add(
                        [in] vbext_ComponentType ComponentType, 
                        [out, retval] _VBComponent** lppComponent);
        [id(0x0000000d), helpcontext(0x00018f1e)]
        HRESULT Import(
                        [in] BSTR FileName, 
                        [out, retval] _VBComponent** lppComponent);
        [id(0x00000014), propget, helpcontext(0x00018f1f)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
    };

    [
      odl,
      uuid(EEE0091C-E393-11D1-BB03-00C04FB6C4A6),
      dual,
      oleautomation
    ]
    interface _VBComponents : _VBComponents_Old {
        [id(0x00000019), helpcontext(0x00018f23)]
        HRESULT AddCustom(
                        [in] BSTR ProgId, 
                        [out, retval] _VBComponent** lppComponent);
        [id(0x0000001a), hidden]
        HRESULT AddMTDesigner(
                        [in, optional, defaultvalue(0)] long index, 
                        [out, retval] _VBComponent** lppComponent);
    };

    [
      uuid(BE39F3D7-1B13-11D0-887F-00A0C90F2744),
      helpcontext(0x00018f18)
    ]
    coclass VBComponents {
        [default] interface _VBComponents;
    };

    [
      odl,
      uuid(0002E163-0000-0000-C000-000000000046),
      hidden,
      dual,
      oleautomation
    ]
    interface _Component : IDispatch {
        [id(0x00000001), propget, hidden]
        HRESULT Application([out, retval] Application** lppaReturn);
        [id(0x00000002), propget, hidden]
        HRESULT Parent([out, retval] Components** lppcReturn);
        [id(0x0000000a), propget]
        HRESULT IsDirty([out, retval] VARIANT_BOOL* lpfReturn);
        [id(0x0000000a), propput]
        HRESULT IsDirty([in] VARIANT_BOOL lpfReturn);
        [id(0x00000030), propget]
        HRESULT Name([out, retval] BSTR* pbstrReturn);
        [id(0x00000030), propput]
        HRESULT Name([in] BSTR pbstrReturn);
    };

    [
      uuid(BE39F3D8-1B13-11D0-887F-00A0C90F2744),
      hidden
    ]
    coclass Component {
        [default] interface _Component;
    };

    [
      odl,
      uuid(0002E164-0000-0000-C000-000000000046),
      helpcontext(0x00018f25),
      hidden,
      dual,
      oleautomation
    ]
    interface _VBComponent_Old : IDispatch {
        [id(0x0000000a), propget, helpcontext(0x00018f27)]
        HRESULT Saved([out, retval] VARIANT_BOOL* lpfReturn);
        [id(0x00000030), propget, helpcontext(0x00018f2e)]
        HRESULT Name([out, retval] BSTR* pbstrReturn);
        [id(0x00000030), propput, helpcontext(0x00018f2e)]
        HRESULT Name([in] BSTR pbstrReturn);
        [id(0x00000031), propget, helpcontext(0x00018f2f)]
        HRESULT Designer([out, retval] IDispatch** ppDispatch);
        [id(0x00000032), propget, helpcontext(0x00018f30)]
        HRESULT CodeModule([out, retval] _CodeModule** ppVbaModule);
        [id(0x00000033), propget, helpcontext(0x00018f31)]
        HRESULT Type([out, retval] vbext_ComponentType* pKind);
        [id(0x00000034), helpcontext(0x00018f32)]
        HRESULT Export([in] BSTR FileName);
        [id(0x00000035), propget, helpcontext(0x00018f33)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
        [id(0x00000036), propget, helpcontext(0x00018f34)]
        HRESULT Collection([out, retval] _VBComponents** lppcReturn);
        [id(0x00000037), propget, helpcontext(0x00018f35)]
        HRESULT HasOpenDesigner([out, retval] VARIANT_BOOL* lpfReturn);
        [id(0x00000038), propget, helpcontext(0x00018f36)]
        HRESULT Properties([out, retval] _Properties** lpppReturn);
        [id(0x00000039), helpcontext(0x00018f37)]
        HRESULT DesignerWindow([out, retval] Window** lppcReturn);
        [id(0x0000003c), helpcontext(0x00018f3a)]
        HRESULT Activate();
    };

    [
      odl,
      uuid(EEE00921-E393-11D1-BB03-00C04FB6C4A6),
      helpcontext(0x00018f25),
      dual,
      oleautomation
    ]
    interface _VBComponent : _VBComponent_Old {
        [id(0x00000040), propget, helpcontext(0x00018fd7)]
        HRESULT DesignerID([out, retval] BSTR* pbstrReturn);
    };

    [
      uuid(BE39F3DA-1B13-11D0-887F-00A0C90F2744),
      helpcontext(0x00018f25)
    ]
    coclass VBComponent {
        [default] interface _VBComponent;
    };

    [
      odl,
      uuid(0002E18C-0000-0000-C000-000000000046),
      helpcontext(0x00018e9d),
      dual,
      oleautomation
    ]
    interface Property : IDispatch {
        [id(00000000), propget, helpcontext(0x00018e9e)]
        HRESULT Value([out, retval] VARIANT* lppvReturn);
        [id(00000000), propput, helpcontext(0x00018e9e)]
        HRESULT Value([in] VARIANT lppvReturn);
        [id(0x00000003), propget, helpcontext(0x00018e9f)]
        HRESULT IndexedValue(
                        [in] VARIANT Index1, 
                        [in, optional] VARIANT Index2, 
                        [in, optional] VARIANT Index3, 
                        [in, optional] VARIANT Index4, 
                        [out, retval] VARIANT* lppvReturn);
        [id(0x00000003), propput, helpcontext(0x00018e9f)]
        HRESULT IndexedValue(
                        [in] VARIANT Index1, 
                        [in, optional] VARIANT Index2, 
                        [in, optional] VARIANT Index3, 
                        [in, optional] VARIANT Index4, 
                        [in] VARIANT lppvReturn);
        [id(0x00000004), propget, helpcontext(0x00018ea0)]
        HRESULT NumIndices([out, retval] short* lpiRetVal);
        [id(0x00000001), propget, hidden]
        HRESULT Application([out, retval] Application** lpaReturn);
        [id(0x00000002), propget, hidden]
        HRESULT Parent([out, retval] _Properties** lpppReturn);
        [id(0x00000028), propget, helpcontext(0x00018ea1)]
        HRESULT Name([out, retval] BSTR* lpbstrReturn);
        [id(0x00000029), propget, helpcontext(0x00018ea2)]
        HRESULT VBE([out, retval] VBE** lpaReturn);
        [id(0x0000002a), propget, helpcontext(0x00018ea3)]
        HRESULT Collection([out, retval] _Properties** lpppReturn);
        [id(0x0000002d), propget, helpcontext(0x00018ea4)]
        HRESULT Object([out, retval] IUnknown** lppunk);
        [id(0x0000002d), propputref, helpcontext(0x00018ea4)]
        HRESULT Object([in] IUnknown* lppunk);
    };

    [
      odl,
      uuid(0002E188-0000-0000-C000-000000000046),
      helpcontext(0x00018ea5),
      dual,
      oleautomation
    ]
    interface _Properties : IDispatch {
        [id(00000000), helpcontext(0x00018ea6)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Property** lplppReturn);
        [id(0x00000001), propget, hidden]
        HRESULT Application([out, retval] Application** lppaReturn);
        [id(0x00000002), propget, helpcontext(0x00018ea8)]
        HRESULT Parent([out, retval] IDispatch** lppidReturn);
        [id(0x00000028), propget, helpcontext(0x00018ea9)]
        HRESULT Count([out, retval] long* lplReturn);
        [id(0xfffffffc), restricted]
        HRESULT _NewEnum([out, retval] IUnknown** lppiuReturn);
        [id(0x0000000a), propget, helpcontext(0x00018eaa)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
    };

    [
      uuid(0002E18B-0000-0000-C000-000000000046),
      helpcontext(0x00018ea5)
    ]
    coclass Properties {
        [default] interface _Properties;
    };

    [
      odl,
      uuid(DA936B62-AC8B-11D1-B6E5-00A0C90F2744),
      helpcontext(0x00018f66),
      dual,
      oleautomation
    ]
    interface _AddIns : IDispatch {
        [id(00000000), helpcontext(0x00018f67)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] AddIn** lppaddin);
        [id(0x00000001), propget, helpcontext(0x00018f68)]
        HRESULT VBE([out, retval] VBE** lppVBA);
        [id(0x00000002), propget, helpcontext(0x00018f69)]
        HRESULT Parent([out, retval] IDispatch** lppVBA);
        [id(0x00000028), propget, helpcontext(0x00018f6a)]
        HRESULT Count([out, retval] long* lplReturn);
        [id(0xfffffffc), restricted]
        HRESULT _NewEnum([out, retval] IUnknown** lppiuReturn);
        [id(0x00000029), helpcontext(0x00018f6b)]
        HRESULT Update();
    };

    [
      uuid(DA936B63-AC8B-11D1-B6E5-00A0C90F2744),
      helpcontext(0x00018f66)
    ]
    coclass Addins {
        [default] interface _AddIns;
    };

    [
      odl,
      uuid(DA936B64-AC8B-11D1-B6E5-00A0C90F2744),
      helpcontext(0x00018f70),
      dual,
      oleautomation
    ]
    interface AddIn : IDispatch {
        [id(00000000), propget, helpcontext(0x00018f71)]
        HRESULT Description([out, retval] BSTR* lpbstr);
        [id(00000000), propput, helpcontext(0x00018f71)]
        HRESULT Description([in] BSTR lpbstr);
        [id(0x00000001), propget, helpcontext(0x00018f72)]
        HRESULT VBE([out, retval] VBE** lppVBE);
        [id(0x00000002), propget, helpcontext(0x00018f73)]
        HRESULT Collection([out, retval] _Addins** lppaddins);
        [id(0x00000003), propget, helpcontext(0x00018f74)]
        HRESULT ProgId([out, retval] BSTR* lpbstr);
        [id(0x00000004), propget, helpcontext(0x00018f75)]
        HRESULT Guid([out, retval] BSTR* lpbstr);
        [id(0x00000006), propget, helpcontext(0x00018f76)]
        HRESULT Connect([out, retval] VARIANT_BOOL* lpfConnect);
        [id(0x00000006), propput, helpcontext(0x00018f76)]
        HRESULT Connect([in] VARIANT_BOOL lpfConnect);
        [id(0x00000007), propget, helpcontext(0x00018f77)]
        HRESULT Object([out, retval] IDispatch** lppdisp);
        [id(0x00000007), propput, helpcontext(0x00018f77)]
        HRESULT Object([in] IDispatch* lppdisp);
    };

    


    [
      odl,
      uuid(0002E16E-0000-0000-C000-000000000046),
      helpcontext(0x00019645),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface _CodeModule : IDispatch {
        [id(0x60020000), propget, helpcontext(0x00019646)]
        HRESULT Parent([out, retval] _VBComponent** retval);
        [id(0x60020001), propget, helpcontext(0x00019647)]
        HRESULT VBE([out, retval] VBE** retval);
        [id(00000000), propget, hidden]
        HRESULT Name([out, retval] BSTR* pbstrName);
        [id(00000000), propput, hidden]
        HRESULT Name([in] BSTR pbstrName);
        [id(0x60020004), helpcontext(0x00019649)]
        HRESULT AddFromString([in] BSTR String);
        [id(0x60020005), helpcontext(0x0001964a)]
        HRESULT AddFromFile([in] BSTR FileName);
        [id(0x60020006), propget, helpcontext(0x0001964b)]
        HRESULT Lines(
                        [in] long StartLine, 
                        [in] long Count, 
                        [out, retval] BSTR* String);
        [id(0x60020007), propget, helpcontext(0x0001964c)]
        HRESULT CountOfLines([out, retval] long* CountOfLines);
        [id(0x60020008), helpcontext(0x0001964d)]
        HRESULT InsertLines(
                        [in] long Line, 
                        [in] BSTR String);
        [id(0x60020009), helpcontext(0x0001964e)]
        HRESULT DeleteLines(
                        [in] long StartLine, 
                        [in, optional, defaultvalue(1)] long Count);
        [id(0x6002000a), helpcontext(0x0001964f)]
        HRESULT ReplaceLine(
                        [in] long Line, 
                        [in] BSTR String);
        [id(0x6002000b), propget, helpcontext(0x00019650)]
        HRESULT ProcStartLine(
                        [in] BSTR ProcName, 
                        [in] vbext_ProcKind ProcKind, 
                        [out, retval] long* ProcStartLine);
        [id(0x6002000c), propget, helpcontext(0x00019651)]
        HRESULT ProcCountLines(
                        [in] BSTR ProcName, 
                        [in] vbext_ProcKind ProcKind, 
                        [out, retval] long* ProcCountLines);
        [id(0x6002000d), propget, helpcontext(0x00019652)]
        HRESULT ProcBodyLine(
                        [in] BSTR ProcName, 
                        [in] vbext_ProcKind ProcKind, 
                        [out, retval] long* ProcBodyLine);
        [id(0x6002000e), propget, helpcontext(0x00019653)]
        HRESULT ProcOfLine(
                        [in] long Line, 
                        [out] vbext_ProcKind* ProcKind, 
                        [out, retval] BSTR* pbstrName);
        [id(0x6002000f), propget, helpcontext(0x00019654)]
        HRESULT CountOfDeclarationLines([out, retval] long* pDeclCountOfLines);
        [id(0x60020010), helpcontext(0x00019655)]
        HRESULT CreateEventProc(
                        [in] BSTR EventName, 
                        [in] BSTR ObjectName, 
                        [out, retval] long* Line);
        [id(0x60020011), helpcontext(0x00019656)]
        HRESULT Find(
                        [in] BSTR Target, 
                        [in, out] long* StartLine, 
                        [in, out] long* StartColumn, 
                        [in, out] long* EndLine, 
                        [in, out] long* EndColumn, 
                        [in, optional, defaultvalue(0)] VARIANT_BOOL WholeWord, 
                        [in, optional, defaultvalue(0)] VARIANT_BOOL MatchCase, 
                        [in, optional, defaultvalue(0)] VARIANT_BOOL PatternSearch, 
                        [out, retval] VARIANT_BOOL* pfFound);
        [id(0x60020012), propget, helpcontext(0x00019657)]
        HRESULT CodePane([out, retval] _CodePane** CodePane);
    };

    [
      uuid(0002E170-0000-0000-C000-000000000046),
      helpcontext(0x00019645)
    ]
    coclass CodeModule {
        [default] interface _CodeModule;
    };

    [
      odl,
      uuid(0002E172-0000-0000-C000-000000000046),
      helpcontext(0x00019659),
      dual,
      nonextensible,
      oleautomation
    ]
    interface _CodePanes : IDispatch {
        [id(0x60020000), propget, helpcontext(0x0001965a)]
        HRESULT Parent([out, retval] VBE** retval);
        [id(0x60020001), propget, helpcontext(0x0001965b)]
        HRESULT VBE([out, retval] VBE** retval);
        [id(00000000), helpcontext(0x0001965c)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] _CodePane** CodePane);
        [id(0x60020003), propget, helpcontext(0x0001965d)]
        HRESULT Count([out, retval] long* Count);
        [id(0xfffffffc)]
        HRESULT _NewEnum([out, retval] IUnknown** ppenum);
        [id(0x60020005), propget, hidden]
        HRESULT Current([out, retval] _CodePane** CodePane);
        [id(0x60020005), propput, hidden]
        HRESULT Current([in] _CodePane* CodePane);
    };

    [
      uuid(0002E174-0000-0000-C000-000000000046),
      helpcontext(0x00019659)
    ]
    coclass CodePanes {
        [default] interface _CodePanes;
    };

    


    [
      odl,
      uuid(0002E176-0000-0000-C000-000000000046),
      helpcontext(0x0001965e),
      dual,
      nonextensible,
      oleautomation
    ]
    interface _CodePane : IDispatch {
        [id(0x60020000), propget, helpcontext(0x0001965f)]
        HRESULT Collection([out, retval] _CodePanes** retval);
        [id(0x60020001), propget, helpcontext(0x00019660)]
        HRESULT VBE([out, retval] VBE** retval);
        [id(0x60020002), propget, helpcontext(0x00019661)]
        HRESULT Window([out, retval] Window** retval);
        [id(0x60020003), helpcontext(0x00019662)]
        HRESULT GetSelection(
                        [out] long* StartLine, 
                        [out] long* StartColumn, 
                        [out] long* EndLine, 
                        [out] long* EndColumn);
        [id(0x60020004), helpcontext(0x00019663)]
        HRESULT SetSelection(
                        [in] long StartLine, 
                        [in] long StartColumn, 
                        [in] long EndLine, 
                        [in] long EndColumn);
        [id(0x60020005), propget, helpcontext(0x00019664)]
        HRESULT TopLine([out, retval] long* TopLine);
        [id(0x60020005), propput, helpcontext(0x00019664)]
        HRESULT TopLine([in] long TopLine);
        [id(0x60020007), propget, helpcontext(0x00019665)]
        HRESULT CountOfVisibleLines([out, retval] long* CountOfVisibleLines);
        [id(0x60020008), propget, helpcontext(0x00019666)]
        HRESULT CodeModule([out, retval] _CodeModule** CodeModule);
        [id(0x60020009), helpcontext(0x00019667)]
        HRESULT Show();
        [id(0x6002000a), propget, helpcontext(0x000196de)]
        HRESULT CodePaneView([out, retval] vbext_CodePaneview* pCodePaneview);
    };

    [
      uuid(0002E178-0000-0000-C000-000000000046),
      helpcontext(0x0001965e)
    ]
    coclass CodePane {
        [default] interface _CodePane;
    };

    [
      odl,
      uuid(0002E17A-0000-0000-C000-000000000046),
      helpcontext(0x00019668),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface _References : IDispatch {
        [id(0x60020000), propget, helpcontext(0x00019669)]
        HRESULT Parent([out, retval] _VBProject** retval);
        [id(0x60020001), propget, helpcontext(0x0001966a)]
        HRESULT VBE([out, retval] VBE** retval);
        [id(00000000), helpcontext(0x0001966b)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Reference** Reference);
        [id(0x60020003), propget, helpcontext(0x0001966c)]
        HRESULT Count([out, retval] long* Count);
        [id(0xfffffffc)]
        HRESULT _NewEnum([out, retval] IUnknown** ppenum);
        [id(0x60020005), helpcontext(0x0001966d)]
        HRESULT AddFromGuid(
                        [in] BSTR Guid, 
                        [in] long Major, 
                        [in] long Minor, 
                        [out, retval] Reference** Reference);
        [id(0x60020006), helpcontext(0x0001966e)]
        HRESULT AddFromFile(
                        [in] BSTR FileName, 
                        [out, retval] Reference** Reference);
        [id(0x60020007), helpcontext(0x0001966f)]
        HRESULT Remove([in] Reference* Reference);
    };

    


    [
      odl,
      uuid(0002E17E-0000-0000-C000-000000000046),
      helpcontext(0x00019675),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Reference : IDispatch {
        [id(0x60020000), propget, helpcontext(0x00019676)]
        HRESULT Collection([out, retval] _References** retval);
        [id(0x60020001), propget, helpcontext(0x00019677)]
        HRESULT VBE([out, retval] VBE** lppaReturn);
        [id(0x60020002), propget, helpcontext(0x00019678)]
        HRESULT Name([out, retval] BSTR* pbstrName);
        [id(0x60020003), propget, helpcontext(0x00019679)]
        HRESULT Guid([out, retval] BSTR* pbstrGuid);
        [id(0x60020004), propget, helpcontext(0x0001967a)]
        HRESULT Major([out, retval] long* pMajor);
        [id(0x60020005), propget, helpcontext(0x0001967b)]
        HRESULT Minor([out, retval] long* pMinor);
        [id(0x60020006), propget, helpcontext(0x0001967c)]
        HRESULT FullPath([out, retval] BSTR* pbstrLocation);
        [id(0x60020007), propget, helpcontext(0x0001967d)]
        HRESULT BuiltIn([out, retval] VARIANT_BOOL* pfIsDefault);
        [id(0x60020008), propget, helpcontext(0x0001967e)]
        HRESULT IsBroken([out, retval] VARIANT_BOOL* pfIsBroken);
        [id(0x60020009), propget, helpcontext(0x0001967f)]
        HRESULT Type([out, retval] vbext_RefKind* pKind);
        [id(0x6002000a), propget, helpcontext(0x000196dd)]
        HRESULT Description([out, retval] BSTR* pbstrName);
    };

    [
      uuid(CDDE3804-2064-11CF-867F-00AA005FF34A),
      helpcontext(0x00019668),
      hidden,
      nonextensible
    ]
    dispinterface _dispReferences_Events {
        properties:
        methods:
            [id(00000000), helpcontext(0x00019670)]
            void ItemAdded(Reference* Reference);
            [id(0x00000001), helpcontext(0x00019671)]
            void ItemRemoved(Reference* Reference);
    };

    [
      uuid(0002E17C-0000-0000-C000-000000000046),
      helpcontext(0x00019668)
    ]
    coclass References {
        [default] interface _References;
        [default, source] dispinterface _dispReferences_Events;
    };
};


